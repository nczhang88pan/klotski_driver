
nbench:     file format elf64-x86-64


Disassembly of section .text:

0000000034800120 <SetupCPUEmFloatArrays>:
    34800120:	41 54                	push   %r12
    34800122:	53                   	push   %rbx
    34800123:	48 83 ec 28          	sub    $0x28,%rsp
    34800127:	48 89 0c 24          	mov    %rcx,(%rsp)
    3480012b:	48 89 f3             	mov    %rsi,%rbx
    3480012e:	49 89 fc             	mov    %rdi,%r12
    34800131:	bf 0d 00 00 00       	mov    $0xd,%edi
    34800136:	e8 d5 10 00 00       	callq  34801210 <randnum>
    3480013b:	48 8b 04 24          	mov    (%rsp),%rax
    3480013f:	48 85 c0             	test   %rax,%rax
    34800142:	0f 84 8f 00 00 00    	je     348001d7 <SetupCPUEmFloatArrays+0xb7>
    34800148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480014f:	00 
    34800150:	48 89 04 24          	mov    %rax,(%rsp)
    34800154:	bf 50 c3 00 00       	mov    $0xc350,%edi
    34800159:	e8 92 10 00 00       	callq  348011f0 <randwc>
    3480015e:	89 c7                	mov    %eax,%edi
    34800160:	48 8d 44 24 18       	lea    0x18(%rsp),%rax
    34800165:	48 89 c6             	mov    %rax,%rsi
    34800168:	e8 73 00 00 00       	callq  348001e0 <Int32ToInternalFPF>
    3480016d:	bf 50 c3 00 00       	mov    $0xc350,%edi
    34800172:	e8 79 10 00 00       	callq  348011f0 <randwc>
    34800177:	8d 78 01             	lea    0x1(%rax),%edi
    3480017a:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
    3480017f:	48 89 c6             	mov    %rax,%rsi
    34800182:	e8 59 00 00 00       	callq  348001e0 <Int32ToInternalFPF>
    34800187:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    3480018c:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    34800191:	4c 89 e2             	mov    %r12,%rdx
    34800194:	e8 97 00 00 00       	callq  34800230 <DivideInternalFPF>
    34800199:	bf 50 c3 00 00       	mov    $0xc350,%edi
    3480019e:	e8 4d 10 00 00       	callq  348011f0 <randwc>
    348001a3:	8d 78 01             	lea    0x1(%rax),%edi
    348001a6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    348001ab:	e8 30 00 00 00       	callq  348001e0 <Int32ToInternalFPF>
    348001b0:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    348001b5:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    348001ba:	48 89 da             	mov    %rbx,%rdx
    348001bd:	e8 6e 00 00 00       	callq  34800230 <DivideInternalFPF>
    348001c2:	48 8b 04 24          	mov    (%rsp),%rax
    348001c6:	49 83 c4 0c          	add    $0xc,%r12
    348001ca:	48 83 c3 0c          	add    $0xc,%rbx
    348001ce:	48 ff c8             	dec    %rax
    348001d1:	0f 85 79 ff ff ff    	jne    34800150 <SetupCPUEmFloatArrays+0x30>
    348001d7:	48 83 c4 28          	add    $0x28,%rsp
    348001db:	5b                   	pop    %rbx
    348001dc:	41 5c                	pop    %r12
    348001de:	c3                   	retq   
    348001df:	90                   	nop

00000000348001e0 <Int32ToInternalFPF>:
    348001e0:	85 ff                	test   %edi,%edi
    348001e2:	0f 88 09 00 00 00    	js     348001f1 <Int32ToInternalFPF+0x11>
    348001e8:	c6 46 01 00          	movb   $0x0,0x1(%rsi)
    348001ec:	e9 06 00 00 00       	jmpq   348001f7 <Int32ToInternalFPF+0x17>
    348001f1:	c6 46 01 01          	movb   $0x1,0x1(%rsi)
    348001f5:	f7 df                	neg    %edi
    348001f7:	c6 06 02             	movb   $0x2,(%rsi)
    348001fa:	48 c7 46 04 00 00 00 	movq   $0x0,0x4(%rsi)
    34800201:	00 
    34800202:	85 ff                	test   %edi,%edi
    34800204:	0f 84 1b 00 00 00    	je     34800225 <Int32ToInternalFPF+0x45>
    3480020a:	66 c7 46 02 20 00    	movw   $0x20,0x2(%rsi)
    34800210:	89 f8                	mov    %edi,%eax
    34800212:	c1 e8 10             	shr    $0x10,%eax
    34800215:	66 89 46 04          	mov    %ax,0x4(%rsi)
    34800219:	66 89 7e 06          	mov    %di,0x6(%rsi)
    3480021d:	48 89 f7             	mov    %rsi,%rdi
    34800220:	e9 8b 0e 00 00       	jmpq   348010b0 <normalize>
    34800225:	c6 06 00             	movb   $0x0,(%rsi)
    34800228:	66 c7 46 02 00 00    	movw   $0x0,0x2(%rsi)
    3480022e:	c3                   	retq   
    3480022f:	90                   	nop

0000000034800230 <DivideInternalFPF>:
    34800230:	41 54                	push   %r12
    34800232:	53                   	push   %rbx
    34800233:	48 83 ec 48          	sub    $0x48,%rsp
    34800237:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3480023c:	49 89 fc             	mov    %rdi,%r12
    3480023f:	41 0f b6 1c 24       	movzbl (%r12),%ebx
    34800244:	8d 0c 9b             	lea    (%rbx,%rbx,4),%ecx
    34800247:	0f b6 06             	movzbl (%rsi),%eax
    3480024a:	01 c8                	add    %ecx,%eax
    3480024c:	83 f8 0c             	cmp    $0xc,%eax
    3480024f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    34800254:	0f bf c8             	movswl %ax,%ecx
    34800257:	0f 8f 40 00 00 00    	jg     3480029d <DivideInternalFPF+0x6d>
    3480025d:	83 f9 05             	cmp    $0x5,%ecx
    34800260:	0f 8e 7a 00 00 00    	jle    348002e0 <DivideInternalFPF+0xb0>
    34800266:	83 f9 08             	cmp    $0x8,%ecx
    34800269:	0f 8e cc 00 00 00    	jle    3480033b <DivideInternalFPF+0x10b>
    3480026f:	8d 48 f5             	lea    -0xb(%rax),%ecx
    34800272:	0f b7 c9             	movzwl %cx,%ecx
    34800275:	83 f9 02             	cmp    $0x2,%ecx
    34800278:	0f 82 cc 00 00 00    	jb     3480034a <DivideInternalFPF+0x11a>
    3480027e:	0f b7 c0             	movzwl %ax,%eax
    34800281:	83 f8 09             	cmp    $0x9,%eax
    34800284:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34800289:	0f 84 8b 01 00 00    	je     3480041a <DivideInternalFPF+0x1ea>
    3480028f:	83 f8 0a             	cmp    $0xa,%eax
    34800292:	0f 84 20 01 00 00    	je     348003b8 <DivideInternalFPF+0x188>
    34800298:	e9 09 02 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    3480029d:	83 f9 12             	cmp    $0x12,%ecx
    348002a0:	0f 8f 6d 00 00 00    	jg     34800313 <DivideInternalFPF+0xe3>
    348002a6:	83 f9 0e             	cmp    $0xe,%ecx
    348002a9:	0f 8e 51 01 00 00    	jle    34800400 <DivideInternalFPF+0x1d0>
    348002af:	8d 48 f1             	lea    -0xf(%rax),%ecx
    348002b2:	0f b7 c9             	movzwl %cx,%ecx
    348002b5:	83 f9 03             	cmp    $0x3,%ecx
    348002b8:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348002bd:	0f 83 87 01 00 00    	jae    3480044a <DivideInternalFPF+0x21a>
    348002c3:	48 89 df             	mov    %rbx,%rdi
    348002c6:	e8 15 0f 00 00       	callq  348011e0 <SetInternalFPFInfinity>
    348002cb:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    348002d0:	8a 40 01             	mov    0x1(%rax),%al
    348002d3:	41 32 44 24 01       	xor    0x1(%r12),%al
    348002d8:	88 43 01             	mov    %al,0x1(%rbx)
    348002db:	e9 c6 01 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    348002e0:	83 f9 02             	cmp    $0x2,%ecx
    348002e3:	0f 8f ac 00 00 00    	jg     34800395 <DivideInternalFPF+0x165>
    348002e9:	8d 48 ff             	lea    -0x1(%rax),%ecx
    348002ec:	0f b7 c9             	movzwl %cx,%ecx
    348002ef:	83 f9 02             	cmp    $0x2,%ecx
    348002f2:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348002f7:	0f 83 5e 01 00 00    	jae    3480045b <DivideInternalFPF+0x22b>
    348002fd:	48 8d 7e 04          	lea    0x4(%rsi),%rdi
    34800301:	e8 5a 0c 00 00       	callq  34800f60 <IsMantissaZero>
    34800306:	85 c0                	test   %eax,%eax
    34800308:	0f 85 56 01 00 00    	jne    34800464 <DivideInternalFPF+0x234>
    3480030e:	e9 6f 01 00 00       	jmpq   34800482 <DivideInternalFPF+0x252>
    34800313:	8d 48 ec             	lea    -0x14(%rax),%ecx
    34800316:	0f b7 c9             	movzwl %cx,%ecx
    34800319:	83 f9 04             	cmp    $0x4,%ecx
    3480031c:	0f 83 ad 00 00 00    	jae    348003cf <DivideInternalFPF+0x19f>
    34800322:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34800327:	48 8b 03             	mov    (%rbx),%rax
    3480032a:	8b 4b 08             	mov    0x8(%rbx),%ecx
    3480032d:	41 89 4c 24 08       	mov    %ecx,0x8(%r12)
    34800332:	49 89 04 24          	mov    %rax,(%r12)
    34800336:	e9 6b 01 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    3480033b:	8d 48 fa             	lea    -0x6(%rax),%ecx
    3480033e:	0f b7 c9             	movzwl %cx,%ecx
    34800341:	83 f9 02             	cmp    $0x2,%ecx
    34800344:	0f 83 27 01 00 00    	jae    34800471 <DivideInternalFPF+0x241>
    3480034a:	41 8b 44 24 08       	mov    0x8(%r12),%eax
    3480034f:	89 44 24 30          	mov    %eax,0x30(%rsp)
    34800353:	49 8b 04 24          	mov    (%r12),%rax
    34800357:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3480035c:	48 8d 7c 24 2c       	lea    0x2c(%rsp),%rdi
    34800361:	e8 fa 0b 00 00       	callq  34800f60 <IsMantissaZero>
    34800366:	89 44 24 18          	mov    %eax,0x18(%rsp)
    3480036a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3480036f:	48 8d 78 04          	lea    0x4(%rax),%rdi
    34800373:	e8 e8 0b 00 00       	callq  34800f60 <IsMantissaZero>
    34800378:	83 7c 24 18 00       	cmpl   $0x0,0x18(%rsp)
    3480037d:	0f 84 ad 00 00 00    	je     34800430 <DivideInternalFPF+0x200>
    34800383:	85 c0                	test   %eax,%eax
    34800385:	0f 84 0c 01 00 00    	je     34800497 <DivideInternalFPF+0x267>
    3480038b:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34800390:	e9 cf 00 00 00       	jmpq   34800464 <DivideInternalFPF+0x234>
    34800395:	0f b7 c0             	movzwl %ax,%eax
    34800398:	83 f8 03             	cmp    $0x3,%eax
    3480039b:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348003a0:	0f 84 dc 00 00 00    	je     34800482 <DivideInternalFPF+0x252>
    348003a6:	83 f8 04             	cmp    $0x4,%eax
    348003a9:	0f 84 6b 00 00 00    	je     3480041a <DivideInternalFPF+0x1ea>
    348003af:	83 f8 05             	cmp    $0x5,%eax
    348003b2:	0f 85 ee 00 00 00    	jne    348004a6 <DivideInternalFPF+0x276>
    348003b8:	49 8d 7c 24 04       	lea    0x4(%r12),%rdi
    348003bd:	e8 9e 0b 00 00       	callq  34800f60 <IsMantissaZero>
    348003c2:	85 c0                	test   %eax,%eax
    348003c4:	0f 85 9a 00 00 00    	jne    34800464 <DivideInternalFPF+0x234>
    348003ca:	e9 f4 fe ff ff       	jmpq   348002c3 <DivideInternalFPF+0x93>
    348003cf:	0f b7 c0             	movzwl %ax,%eax
    348003d2:	83 f8 13             	cmp    $0x13,%eax
    348003d5:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348003da:	0f 84 3a 00 00 00    	je     3480041a <DivideInternalFPF+0x1ea>
    348003e0:	83 f8 18             	cmp    $0x18,%eax
    348003e3:	0f 85 bd 00 00 00    	jne    348004a6 <DivideInternalFPF+0x276>
    348003e9:	31 c9                	xor    %ecx,%ecx
    348003eb:	4c 89 e7             	mov    %r12,%rdi
    348003ee:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    348003f3:	48 89 da             	mov    %rbx,%rdx
    348003f6:	e8 45 0d 00 00       	callq  34801140 <choose_nan>
    348003fb:	e9 a6 00 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    34800400:	0f b7 c0             	movzwl %ax,%eax
    34800403:	83 f8 0d             	cmp    $0xd,%eax
    34800406:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480040b:	0f 84 71 00 00 00    	je     34800482 <DivideInternalFPF+0x252>
    34800411:	83 f8 0e             	cmp    $0xe,%eax
    34800414:	0f 85 8c 00 00 00    	jne    348004a6 <DivideInternalFPF+0x276>
    3480041a:	48 8b 03             	mov    (%rbx),%rax
    3480041d:	8b 4b 08             	mov    0x8(%rbx),%ecx
    34800420:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34800425:	89 4a 08             	mov    %ecx,0x8(%rdx)
    34800428:	48 89 02             	mov    %rax,(%rdx)
    3480042b:	e9 76 00 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    34800430:	85 c0                	test   %eax,%eax
    34800432:	0f 84 7e 00 00 00    	je     348004b6 <DivideInternalFPF+0x286>
    34800438:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480043d:	48 89 df             	mov    %rbx,%rdi
    34800440:	e8 9b 0d 00 00       	callq  348011e0 <SetInternalFPFInfinity>
    34800445:	e9 5c 00 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    3480044a:	0f b7 c0             	movzwl %ax,%eax
    3480044d:	83 f8 12             	cmp    $0x12,%eax
    34800450:	0f 84 0e 00 00 00    	je     34800464 <DivideInternalFPF+0x234>
    34800456:	e9 4b 00 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    3480045b:	66 85 c0             	test   %ax,%ax
    3480045e:	0f 85 42 00 00 00    	jne    348004a6 <DivideInternalFPF+0x276>
    34800464:	48 89 df             	mov    %rbx,%rdi
    34800467:	e8 b4 0c 00 00       	callq  34801120 <SetInternalFPFNaN>
    3480046c:	e9 35 00 00 00       	jmpq   348004a6 <DivideInternalFPF+0x276>
    34800471:	0f b7 c0             	movzwl %ax,%eax
    34800474:	83 f8 08             	cmp    $0x8,%eax
    34800477:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480047c:	0f 85 24 00 00 00    	jne    348004a6 <DivideInternalFPF+0x276>
    34800482:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34800487:	8a 40 01             	mov    0x1(%rax),%al
    3480048a:	41 32 44 24 01       	xor    0x1(%r12),%al
    3480048f:	0f b6 f0             	movzbl %al,%esi
    34800492:	e9 07 00 00 00       	jmpq   3480049e <DivideInternalFPF+0x26e>
    34800497:	31 f6                	xor    %esi,%esi
    34800499:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480049e:	48 89 df             	mov    %rbx,%rdi
    348004a1:	e8 ea 0a 00 00       	callq  34800f90 <SetInternalFPFZero>
    348004a6:	48 89 df             	mov    %rbx,%rdi
    348004a9:	e8 32 0a 00 00       	callq  34800ee0 <RoundInternalFPF>
    348004ae:	48 83 c4 48          	add    $0x48,%rsp
    348004b2:	5b                   	pop    %rbx
    348004b3:	41 5c                	pop    %r12
    348004b5:	c3                   	retq   
    348004b6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    348004bb:	88 18                	mov    %bl,(%rax)
    348004bd:	48 89 c3             	mov    %rax,%rbx
    348004c0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    348004c5:	8a 41 01             	mov    0x1(%rcx),%al
    348004c8:	41 32 44 24 01       	xor    0x1(%r12),%al
    348004cd:	88 43 01             	mov    %al,0x1(%rbx)
    348004d0:	41 0f b7 44 24 02    	movzwl 0x2(%r12),%eax
    348004d6:	83 e8 80             	sub    $0xffffff80,%eax
    348004d9:	66 2b 41 02          	sub    0x2(%rcx),%ax
    348004dd:	66 89 43 02          	mov    %ax,0x2(%rbx)
    348004e1:	48 8d 43 04          	lea    0x4(%rbx),%rax
    348004e5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    348004ea:	48 c7 43 04 00 00 00 	movq   $0x0,0x4(%rbx)
    348004f1:	00 
    348004f2:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    348004f9:	00 00 
    348004fb:	48 8d 41 0a          	lea    0xa(%rcx),%rax
    348004ff:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    34800504:	4c 8d 64 24 06       	lea    0x6(%rsp),%r12
    34800509:	e9 42 00 00 00       	jmpq   34800550 <DivideInternalFPF+0x320>
    3480050e:	66 90                	xchg   %ax,%ax
    34800510:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    34800517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480051e:	00 00 
    34800520:	0f b7 4c 44 22       	movzwl 0x22(%rsp,%rax,2),%ecx
    34800525:	66 39 4c 42 06       	cmp    %cx,0x6(%rdx,%rax,2)
    3480052a:	0f 87 18 00 00 00    	ja     34800548 <DivideInternalFPF+0x318>
    34800530:	0f 82 4c 00 00 00    	jb     34800582 <DivideInternalFPF+0x352>
    34800536:	48 ff c0             	inc    %rax
    34800539:	48 83 f8 02          	cmp    $0x2,%rax
    3480053d:	0f 8e dd ff ff ff    	jle    34800520 <DivideInternalFPF+0x2f0>
    34800543:	e9 3a 00 00 00       	jmpq   34800582 <DivideInternalFPF+0x352>
    34800548:	31 c0                	xor    %eax,%eax
    3480054a:	e9 8a 00 00 00       	jmpq   348005d9 <DivideInternalFPF+0x3a9>
    3480054f:	90                   	nop
    34800550:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    34800557:	4c 89 e7             	mov    %r12,%rdi
    3480055a:	48 8d 74 24 2c       	lea    0x2c(%rsp),%rsi
    3480055f:	e8 3c 0c 00 00       	callq  348011a0 <ShiftMantLeft1>
    34800564:	4c 89 e7             	mov    %r12,%rdi
    34800567:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    3480056c:	e8 2f 0c 00 00       	callq  348011a0 <ShiftMantLeft1>
    34800571:	66 83 7c 24 06 00    	cmpw   $0x0,0x6(%rsp)
    34800577:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3480057c:	0f 84 8e ff ff ff    	je     34800510 <DivideInternalFPF+0x2e0>
    34800582:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    34800589:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    3480058e:	48 8d 5c 24 26       	lea    0x26(%rsp),%rbx
    34800593:	b9 04 00 00 00       	mov    $0x4,%ecx
    34800598:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480059f:	00 
    348005a0:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    348005a5:	41 0f b7 0c 24       	movzwl (%r12),%ecx
    348005aa:	0f b7 13             	movzwl (%rbx),%edx
    348005ad:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    348005b2:	48 89 de             	mov    %rbx,%rsi
    348005b5:	e8 d6 0a 00 00       	callq  34801090 <Sub16Bits>
    348005ba:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    348005bf:	48 83 c3 fe          	add    $0xfffffffffffffffe,%rbx
    348005c3:	49 83 c4 fe          	add    $0xfffffffffffffffe,%r12
    348005c7:	48 ff c9             	dec    %rcx
    348005ca:	0f 8f d0 ff ff ff    	jg     348005a0 <DivideInternalFPF+0x370>
    348005d0:	66 b8 01 00          	mov    $0x1,%ax
    348005d4:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348005d9:	66 89 44 24 06       	mov    %ax,0x6(%rsp)
    348005de:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    348005e3:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    348005e8:	e8 b3 0b 00 00       	callq  348011a0 <ShiftMantLeft1>
    348005ed:	4c 8d 64 24 06       	lea    0x6(%rsp),%r12
    348005f2:	66 ff 4b 02          	decw   0x2(%rbx)
    348005f6:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
    348005fb:	0f 89 4f ff ff ff    	jns    34800550 <DivideInternalFPF+0x320>
    34800601:	e9 a0 fe ff ff       	jmpq   348004a6 <DivideInternalFPF+0x276>
    34800606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480060d:	00 00 00 

0000000034800610 <DoEmFloatIteration>:
    34800610:	41 54                	push   %r12
    34800612:	53                   	push   %rbx
    34800613:	48 83 ec 48          	sub    $0x48,%rsp
    34800617:	4c 89 c3             	mov    %r8,%rbx
    3480061a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3480061f:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    34800624:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    34800629:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    3480062e:	31 c0                	xor    %eax,%eax
    34800630:	e8 9b 69 00 00       	callq  34806fd0 <StartStopwatch>
    34800635:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3480063a:	48 85 db             	test   %rbx,%rbx
    3480063d:	0f 85 1b 00 00 00    	jne    3480065e <DoEmFloatIteration+0x4e>
    34800643:	e9 19 01 00 00       	jmpq   34800761 <DoEmFloatIteration+0x151>
    34800648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480064f:	00 
    34800650:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    34800655:	48 85 db             	test   %rbx,%rbx
    34800658:	0f 84 03 01 00 00    	je     34800761 <DoEmFloatIteration+0x151>
    3480065e:	48 ff cb             	dec    %rbx
    34800661:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    34800666:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    3480066c:	0f 84 de ff ff ff    	je     34800650 <DoEmFloatIteration+0x40>
    34800672:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    34800677:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    3480067c:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    34800681:	31 db                	xor    %ebx,%ebx
    34800683:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480068a:	84 00 00 00 00 00 
    34800690:	89 d8                	mov    %ebx,%eax
    34800692:	83 e0 0f             	and    $0xf,%eax
    34800695:	0f b6 80 20 2f 81 34 	movzbl 0x34812f20(%rax),%eax
    3480069c:	3c 01                	cmp    $0x1,%al
    3480069e:	0f 8f 1c 00 00 00    	jg     348006c0 <DoEmFloatIteration+0xb0>
    348006a4:	84 c0                	test   %al,%al
    348006a6:	0f 84 44 00 00 00    	je     348006f0 <DoEmFloatIteration+0xe0>
    348006ac:	3c 01                	cmp    $0x1,%al
    348006ae:	0f 85 8e 00 00 00    	jne    34800742 <DoEmFloatIteration+0x132>
    348006b4:	bf 01 00 00 00       	mov    $0x1,%edi
    348006b9:	e9 34 00 00 00       	jmpq   348006f2 <DoEmFloatIteration+0xe2>
    348006be:	66 90                	xchg   %ax,%ax
    348006c0:	3c 02                	cmp    $0x2,%al
    348006c2:	0f 84 58 00 00 00    	je     34800720 <DoEmFloatIteration+0x110>
    348006c8:	3c 03                	cmp    $0x3,%al
    348006ca:	0f 85 72 00 00 00    	jne    34800742 <DoEmFloatIteration+0x132>
    348006d0:	4c 89 e7             	mov    %r12,%rdi
    348006d3:	48 89 d6             	mov    %rdx,%rsi
    348006d6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    348006db:	48 89 ca             	mov    %rcx,%rdx
    348006de:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    348006e3:	e8 48 fb ff ff       	callq  34800230 <DivideInternalFPF>
    348006e8:	e9 4b 00 00 00       	jmpq   34800738 <DoEmFloatIteration+0x128>
    348006ed:	0f 1f 00             	nopl   (%rax)
    348006f0:	31 ff                	xor    %edi,%edi
    348006f2:	4c 89 e6             	mov    %r12,%rsi
    348006f5:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    348006fa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    348006ff:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34800704:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34800709:	e8 72 00 00 00       	callq  34800780 <AddSubInternalFPF>
    3480070e:	e9 25 00 00 00       	jmpq   34800738 <DoEmFloatIteration+0x128>
    34800713:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480071a:	84 00 00 00 00 00 
    34800720:	4c 89 e7             	mov    %r12,%rdi
    34800723:	48 89 d6             	mov    %rdx,%rsi
    34800726:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3480072b:	48 89 ca             	mov    %rcx,%rdx
    3480072e:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34800733:	e8 38 04 00 00       	callq  34800b70 <MultiplyInternalFPF>
    34800738:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3480073d:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34800742:	48 ff c3             	inc    %rbx
    34800745:	49 83 c4 0c          	add    $0xc,%r12
    34800749:	48 83 c2 0c          	add    $0xc,%rdx
    3480074d:	48 83 c1 0c          	add    $0xc,%rcx
    34800751:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
    34800756:	0f 85 34 ff ff ff    	jne    34800690 <DoEmFloatIteration+0x80>
    3480075c:	e9 ef fe ff ff       	jmpq   34800650 <DoEmFloatIteration+0x40>
    34800761:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    34800766:	48 83 c4 48          	add    $0x48,%rsp
    3480076a:	5b                   	pop    %rbx
    3480076b:	41 5c                	pop    %r12
    3480076d:	e9 6e 68 00 00       	jmpq   34806fe0 <StopStopwatch>
    34800772:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800779:	1f 84 00 00 00 00 00 

0000000034800780 <AddSubInternalFPF>:
    34800780:	41 54                	push   %r12
    34800782:	53                   	push   %rbx
    34800783:	48 83 ec 38          	sub    $0x38,%rsp
    34800787:	48 89 cb             	mov    %rcx,%rbx
    3480078a:	0f b6 06             	movzbl (%rsi),%eax
    3480078d:	8d 0c 80             	lea    (%rax,%rax,4),%ecx
    34800790:	0f b6 02             	movzbl (%rdx),%eax
    34800793:	01 c8                	add    %ecx,%eax
    34800795:	0f bf c8             	movswl %ax,%ecx
    34800798:	83 f8 0c             	cmp    $0xc,%eax
    3480079b:	0f 8f 3b 00 00 00    	jg     348007dc <AddSubInternalFPF+0x5c>
    348007a1:	83 f9 05             	cmp    $0x5,%ecx
    348007a4:	0f 8e 6c 00 00 00    	jle    34800816 <AddSubInternalFPF+0x96>
    348007aa:	83 f9 08             	cmp    $0x8,%ecx
    348007ad:	0f 8e c8 00 00 00    	jle    3480087b <AddSubInternalFPF+0xfb>
    348007b3:	8d 48 f5             	lea    -0xb(%rax),%ecx
    348007b6:	0f b7 c9             	movzwl %cx,%ecx
    348007b9:	83 f9 02             	cmp    $0x2,%ecx
    348007bc:	0f 82 c8 00 00 00    	jb     3480088a <AddSubInternalFPF+0x10a>
    348007c2:	0f b7 c0             	movzwl %ax,%eax
    348007c5:	83 f8 09             	cmp    $0x9,%eax
    348007c8:	0f 84 75 01 00 00    	je     34800943 <AddSubInternalFPF+0x1c3>
    348007ce:	83 f8 0a             	cmp    $0xa,%eax
    348007d1:	0f 84 93 00 00 00    	je     3480086a <AddSubInternalFPF+0xea>
    348007d7:	e9 76 03 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    348007dc:	83 f9 12             	cmp    $0x12,%ecx
    348007df:	0f 8f 76 00 00 00    	jg     3480085b <AddSubInternalFPF+0xdb>
    348007e5:	83 f9 0e             	cmp    $0xe,%ecx
    348007e8:	0f 8e 21 01 00 00    	jle    3480090f <AddSubInternalFPF+0x18f>
    348007ee:	8d 48 f1             	lea    -0xf(%rax),%ecx
    348007f1:	0f b7 c9             	movzwl %cx,%ecx
    348007f4:	83 f9 03             	cmp    $0x3,%ecx
    348007f7:	0f 82 6d 00 00 00    	jb     3480086a <AddSubInternalFPF+0xea>
    348007fd:	0f b7 c0             	movzwl %ax,%eax
    34800800:	83 f8 12             	cmp    $0x12,%eax
    34800803:	0f 85 49 03 00 00    	jne    34800b52 <AddSubInternalFPF+0x3d2>
    34800809:	48 89 df             	mov    %rbx,%rdi
    3480080c:	e8 0f 09 00 00       	callq  34801120 <SetInternalFPFNaN>
    34800811:	e9 3c 03 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800816:	83 f9 03             	cmp    $0x3,%ecx
    34800819:	0f 8f 0a 01 00 00    	jg     34800929 <AddSubInternalFPF+0x1a9>
    3480081f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    34800822:	0f b7 c9             	movzwl %cx,%ecx
    34800825:	83 f9 03             	cmp    $0x3,%ecx
    34800828:	0f 82 5d 01 00 00    	jb     3480098b <AddSubInternalFPF+0x20b>
    3480082e:	66 85 c0             	test   %ax,%ax
    34800831:	0f 85 1b 03 00 00    	jne    34800b52 <AddSubInternalFPF+0x3d2>
    34800837:	48 8b 03             	mov    (%rbx),%rax
    3480083a:	8b 4b 08             	mov    0x8(%rbx),%ecx
    3480083d:	89 4e 08             	mov    %ecx,0x8(%rsi)
    34800840:	48 89 06             	mov    %rax,(%rsi)
    34800843:	8a 42 01             	mov    0x1(%rdx),%al
    34800846:	32 46 01             	xor    0x1(%rsi),%al
    34800849:	40 38 f8             	cmp    %dil,%al
    3480084c:	0f 84 00 03 00 00    	je     34800b52 <AddSubInternalFPF+0x3d2>
    34800852:	c6 43 01 00          	movb   $0x0,0x1(%rbx)
    34800856:	e9 f7 02 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    3480085b:	8d 48 ec             	lea    -0x14(%rax),%ecx
    3480085e:	0f b7 c9             	movzwl %cx,%ecx
    34800861:	83 f9 04             	cmp    $0x4,%ecx
    34800864:	0f 83 78 00 00 00    	jae    348008e2 <AddSubInternalFPF+0x162>
    3480086a:	48 8b 03             	mov    (%rbx),%rax
    3480086d:	8b 4b 08             	mov    0x8(%rbx),%ecx
    34800870:	89 4e 08             	mov    %ecx,0x8(%rsi)
    34800873:	48 89 06             	mov    %rax,(%rsi)
    34800876:	e9 d7 02 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    3480087b:	8d 48 fa             	lea    -0x6(%rax),%ecx
    3480087e:	0f b7 c9             	movzwl %cx,%ecx
    34800881:	83 f9 02             	cmp    $0x2,%ecx
    34800884:	0f 83 f5 00 00 00    	jae    3480097f <AddSubInternalFPF+0x1ff>
    3480088a:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    3480088f:	8b 46 08             	mov    0x8(%rsi),%eax
    34800892:	89 44 24 20          	mov    %eax,0x20(%rsp)
    34800896:	48 8b 06             	mov    (%rsi),%rax
    34800899:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3480089e:	48 8b 02             	mov    (%rdx),%rax
    348008a1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    348008a6:	8b 42 08             	mov    0x8(%rdx),%eax
    348008a9:	89 44 24 30          	mov    %eax,0x30(%rsp)
    348008ad:	44 0f bf 64 24 1a    	movswl 0x1a(%rsp),%r12d
    348008b3:	0f bf 5c 24 2a       	movswl 0x2a(%rsp),%ebx
    348008b8:	44 89 e6             	mov    %r12d,%esi
    348008bb:	29 de                	sub    %ebx,%esi
    348008bd:	0f 84 91 00 00 00    	je     34800954 <AddSubInternalFPF+0x1d4>
    348008c3:	85 f6                	test   %esi,%esi
    348008c5:	0f 8e d5 00 00 00    	jle    348009a0 <AddSubInternalFPF+0x220>
    348008cb:	89 fb                	mov    %edi,%ebx
    348008cd:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
    348008d2:	e8 d9 06 00 00       	callq  34800fb0 <StickyShiftRightMant>
    348008d7:	89 df                	mov    %ebx,%edi
    348008d9:	8a 44 24 18          	mov    0x18(%rsp),%al
    348008dd:	e9 8b 00 00 00       	jmpq   3480096d <AddSubInternalFPF+0x1ed>
    348008e2:	0f b7 c0             	movzwl %ax,%eax
    348008e5:	83 f8 13             	cmp    $0x13,%eax
    348008e8:	0f 84 55 00 00 00    	je     34800943 <AddSubInternalFPF+0x1c3>
    348008ee:	83 f8 18             	cmp    $0x18,%eax
    348008f1:	0f 85 5b 02 00 00    	jne    34800b52 <AddSubInternalFPF+0x3d2>
    348008f7:	b9 01 00 00 00       	mov    $0x1,%ecx
    348008fc:	48 89 f7             	mov    %rsi,%rdi
    348008ff:	48 89 d6             	mov    %rdx,%rsi
    34800902:	48 89 da             	mov    %rbx,%rdx
    34800905:	e8 36 08 00 00       	callq  34801140 <choose_nan>
    3480090a:	e9 43 02 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    3480090f:	0f b7 c0             	movzwl %ax,%eax
    34800912:	83 f8 0d             	cmp    $0xd,%eax
    34800915:	0f 84 70 00 00 00    	je     3480098b <AddSubInternalFPF+0x20b>
    3480091b:	83 f8 0e             	cmp    $0xe,%eax
    3480091e:	0f 84 1f 00 00 00    	je     34800943 <AddSubInternalFPF+0x1c3>
    34800924:	e9 29 02 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800929:	0f b7 c0             	movzwl %ax,%eax
    3480092c:	83 f8 04             	cmp    $0x4,%eax
    3480092f:	0f 84 0e 00 00 00    	je     34800943 <AddSubInternalFPF+0x1c3>
    34800935:	83 f8 05             	cmp    $0x5,%eax
    34800938:	0f 84 2c ff ff ff    	je     3480086a <AddSubInternalFPF+0xea>
    3480093e:	e9 0f 02 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800943:	48 8b 03             	mov    (%rbx),%rax
    34800946:	8b 4b 08             	mov    0x8(%rbx),%ecx
    34800949:	89 4a 08             	mov    %ecx,0x8(%rdx)
    3480094c:	48 89 02             	mov    %rax,(%rdx)
    3480094f:	e9 fe 01 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800954:	b0 01                	mov    $0x1,%al
    34800956:	80 7c 24 18 01       	cmpb   $0x1,0x18(%rsp)
    3480095b:	0f 84 0c 00 00 00    	je     3480096d <AddSubInternalFPF+0x1ed>
    34800961:	80 7c 24 28 01       	cmpb   $0x1,0x28(%rsp)
    34800966:	0f 94 c1             	sete   %cl
    34800969:	b0 02                	mov    $0x2,%al
    3480096b:	28 c8                	sub    %cl,%al
    3480096d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34800972:	88 02                	mov    %al,(%rdx)
    34800974:	8a 44 24 19          	mov    0x19(%rsp),%al
    34800978:	89 c1                	mov    %eax,%ecx
    3480097a:	e9 4d 00 00 00       	jmpq   348009cc <AddSubInternalFPF+0x24c>
    3480097f:	0f b7 c0             	movzwl %ax,%eax
    34800982:	83 f8 08             	cmp    $0x8,%eax
    34800985:	0f 85 c7 01 00 00    	jne    34800b52 <AddSubInternalFPF+0x3d2>
    3480098b:	48 8b 03             	mov    (%rbx),%rax
    3480098e:	8b 4b 08             	mov    0x8(%rbx),%ecx
    34800991:	89 4a 08             	mov    %ecx,0x8(%rdx)
    34800994:	48 89 02             	mov    %rax,(%rdx)
    34800997:	40 30 7b 01          	xor    %dil,0x1(%rbx)
    3480099b:	e9 b2 01 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    348009a0:	f7 de                	neg    %esi
    348009a2:	41 89 fc             	mov    %edi,%r12d
    348009a5:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    348009aa:	e8 01 06 00 00       	callq  34800fb0 <StickyShiftRightMant>
    348009af:	44 89 e7             	mov    %r12d,%edi
    348009b2:	8a 44 24 28          	mov    0x28(%rsp),%al
    348009b6:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    348009bb:	88 02                	mov    %al,(%rdx)
    348009bd:	8a 4c 24 29          	mov    0x29(%rsp),%cl
    348009c1:	40 30 f9             	xor    %dil,%cl
    348009c4:	8a 44 24 19          	mov    0x19(%rsp),%al
    348009c8:	66 41 89 dc          	mov    %bx,%r12w
    348009cc:	88 4a 01             	mov    %cl,0x1(%rdx)
    348009cf:	66 44 89 62 02       	mov    %r12w,0x2(%rdx)
    348009d4:	8a 4c 24 29          	mov    0x29(%rsp),%cl
    348009d8:	30 c8                	xor    %cl,%al
    348009da:	40 38 f8             	cmp    %dil,%al
    348009dd:	0f 85 79 00 00 00    	jne    34800a5c <AddSubInternalFPF+0x2dc>
    348009e3:	66 c7 44 24 0a 00 00 	movw   $0x0,0xa(%rsp)
    348009ea:	48 8d 5a 0a          	lea    0xa(%rdx),%rbx
    348009ee:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    348009f4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348009fb:	00 00 00 00 00 
    34800a00:	42 0f b7 4c 64 2a    	movzwl 0x2a(%rsp,%r12,2),%ecx
    34800a06:	42 0f b7 54 64 1a    	movzwl 0x1a(%rsp,%r12,2),%edx
    34800a0c:	48 8d 7c 24 0a       	lea    0xa(%rsp),%rdi
    34800a11:	48 89 de             	mov    %rbx,%rsi
    34800a14:	e8 e7 06 00 00       	callq  34801100 <Add16Bits>
    34800a19:	48 83 c3 fe          	add    $0xfffffffffffffffe,%rbx
    34800a1d:	49 ff cc             	dec    %r12
    34800a20:	0f 8f da ff ff ff    	jg     34800a00 <AddSubInternalFPF+0x280>
    34800a26:	66 83 7c 24 0a 00    	cmpw   $0x0,0xa(%rsp)
    34800a2c:	0f 84 ed 00 00 00    	je     34800b1f <AddSubInternalFPF+0x39f>
    34800a32:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    34800a37:	66 ff 43 02          	incw   0x2(%rbx)
    34800a3b:	66 c7 44 24 0a 00 00 	movw   $0x0,0xa(%rsp)
    34800a42:	48 8d 73 04          	lea    0x4(%rbx),%rsi
    34800a46:	48 8d 7c 24 0a       	lea    0xa(%rsp),%rdi
    34800a4b:	e8 f0 05 00 00       	callq  34801040 <ShiftMantRight1>
    34800a50:	80 4b 05 80          	orb    $0x80,0x5(%rbx)
    34800a54:	c6 03 02             	movb   $0x2,(%rbx)
    34800a57:	e9 f6 00 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800a5c:	88 4c 24 0f          	mov    %cl,0xf(%rsp)
    34800a60:	89 7c 24 34          	mov    %edi,0x34(%rsp)
    34800a64:	66 c7 44 24 0c 00 00 	movw   $0x0,0xc(%rsp)
    34800a6b:	4c 8d 62 0a          	lea    0xa(%rdx),%r12
    34800a6f:	bb 04 00 00 00       	mov    $0x4,%ebx
    34800a74:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800a7b:	00 00 00 00 00 
    34800a80:	0f b7 4c 5c 2a       	movzwl 0x2a(%rsp,%rbx,2),%ecx
    34800a85:	0f b7 54 5c 1a       	movzwl 0x1a(%rsp,%rbx,2),%edx
    34800a8a:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    34800a8f:	4c 89 e6             	mov    %r12,%rsi
    34800a92:	e8 f9 05 00 00       	callq  34801090 <Sub16Bits>
    34800a97:	49 83 c4 fe          	add    $0xfffffffffffffffe,%r12
    34800a9b:	48 ff cb             	dec    %rbx
    34800a9e:	0f 8f dc ff ff ff    	jg     34800a80 <AddSubInternalFPF+0x300>
    34800aa4:	66 83 7c 24 0c 00    	cmpw   $0x0,0xc(%rsp)
    34800aaa:	0f 84 4f 00 00 00    	je     34800aff <AddSubInternalFPF+0x37f>
    34800ab0:	8a 4c 24 0f          	mov    0xf(%rsp),%cl
    34800ab4:	32 4c 24 34          	xor    0x34(%rsp),%cl
    34800ab8:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34800abd:	88 48 01             	mov    %cl,0x1(%rax)
    34800ac0:	66 c7 44 24 0c 00 00 	movw   $0x0,0xc(%rsp)
    34800ac7:	48 8d 58 0a          	lea    0xa(%rax),%rbx
    34800acb:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    34800ad1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800ad8:	0f 1f 84 00 00 00 00 
    34800adf:	00 
    34800ae0:	0f b7 0b             	movzwl (%rbx),%ecx
    34800ae3:	31 d2                	xor    %edx,%edx
    34800ae5:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    34800aea:	48 89 de             	mov    %rbx,%rsi
    34800aed:	e8 9e 05 00 00       	callq  34801090 <Sub16Bits>
    34800af2:	48 83 c3 fe          	add    $0xfffffffffffffffe,%rbx
    34800af6:	49 ff cc             	dec    %r12
    34800af9:	0f 8f e1 ff ff ff    	jg     34800ae0 <AddSubInternalFPF+0x360>
    34800aff:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    34800b04:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
    34800b08:	e8 53 04 00 00       	callq  34800f60 <IsMantissaZero>
    34800b0d:	85 c0                	test   %eax,%eax
    34800b0f:	0f 84 1f 00 00 00    	je     34800b34 <AddSubInternalFPF+0x3b4>
    34800b15:	66 c7 03 00 00       	movw   $0x0,(%rbx)
    34800b1a:	e9 33 00 00 00       	jmpq   34800b52 <AddSubInternalFPF+0x3d2>
    34800b1f:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    34800b24:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
    34800b29:	0f 89 23 00 00 00    	jns    34800b52 <AddSubInternalFPF+0x3d2>
    34800b2f:	e9 20 ff ff ff       	jmpq   34800a54 <AddSubInternalFPF+0x2d4>
    34800b34:	80 7c 24 18 02       	cmpb   $0x2,0x18(%rsp)
    34800b39:	0f 84 0b 00 00 00    	je     34800b4a <AddSubInternalFPF+0x3ca>
    34800b3f:	80 7c 24 28 02       	cmpb   $0x2,0x28(%rsp)
    34800b44:	0f 85 08 00 00 00    	jne    34800b52 <AddSubInternalFPF+0x3d2>
    34800b4a:	48 89 df             	mov    %rbx,%rdi
    34800b4d:	e8 5e 05 00 00       	callq  348010b0 <normalize>
    34800b52:	48 89 df             	mov    %rbx,%rdi
    34800b55:	e8 86 03 00 00       	callq  34800ee0 <RoundInternalFPF>
    34800b5a:	48 83 c4 38          	add    $0x38,%rsp
    34800b5e:	5b                   	pop    %rbx
    34800b5f:	41 5c                	pop    %r12
    34800b61:	c3                   	retq   
    34800b62:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800b69:	1f 84 00 00 00 00 00 

0000000034800b70 <MultiplyInternalFPF>:
    34800b70:	41 54                	push   %r12
    34800b72:	53                   	push   %rbx
    34800b73:	48 83 ec 48          	sub    $0x48,%rsp
    34800b77:	49 89 d4             	mov    %rdx,%r12
    34800b7a:	0f b6 1f             	movzbl (%rdi),%ebx
    34800b7d:	8d 0c 9b             	lea    (%rbx,%rbx,4),%ecx
    34800b80:	0f b6 06             	movzbl (%rsi),%eax
    34800b83:	01 c8                	add    %ecx,%eax
    34800b85:	0f bf c8             	movswl %ax,%ecx
    34800b88:	83 f8 0c             	cmp    $0xc,%eax
    34800b8b:	0f 8f 3b 00 00 00    	jg     34800bcc <MultiplyInternalFPF+0x5c>
    34800b91:	83 f9 05             	cmp    $0x5,%ecx
    34800b94:	0f 8e 67 00 00 00    	jle    34800c01 <MultiplyInternalFPF+0x91>
    34800b9a:	83 f9 08             	cmp    $0x8,%ecx
    34800b9d:	0f 8e ad 00 00 00    	jle    34800c50 <MultiplyInternalFPF+0xe0>
    34800ba3:	8d 48 f5             	lea    -0xb(%rax),%ecx
    34800ba6:	0f b7 c9             	movzwl %cx,%ecx
    34800ba9:	83 f9 02             	cmp    $0x2,%ecx
    34800bac:	0f 82 ad 00 00 00    	jb     34800c5f <MultiplyInternalFPF+0xef>
    34800bb2:	0f b7 c0             	movzwl %ax,%eax
    34800bb5:	83 f8 09             	cmp    $0x9,%eax
    34800bb8:	0f 84 b6 02 00 00    	je     34800e74 <MultiplyInternalFPF+0x304>
    34800bbe:	83 f8 0a             	cmp    $0xa,%eax
    34800bc1:	0f 84 da 02 00 00    	je     34800ea1 <MultiplyInternalFPF+0x331>
    34800bc7:	e9 ec 02 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800bcc:	83 f9 12             	cmp    $0x12,%ecx
    34800bcf:	0f 8f 58 00 00 00    	jg     34800c2d <MultiplyInternalFPF+0xbd>
    34800bd5:	83 f9 0f             	cmp    $0xf,%ecx
    34800bd8:	0f 8f 38 00 00 00    	jg     34800c16 <MultiplyInternalFPF+0xa6>
    34800bde:	0f b7 c0             	movzwl %ax,%eax
    34800be1:	83 f8 0d             	cmp    $0xd,%eax
    34800be4:	0f 84 b7 02 00 00    	je     34800ea1 <MultiplyInternalFPF+0x331>
    34800bea:	83 f8 0e             	cmp    $0xe,%eax
    34800bed:	0f 84 81 02 00 00    	je     34800e74 <MultiplyInternalFPF+0x304>
    34800bf3:	83 f8 0f             	cmp    $0xf,%eax
    34800bf6:	0f 84 8c 02 00 00    	je     34800e88 <MultiplyInternalFPF+0x318>
    34800bfc:	e9 b7 02 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800c01:	0f b7 c0             	movzwl %ax,%eax
    34800c04:	83 f9 02             	cmp    $0x2,%ecx
    34800c07:	0f 8f 23 02 00 00    	jg     34800e30 <MultiplyInternalFPF+0x2c0>
    34800c0d:	83 f8 03             	cmp    $0x3,%eax
    34800c10:	0f 83 a2 02 00 00    	jae    34800eb8 <MultiplyInternalFPF+0x348>
    34800c16:	49 8b 04 24          	mov    (%r12),%rax
    34800c1a:	41 8b 4c 24 08       	mov    0x8(%r12),%ecx
    34800c1f:	89 4f 08             	mov    %ecx,0x8(%rdi)
    34800c22:	48 89 07             	mov    %rax,(%rdi)
    34800c25:	8a 46 01             	mov    0x1(%rsi),%al
    34800c28:	e9 86 02 00 00       	jmpq   34800eb3 <MultiplyInternalFPF+0x343>
    34800c2d:	8d 48 ec             	lea    -0x14(%rax),%ecx
    34800c30:	0f b7 c9             	movzwl %cx,%ecx
    34800c33:	83 f9 04             	cmp    $0x4,%ecx
    34800c36:	0f 83 14 02 00 00    	jae    34800e50 <MultiplyInternalFPF+0x2e0>
    34800c3c:	49 8b 04 24          	mov    (%r12),%rax
    34800c40:	41 8b 4c 24 08       	mov    0x8(%r12),%ecx
    34800c45:	89 4f 08             	mov    %ecx,0x8(%rdi)
    34800c48:	48 89 07             	mov    %rax,(%rdi)
    34800c4b:	e9 68 02 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800c50:	8d 48 fa             	lea    -0x6(%rax),%ecx
    34800c53:	0f b7 c9             	movzwl %cx,%ecx
    34800c56:	83 f9 02             	cmp    $0x2,%ecx
    34800c59:	0f 83 36 02 00 00    	jae    34800e95 <MultiplyInternalFPF+0x325>
    34800c5f:	8b 46 08             	mov    0x8(%rsi),%eax
    34800c62:	89 44 24 40          	mov    %eax,0x40(%rsp)
    34800c66:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    34800c6b:	48 8b 06             	mov    (%rsi),%rax
    34800c6e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    34800c73:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    34800c78:	48 8d 7f 04          	lea    0x4(%rdi),%rdi
    34800c7c:	e8 df 02 00 00       	callq  34800f60 <IsMantissaZero>
    34800c81:	85 c0                	test   %eax,%eax
    34800c83:	0f 85 16 00 00 00    	jne    34800c9f <MultiplyInternalFPF+0x12f>
    34800c89:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    34800c8e:	48 8d 78 04          	lea    0x4(%rax),%rdi
    34800c92:	e8 c9 02 00 00       	callq  34800f60 <IsMantissaZero>
    34800c97:	85 c0                	test   %eax,%eax
    34800c99:	0f 84 29 02 00 00    	je     34800ec8 <MultiplyInternalFPF+0x358>
    34800c9f:	4c 89 e7             	mov    %r12,%rdi
    34800ca2:	e8 39 05 00 00       	callq  348011e0 <SetInternalFPFInfinity>
    34800ca7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34800cac:	8a 18                	mov    (%rax),%bl
    34800cae:	48 89 c2             	mov    %rax,%rdx
    34800cb1:	b0 01                	mov    $0x1,%al
    34800cb3:	80 fb 01             	cmp    $0x1,%bl
    34800cb6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34800cbb:	0f 84 0a 00 00 00    	je     34800ccb <MultiplyInternalFPF+0x15b>
    34800cc1:	80 3e 01             	cmpb   $0x1,(%rsi)
    34800cc4:	0f 94 c1             	sete   %cl
    34800cc7:	b0 02                	mov    $0x2,%al
    34800cc9:	28 c8                	sub    %cl,%al
    34800ccb:	41 88 04 24          	mov    %al,(%r12)
    34800ccf:	8a 46 01             	mov    0x1(%rsi),%al
    34800cd2:	32 42 01             	xor    0x1(%rdx),%al
    34800cd5:	41 88 44 24 01       	mov    %al,0x1(%r12)
    34800cda:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
    34800cde:	66 03 42 02          	add    0x2(%rdx),%ax
    34800ce2:	66 41 89 44 24 02    	mov    %ax,0x2(%r12)
    34800ce8:	4c 89 e0             	mov    %r12,%rax
    34800ceb:	4c 8d 60 04          	lea    0x4(%rax),%r12
    34800cef:	48 c7 40 04 00 00 00 	movq   $0x0,0x4(%rax)
    34800cf6:	00 
    34800cf7:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    34800cfe:	00 00 
    34800d00:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    34800d05:	48 8d 40 0a          	lea    0xa(%rax),%rax
    34800d09:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34800d0e:	31 c0                	xor    %eax,%eax
    34800d10:	48 8d 5c 24 06       	lea    0x6(%rsp),%rbx
    34800d15:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    34800d1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34800d20:	89 44 24 08          	mov    %eax,0x8(%rsp)
    34800d24:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    34800d2b:	48 89 df             	mov    %rbx,%rdi
    34800d2e:	48 8d 74 24 3c       	lea    0x3c(%rsp),%rsi
    34800d33:	e8 08 03 00 00       	callq  34801040 <ShiftMantRight1>
    34800d38:	66 83 7c 24 06 00    	cmpw   $0x0,0x6(%rsp)
    34800d3e:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    34800d45:	48 89 d8             	mov    %rbx,%rax
    34800d48:	0f 84 3f 00 00 00    	je     34800d8d <MultiplyInternalFPF+0x21d>
    34800d4e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    34800d53:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    34800d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    34800d60:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34800d65:	42 0f b7 4c 60 02    	movzwl 0x2(%rax,%r12,2),%ecx
    34800d6b:	0f b7 13             	movzwl (%rbx),%edx
    34800d6e:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    34800d73:	48 89 de             	mov    %rbx,%rsi
    34800d76:	e8 85 03 00 00       	callq  34801100 <Add16Bits>
    34800d7b:	48 8d 44 24 06       	lea    0x6(%rsp),%rax
    34800d80:	48 83 c3 fe          	add    $0xfffffffffffffffe,%rbx
    34800d84:	49 ff cc             	dec    %r12
    34800d87:	0f 8f d3 ff ff ff    	jg     34800d60 <MultiplyInternalFPF+0x1f0>
    34800d8d:	48 89 c3             	mov    %rax,%rbx
    34800d90:	48 89 df             	mov    %rbx,%rdi
    34800d93:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    34800d98:	4c 89 e6             	mov    %r12,%rsi
    34800d9b:	e8 a0 02 00 00       	callq  34801040 <ShiftMantRight1>
    34800da0:	48 89 df             	mov    %rbx,%rdi
    34800da3:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    34800da8:	e8 93 02 00 00       	callq  34801040 <ShiftMantRight1>
    34800dad:	8b 44 24 08          	mov    0x8(%rsp),%eax
    34800db1:	ff c0                	inc    %eax
    34800db3:	83 f8 40             	cmp    $0x40,%eax
    34800db6:	0f 85 64 ff ff ff    	jne    34800d20 <MultiplyInternalFPF+0x1b0>
    34800dbc:	66 41 83 3c 24 00    	cmpw   $0x0,(%r12)
    34800dc2:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    34800dc7:	0f 88 43 00 00 00    	js     34800e10 <MultiplyInternalFPF+0x2a0>
    34800dcd:	4c 8d 64 24 06       	lea    0x6(%rsp),%r12
    34800dd2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800dd9:	1f 84 00 00 00 00 00 
    34800de0:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    34800de7:	4c 89 e7             	mov    %r12,%rdi
    34800dea:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    34800def:	e8 ac 03 00 00       	callq  348011a0 <ShiftMantLeft1>
    34800df4:	4c 89 e7             	mov    %r12,%rdi
    34800df7:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    34800dfc:	e8 9f 03 00 00       	callq  348011a0 <ShiftMantLeft1>
    34800e01:	66 ff 4b 02          	decw   0x2(%rbx)
    34800e05:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
    34800e0a:	0f 89 d0 ff ff ff    	jns    34800de0 <MultiplyInternalFPF+0x270>
    34800e10:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    34800e15:	e8 46 01 00 00       	callq  34800f60 <IsMantissaZero>
    34800e1a:	85 c0                	test   %eax,%eax
    34800e1c:	49 89 dc             	mov    %rbx,%r12
    34800e1f:	0f 84 93 00 00 00    	je     34800eb8 <MultiplyInternalFPF+0x348>
    34800e25:	41 80 4c 24 0a 01    	orb    $0x1,0xa(%r12)
    34800e2b:	e9 88 00 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800e30:	83 f8 03             	cmp    $0x3,%eax
    34800e33:	0f 84 4f 00 00 00    	je     34800e88 <MultiplyInternalFPF+0x318>
    34800e39:	83 f8 04             	cmp    $0x4,%eax
    34800e3c:	0f 84 32 00 00 00    	je     34800e74 <MultiplyInternalFPF+0x304>
    34800e42:	83 f8 05             	cmp    $0x5,%eax
    34800e45:	0f 84 56 00 00 00    	je     34800ea1 <MultiplyInternalFPF+0x331>
    34800e4b:	e9 68 00 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800e50:	0f b7 c0             	movzwl %ax,%eax
    34800e53:	83 f8 13             	cmp    $0x13,%eax
    34800e56:	0f 84 18 00 00 00    	je     34800e74 <MultiplyInternalFPF+0x304>
    34800e5c:	83 f8 18             	cmp    $0x18,%eax
    34800e5f:	0f 85 53 00 00 00    	jne    34800eb8 <MultiplyInternalFPF+0x348>
    34800e65:	31 c9                	xor    %ecx,%ecx
    34800e67:	4c 89 e2             	mov    %r12,%rdx
    34800e6a:	e8 d1 02 00 00       	callq  34801140 <choose_nan>
    34800e6f:	e9 44 00 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800e74:	49 8b 04 24          	mov    (%r12),%rax
    34800e78:	41 8b 4c 24 08       	mov    0x8(%r12),%ecx
    34800e7d:	89 4e 08             	mov    %ecx,0x8(%rsi)
    34800e80:	48 89 06             	mov    %rax,(%rsi)
    34800e83:	e9 30 00 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800e88:	4c 89 e7             	mov    %r12,%rdi
    34800e8b:	e8 90 02 00 00       	callq  34801120 <SetInternalFPFNaN>
    34800e90:	e9 23 00 00 00       	jmpq   34800eb8 <MultiplyInternalFPF+0x348>
    34800e95:	0f b7 c0             	movzwl %ax,%eax
    34800e98:	83 f8 08             	cmp    $0x8,%eax
    34800e9b:	0f 85 17 00 00 00    	jne    34800eb8 <MultiplyInternalFPF+0x348>
    34800ea1:	49 8b 04 24          	mov    (%r12),%rax
    34800ea5:	41 8b 4c 24 08       	mov    0x8(%r12),%ecx
    34800eaa:	89 4e 08             	mov    %ecx,0x8(%rsi)
    34800ead:	48 89 06             	mov    %rax,(%rsi)
    34800eb0:	8a 47 01             	mov    0x1(%rdi),%al
    34800eb3:	41 30 44 24 01       	xor    %al,0x1(%r12)
    34800eb8:	4c 89 e7             	mov    %r12,%rdi
    34800ebb:	e8 20 00 00 00       	callq  34800ee0 <RoundInternalFPF>
    34800ec0:	48 83 c4 48          	add    $0x48,%rsp
    34800ec4:	5b                   	pop    %rbx
    34800ec5:	41 5c                	pop    %r12
    34800ec7:	c3                   	retq   
    34800ec8:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34800ecd:	e9 df fd ff ff       	jmpq   34800cb1 <MultiplyInternalFPF+0x141>
    34800ed2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800ed9:	1f 84 00 00 00 00 00 

0000000034800ee0 <RoundInternalFPF>:
    34800ee0:	53                   	push   %rbx
    34800ee1:	48 89 fb             	mov    %rdi,%rbx
    34800ee4:	8a 03                	mov    (%rbx),%al
    34800ee6:	fe c8                	dec    %al
    34800ee8:	3c 01                	cmp    $0x1,%al
    34800eea:	0f 87 15 00 00 00    	ja     34800f05 <RoundInternalFPF+0x25>
    34800ef0:	48 89 df             	mov    %rbx,%rdi
    34800ef3:	e8 18 00 00 00       	callq  34800f10 <denormalize>
    34800ef8:	80 3b 00             	cmpb   $0x0,(%rbx)
    34800efb:	0f 84 04 00 00 00    	je     34800f05 <RoundInternalFPF+0x25>
    34800f01:	80 63 0a f8          	andb   $0xf8,0xa(%rbx)
    34800f05:	5b                   	pop    %rbx
    34800f06:	c3                   	retq   
    34800f07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34800f0e:	00 00 

0000000034800f10 <denormalize>:
    34800f10:	53                   	push   %rbx
    34800f11:	48 89 fb             	mov    %rdi,%rbx
    34800f14:	48 8d 7b 04          	lea    0x4(%rbx),%rdi
    34800f18:	e8 43 00 00 00       	callq  34800f60 <IsMantissaZero>
    34800f1d:	85 c0                	test   %eax,%eax
    34800f1f:	0f 84 0a 00 00 00    	je     34800f2f <denormalize+0x1f>
    34800f25:	bf 30 2f 81 34       	mov    $0x34812f30,%edi
    34800f2a:	e8 91 b9 00 00       	callq  3480c8c0 <puts>
    34800f2f:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    34800f33:	3d 00 80 00 00       	cmp    $0x8000,%eax
    34800f38:	0f 85 14 00 00 00    	jne    34800f52 <denormalize+0x42>
    34800f3e:	66 c7 43 02 01 80    	movw   $0x8001,0x2(%rbx)
    34800f44:	be 01 00 00 00       	mov    $0x1,%esi
    34800f49:	48 89 df             	mov    %rbx,%rdi
    34800f4c:	5b                   	pop    %rbx
    34800f4d:	e9 5e 00 00 00       	jmpq   34800fb0 <StickyShiftRightMant>
    34800f52:	5b                   	pop    %rbx
    34800f53:	c3                   	retq   
    34800f54:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800f5b:	00 00 00 00 00 

0000000034800f60 <IsMantissaZero>:
    34800f60:	31 c0                	xor    %eax,%eax
    34800f62:	31 c9                	xor    %ecx,%ecx
    34800f64:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34800f6b:	00 00 00 00 00 
    34800f70:	0f b7 14 47          	movzwl (%rdi,%rax,2),%edx
    34800f74:	09 d1                	or     %edx,%ecx
    34800f76:	48 ff c0             	inc    %rax
    34800f79:	48 83 f8 04          	cmp    $0x4,%rax
    34800f7d:	0f 85 ed ff ff ff    	jne    34800f70 <IsMantissaZero+0x10>
    34800f83:	31 c0                	xor    %eax,%eax
    34800f85:	85 c9                	test   %ecx,%ecx
    34800f87:	0f 94 c0             	sete   %al
    34800f8a:	c3                   	retq   
    34800f8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034800f90 <SetInternalFPFZero>:
    34800f90:	c6 07 00             	movb   $0x0,(%rdi)
    34800f93:	40 88 77 01          	mov    %sil,0x1(%rdi)
    34800f97:	66 c7 47 02 01 80    	movw   $0x8001,0x2(%rdi)
    34800f9d:	48 c7 47 04 00 00 00 	movq   $0x0,0x4(%rdi)
    34800fa4:	00 
    34800fa5:	c3                   	retq   
    34800fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34800fad:	00 00 00 

0000000034800fb0 <StickyShiftRightMant>:
    34800fb0:	41 54                	push   %r12
    34800fb2:	53                   	push   %rbx
    34800fb3:	48 83 ec 18          	sub    $0x18,%rsp
    34800fb7:	89 f3                	mov    %esi,%ebx
    34800fb9:	49 89 fc             	mov    %rdi,%r12
    34800fbc:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
    34800fc1:	0f 84 6c 00 00 00    	je     34801033 <StickyShiftRightMant+0x83>
    34800fc7:	49 8d 44 24 04       	lea    0x4(%r12),%rax
    34800fcc:	83 fb 40             	cmp    $0x40,%ebx
    34800fcf:	0f 8c 19 00 00 00    	jl     34800fee <StickyShiftRightMant+0x3e>
    34800fd5:	66 c7 40 04 00 00    	movw   $0x0,0x4(%rax)
    34800fdb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    34800fe1:	66 41 c7 44 24 0a 01 	movw   $0x1,0xa(%r12)
    34800fe8:	00 
    34800fe9:	e9 45 00 00 00       	jmpq   34801033 <StickyShiftRightMant+0x83>
    34800fee:	85 db                	test   %ebx,%ebx
    34800ff0:	0f 8e 3d 00 00 00    	jle    34801033 <StickyShiftRightMant+0x83>
    34800ff6:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    34800ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34801000:	66 c7 44 24 0e 00 00 	movw   $0x0,0xe(%rsp)
    34801007:	48 8d 7c 24 0e       	lea    0xe(%rsp),%rdi
    3480100c:	48 89 c6             	mov    %rax,%rsi
    3480100f:	e8 2c 00 00 00       	callq  34801040 <ShiftMantRight1>
    34801014:	66 83 7c 24 0e 00    	cmpw   $0x0,0xe(%rsp)
    3480101a:	0f 84 06 00 00 00    	je     34801026 <StickyShiftRightMant+0x76>
    34801020:	41 80 4c 24 0a 01    	orb    $0x1,0xa(%r12)
    34801026:	ff cb                	dec    %ebx
    34801028:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3480102d:	0f 85 cd ff ff ff    	jne    34801000 <StickyShiftRightMant+0x50>
    34801033:	48 83 c4 18          	add    $0x18,%rsp
    34801037:	5b                   	pop    %rbx
    34801038:	41 5c                	pop    %r12
    3480103a:	c3                   	retq   
    3480103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034801040 <ShiftMantRight1>:
    34801040:	31 c0                	xor    %eax,%eax
    34801042:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801049:	1f 84 00 00 00 00 00 
    34801050:	0f b7 14 46          	movzwl (%rsi,%rax,2),%edx
    34801054:	41 89 d0             	mov    %edx,%r8d
    34801057:	41 83 e0 01          	and    $0x1,%r8d
    3480105b:	d1 ea                	shr    %edx
    3480105d:	89 d1                	mov    %edx,%ecx
    3480105f:	81 c9 00 80 00 00    	or     $0x8000,%ecx
    34801065:	66 83 3f 00          	cmpw   $0x0,(%rdi)
    34801069:	66 0f 44 ca          	cmove  %dx,%cx
    3480106d:	66 44 89 07          	mov    %r8w,(%rdi)
    34801071:	66 89 0c 46          	mov    %cx,(%rsi,%rax,2)
    34801075:	48 ff c0             	inc    %rax
    34801078:	48 83 f8 04          	cmp    $0x4,%rax
    3480107c:	0f 85 ce ff ff ff    	jne    34801050 <ShiftMantRight1+0x10>
    34801082:	c3                   	retq   
    34801083:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480108a:	84 00 00 00 00 00 

0000000034801090 <Sub16Bits>:
    34801090:	29 ca                	sub    %ecx,%edx
    34801092:	0f b7 07             	movzwl (%rdi),%eax
    34801095:	29 c2                	sub    %eax,%edx
    34801097:	89 d0                	mov    %edx,%eax
    34801099:	c1 e8 10             	shr    $0x10,%eax
    3480109c:	83 e0 01             	and    $0x1,%eax
    3480109f:	66 89 07             	mov    %ax,(%rdi)
    348010a2:	66 89 16             	mov    %dx,(%rsi)
    348010a5:	c3                   	retq   
    348010a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348010ad:	00 00 00 

00000000348010b0 <normalize>:
    348010b0:	41 54                	push   %r12
    348010b2:	53                   	push   %rbx
    348010b3:	50                   	push   %rax
    348010b4:	48 89 fb             	mov    %rdi,%rbx
    348010b7:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
    348010bc:	0f 88 31 00 00 00    	js     348010f3 <normalize+0x43>
    348010c2:	4c 8d 63 04          	lea    0x4(%rbx),%r12
    348010c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348010cd:	00 00 00 
    348010d0:	66 c7 44 24 06 00 00 	movw   $0x0,0x6(%rsp)
    348010d7:	48 8d 7c 24 06       	lea    0x6(%rsp),%rdi
    348010dc:	4c 89 e6             	mov    %r12,%rsi
    348010df:	e8 bc 00 00 00       	callq  348011a0 <ShiftMantLeft1>
    348010e4:	66 ff 4b 02          	decw   0x2(%rbx)
    348010e8:	66 83 7b 04 00       	cmpw   $0x0,0x4(%rbx)
    348010ed:	0f 89 dd ff ff ff    	jns    348010d0 <normalize+0x20>
    348010f3:	48 83 c4 08          	add    $0x8,%rsp
    348010f7:	5b                   	pop    %rbx
    348010f8:	41 5c                	pop    %r12
    348010fa:	c3                   	retq   
    348010fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034801100 <Add16Bits>:
    34801100:	01 ca                	add    %ecx,%edx
    34801102:	0f b7 07             	movzwl (%rdi),%eax
    34801105:	01 d0                	add    %edx,%eax
    34801107:	89 c1                	mov    %eax,%ecx
    34801109:	c1 e9 10             	shr    $0x10,%ecx
    3480110c:	83 e1 01             	and    $0x1,%ecx
    3480110f:	66 89 0f             	mov    %cx,(%rdi)
    34801112:	66 89 06             	mov    %ax,(%rsi)
    34801115:	c3                   	retq   
    34801116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480111d:	00 00 00 

0000000034801120 <SetInternalFPFNaN>:
    34801120:	66 c7 07 04 01       	movw   $0x104,(%rdi)
    34801125:	48 c7 47 02 ff 7f 00 	movq   $0x40007fff,0x2(%rdi)
    3480112c:	40 
    3480112d:	66 c7 47 0a 00 00    	movw   $0x0,0xa(%rdi)
    34801133:	c3                   	retq   
    34801134:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480113b:	00 00 00 00 00 

0000000034801140 <choose_nan>:
    34801140:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    34801147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480114e:	00 00 
    34801150:	42 0f b7 44 46 06    	movzwl 0x6(%rsi,%r8,2),%eax
    34801156:	66 42 39 44 47 06    	cmp    %ax,0x6(%rdi,%r8,2)
    3480115c:	0f 87 28 00 00 00    	ja     3480118a <choose_nan+0x4a>
    34801162:	0f 82 15 00 00 00    	jb     3480117d <choose_nan+0x3d>
    34801168:	49 ff c0             	inc    %r8
    3480116b:	49 83 f8 02          	cmp    $0x2,%r8
    3480116f:	0f 8e db ff ff ff    	jle    34801150 <choose_nan+0x10>
    34801175:	85 c9                	test   %ecx,%ecx
    34801177:	0f 84 0d 00 00 00    	je     3480118a <choose_nan+0x4a>
    3480117d:	48 8b 02             	mov    (%rdx),%rax
    34801180:	8b 4a 08             	mov    0x8(%rdx),%ecx
    34801183:	89 4e 08             	mov    %ecx,0x8(%rsi)
    34801186:	48 89 06             	mov    %rax,(%rsi)
    34801189:	c3                   	retq   
    3480118a:	48 8b 02             	mov    (%rdx),%rax
    3480118d:	8b 4a 08             	mov    0x8(%rdx),%ecx
    34801190:	89 4f 08             	mov    %ecx,0x8(%rdi)
    34801193:	48 89 07             	mov    %rax,(%rdi)
    34801196:	c3                   	retq   
    34801197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480119e:	00 00 

00000000348011a0 <ShiftMantLeft1>:
    348011a0:	b8 04 00 00 00       	mov    $0x4,%eax
    348011a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348011ac:	00 00 00 00 
    348011b0:	44 0f b7 44 46 fe    	movzwl -0x2(%rsi,%rax,2),%r8d
    348011b6:	44 89 c2             	mov    %r8d,%edx
    348011b9:	81 e2 00 80 00 00    	and    $0x8000,%edx
    348011bf:	31 c9                	xor    %ecx,%ecx
    348011c1:	66 83 3f 00          	cmpw   $0x0,(%rdi)
    348011c5:	0f 95 c1             	setne  %cl
    348011c8:	42 8d 0c 41          	lea    (%rcx,%r8,2),%ecx
    348011cc:	66 89 17             	mov    %dx,(%rdi)
    348011cf:	66 89 4c 46 fe       	mov    %cx,-0x2(%rsi,%rax,2)
    348011d4:	48 ff c8             	dec    %rax
    348011d7:	0f 8f d3 ff ff ff    	jg     348011b0 <ShiftMantLeft1+0x10>
    348011dd:	c3                   	retq   
    348011de:	66 90                	xchg   %ax,%ax

00000000348011e0 <SetInternalFPFInfinity>:
    348011e0:	c7 07 03 00 01 80    	movl   $0x80010003,(%rdi)
    348011e6:	48 c7 47 04 00 00 00 	movq   $0x0,0x4(%rdi)
    348011ed:	00 
    348011ee:	c3                   	retq   
    348011ef:	90                   	nop

00000000348011f0 <randwc>:
    348011f0:	53                   	push   %rbx
    348011f1:	89 fb                	mov    %edi,%ebx
    348011f3:	31 ff                	xor    %edi,%edi
    348011f5:	e8 16 00 00 00       	callq  34801210 <randnum>
    348011fa:	99                   	cltd   
    348011fb:	f7 fb                	idiv   %ebx
    348011fd:	89 d0                	mov    %edx,%eax
    348011ff:	5b                   	pop    %rbx
    34801200:	c3                   	retq   
    34801201:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801208:	0f 1f 84 00 00 00 00 
    3480120f:	00 

0000000034801210 <randnum>:
    34801210:	85 ff                	test   %edi,%edi
    34801212:	0f 84 23 00 00 00    	je     3480123b <randnum+0x2b>
    34801218:	c7 05 fe 5d 21 00 0d 	movl   $0xd,0x215dfe(%rip)        # 34a17020 <randnum.randw.0>
    3480121f:	00 00 00 
    34801222:	c7 05 f8 5d 21 00 75 	movl   $0x75,0x215df8(%rip)        # 34a17024 <randnum.randw.1>
    34801229:	00 00 00 
    3480122c:	b9 0d 00 00 00       	mov    $0xd,%ecx
    34801231:	b8 62 6a b1 03       	mov    $0x3b16a62,%eax
    34801236:	e9 10 00 00 00       	jmpq   3480124b <randnum+0x3b>
    3480123b:	8b 0d df 5d 21 00    	mov    0x215ddf(%rip),%ecx        # 34a17020 <randnum.randw.0>
    34801241:	69 05 d9 5d 21 00 9a 	imul   $0x8149a,0x215dd9(%rip),%eax        # 34a17024 <randnum.randw.1>
    34801248:	14 08 00 
    3480124b:	69 d1 22 e3 03 00    	imul   $0x3e322,%ecx,%edx
    34801251:	01 c2                	add    %eax,%edx
    34801253:	48 63 c2             	movslq %edx,%rax
    34801256:	48 69 d0 99 c2 46 86 	imul   $0xffffffff8646c299,%rax,%rdx
    3480125d:	48 c1 ea 20          	shr    $0x20,%rdx
    34801261:	01 c2                	add    %eax,%edx
    34801263:	89 d6                	mov    %edx,%esi
    34801265:	c1 ee 1f             	shr    $0x1f,%esi
    34801268:	c1 fa 13             	sar    $0x13,%edx
    3480126b:	01 f2                	add    %esi,%edx
    3480126d:	69 d2 8b 40 0f 00    	imul   $0xf408b,%edx,%edx
    34801273:	29 d0                	sub    %edx,%eax
    34801275:	89 0d a9 5d 21 00    	mov    %ecx,0x215da9(%rip)        # 34a17024 <randnum.randw.1>
    3480127b:	89 05 9f 5d 21 00    	mov    %eax,0x215d9f(%rip)        # 34a17020 <randnum.randw.0>
    34801281:	c3                   	retq   
    34801282:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801289:	1f 84 00 00 00 00 00 

0000000034801290 <abs_randwc>:
    34801290:	50                   	push   %rax
    34801291:	e8 5a ff ff ff       	callq  348011f0 <randwc>
    34801296:	89 c1                	mov    %eax,%ecx
    34801298:	f7 d9                	neg    %ecx
    3480129a:	0f 4c c8             	cmovl  %eax,%ecx
    3480129d:	89 c8                	mov    %ecx,%eax
    3480129f:	59                   	pop    %rcx
    348012a0:	c3                   	retq   
    348012a1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348012a8:	00 00 00 
    348012ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000348012b0 <enclave_main>:
    348012b0:	48 c7 05 a5 77 b1 00 	movq   $0x3c,0xb177a5(%rip)        # 35318a60 <global_min_ticks>
    348012b7:	3c 00 00 00 
    348012bb:	48 c7 05 62 77 b1 00 	movq   $0x5,0xb17762(%rip)        # 35318a28 <global_min_seconds>
    348012c2:	05 00 00 00 
    348012c6:	c7 05 60 77 b1 00 00 	movl   $0x0,0xb17760(%rip)        # 35318a30 <global_allstats>
    348012cd:	00 00 00 
    348012d0:	c7 05 c2 77 b1 00 00 	movl   $0x0,0xb177c2(%rip)        # 35318a9c <global_custrun>
    348012d7:	00 00 00 
    348012da:	c7 05 b4 77 b1 00 08 	movl   $0x8,0xb177b4(%rip)        # 35318a98 <global_align>
    348012e1:	00 00 00 
    348012e4:	c7 05 7e 77 b1 00 00 	movl   $0x0,0xb1777e(%rip)        # 35318a6c <mem_array_ents>
    348012eb:	00 00 00 
    348012ee:	48 c7 c0 d8 ff ff ff 	mov    $0xffffffffffffffd8,%rax
    348012f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348012fc:	00 00 00 00 
    34801300:	c7 80 98 8a 31 35 01 	movl   $0x1,0x35318a98(%rax)
    34801307:	00 00 00 
    3480130a:	48 83 c0 04          	add    $0x4,%rax
    3480130e:	0f 85 ec ff ff ff    	jne    34801300 <enclave_main+0x50>
    34801314:	41 54                	push   %r12
    34801316:	53                   	push   %rbx
    34801317:	48 83 ec 48          	sub    $0x48,%rsp
    3480131b:	e8 a0 03 00 00       	callq  348016c0 <set_request_secs>
    34801320:	c7 05 3e 71 b1 00 00 	movl   $0x0,0xb1713e(%rip)        # 35318468 <global_numsortstruct>
    34801327:	00 00 00 
    3480132a:	48 c7 05 53 71 b1 00 	movq   $0x1faf,0xb17153(%rip)        # 35318488 <global_numsortstruct+0x20>
    34801331:	af 1f 00 00 
    34801335:	c7 05 f9 76 b1 00 00 	movl   $0x0,0xb176f9(%rip)        # 35318a38 <global_strsortstruct>
    3480133c:	00 00 00 
    3480133f:	48 c7 05 0e 77 b1 00 	movq   $0x1faf,0xb1770e(%rip)        # 35318a58 <global_strsortstruct+0x20>
    34801346:	af 1f 00 00 
    3480134a:	c7 05 3c 71 b1 00 00 	movl   $0x0,0xb1713c(%rip)        # 35318490 <global_bitopstruct>
    34801351:	00 00 00 
    34801354:	48 c7 05 51 71 b1 00 	movq   $0x4000,0xb17151(%rip)        # 353184b0 <global_bitopstruct+0x20>
    3480135b:	00 40 00 00 
    3480135f:	c7 05 a7 6c b1 00 00 	movl   $0x0,0xb16ca7(%rip)        # 35318010 <global_emfloatstruct>
    34801366:	00 00 00 
    34801369:	48 c7 05 ac 6c b1 00 	movq   $0xbb8,0xb16cac(%rip)        # 35318020 <global_emfloatstruct+0x10>
    34801370:	b8 0b 00 00 
    34801374:	c7 05 8a 77 b1 00 00 	movl   $0x0,0xb1778a(%rip)        # 35318b08 <global_fourierstruct>
    3480137b:	00 00 00 
    3480137e:	c7 05 18 77 b1 00 00 	movl   $0x0,0xb17718(%rip)        # 35318aa0 <global_assignstruct>
    34801385:	00 00 00 
    34801388:	c7 05 4e 77 b1 00 00 	movl   $0x0,0xb1774e(%rip)        # 35318ae0 <global_ideastruct>
    3480138f:	00 00 00 
    34801392:	48 c7 05 53 77 b1 00 	movq   $0xfa0,0xb17753(%rip)        # 35318af0 <global_ideastruct+0x10>
    34801399:	a0 0f 00 00 
    3480139d:	c7 05 59 76 b1 00 00 	movl   $0x0,0xb17659(%rip)        # 35318a00 <global_huffstruct>
    348013a4:	00 00 00 
    348013a7:	48 c7 05 5e 76 b1 00 	movq   $0x1388,0xb1765e(%rip)        # 35318a10 <global_huffstruct+0x10>
    348013ae:	88 13 00 00 
    348013b2:	c7 05 04 77 b1 00 00 	movl   $0x0,0xb17704(%rip)        # 35318ac0 <global_nnetstruct>
    348013b9:	00 00 00 
    348013bc:	c7 05 82 70 b1 00 00 	movl   $0x0,0xb17082(%rip)        # 35318448 <global_lustruct>
    348013c3:	00 00 00 
    348013c6:	bf 7d 32 81 34       	mov    $0x3481327d,%edi
    348013cb:	e8 40 03 00 00       	callq  34801710 <output_string>
    348013d0:	bf ae 32 81 34       	mov    $0x348132ae,%edi
    348013d5:	e8 36 03 00 00       	callq  34801710 <output_string>
    348013da:	bf d6 32 81 34       	mov    $0x348132d6,%edi
    348013df:	e8 2c 03 00 00       	callq  34801710 <output_string>
    348013e4:	bf 06 33 81 34       	mov    $0x34813306,%edi
    348013e9:	e8 22 03 00 00       	callq  34801710 <output_string>
    348013ee:	bf 49 33 81 34       	mov    $0x34813349,%edi
    348013f3:	e8 18 03 00 00       	callq  34801710 <output_string>
    348013f8:	bf 8d 33 81 34       	mov    $0x3481338d,%edi
    348013fd:	e8 0e 03 00 00       	callq  34801710 <output_string>
    34801402:	f2 0f 10 05 56 1b 01 	movsd  0x11b56(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34801409:	00 
    3480140a:	4c 8d 64 24 38       	lea    0x38(%rsp),%r12
    3480140f:	bb 00 00 00 00       	mov    $0x0,%ebx
    34801414:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    3480141a:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
    34801420:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    34801426:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    3480142c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34801432:	e9 29 00 00 00       	jmpq   34801460 <enclave_main+0x1b0>
    34801437:	f2 0f 5e 04 dd f0 70 	divsd  0x34a170f0(,%rbx,8),%xmm0
    3480143e:	a1 34 
    34801440:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34801446:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480144a:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    34801450:	e9 2b 01 00 00       	jmpq   34801580 <enclave_main+0x2d0>
    34801455:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480145c:	00 00 00 00 
    34801460:	83 3c 9d 70 8a 31 35 	cmpl   $0x0,0x35318a70(,%rbx,4)
    34801467:	00 
    34801468:	0f 84 12 01 00 00    	je     34801580 <enclave_main+0x2d0>
    3480146e:	48 8b 14 dd 50 70 a1 	mov    0x34a17050(,%rbx,8),%rdx
    34801475:	34 
    34801476:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480147b:	be d1 33 81 34       	mov    $0x348133d1,%esi
    34801480:	31 c0                	xor    %eax,%eax
    34801482:	e8 f9 ad 00 00       	callq  3480c280 <sprintf>
    34801487:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480148c:	e8 7f 02 00 00       	callq  34801710 <output_string>
    34801491:	89 df                	mov    %ebx,%edi
    34801493:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    34801498:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    3480149d:	4c 89 e1             	mov    %r12,%rcx
    348014a0:	e8 7b 02 00 00       	callq  34801720 <bench_with_confidence>
    348014a5:	85 c0                	test   %eax,%eax
    348014a7:	0f 84 1e 00 00 00    	je     348014cb <enclave_main+0x21b>
    348014ad:	bf d9 33 81 34       	mov    $0x348133d9,%edi
    348014b2:	e8 59 02 00 00       	callq  34801710 <output_string>
    348014b7:	bf 22 34 81 34       	mov    $0x34813422,%edi
    348014bc:	e8 4f 02 00 00       	callq  34801710 <output_string>
    348014c1:	bf 68 34 81 34       	mov    $0x34813468,%edi
    348014c6:	e8 45 02 00 00       	callq  34801710 <output_string>
    348014cb:	83 fb 09             	cmp    $0x9,%ebx
    348014ce:	0f 87 4f 00 00 00    	ja     34801523 <enclave_main+0x273>
    348014d4:	b8 10 03 00 00       	mov    $0x310,%eax
    348014d9:	0f a3 d8             	bt     %ebx,%eax
    348014dc:	0f 83 41 00 00 00    	jae    34801523 <enclave_main+0x273>
    348014e2:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    348014e8:	66 0f 28 c8          	movapd %xmm0,%xmm1
    348014ec:	f2 0f 5e 0c dd a0 70 	divsd  0x34a170a0(,%rbx,8),%xmm1
    348014f3:	a1 34 
    348014f5:	f2 0f 10 54 24 20    	movsd  0x20(%rsp),%xmm2
    348014fb:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    348014ff:	f2 0f 11 54 24 20    	movsd  %xmm2,0x20(%rsp)
    34801505:	f2 0f 5e 04 dd f0 70 	divsd  0x34a170f0(,%rbx,8),%xmm0
    3480150c:	a1 34 
    3480150e:	f2 0f 10 4c 24 28    	movsd  0x28(%rsp),%xmm1
    34801514:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    34801518:	f2 0f 11 4c 24 28    	movsd  %xmm1,0x28(%rsp)
    3480151e:	e9 5d 00 00 00       	jmpq   34801580 <enclave_main+0x2d0>
    34801523:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    34801529:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480152d:	f2 0f 5e 0c dd a0 70 	divsd  0x34a170a0(,%rbx,8),%xmm1
    34801534:	a1 34 
    34801536:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
    3480153c:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    34801540:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    34801546:	83 fb 07             	cmp    $0x7,%ebx
    34801549:	0f 87 e8 fe ff ff    	ja     34801437 <enclave_main+0x187>
    3480154f:	b8 c9 00 00 00       	mov    $0xc9,%eax
    34801554:	0f a3 d8             	bt     %ebx,%eax
    34801557:	0f 83 da fe ff ff    	jae    34801437 <enclave_main+0x187>
    3480155d:	f2 0f 5e 04 dd f0 70 	divsd  0x34a170f0(,%rbx,8),%xmm0
    34801564:	a1 34 
    34801566:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    3480156c:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    34801570:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    34801576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480157d:	00 00 00 
    34801580:	48 ff c3             	inc    %rbx
    34801583:	48 83 fb 0a          	cmp    $0xa,%rbx
    34801587:	0f 85 d3 fe ff ff    	jne    34801460 <enclave_main+0x1b0>
    3480158d:	83 3d 08 75 b1 00 00 	cmpl   $0x0,0xb17508(%rip)        # 35318a9c <global_custrun>
    34801594:	0f 85 18 01 00 00    	jne    348016b2 <enclave_main+0x402>
    3480159a:	bf 7e 34 81 34       	mov    $0x3481347e,%edi
    3480159f:	e8 6c 01 00 00       	callq  34801710 <output_string>
    348015a4:	f2 0f 10 0d bc 19 01 	movsd  0x119bc(%rip),%xmm1        # 34812f68 <DoEmFloatIteration.jtable+0x48>
    348015ab:	00 
    348015ac:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    348015b2:	e8 39 a2 00 00       	callq  3480b7f0 <pow>
    348015b7:	bf 00 86 31 35       	mov    $0x35318600,%edi
    348015bc:	be cd 34 81 34       	mov    $0x348134cd,%esi
    348015c1:	b0 01                	mov    $0x1,%al
    348015c3:	e8 b8 ac 00 00       	callq  3480c280 <sprintf>
    348015c8:	bf 00 86 31 35       	mov    $0x35318600,%edi
    348015cd:	e8 3e 01 00 00       	callq  34801710 <output_string>
    348015d2:	f2 0f 10 0d 96 19 01 	movsd  0x11996(%rip),%xmm1        # 34812f70 <DoEmFloatIteration.jtable+0x50>
    348015d9:	00 
    348015da:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
    348015e0:	e8 0b a2 00 00       	callq  3480b7f0 <pow>
    348015e5:	bf 00 86 31 35       	mov    $0x35318600,%edi
    348015ea:	be e9 34 81 34       	mov    $0x348134e9,%esi
    348015ef:	b0 01                	mov    $0x1,%al
    348015f1:	e8 8a ac 00 00       	callq  3480c280 <sprintf>
    348015f6:	bf 00 86 31 35       	mov    $0x35318600,%edi
    348015fb:	e8 10 01 00 00       	callq  34801710 <output_string>
    34801600:	bf 05 35 81 34       	mov    $0x34813505,%edi
    34801605:	e8 06 01 00 00       	callq  34801710 <output_string>
    3480160a:	bf 50 35 81 34       	mov    $0x34813550,%edi
    3480160f:	e8 fc 00 00 00       	callq  34801710 <output_string>
    34801614:	f2 0f 10 0d 5c 19 01 	movsd  0x1195c(%rip),%xmm1        # 34812f78 <DoEmFloatIteration.jtable+0x58>
    3480161b:	00 
    3480161c:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34801622:	e8 c9 a1 00 00       	callq  3480b7f0 <pow>
    34801627:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480162c:	be 9f 35 81 34       	mov    $0x3481359f,%esi
    34801631:	b0 01                	mov    $0x1,%al
    34801633:	e8 48 ac 00 00       	callq  3480c280 <sprintf>
    34801638:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480163d:	e8 ce 00 00 00       	callq  34801710 <output_string>
    34801642:	f2 0f 10 0d 36 19 01 	movsd  0x11936(%rip),%xmm1        # 34812f80 <DoEmFloatIteration.jtable+0x60>
    34801649:	00 
    3480164a:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    34801650:	e8 9b a1 00 00       	callq  3480b7f0 <pow>
    34801655:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480165a:	be cd 34 81 34       	mov    $0x348134cd,%esi
    3480165f:	b0 01                	mov    $0x1,%al
    34801661:	e8 1a ac 00 00       	callq  3480c280 <sprintf>
    34801666:	bf 00 86 31 35       	mov    $0x35318600,%edi
    3480166b:	e8 a0 00 00 00       	callq  34801710 <output_string>
    34801670:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
    34801676:	f2 0f 10 0d fa 18 01 	movsd  0x118fa(%rip),%xmm1        # 34812f78 <DoEmFloatIteration.jtable+0x58>
    3480167d:	00 
    3480167e:	e8 6d a1 00 00       	callq  3480b7f0 <pow>
    34801683:	bf 00 86 31 35       	mov    $0x35318600,%edi
    34801688:	be e9 34 81 34       	mov    $0x348134e9,%esi
    3480168d:	b0 01                	mov    $0x1,%al
    3480168f:	e8 ec ab 00 00       	callq  3480c280 <sprintf>
    34801694:	bf 00 86 31 35       	mov    $0x35318600,%edi
    34801699:	e8 72 00 00 00       	callq  34801710 <output_string>
    3480169e:	bf bb 35 81 34       	mov    $0x348135bb,%edi
    348016a3:	e8 68 00 00 00       	callq  34801710 <output_string>
    348016a8:	bf 09 36 81 34       	mov    $0x34813609,%edi
    348016ad:	e8 5e 00 00 00       	callq  34801710 <output_string>
    348016b2:	31 ff                	xor    %edi,%edi
    348016b4:	e8 c7 b5 00 00       	callq  3480cc80 <exit>
    348016b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000348016c0 <set_request_secs>:
    348016c0:	48 8b 05 61 73 b1 00 	mov    0xb17361(%rip),%rax        # 35318a28 <global_min_seconds>
    348016c7:	48 89 05 a2 6d b1 00 	mov    %rax,0xb16da2(%rip)        # 35318470 <global_numsortstruct+0x8>
    348016ce:	48 89 05 6b 73 b1 00 	mov    %rax,0xb1736b(%rip)        # 35318a40 <global_strsortstruct+0x8>
    348016d5:	48 89 05 bc 6d b1 00 	mov    %rax,0xb16dbc(%rip)        # 35318498 <global_bitopstruct+0x8>
    348016dc:	48 89 05 35 69 b1 00 	mov    %rax,0xb16935(%rip)        # 35318018 <global_emfloatstruct+0x8>
    348016e3:	48 89 05 26 74 b1 00 	mov    %rax,0xb17426(%rip)        # 35318b10 <global_fourierstruct+0x8>
    348016ea:	48 89 05 b7 73 b1 00 	mov    %rax,0xb173b7(%rip)        # 35318aa8 <global_assignstruct+0x8>
    348016f1:	48 89 05 f0 73 b1 00 	mov    %rax,0xb173f0(%rip)        # 35318ae8 <global_ideastruct+0x8>
    348016f8:	48 89 05 09 73 b1 00 	mov    %rax,0xb17309(%rip)        # 35318a08 <global_huffstruct+0x8>
    348016ff:	48 89 05 c2 73 b1 00 	mov    %rax,0xb173c2(%rip)        # 35318ac8 <global_nnetstruct+0x8>
    34801706:	48 89 05 43 6d b1 00 	mov    %rax,0xb16d43(%rip)        # 35318450 <global_lustruct+0x8>
    3480170d:	c3                   	retq   
    3480170e:	66 90                	xchg   %ax,%ax

0000000034801710 <output_string>:
    34801710:	e9 ab b1 00 00       	jmpq   3480c8c0 <puts>
    34801715:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480171c:	00 00 00 00 

0000000034801720 <bench_with_confidence>:
    34801720:	41 54                	push   %r12
    34801722:	53                   	push   %rbx
    34801723:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    3480172a:	48 89 0c 24          	mov    %rcx,(%rsp)
    3480172e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    34801733:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    34801738:	4c 63 e7             	movslq %edi,%r12
    3480173b:	31 db                	xor    %ebx,%ebx
    3480173d:	0f 1f 00             	nopl   (%rax)
    34801740:	42 ff 14 e5 e0 72 a1 	callq  *0x34a172e0(,%r12,8)
    34801747:	34 
    34801748:	44 89 e7             	mov    %r12d,%edi
    3480174b:	e8 d0 00 00 00       	callq  34801820 <getscore>
    34801750:	f2 0f 11 44 dc 20    	movsd  %xmm0,0x20(%rsp,%rbx,8)
    34801756:	48 ff c3             	inc    %rbx
    34801759:	48 83 fb 05          	cmp    $0x5,%rbx
    3480175d:	0f 85 dd ff ff ff    	jne    34801740 <bench_with_confidence+0x20>
    34801763:	48 8b 04 24          	mov    (%rsp),%rax
    34801767:	48 c7 00 05 00 00 00 	movq   $0x5,(%rax)
    3480176e:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    34801773:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    34801778:	be 05 00 00 00       	mov    $0x5,%esi
    3480177d:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    34801782:	e9 36 00 00 00       	jmpq   348017bd <bench_with_confidence+0x9d>
    34801787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480178e:	00 00 
    34801790:	42 ff 14 e5 e0 72 a1 	callq  *0x34a172e0(,%r12,8)
    34801797:	34 
    34801798:	44 89 e7             	mov    %r12d,%edi
    3480179b:	e8 80 00 00 00       	callq  34801820 <getscore>
    348017a0:	48 8b 04 24          	mov    (%rsp),%rax
    348017a4:	48 8b 30             	mov    (%rax),%rsi
    348017a7:	f2 0f 11 44 f4 20    	movsd  %xmm0,0x20(%rsp,%rsi,8)
    348017ad:	48 ff c6             	inc    %rsi
    348017b0:	48 89 30             	mov    %rsi,(%rax)
    348017b3:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    348017b8:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    348017bd:	48 89 d9             	mov    %rbx,%rcx
    348017c0:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    348017c5:	e8 36 01 00 00       	callq  34801900 <calc_confidence>
    348017ca:	85 c0                	test   %eax,%eax
    348017cc:	0f 85 2a 00 00 00    	jne    348017fc <bench_with_confidence+0xdc>
    348017d2:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    348017d8:	f2 0f 5e 03          	divsd  (%rbx),%xmm0
    348017dc:	f2 0f 10 0d a4 17 01 	movsd  0x117a4(%rip),%xmm1        # 34812f88 <DoEmFloatIteration.jtable+0x68>
    348017e3:	00 
    348017e4:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    348017e8:	0f 83 1e 00 00 00    	jae    3480180c <bench_with_confidence+0xec>
    348017ee:	48 8b 04 24          	mov    (%rsp),%rax
    348017f2:	48 83 38 1e          	cmpq   $0x1e,(%rax)
    348017f6:	0f 85 94 ff ff ff    	jne    34801790 <bench_with_confidence+0x70>
    348017fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    34801801:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    34801808:	5b                   	pop    %rbx
    34801809:	41 5c                	pop    %r12
    3480180b:	c3                   	retq   
    3480180c:	31 c0                	xor    %eax,%eax
    3480180e:	e9 ee ff ff ff       	jmpq   34801801 <bench_with_confidence+0xe1>
    34801813:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480181a:	84 00 00 00 00 00 

0000000034801820 <getscore>:
    34801820:	0f 57 c0             	xorps  %xmm0,%xmm0
    34801823:	83 ff 04             	cmp    $0x4,%edi
    34801826:	0f 8f 2d 00 00 00    	jg     34801859 <getscore+0x39>
    3480182c:	83 ff 01             	cmp    $0x1,%edi
    3480182f:	0f 8e 51 00 00 00    	jle    34801886 <getscore+0x66>
    34801835:	83 ff 02             	cmp    $0x2,%edi
    34801838:	0f 84 7d 00 00 00    	je     348018bb <getscore+0x9b>
    3480183e:	83 ff 03             	cmp    $0x3,%edi
    34801841:	0f 84 7d 00 00 00    	je     348018c4 <getscore+0xa4>
    34801847:	83 ff 04             	cmp    $0x4,%edi
    3480184a:	0f 85 8e 00 00 00    	jne    348018de <getscore+0xbe>
    34801850:	f2 0f 10 05 c8 72 b1 	movsd  0xb172c8(%rip),%xmm0        # 35318b20 <global_fourierstruct+0x18>
    34801857:	00 
    34801858:	c3                   	retq   
    34801859:	83 ff 06             	cmp    $0x6,%edi
    3480185c:	0f 8e 3e 00 00 00    	jle    348018a0 <getscore+0x80>
    34801862:	83 ff 07             	cmp    $0x7,%edi
    34801865:	0f 84 62 00 00 00    	je     348018cd <getscore+0xad>
    3480186b:	83 ff 08             	cmp    $0x8,%edi
    3480186e:	0f 84 62 00 00 00    	je     348018d6 <getscore+0xb6>
    34801874:	83 ff 09             	cmp    $0x9,%edi
    34801877:	0f 85 61 00 00 00    	jne    348018de <getscore+0xbe>
    3480187d:	f2 0f 10 05 db 6b b1 	movsd  0xb16bdb(%rip),%xmm0        # 35318460 <global_lustruct+0x18>
    34801884:	00 
    34801885:	c3                   	retq   
    34801886:	85 ff                	test   %edi,%edi
    34801888:	0f 84 51 00 00 00    	je     348018df <getscore+0xbf>
    3480188e:	83 ff 01             	cmp    $0x1,%edi
    34801891:	0f 85 47 00 00 00    	jne    348018de <getscore+0xbe>
    34801897:	f2 0f 10 05 a9 71 b1 	movsd  0xb171a9(%rip),%xmm0        # 35318a48 <global_strsortstruct+0x10>
    3480189e:	00 
    3480189f:	c3                   	retq   
    348018a0:	83 ff 05             	cmp    $0x5,%edi
    348018a3:	0f 84 3f 00 00 00    	je     348018e8 <getscore+0xc8>
    348018a9:	83 ff 06             	cmp    $0x6,%edi
    348018ac:	0f 85 2c 00 00 00    	jne    348018de <getscore+0xbe>
    348018b2:	f2 0f 10 05 46 72 b1 	movsd  0xb17246(%rip),%xmm0        # 35318b00 <global_ideastruct+0x20>
    348018b9:	00 
    348018ba:	c3                   	retq   
    348018bb:	f2 0f 10 05 dd 6b b1 	movsd  0xb16bdd(%rip),%xmm0        # 353184a0 <global_bitopstruct+0x10>
    348018c2:	00 
    348018c3:	c3                   	retq   
    348018c4:	f2 0f 10 05 64 67 b1 	movsd  0xb16764(%rip),%xmm0        # 35318030 <global_emfloatstruct+0x20>
    348018cb:	00 
    348018cc:	c3                   	retq   
    348018cd:	f2 0f 10 05 4b 71 b1 	movsd  0xb1714b(%rip),%xmm0        # 35318a20 <global_huffstruct+0x20>
    348018d4:	00 
    348018d5:	c3                   	retq   
    348018d6:	f2 0f 10 05 fa 71 b1 	movsd  0xb171fa(%rip),%xmm0        # 35318ad8 <global_nnetstruct+0x18>
    348018dd:	00 
    348018de:	c3                   	retq   
    348018df:	f2 0f 10 05 91 6b b1 	movsd  0xb16b91(%rip),%xmm0        # 35318478 <global_numsortstruct+0x10>
    348018e6:	00 
    348018e7:	c3                   	retq   
    348018e8:	f2 0f 10 05 c8 71 b1 	movsd  0xb171c8(%rip),%xmm0        # 35318ab8 <global_assignstruct+0x18>
    348018ef:	00 
    348018f0:	c3                   	retq   
    348018f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348018f8:	0f 1f 84 00 00 00 00 
    348018ff:	00 

0000000034801900 <calc_confidence>:
    34801900:	41 54                	push   %r12
    34801902:	53                   	push   %rbx
    34801903:	48 83 ec 18          	sub    $0x18,%rsp
    34801907:	4d 89 c4             	mov    %r8,%r12
    3480190a:	8d 46 fe             	lea    -0x2(%rsi),%eax
    3480190d:	83 f8 1d             	cmp    $0x1d,%eax
    34801910:	0f 82 14 00 00 00    	jb     3480192a <calc_confidence+0x2a>
    34801916:	bf 40 36 81 34       	mov    $0x34813640,%edi
    3480191b:	e8 f0 fd ff ff       	callq  34801710 <output_string>
    34801920:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    34801925:	e9 fa 00 00 00       	jmpq   34801a24 <calc_confidence+0x124>
    3480192a:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    34801931:	41 89 f0             	mov    %esi,%r8d
    34801934:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34801938:	4c 89 c0             	mov    %r8,%rax
    3480193b:	48 89 fb             	mov    %rdi,%rbx
    3480193e:	66 90                	xchg   %ax,%ax
    34801940:	f2 0f 58 03          	addsd  (%rbx),%xmm0
    34801944:	f2 0f 11 01          	movsd  %xmm0,(%rcx)
    34801948:	48 83 c3 08          	add    $0x8,%rbx
    3480194c:	48 ff c8             	dec    %rax
    3480194f:	0f 85 eb ff ff ff    	jne    34801940 <calc_confidence+0x40>
    34801955:	f2 0f 2a d6          	cvtsi2sd %esi,%xmm2
    34801959:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    3480195d:	f2 0f 11 01          	movsd  %xmm0,(%rcx)
    34801961:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    34801968:	00 
    34801969:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480196d:	0f 1f 00             	nopl   (%rax)
    34801970:	f2 0f 10 0f          	movsd  (%rdi),%xmm1
    34801974:	f2 0f 5c 09          	subsd  (%rcx),%xmm1
    34801978:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    3480197c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34801980:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    34801986:	48 83 c7 08          	add    $0x8,%rdi
    3480198a:	49 ff c8             	dec    %r8
    3480198d:	0f 85 dd ff ff ff    	jne    34801970 <calc_confidence+0x70>
    34801993:	ff ce                	dec    %esi
    34801995:	0f 57 c9             	xorps  %xmm1,%xmm1
    34801998:	f2 0f 2a ce          	cvtsi2sd %esi,%xmm1
    3480199c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    348019a0:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    348019a6:	0f 57 c9             	xorps  %xmm1,%xmm1
    348019a9:	f2 0f 51 c8          	sqrtsd %xmm0,%xmm1
    348019ad:	66 0f 2e c9          	ucomisd %xmm1,%xmm1
    348019b1:	0f 8b 25 00 00 00    	jnp    348019dc <calc_confidence+0xdc>
    348019b7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    348019bc:	48 89 f3             	mov    %rsi,%rbx
    348019bf:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
    348019c5:	e8 46 a9 00 00       	callq  3480c310 <sqrt>
    348019ca:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
    348019d0:	48 89 de             	mov    %rbx,%rsi
    348019d3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    348019d8:	66 0f 28 c8          	movapd %xmm0,%xmm1
    348019dc:	f2 41 0f 11 0c 24    	movsd  %xmm1,(%r12)
    348019e2:	48 63 c6             	movslq %esi,%rax
    348019e5:	f2 0f 59 0c c5 90 36 	mulsd  0x34813690(,%rax,8),%xmm1
    348019ec:	81 34 
    348019ee:	0f 57 c0             	xorps  %xmm0,%xmm0
    348019f1:	f2 0f 51 c2          	sqrtsd %xmm2,%xmm0
    348019f5:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
    348019f9:	0f 8b 1b 00 00 00    	jnp    34801a1a <calc_confidence+0x11a>
    348019ff:	66 0f 28 c2          	movapd %xmm2,%xmm0
    34801a03:	48 89 d3             	mov    %rdx,%rbx
    34801a06:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    34801a0c:	e8 ff a8 00 00       	callq  3480c310 <sqrt>
    34801a11:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34801a17:	48 89 da             	mov    %rbx,%rdx
    34801a1a:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34801a1e:	f2 0f 11 0a          	movsd  %xmm1,(%rdx)
    34801a22:	31 c0                	xor    %eax,%eax
    34801a24:	48 83 c4 18          	add    $0x18,%rsp
    34801a28:	5b                   	pop    %rbx
    34801a29:	41 5c                	pop    %r12
    34801a2b:	c3                   	retq   
    34801a2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034801a30 <NumSift>:
    34801a30:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
    34801a34:	48 39 d0             	cmp    %rdx,%rax
    34801a37:	0f 87 5e 00 00 00    	ja     34801a9b <NumSift+0x6b>
    34801a3d:	4c 8d 42 01          	lea    0x1(%rdx),%r8
    34801a41:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801a48:	0f 1f 84 00 00 00 00 
    34801a4f:	00 
    34801a50:	48 39 d0             	cmp    %rdx,%rax
    34801a53:	0f 83 13 00 00 00    	jae    34801a6c <NumSift+0x3c>
    34801a59:	4c 8b 0c c7          	mov    (%rdi,%rax,8),%r9
    34801a5d:	48 89 c1             	mov    %rax,%rcx
    34801a60:	48 83 c9 01          	or     $0x1,%rcx
    34801a64:	4c 3b 0c cf          	cmp    (%rdi,%rcx,8),%r9
    34801a68:	48 0f 4c c1          	cmovl  %rcx,%rax
    34801a6c:	4c 8b 0c f7          	mov    (%rdi,%rsi,8),%r9
    34801a70:	4c 8b 14 c7          	mov    (%rdi,%rax,8),%r10
    34801a74:	4d 39 d1             	cmp    %r10,%r9
    34801a77:	4c 89 c1             	mov    %r8,%rcx
    34801a7a:	0f 8d 0b 00 00 00    	jge    34801a8b <NumSift+0x5b>
    34801a80:	4c 89 0c c7          	mov    %r9,(%rdi,%rax,8)
    34801a84:	4c 89 14 f7          	mov    %r10,(%rdi,%rsi,8)
    34801a88:	48 89 c1             	mov    %rax,%rcx
    34801a8b:	48 8d 04 09          	lea    (%rcx,%rcx,1),%rax
    34801a8f:	48 39 d0             	cmp    %rdx,%rax
    34801a92:	48 89 ce             	mov    %rcx,%rsi
    34801a95:	0f 86 b5 ff ff ff    	jbe    34801a50 <NumSift+0x20>
    34801a9b:	c3                   	retq   
    34801a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034801aa0 <DoNumSort>:
    34801aa0:	41 54                	push   %r12
    34801aa2:	53                   	push   %rbx
    34801aa3:	48 83 ec 68          	sub    $0x68,%rsp
    34801aa7:	83 3d ba 69 b1 00 00 	cmpl   $0x0,0xb169ba(%rip)        # 35318468 <global_numsortstruct>
    34801aae:	0f 84 4f 00 00 00    	je     34801b03 <DoNumSort+0x63>
    34801ab4:	0f b7 3d c5 69 b1 00 	movzwl 0xb169c5(%rip),%edi        # 35318480 <global_numsortstruct+0x18>
    34801abb:	48 0f af 3d c5 69 b1 	imul   0xb169c5(%rip),%rdi        # 35318488 <global_numsortstruct+0x20>
    34801ac2:	00 
    34801ac3:	48 c1 e7 03          	shl    $0x3,%rdi
    34801ac7:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34801acc:	e8 ef 51 00 00       	callq  34806cc0 <AllocateMemory>
    34801ad1:	49 89 c4             	mov    %rax,%r12
    34801ad4:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34801ad8:	85 f6                	test   %esi,%esi
    34801ada:	0f 84 ea 00 00 00    	je     34801bca <DoNumSort+0x12a>
    34801ae0:	bf 7b 39 81 34       	mov    $0x3481397b,%edi
    34801ae5:	e8 26 54 00 00       	callq  34806f10 <ReportError>
    34801aea:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34801aef:	4c 89 e7             	mov    %r12,%rdi
    34801af2:	e8 e9 52 00 00       	callq  34806de0 <FreeMemory>
    34801af7:	31 c0                	xor    %eax,%eax
    34801af9:	e8 c2 54 00 00       	callq  34806fc0 <ErrorExit>
    34801afe:	e9 c7 00 00 00       	jmpq   34801bca <DoNumSort+0x12a>
    34801b03:	66 c7 05 74 69 b1 00 	movw   $0x1,0xb16974(%rip)        # 35318480 <global_numsortstruct+0x18>
    34801b0a:	01 00 
    34801b0c:	66 b8 01 00          	mov    $0x1,%ax
    34801b10:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34801b15:	e9 1e 00 00 00       	jmpq   34801b38 <DoNumSort+0x98>
    34801b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34801b20:	bf 8c 39 81 34       	mov    $0x3481398c,%edi
    34801b25:	e8 96 ad 00 00       	callq  3480c8c0 <puts>
    34801b2a:	31 c0                	xor    %eax,%eax
    34801b2c:	e8 8f 54 00 00       	callq  34806fc0 <ErrorExit>
    34801b31:	66 8b 05 48 69 b1 00 	mov    0xb16948(%rip),%ax        # 35318480 <global_numsortstruct+0x18>
    34801b38:	0f b7 f8             	movzwl %ax,%edi
    34801b3b:	48 0f af 3d 45 69 b1 	imul   0xb16945(%rip),%rdi        # 35318488 <global_numsortstruct+0x20>
    34801b42:	00 
    34801b43:	48 c1 e7 03          	shl    $0x3,%rdi
    34801b47:	48 89 de             	mov    %rbx,%rsi
    34801b4a:	e8 71 51 00 00       	callq  34806cc0 <AllocateMemory>
    34801b4f:	49 89 c4             	mov    %rax,%r12
    34801b52:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34801b56:	85 f6                	test   %esi,%esi
    34801b58:	0f 84 1c 00 00 00    	je     34801b7a <DoNumSort+0xda>
    34801b5e:	bf 7b 39 81 34       	mov    $0x3481397b,%edi
    34801b63:	e8 a8 53 00 00       	callq  34806f10 <ReportError>
    34801b68:	4c 89 e7             	mov    %r12,%rdi
    34801b6b:	48 89 de             	mov    %rbx,%rsi
    34801b6e:	e8 6d 52 00 00       	callq  34806de0 <FreeMemory>
    34801b73:	31 c0                	xor    %eax,%eax
    34801b75:	e8 46 54 00 00       	callq  34806fc0 <ErrorExit>
    34801b7a:	48 8b 35 07 69 b1 00 	mov    0xb16907(%rip),%rsi        # 35318488 <global_numsortstruct+0x20>
    34801b81:	0f b7 15 f8 68 b1 00 	movzwl 0xb168f8(%rip),%edx        # 35318480 <global_numsortstruct+0x18>
    34801b88:	4c 89 e7             	mov    %r12,%rdi
    34801b8b:	e8 70 01 00 00       	callq  34801d00 <DoNumSortIteration>
    34801b90:	48 3b 05 c9 6e b1 00 	cmp    0xb16ec9(%rip),%rax        # 35318a60 <global_min_ticks>
    34801b97:	0f 87 2d 00 00 00    	ja     34801bca <DoNumSort+0x12a>
    34801b9d:	4c 89 e7             	mov    %r12,%rdi
    34801ba0:	48 89 de             	mov    %rbx,%rsi
    34801ba3:	e8 38 52 00 00       	callq  34806de0 <FreeMemory>
    34801ba8:	0f b7 0d d1 68 b1 00 	movzwl 0xb168d1(%rip),%ecx        # 35318480 <global_numsortstruct+0x18>
    34801baf:	8d 41 01             	lea    0x1(%rcx),%eax
    34801bb2:	66 89 05 c7 68 b1 00 	mov    %ax,0xb168c7(%rip)        # 35318480 <global_numsortstruct+0x18>
    34801bb9:	81 f9 11 27 00 00    	cmp    $0x2711,%ecx
    34801bbf:	0f 82 73 ff ff ff    	jb     34801b38 <DoNumSort+0x98>
    34801bc5:	e9 56 ff ff ff       	jmpq   34801b20 <DoNumSort+0x80>
    34801bca:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34801bce:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34801bd4:	31 db                	xor    %ebx,%ebx
    34801bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34801bdd:	00 00 00 
    34801be0:	48 8b 35 a1 68 b1 00 	mov    0xb168a1(%rip),%rsi        # 35318488 <global_numsortstruct+0x20>
    34801be7:	0f b7 15 92 68 b1 00 	movzwl 0xb16892(%rip),%edx        # 35318480 <global_numsortstruct+0x18>
    34801bee:	4c 89 e7             	mov    %r12,%rdi
    34801bf1:	e8 0a 01 00 00       	callq  34801d00 <DoNumSortIteration>
    34801bf6:	48 01 c3             	add    %rax,%rbx
    34801bf9:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34801bff:	f2 0f 58 05 59 13 01 	addsd  0x11359(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34801c06:	00 
    34801c07:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34801c0d:	48 89 df             	mov    %rbx,%rdi
    34801c10:	e8 db 53 00 00       	callq  34806ff0 <TicksToSecs>
    34801c15:	48 3b 05 54 68 b1 00 	cmp    0xb16854(%rip),%rax        # 35318470 <global_numsortstruct+0x8>
    34801c1c:	0f 82 be ff ff ff    	jb     34801be0 <DoNumSort+0x140>
    34801c22:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    34801c27:	66 0f 57 d2          	xorpd  %xmm2,%xmm2
    34801c2b:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34801c31:	45 31 e4             	xor    %r12d,%r12d
    34801c34:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
    34801c38:	0f 86 38 00 00 00    	jbe    34801c76 <DoNumSort+0x1d6>
    34801c3e:	66 90                	xchg   %ax,%ax
    34801c40:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
    34801c46:	31 c0                	xor    %eax,%eax
    34801c48:	e8 83 53 00 00       	callq  34806fd0 <StartStopwatch>
    34801c4d:	48 89 c7             	mov    %rax,%rdi
    34801c50:	e8 8b 53 00 00       	callq  34806fe0 <StopStopwatch>
    34801c55:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
    34801c5b:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34801c61:	49 01 c4             	add    %rax,%r12
    34801c64:	f2 0f 58 15 f4 12 01 	addsd  0x112f4(%rip),%xmm2        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34801c6b:	00 
    34801c6c:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
    34801c70:	0f 87 ca ff ff ff    	ja     34801c40 <DoNumSort+0x1a0>
    34801c76:	4c 29 e3             	sub    %r12,%rbx
    34801c79:	0f b7 05 00 68 b1 00 	movzwl 0xb16800(%rip),%eax        # 35318480 <global_numsortstruct+0x18>
    34801c80:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    34801c84:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    34801c88:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    34801c8e:	48 89 df             	mov    %rbx,%rdi
    34801c91:	e8 7a 53 00 00       	callq  34807010 <TicksToFracSecs>
    34801c96:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    34801c9c:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34801ca0:	f2 0f 11 0d d0 67 b1 	movsd  %xmm1,0xb167d0(%rip)        # 35318478 <global_numsortstruct+0x10>
    34801ca7:	00 
    34801ca8:	48 89 df             	mov    %rbx,%rdi
    34801cab:	e8 60 53 00 00       	callq  34807010 <TicksToFracSecs>
    34801cb0:	f2 0f 5e 44 24 08    	divsd  0x8(%rsp),%xmm0
    34801cb6:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    34801cbb:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34801cc0:	b0 01                	mov    $0x1,%al
    34801cc2:	48 89 df             	mov    %rbx,%rdi
    34801cc5:	e8 b6 a5 00 00       	callq  3480c280 <sprintf>
    34801cca:	48 89 df             	mov    %rbx,%rdi
    34801ccd:	e8 ee ab 00 00       	callq  3480c8c0 <puts>
    34801cd2:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34801cd7:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    34801cdc:	e8 ff 50 00 00       	callq  34806de0 <FreeMemory>
    34801ce1:	83 3d 80 67 b1 00 00 	cmpl   $0x0,0xb16780(%rip)        # 35318468 <global_numsortstruct>
    34801ce8:	0f 85 0a 00 00 00    	jne    34801cf8 <DoNumSort+0x258>
    34801cee:	c7 05 70 67 b1 00 01 	movl   $0x1,0xb16770(%rip)        # 35318468 <global_numsortstruct>
    34801cf5:	00 00 00 
    34801cf8:	48 83 c4 68          	add    $0x68,%rsp
    34801cfc:	5b                   	pop    %rbx
    34801cfd:	41 5c                	pop    %r12
    34801cff:	c3                   	retq   

0000000034801d00 <DoNumSortIteration>:
    34801d00:	41 54                	push   %r12
    34801d02:	53                   	push   %rbx
    34801d03:	48 83 ec 18          	sub    $0x18,%rsp
    34801d07:	41 89 d4             	mov    %edx,%r12d
    34801d0a:	48 89 fb             	mov    %rdi,%rbx
    34801d0d:	48 89 34 24          	mov    %rsi,(%rsp)
    34801d11:	e8 5a 28 00 00       	callq  34804570 <LoadNumArrayWithRand>
    34801d16:	31 c0                	xor    %eax,%eax
    34801d18:	e8 b3 52 00 00       	callq  34806fd0 <StartStopwatch>
    34801d1d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    34801d22:	45 85 e4             	test   %r12d,%r12d
    34801d25:	0f 84 3f 00 00 00    	je     34801d6a <DoNumSortIteration+0x6a>
    34801d2b:	45 89 e4             	mov    %r12d,%r12d
    34801d2e:	48 8b 04 24          	mov    (%rsp),%rax
    34801d32:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34801d36:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34801d3b:	48 c1 e0 03          	shl    $0x3,%rax
    34801d3f:	48 89 04 24          	mov    %rax,(%rsp)
    34801d43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801d4a:	84 00 00 00 00 00 
    34801d50:	48 89 df             	mov    %rbx,%rdi
    34801d53:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    34801d58:	e8 73 29 00 00       	callq  348046d0 <NumHeapSort>
    34801d5d:	48 03 1c 24          	add    (%rsp),%rbx
    34801d61:	49 ff cc             	dec    %r12
    34801d64:	0f 85 e6 ff ff ff    	jne    34801d50 <DoNumSortIteration+0x50>
    34801d6a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34801d6f:	48 83 c4 18          	add    $0x18,%rsp
    34801d73:	5b                   	pop    %rbx
    34801d74:	41 5c                	pop    %r12
    34801d76:	e9 65 52 00 00       	jmpq   34806fe0 <StopStopwatch>
    34801d7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034801d80 <DoStringSort>:
    34801d80:	41 54                	push   %r12
    34801d82:	53                   	push   %rbx
    34801d83:	48 83 ec 58          	sub    $0x58,%rsp
    34801d87:	83 3d aa 6c b1 00 00 	cmpl   $0x0,0xb16caa(%rip)        # 35318a38 <global_strsortstruct>
    34801d8e:	0f 84 45 00 00 00    	je     34801dd9 <DoStringSort+0x59>
    34801d94:	48 8b 05 bd 6c b1 00 	mov    0xb16cbd(%rip),%rax        # 35318a58 <global_strsortstruct+0x20>
    34801d9b:	48 83 c0 64          	add    $0x64,%rax
    34801d9f:	0f b7 3d aa 6c b1 00 	movzwl 0xb16caa(%rip),%edi        # 35318a50 <global_strsortstruct+0x18>
    34801da6:	48 0f af f8          	imul   %rax,%rdi
    34801daa:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34801daf:	e8 0c 4f 00 00       	callq  34806cc0 <AllocateMemory>
    34801db4:	49 89 c4             	mov    %rax,%r12
    34801db7:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34801dbb:	85 f6                	test   %esi,%esi
    34801dbd:	0f 84 a5 00 00 00    	je     34801e68 <DoStringSort+0xe8>
    34801dc3:	bf b2 39 81 34       	mov    $0x348139b2,%edi
    34801dc8:	e8 43 51 00 00       	callq  34806f10 <ReportError>
    34801dcd:	31 c0                	xor    %eax,%eax
    34801dcf:	e8 ec 51 00 00       	callq  34806fc0 <ErrorExit>
    34801dd4:	e9 8f 00 00 00       	jmpq   34801e68 <DoStringSort+0xe8>
    34801dd9:	66 b8 01 00          	mov    $0x1,%ax
    34801ddd:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34801de2:	e9 1d 00 00 00       	jmpq   34801e04 <DoStringSort+0x84>
    34801de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34801dee:	00 00 
    34801df0:	4c 89 e7             	mov    %r12,%rdi
    34801df3:	48 89 de             	mov    %rbx,%rsi
    34801df6:	e8 e5 4f 00 00       	callq  34806de0 <FreeMemory>
    34801dfb:	0f b7 05 4e 6c b1 00 	movzwl 0xb16c4e(%rip),%eax        # 35318a50 <global_strsortstruct+0x18>
    34801e02:	ff c0                	inc    %eax
    34801e04:	66 89 05 45 6c b1 00 	mov    %ax,0xb16c45(%rip)        # 35318a50 <global_strsortstruct+0x18>
    34801e0b:	48 8b 0d 46 6c b1 00 	mov    0xb16c46(%rip),%rcx        # 35318a58 <global_strsortstruct+0x20>
    34801e12:	48 83 c1 64          	add    $0x64,%rcx
    34801e16:	0f b7 f8             	movzwl %ax,%edi
    34801e19:	48 0f af f9          	imul   %rcx,%rdi
    34801e1d:	48 89 de             	mov    %rbx,%rsi
    34801e20:	e8 9b 4e 00 00       	callq  34806cc0 <AllocateMemory>
    34801e25:	49 89 c4             	mov    %rax,%r12
    34801e28:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34801e2c:	85 f6                	test   %esi,%esi
    34801e2e:	0f 84 11 00 00 00    	je     34801e45 <DoStringSort+0xc5>
    34801e34:	bf b2 39 81 34       	mov    $0x348139b2,%edi
    34801e39:	e8 d2 50 00 00       	callq  34806f10 <ReportError>
    34801e3e:	31 c0                	xor    %eax,%eax
    34801e40:	e8 7b 51 00 00       	callq  34806fc0 <ErrorExit>
    34801e45:	0f b7 35 04 6c b1 00 	movzwl 0xb16c04(%rip),%esi        # 35318a50 <global_strsortstruct+0x18>
    34801e4c:	48 8b 15 05 6c b1 00 	mov    0xb16c05(%rip),%rdx        # 35318a58 <global_strsortstruct+0x20>
    34801e53:	4c 89 e7             	mov    %r12,%rdi
    34801e56:	e8 e5 00 00 00       	callq  34801f40 <DoStringSortIteration>
    34801e5b:	48 3b 05 fe 6b b1 00 	cmp    0xb16bfe(%rip),%rax        # 35318a60 <global_min_ticks>
    34801e62:	0f 86 88 ff ff ff    	jbe    34801df0 <DoStringSort+0x70>
    34801e68:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34801e6c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34801e72:	31 db                	xor    %ebx,%ebx
    34801e74:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34801e7b:	00 00 00 00 00 
    34801e80:	0f b7 35 c9 6b b1 00 	movzwl 0xb16bc9(%rip),%esi        # 35318a50 <global_strsortstruct+0x18>
    34801e87:	48 8b 15 ca 6b b1 00 	mov    0xb16bca(%rip),%rdx        # 35318a58 <global_strsortstruct+0x20>
    34801e8e:	4c 89 e7             	mov    %r12,%rdi
    34801e91:	e8 aa 00 00 00       	callq  34801f40 <DoStringSortIteration>
    34801e96:	48 01 c3             	add    %rax,%rbx
    34801e99:	0f b7 05 b0 6b b1 00 	movzwl 0xb16bb0(%rip),%eax        # 35318a50 <global_strsortstruct+0x18>
    34801ea0:	0f 57 c0             	xorps  %xmm0,%xmm0
    34801ea3:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    34801ea7:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34801ead:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    34801eb1:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    34801eb7:	48 89 df             	mov    %rbx,%rdi
    34801eba:	e8 31 51 00 00       	callq  34806ff0 <TicksToSecs>
    34801ebf:	48 3b 05 7a 6b b1 00 	cmp    0xb16b7a(%rip),%rax        # 35318a40 <global_strsortstruct+0x8>
    34801ec6:	0f 82 b4 ff ff ff    	jb     34801e80 <DoStringSort+0x100>
    34801ecc:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34801ed1:	4c 89 e7             	mov    %r12,%rdi
    34801ed4:	e8 07 4f 00 00       	callq  34806de0 <FreeMemory>
    34801ed9:	48 89 df             	mov    %rbx,%rdi
    34801edc:	e8 2f 51 00 00       	callq  34807010 <TicksToFracSecs>
    34801ee1:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34801ee7:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34801eeb:	f2 0f 11 0d 55 6b b1 	movsd  %xmm1,0xb16b55(%rip)        # 35318a48 <global_strsortstruct+0x10>
    34801ef2:	00 
    34801ef3:	48 89 df             	mov    %rbx,%rdi
    34801ef6:	e8 15 51 00 00       	callq  34807010 <TicksToFracSecs>
    34801efb:	f2 0f 5e 44 24 08    	divsd  0x8(%rsp),%xmm0
    34801f01:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    34801f06:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34801f0b:	b0 01                	mov    $0x1,%al
    34801f0d:	48 89 df             	mov    %rbx,%rdi
    34801f10:	e8 6b a3 00 00       	callq  3480c280 <sprintf>
    34801f15:	48 89 df             	mov    %rbx,%rdi
    34801f18:	e8 a3 a9 00 00       	callq  3480c8c0 <puts>
    34801f1d:	83 3d 14 6b b1 00 00 	cmpl   $0x0,0xb16b14(%rip)        # 35318a38 <global_strsortstruct>
    34801f24:	0f 85 0a 00 00 00    	jne    34801f34 <DoStringSort+0x1b4>
    34801f2a:	c7 05 04 6b b1 00 01 	movl   $0x1,0xb16b04(%rip)        # 35318a38 <global_strsortstruct>
    34801f31:	00 00 00 
    34801f34:	48 83 c4 58          	add    $0x58,%rsp
    34801f38:	5b                   	pop    %rbx
    34801f39:	41 5c                	pop    %r12
    34801f3b:	c3                   	retq   
    34801f3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034801f40 <DoStringSortIteration>:
    34801f40:	41 54                	push   %r12
    34801f42:	53                   	push   %rbx
    34801f43:	48 83 ec 48          	sub    $0x48,%rsp
    34801f47:	48 89 d0             	mov    %rdx,%rax
    34801f4a:	89 f3                	mov    %esi,%ebx
    34801f4c:	49 89 fc             	mov    %rdi,%r12
    34801f4f:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
    34801f54:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    34801f59:	48 89 c1             	mov    %rax,%rcx
    34801f5c:	e8 ef 27 00 00       	callq  34804750 <LoadStringArray>
    34801f61:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    34801f66:	31 c0                	xor    %eax,%eax
    34801f68:	e8 63 50 00 00       	callq  34806fd0 <StartStopwatch>
    34801f6d:	89 d9                	mov    %ebx,%ecx
    34801f6f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    34801f74:	85 c9                	test   %ecx,%ecx
    34801f76:	0f 84 63 00 00 00    	je     34801fdf <DoStringSortIteration+0x9f>
    34801f7c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    34801f81:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    34801f85:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    34801f8a:	48 83 44 24 10 64    	addq   $0x64,0x10(%rsp)
    34801f90:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34801f95:	48 8d 04 c5 00 00 00 	lea    0x0(,%rax,8),%rax
    34801f9c:	00 
    34801f9d:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    34801fa2:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34801fa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34801fae:	00 00 
    34801fb0:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
    34801fb4:	48 89 df             	mov    %rbx,%rdi
    34801fb7:	4c 89 e6             	mov    %r12,%rsi
    34801fba:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    34801fbf:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34801fc4:	e8 07 2a 00 00       	callq  348049d0 <StrHeapSort>
    34801fc9:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    34801fcd:	4c 03 64 24 10       	add    0x10(%rsp),%r12
    34801fd2:	48 03 5c 24 20       	add    0x20(%rsp),%rbx
    34801fd7:	ff c9                	dec    %ecx
    34801fd9:	0f 85 d1 ff ff ff    	jne    34801fb0 <DoStringSortIteration+0x70>
    34801fdf:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    34801fe4:	e8 f7 4f 00 00       	callq  34806fe0 <StopStopwatch>
    34801fe9:	48 89 c3             	mov    %rax,%rbx
    34801fec:	48 8d 74 24 44       	lea    0x44(%rsp),%rsi
    34801ff1:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34801ff6:	e8 e5 4d 00 00       	callq  34806de0 <FreeMemory>
    34801ffb:	48 89 d8             	mov    %rbx,%rax
    34801ffe:	48 83 c4 48          	add    $0x48,%rsp
    34802002:	5b                   	pop    %rbx
    34802003:	41 5c                	pop    %r12
    34802005:	c3                   	retq   
    34802006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480200d:	00 00 00 

0000000034802010 <DoBitops>:
    34802010:	41 54                	push   %r12
    34802012:	53                   	push   %rbx
    34802013:	48 83 ec 78          	sub    $0x78,%rsp
    34802017:	8b 1d 73 64 b1 00    	mov    0xb16473(%rip),%ebx        # 35318490 <global_bitopstruct>
    3480201d:	48 8b 3d 8c 64 b1 00 	mov    0xb1648c(%rip),%rdi        # 353184b0 <global_bitopstruct+0x20>
    34802024:	48 c1 e7 03          	shl    $0x3,%rdi
    34802028:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    3480202d:	e8 8e 4c 00 00       	callq  34806cc0 <AllocateMemory>
    34802032:	49 89 c4             	mov    %rax,%r12
    34802035:	83 fb 00             	cmp    $0x0,%ebx
    34802038:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    3480203c:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    34802041:	0f 84 62 00 00 00    	je     348020a9 <DoBitops+0x99>
    34802047:	85 f6                	test   %esi,%esi
    34802049:	0f 84 11 00 00 00    	je     34802060 <DoBitops+0x50>
    3480204f:	bf c2 39 81 34       	mov    $0x348139c2,%edi
    34802054:	e8 b7 4e 00 00       	callq  34806f10 <ReportError>
    34802059:	31 c0                	xor    %eax,%eax
    3480205b:	e8 60 4f 00 00       	callq  34806fc0 <ErrorExit>
    34802060:	48 8b 3d 41 64 b1 00 	mov    0xb16441(%rip),%rdi        # 353184a8 <global_bitopstruct+0x18>
    34802067:	48 c1 e7 04          	shl    $0x4,%rdi
    3480206b:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802070:	e8 4b 4c 00 00       	callq  34806cc0 <AllocateMemory>
    34802075:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480207a:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    3480207e:	85 f6                	test   %esi,%esi
    34802080:	0f 84 e0 00 00 00    	je     34802166 <DoBitops+0x156>
    34802086:	bf c2 39 81 34       	mov    $0x348139c2,%edi
    3480208b:	e8 80 4e 00 00       	callq  34806f10 <ReportError>
    34802090:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802095:	4c 89 e7             	mov    %r12,%rdi
    34802098:	e8 43 4d 00 00       	callq  34806de0 <FreeMemory>
    3480209d:	31 c0                	xor    %eax,%eax
    3480209f:	e8 1c 4f 00 00       	callq  34806fc0 <ErrorExit>
    348020a4:	e9 bd 00 00 00       	jmpq   34802166 <DoBitops+0x156>
    348020a9:	85 f6                	test   %esi,%esi
    348020ab:	0f 84 11 00 00 00    	je     348020c2 <DoBitops+0xb2>
    348020b1:	bf c2 39 81 34       	mov    $0x348139c2,%edi
    348020b6:	e8 55 4e 00 00       	callq  34806f10 <ReportError>
    348020bb:	31 c0                	xor    %eax,%eax
    348020bd:	e8 fe 4e 00 00       	callq  34806fc0 <ErrorExit>
    348020c2:	bf 1e 00 00 00       	mov    $0x1e,%edi
    348020c7:	4c 8d 64 24 0c       	lea    0xc(%rsp),%r12
    348020cc:	e9 25 00 00 00       	jmpq   348020f6 <DoBitops+0xe6>
    348020d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348020d8:	0f 1f 84 00 00 00 00 
    348020df:	00 
    348020e0:	48 89 df             	mov    %rbx,%rdi
    348020e3:	4c 89 e6             	mov    %r12,%rsi
    348020e6:	e8 f5 4c 00 00       	callq  34806de0 <FreeMemory>
    348020eb:	48 8b 3d b6 63 b1 00 	mov    0xb163b6(%rip),%rdi        # 353184a8 <global_bitopstruct+0x18>
    348020f2:	48 83 c7 64          	add    $0x64,%rdi
    348020f6:	48 89 3d ab 63 b1 00 	mov    %rdi,0xb163ab(%rip)        # 353184a8 <global_bitopstruct+0x18>
    348020fd:	48 c1 e7 04          	shl    $0x4,%rdi
    34802101:	4c 89 e6             	mov    %r12,%rsi
    34802104:	e8 b7 4b 00 00       	callq  34806cc0 <AllocateMemory>
    34802109:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480210e:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802112:	85 f6                	test   %esi,%esi
    34802114:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    34802119:	0f 84 1c 00 00 00    	je     3480213b <DoBitops+0x12b>
    3480211f:	bf c2 39 81 34       	mov    $0x348139c2,%edi
    34802124:	e8 e7 4d 00 00       	callq  34806f10 <ReportError>
    34802129:	48 89 df             	mov    %rbx,%rdi
    3480212c:	4c 89 e6             	mov    %r12,%rsi
    3480212f:	e8 ac 4c 00 00       	callq  34806de0 <FreeMemory>
    34802134:	31 c0                	xor    %eax,%eax
    34802136:	e8 85 4e 00 00       	callq  34806fc0 <ErrorExit>
    3480213b:	48 8b 15 66 63 b1 00 	mov    0xb16366(%rip),%rdx        # 353184a8 <global_bitopstruct+0x18>
    34802142:	48 89 df             	mov    %rbx,%rdi
    34802145:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    3480214a:	48 89 de             	mov    %rbx,%rsi
    3480214d:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
    34802152:	e8 09 01 00 00       	callq  34802260 <DoBitfieldIteration>
    34802157:	48 98                	cltq   
    34802159:	48 3b 05 00 69 b1 00 	cmp    0xb16900(%rip),%rax        # 35318a60 <global_min_ticks>
    34802160:	0f 86 7a ff ff ff    	jbe    348020e0 <DoBitops+0xd0>
    34802166:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480216a:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    34802170:	45 31 e4             	xor    %r12d,%r12d
    34802173:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    34802178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480217f:	00 
    34802180:	48 8b 15 21 63 b1 00 	mov    0xb16321(%rip),%rdx        # 353184a8 <global_bitopstruct+0x18>
    34802187:	48 89 df             	mov    %rbx,%rdi
    3480218a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3480218f:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
    34802194:	e8 c7 00 00 00       	callq  34802260 <DoBitfieldIteration>
    34802199:	49 01 c4             	add    %rax,%r12
    3480219c:	f3 0f 7e 44 24 28    	movq   0x28(%rsp),%xmm0
    348021a2:	66 0f 62 05 46 16 01 	punpckldq 0x11646(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    348021a9:	00 
    348021aa:	66 0f 5c 05 4e 16 01 	subpd  0x1164e(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    348021b1:	00 
    348021b2:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    348021b7:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    348021bb:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    348021c1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    348021c5:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    348021cb:	4c 89 e7             	mov    %r12,%rdi
    348021ce:	e8 1d 4e 00 00       	callq  34806ff0 <TicksToSecs>
    348021d3:	48 3b 05 be 62 b1 00 	cmp    0xb162be(%rip),%rax        # 35318498 <global_bitopstruct+0x8>
    348021da:	0f 82 a0 ff ff ff    	jb     34802180 <DoBitops+0x170>
    348021e0:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    348021e5:	48 89 df             	mov    %rbx,%rdi
    348021e8:	48 89 f3             	mov    %rsi,%rbx
    348021eb:	e8 f0 4b 00 00       	callq  34806de0 <FreeMemory>
    348021f0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    348021f5:	48 89 de             	mov    %rbx,%rsi
    348021f8:	e8 e3 4b 00 00       	callq  34806de0 <FreeMemory>
    348021fd:	4c 89 e7             	mov    %r12,%rdi
    34802200:	e8 0b 4e 00 00       	callq  34807010 <TicksToFracSecs>
    34802205:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    3480220b:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    3480220f:	f2 0f 11 0d 89 62 b1 	movsd  %xmm1,0xb16289(%rip)        # 353184a0 <global_bitopstruct+0x10>
    34802216:	00 
    34802217:	4c 89 e7             	mov    %r12,%rdi
    3480221a:	e8 f1 4d 00 00       	callq  34807010 <TicksToFracSecs>
    3480221f:	f2 0f 5e 44 24 18    	divsd  0x18(%rsp),%xmm0
    34802225:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
    3480222a:	be ac 39 81 34       	mov    $0x348139ac,%esi
    3480222f:	b0 01                	mov    $0x1,%al
    34802231:	48 89 df             	mov    %rbx,%rdi
    34802234:	e8 47 a0 00 00       	callq  3480c280 <sprintf>
    34802239:	48 89 df             	mov    %rbx,%rdi
    3480223c:	e8 7f a6 00 00       	callq  3480c8c0 <puts>
    34802241:	83 3d 48 62 b1 00 00 	cmpl   $0x0,0xb16248(%rip)        # 35318490 <global_bitopstruct>
    34802248:	0f 85 0a 00 00 00    	jne    34802258 <DoBitops+0x248>
    3480224e:	c7 05 38 62 b1 00 01 	movl   $0x1,0xb16238(%rip)        # 35318490 <global_bitopstruct>
    34802255:	00 00 00 
    34802258:	48 83 c4 78          	add    $0x78,%rsp
    3480225c:	5b                   	pop    %rbx
    3480225d:	41 5c                	pop    %r12
    3480225f:	c3                   	retq   

0000000034802260 <DoBitfieldIteration>:
    34802260:	41 54                	push   %r12
    34802262:	53                   	push   %rbx
    34802263:	48 83 ec 28          	sub    $0x28,%rsp
    34802267:	49 89 d4             	mov    %rdx,%r12
    3480226a:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    3480226f:	48 89 fb             	mov    %rdi,%rbx
    34802272:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34802277:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    3480227e:	bf 0d 00 00 00       	mov    $0xd,%edi
    34802283:	e8 88 ef ff ff       	callq  34801210 <randnum>
    34802288:	48 83 3d 20 62 b1 00 	cmpq   $0x0,0xb16220(%rip)        # 353184b0 <global_bitopstruct+0x20>
    3480228f:	00 
    34802290:	0f 84 2e 00 00 00    	je     348022c4 <DoBitfieldIteration+0x64>
    34802296:	31 c0                	xor    %eax,%eax
    34802298:	48 b9 55 55 55 55 55 	movabs $0x5555555555555555,%rcx
    3480229f:	55 55 55 
    348022a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348022a9:	1f 84 00 00 00 00 00 
    348022b0:	48 89 0c c3          	mov    %rcx,(%rbx,%rax,8)
    348022b4:	48 ff c0             	inc    %rax
    348022b7:	48 3b 05 f2 61 b1 00 	cmp    0xb161f2(%rip),%rax        # 353184b0 <global_bitopstruct+0x20>
    348022be:	0f 82 ec ff ff ff    	jb     348022b0 <DoBitfieldIteration+0x50>
    348022c4:	bf 0d 00 00 00       	mov    $0xd,%edi
    348022c9:	e8 42 ef ff ff       	callq  34801210 <randnum>
    348022ce:	4d 85 e4             	test   %r12,%r12
    348022d1:	0f 8e 3a 01 00 00    	jle    34802411 <DoBitfieldIteration+0x1b1>
    348022d7:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    348022dc:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    348022e1:	48 8d 58 08          	lea    0x8(%rax),%rbx
    348022e5:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    348022ea:	45 31 e4             	xor    %r12d,%r12d
    348022ed:	0f 1f 00             	nopl   (%rax)
    348022f0:	bf fc ff 03 00       	mov    $0x3fffc,%edi
    348022f5:	e8 96 ef ff ff       	callq  34801290 <abs_randwc>
    348022fa:	89 c1                	mov    %eax,%ecx
    348022fc:	48 89 4b f8          	mov    %rcx,-0x8(%rbx)
    34802300:	bf fc ff 03 00       	mov    $0x3fffc,%edi
    34802305:	29 c7                	sub    %eax,%edi
    34802307:	e8 84 ef ff ff       	callq  34801290 <abs_randwc>
    3480230c:	89 c0                	mov    %eax,%eax
    3480230e:	48 89 03             	mov    %rax,(%rbx)
    34802311:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34802316:	48 01 01             	add    %rax,(%rcx)
    34802319:	49 ff c4             	inc    %r12
    3480231c:	48 83 c3 10          	add    $0x10,%rbx
    34802320:	4c 39 64 24 18       	cmp    %r12,0x18(%rsp)
    34802325:	0f 85 c5 ff ff ff    	jne    348022f0 <DoBitfieldIteration+0x90>
    3480232b:	31 c0                	xor    %eax,%eax
    3480232d:	e8 9e 4c 00 00       	callq  34806fd0 <StartStopwatch>
    34802332:	48 89 c7             	mov    %rax,%rdi
    34802335:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    3480233b:	0f 8e da 00 00 00    	jle    3480241b <DoBitfieldIteration+0x1bb>
    34802341:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    34802346:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    3480234b:	49 83 c4 08          	add    $0x8,%r12
    3480234f:	31 db                	xor    %ebx,%ebx
    34802351:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34802358:	0f 1f 84 00 00 00 00 
    3480235f:	00 
    34802360:	48 89 d8             	mov    %rbx,%rax
    34802363:	48 b9 56 55 55 55 55 	movabs $0x5555555555555556,%rcx
    3480236a:	55 55 55 
    3480236d:	48 f7 e9             	imul   %rcx
    34802370:	48 89 d0             	mov    %rdx,%rax
    34802373:	48 c1 e8 3f          	shr    $0x3f,%rax
    34802377:	48 01 d0             	add    %rdx,%rax
    3480237a:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
    3480237e:	48 89 d8             	mov    %rbx,%rax
    34802381:	48 29 c8             	sub    %rcx,%rax
    34802384:	48 83 f8 02          	cmp    $0x2,%rax
    34802388:	0f 84 32 00 00 00    	je     348023c0 <DoBitfieldIteration+0x160>
    3480238e:	48 83 f8 01          	cmp    $0x1,%rax
    34802392:	0f 84 48 00 00 00    	je     348023e0 <DoBitfieldIteration+0x180>
    34802398:	48 85 c0             	test   %rax,%rax
    3480239b:	0f 85 54 00 00 00    	jne    348023f5 <DoBitfieldIteration+0x195>
    348023a1:	49 8b 74 24 f8       	mov    -0x8(%r12),%rsi
    348023a6:	49 8b 14 24          	mov    (%r12),%rdx
    348023aa:	b9 01 00 00 00       	mov    $0x1,%ecx
    348023af:	e9 37 00 00 00       	jmpq   348023eb <DoBitfieldIteration+0x18b>
    348023b4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348023bb:	00 00 00 00 00 
    348023c0:	49 8b 74 24 f8       	mov    -0x8(%r12),%rsi
    348023c5:	49 8b 14 24          	mov    (%r12),%rdx
    348023c9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348023ce:	e8 ad 2a 00 00       	callq  34804e80 <FlipBitRun>
    348023d3:	e9 1d 00 00 00       	jmpq   348023f5 <DoBitfieldIteration+0x195>
    348023d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348023df:	00 
    348023e0:	49 8b 74 24 f8       	mov    -0x8(%r12),%rsi
    348023e5:	49 8b 14 24          	mov    (%r12),%rdx
    348023e9:	31 c9                	xor    %ecx,%ecx
    348023eb:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348023f0:	e8 2b 2a 00 00       	callq  34804e20 <ToggleBitRun>
    348023f5:	48 ff c3             	inc    %rbx
    348023f8:	49 83 c4 10          	add    $0x10,%r12
    348023fc:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
    34802401:	0f 85 59 ff ff ff    	jne    34802360 <DoBitfieldIteration+0x100>
    34802407:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480240c:	e9 0a 00 00 00       	jmpq   3480241b <DoBitfieldIteration+0x1bb>
    34802411:	31 c0                	xor    %eax,%eax
    34802413:	e8 b8 4b 00 00       	callq  34806fd0 <StartStopwatch>
    34802418:	48 89 c7             	mov    %rax,%rdi
    3480241b:	48 83 c4 28          	add    $0x28,%rsp
    3480241f:	5b                   	pop    %rbx
    34802420:	41 5c                	pop    %r12
    34802422:	e9 b9 4b 00 00       	jmpq   34806fe0 <StopStopwatch>
    34802427:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480242e:	00 00 

0000000034802430 <DoEmFloat>:
    34802430:	41 54                	push   %r12
    34802432:	53                   	push   %rbx
    34802433:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    3480243a:	48 8b 05 df 5b b1 00 	mov    0xb15bdf(%rip),%rax        # 35318020 <global_emfloatstruct+0x10>
    34802441:	48 c1 e0 02          	shl    $0x2,%rax
    34802445:	48 8d 3c 40          	lea    (%rax,%rax,2),%rdi
    34802449:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    3480244e:	e8 6d 48 00 00       	callq  34806cc0 <AllocateMemory>
    34802453:	48 89 c3             	mov    %rax,%rbx
    34802456:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    3480245a:	85 f6                	test   %esi,%esi
    3480245c:	0f 84 11 00 00 00    	je     34802473 <DoEmFloat+0x43>
    34802462:	bf d0 39 81 34       	mov    $0x348139d0,%edi
    34802467:	e8 a4 4a 00 00       	callq  34806f10 <ReportError>
    3480246c:	31 c0                	xor    %eax,%eax
    3480246e:	e8 4d 4b 00 00       	callq  34806fc0 <ErrorExit>
    34802473:	48 8b 05 a6 5b b1 00 	mov    0xb15ba6(%rip),%rax        # 35318020 <global_emfloatstruct+0x10>
    3480247a:	48 c1 e0 02          	shl    $0x2,%rax
    3480247e:	48 8d 3c 40          	lea    (%rax,%rax,2),%rdi
    34802482:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802487:	e8 34 48 00 00       	callq  34806cc0 <AllocateMemory>
    3480248c:	49 89 c4             	mov    %rax,%r12
    3480248f:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802493:	85 f6                	test   %esi,%esi
    34802495:	0f 84 1e 00 00 00    	je     348024b9 <DoEmFloat+0x89>
    3480249b:	bf d0 39 81 34       	mov    $0x348139d0,%edi
    348024a0:	e8 6b 4a 00 00       	callq  34806f10 <ReportError>
    348024a5:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    348024aa:	48 89 df             	mov    %rbx,%rdi
    348024ad:	e8 2e 49 00 00       	callq  34806de0 <FreeMemory>
    348024b2:	31 c0                	xor    %eax,%eax
    348024b4:	e8 07 4b 00 00       	callq  34806fc0 <ErrorExit>
    348024b9:	48 8b 05 60 5b b1 00 	mov    0xb15b60(%rip),%rax        # 35318020 <global_emfloatstruct+0x10>
    348024c0:	48 c1 e0 02          	shl    $0x2,%rax
    348024c4:	48 8d 3c 40          	lea    (%rax,%rax,2),%rdi
    348024c8:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    348024cd:	e8 ee 47 00 00       	callq  34806cc0 <AllocateMemory>
    348024d2:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    348024d6:	85 f6                	test   %esi,%esi
    348024d8:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    348024dd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    348024e2:	0f 84 38 00 00 00    	je     34802520 <DoEmFloat+0xf0>
    348024e8:	bf d0 39 81 34       	mov    $0x348139d0,%edi
    348024ed:	e8 1e 4a 00 00       	callq  34806f10 <ReportError>
    348024f2:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
    348024f7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    348024fc:	48 89 de             	mov    %rbx,%rsi
    348024ff:	e8 dc 48 00 00       	callq  34806de0 <FreeMemory>
    34802504:	4c 89 e7             	mov    %r12,%rdi
    34802507:	48 89 de             	mov    %rbx,%rsi
    3480250a:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    3480250f:	e8 cc 48 00 00       	callq  34806de0 <FreeMemory>
    34802514:	31 c0                	xor    %eax,%eax
    34802516:	e8 a5 4a 00 00       	callq  34806fc0 <ErrorExit>
    3480251b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    34802520:	48 8b 0d f9 5a b1 00 	mov    0xb15af9(%rip),%rcx        # 35318020 <global_emfloatstruct+0x10>
    34802527:	48 89 df             	mov    %rbx,%rdi
    3480252a:	4c 89 e6             	mov    %r12,%rsi
    3480252d:	48 89 c2             	mov    %rax,%rdx
    34802530:	e8 eb db ff ff       	callq  34800120 <SetupCPUEmFloatArrays>
    34802535:	83 3d d4 5a b1 00 00 	cmpl   $0x0,0xb15ad4(%rip)        # 35318010 <global_emfloatstruct>
    3480253c:	0f 85 57 00 00 00    	jne    34802599 <DoEmFloat+0x169>
    34802542:	48 c7 05 db 5a b1 00 	movq   $0x0,0xb15adb(%rip)        # 35318028 <global_emfloatstruct+0x18>
    34802549:	00 00 00 00 
    3480254d:	bb 01 00 00 00       	mov    $0x1,%ebx
    34802552:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34802559:	1f 84 00 00 00 00 00 
    34802560:	48 8b 0d b9 5a b1 00 	mov    0xb15ab9(%rip),%rcx        # 35318020 <global_emfloatstruct+0x10>
    34802567:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480256c:	4c 89 e6             	mov    %r12,%rsi
    3480256f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    34802574:	49 89 d8             	mov    %rbx,%r8
    34802577:	e8 94 e0 ff ff       	callq  34800610 <DoEmFloatIteration>
    3480257c:	48 3b 05 dd 64 b1 00 	cmp    0xb164dd(%rip),%rax        # 35318a60 <global_min_ticks>
    34802583:	0f 87 83 01 00 00    	ja     3480270c <DoEmFloat+0x2dc>
    34802589:	48 01 db             	add    %rbx,%rbx
    3480258c:	48 81 fb 20 a1 07 00 	cmp    $0x7a120,%rbx
    34802593:	0f 82 c7 ff ff ff    	jb     34802560 <DoEmFloat+0x130>
    34802599:	48 8b 1d 88 5a b1 00 	mov    0xb15a88(%rip),%rbx        # 35318028 <global_emfloatstruct+0x18>
    348025a0:	48 85 db             	test   %rbx,%rbx
    348025a3:	0f 85 3b 00 00 00    	jne    348025e4 <DoEmFloat+0x1b4>
    348025a9:	bf e7 39 81 34       	mov    $0x348139e7,%edi
    348025ae:	e8 0d a3 00 00       	callq  3480c8c0 <puts>
    348025b3:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
    348025b8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    348025bd:	48 89 de             	mov    %rbx,%rsi
    348025c0:	e8 1b 48 00 00       	callq  34806de0 <FreeMemory>
    348025c5:	4c 89 e7             	mov    %r12,%rdi
    348025c8:	48 89 de             	mov    %rbx,%rsi
    348025cb:	e8 10 48 00 00       	callq  34806de0 <FreeMemory>
    348025d0:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    348025d5:	48 89 de             	mov    %rbx,%rsi
    348025d8:	e8 03 48 00 00       	callq  34806de0 <FreeMemory>
    348025dd:	31 c0                	xor    %eax,%eax
    348025df:	e8 dc 49 00 00       	callq  34806fc0 <ErrorExit>
    348025e4:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    348025e8:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    348025ee:	31 db                	xor    %ebx,%ebx
    348025f0:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    348025f5:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    348025fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34802600:	48 8b 0d 19 5a b1 00 	mov    0xb15a19(%rip),%rcx        # 35318020 <global_emfloatstruct+0x10>
    34802607:	4c 8b 05 1a 5a b1 00 	mov    0xb15a1a(%rip),%r8        # 35318028 <global_emfloatstruct+0x18>
    3480260e:	4c 89 e7             	mov    %r12,%rdi
    34802611:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    34802616:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480261b:	e8 f0 df ff ff       	callq  34800610 <DoEmFloatIteration>
    34802620:	48 01 c3             	add    %rax,%rbx
    34802623:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    34802629:	f2 0f 58 05 2f 09 01 	addsd  0x1092f(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34802630:	00 
    34802631:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    34802637:	48 89 df             	mov    %rbx,%rdi
    3480263a:	e8 b1 49 00 00       	callq  34806ff0 <TicksToSecs>
    3480263f:	48 3b 05 d2 59 b1 00 	cmp    0xb159d2(%rip),%rax        # 35318018 <global_emfloatstruct+0x8>
    34802646:	0f 82 b4 ff ff ff    	jb     34802600 <DoEmFloat+0x1d0>
    3480264c:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
    34802651:	4c 89 e7             	mov    %r12,%rdi
    34802654:	49 89 c4             	mov    %rax,%r12
    34802657:	4c 89 e6             	mov    %r12,%rsi
    3480265a:	e8 81 47 00 00       	callq  34806de0 <FreeMemory>
    3480265f:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    34802664:	4c 89 e6             	mov    %r12,%rsi
    34802667:	e8 74 47 00 00       	callq  34806de0 <FreeMemory>
    3480266c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    34802671:	4c 89 e6             	mov    %r12,%rsi
    34802674:	e8 67 47 00 00       	callq  34806de0 <FreeMemory>
    34802679:	f3 0f 7e 05 a7 59 b1 	movq   0xb159a7(%rip),%xmm0        # 35318028 <global_emfloatstruct+0x18>
    34802680:	00 
    34802681:	66 0f 62 05 67 11 01 	punpckldq 0x11167(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34802688:	00 
    34802689:	66 0f 5c 05 6f 11 01 	subpd  0x1116f(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34802690:	00 
    34802691:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34802696:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    3480269a:	f2 0f 59 4c 24 18    	mulsd  0x18(%rsp),%xmm1
    348026a0:	66 0f 29 4c 24 20    	movapd %xmm1,0x20(%rsp)
    348026a6:	48 89 df             	mov    %rbx,%rdi
    348026a9:	e8 62 49 00 00       	callq  34807010 <TicksToFracSecs>
    348026ae:	66 0f 28 4c 24 20    	movapd 0x20(%rsp),%xmm1
    348026b4:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    348026b8:	f2 0f 11 0d 70 59 b1 	movsd  %xmm1,0xb15970(%rip)        # 35318030 <global_emfloatstruct+0x20>
    348026bf:	00 
    348026c0:	48 89 df             	mov    %rbx,%rdi
    348026c3:	e8 48 49 00 00       	callq  34807010 <TicksToFracSecs>
    348026c8:	f2 0f 5e 44 24 18    	divsd  0x18(%rsp),%xmm0
    348026ce:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    348026d3:	be ac 39 81 34       	mov    $0x348139ac,%esi
    348026d8:	b0 01                	mov    $0x1,%al
    348026da:	48 89 df             	mov    %rbx,%rdi
    348026dd:	e8 9e 9b 00 00       	callq  3480c280 <sprintf>
    348026e2:	48 89 df             	mov    %rbx,%rdi
    348026e5:	e8 d6 a1 00 00       	callq  3480c8c0 <puts>
    348026ea:	83 3d 1f 59 b1 00 00 	cmpl   $0x0,0xb1591f(%rip)        # 35318010 <global_emfloatstruct>
    348026f1:	0f 85 0a 00 00 00    	jne    34802701 <DoEmFloat+0x2d1>
    348026f7:	c7 05 0f 59 b1 00 01 	movl   $0x1,0xb1590f(%rip)        # 35318010 <global_emfloatstruct>
    348026fe:	00 00 00 
    34802701:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    34802708:	5b                   	pop    %rbx
    34802709:	41 5c                	pop    %r12
    3480270b:	c3                   	retq   
    3480270c:	48 89 1d 15 59 b1 00 	mov    %rbx,0xb15915(%rip)        # 35318028 <global_emfloatstruct+0x18>
    34802713:	48 85 db             	test   %rbx,%rbx
    34802716:	0f 85 c8 fe ff ff    	jne    348025e4 <DoEmFloat+0x1b4>
    3480271c:	e9 88 fe ff ff       	jmpq   348025a9 <DoEmFloat+0x179>
    34802721:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34802728:	0f 1f 84 00 00 00 00 
    3480272f:	00 

0000000034802730 <DoFourier>:
    34802730:	41 54                	push   %r12
    34802732:	53                   	push   %rbx
    34802733:	48 83 ec 68          	sub    $0x68,%rsp
    34802737:	83 3d ca 63 b1 00 00 	cmpl   $0x0,0xb163ca(%rip)        # 35318b08 <global_fourierstruct>
    3480273e:	0f 84 81 00 00 00    	je     348027c5 <DoFourier+0x95>
    34802744:	48 8b 3d cd 63 b1 00 	mov    0xb163cd(%rip),%rdi        # 35318b18 <global_fourierstruct+0x10>
    3480274b:	48 c1 e7 03          	shl    $0x3,%rdi
    3480274f:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802754:	e8 67 45 00 00       	callq  34806cc0 <AllocateMemory>
    34802759:	49 89 c4             	mov    %rax,%r12
    3480275c:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802760:	85 f6                	test   %esi,%esi
    34802762:	0f 84 11 00 00 00    	je     34802779 <DoFourier+0x49>
    34802768:	bf 12 3a 81 34       	mov    $0x34813a12,%edi
    3480276d:	e8 9e 47 00 00       	callq  34806f10 <ReportError>
    34802772:	31 c0                	xor    %eax,%eax
    34802774:	e8 47 48 00 00       	callq  34806fc0 <ErrorExit>
    34802779:	48 8b 3d 98 63 b1 00 	mov    0xb16398(%rip),%rdi        # 35318b18 <global_fourierstruct+0x10>
    34802780:	48 c1 e7 03          	shl    $0x3,%rdi
    34802784:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802789:	e8 32 45 00 00       	callq  34806cc0 <AllocateMemory>
    3480278e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    34802793:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802797:	85 f6                	test   %esi,%esi
    34802799:	0f 84 09 01 00 00    	je     348028a8 <DoFourier+0x178>
    3480279f:	bf 12 3a 81 34       	mov    $0x34813a12,%edi
    348027a4:	e8 67 47 00 00       	callq  34806f10 <ReportError>
    348027a9:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    348027ae:	4c 89 e3             	mov    %r12,%rbx
    348027b1:	4c 89 e7             	mov    %r12,%rdi
    348027b4:	e8 27 46 00 00       	callq  34806de0 <FreeMemory>
    348027b9:	31 c0                	xor    %eax,%eax
    348027bb:	e8 00 48 00 00       	callq  34806fc0 <ErrorExit>
    348027c0:	e9 e6 00 00 00       	jmpq   348028ab <DoFourier+0x17b>
    348027c5:	bf 64 00 00 00       	mov    $0x64,%edi
    348027ca:	4c 8d 64 24 0c       	lea    0xc(%rsp),%r12
    348027cf:	e9 2f 00 00 00       	jmpq   34802803 <DoFourier+0xd3>
    348027d4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348027db:	00 00 00 00 00 
    348027e0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    348027e5:	4c 89 e6             	mov    %r12,%rsi
    348027e8:	e8 f3 45 00 00       	callq  34806de0 <FreeMemory>
    348027ed:	48 89 df             	mov    %rbx,%rdi
    348027f0:	4c 89 e6             	mov    %r12,%rsi
    348027f3:	e8 e8 45 00 00       	callq  34806de0 <FreeMemory>
    348027f8:	48 8b 3d 19 63 b1 00 	mov    0xb16319(%rip),%rdi        # 35318b18 <global_fourierstruct+0x10>
    348027ff:	48 83 c7 32          	add    $0x32,%rdi
    34802803:	48 89 3d 0e 63 b1 00 	mov    %rdi,0xb1630e(%rip)        # 35318b18 <global_fourierstruct+0x10>
    3480280a:	48 c1 e7 03          	shl    $0x3,%rdi
    3480280e:	4c 89 e6             	mov    %r12,%rsi
    34802811:	e8 aa 44 00 00       	callq  34806cc0 <AllocateMemory>
    34802816:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480281b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    3480281f:	85 f6                	test   %esi,%esi
    34802821:	0f 84 11 00 00 00    	je     34802838 <DoFourier+0x108>
    34802827:	bf 12 3a 81 34       	mov    $0x34813a12,%edi
    3480282c:	e8 df 46 00 00       	callq  34806f10 <ReportError>
    34802831:	31 c0                	xor    %eax,%eax
    34802833:	e8 88 47 00 00       	callq  34806fc0 <ErrorExit>
    34802838:	48 8b 3d d9 62 b1 00 	mov    0xb162d9(%rip),%rdi        # 35318b18 <global_fourierstruct+0x10>
    3480283f:	48 c1 e7 03          	shl    $0x3,%rdi
    34802843:	4c 89 e6             	mov    %r12,%rsi
    34802846:	e8 75 44 00 00       	callq  34806cc0 <AllocateMemory>
    3480284b:	48 89 c3             	mov    %rax,%rbx
    3480284e:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802852:	85 f6                	test   %esi,%esi
    34802854:	0f 84 1e 00 00 00    	je     34802878 <DoFourier+0x148>
    3480285a:	bf 12 3a 81 34       	mov    $0x34813a12,%edi
    3480285f:	e8 ac 46 00 00       	callq  34806f10 <ReportError>
    34802864:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802869:	4c 89 e6             	mov    %r12,%rsi
    3480286c:	e8 6f 45 00 00       	callq  34806de0 <FreeMemory>
    34802871:	31 c0                	xor    %eax,%eax
    34802873:	e8 48 47 00 00       	callq  34806fc0 <ErrorExit>
    34802878:	48 8b 15 99 62 b1 00 	mov    0xb16299(%rip),%rdx        # 35318b18 <global_fourierstruct+0x10>
    3480287f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802884:	48 89 de             	mov    %rbx,%rsi
    34802887:	e8 24 01 00 00       	callq  348029b0 <DoFPUTransIteration>
    3480288c:	48 3b 05 cd 61 b1 00 	cmp    0xb161cd(%rip),%rax        # 35318a60 <global_min_ticks>
    34802893:	0f 86 47 ff ff ff    	jbe    348027e0 <DoFourier+0xb0>
    34802899:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    3480289e:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    348028a3:	e9 03 00 00 00       	jmpq   348028ab <DoFourier+0x17b>
    348028a8:	4c 89 e3             	mov    %r12,%rbx
    348028ab:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    348028af:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    348028b5:	45 31 e4             	xor    %r12d,%r12d
    348028b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348028bf:	00 
    348028c0:	48 8b 15 51 62 b1 00 	mov    0xb16251(%rip),%rdx        # 35318b18 <global_fourierstruct+0x10>
    348028c7:	48 89 df             	mov    %rbx,%rdi
    348028ca:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    348028cf:	e8 dc 00 00 00       	callq  348029b0 <DoFPUTransIteration>
    348028d4:	49 01 c4             	add    %rax,%r12
    348028d7:	f3 0f 7e 05 39 62 b1 	movq   0xb16239(%rip),%xmm0        # 35318b18 <global_fourierstruct+0x10>
    348028de:	00 
    348028df:	66 0f 62 05 09 0f 01 	punpckldq 0x10f09(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    348028e6:	00 
    348028e7:	66 0f 5c 05 11 0f 01 	subpd  0x10f11(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    348028ee:	00 
    348028ef:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    348028f4:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    348028f8:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    348028fc:	f2 0f 58 0d 7c 0e 01 	addsd  0x10e7c(%rip),%xmm1        # 34813780 <DoEmFloatIteration.jtable+0x860>
    34802903:	00 
    34802904:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    3480290a:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480290e:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    34802914:	4c 89 e7             	mov    %r12,%rdi
    34802917:	e8 d4 46 00 00       	callq  34806ff0 <TicksToSecs>
    3480291c:	48 3b 05 ed 61 b1 00 	cmp    0xb161ed(%rip),%rax        # 35318b10 <global_fourierstruct+0x8>
    34802923:	0f 82 97 ff ff ff    	jb     348028c0 <DoFourier+0x190>
    34802929:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    3480292e:	48 89 df             	mov    %rbx,%rdi
    34802931:	48 89 f3             	mov    %rsi,%rbx
    34802934:	e8 a7 44 00 00       	callq  34806de0 <FreeMemory>
    34802939:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    3480293e:	48 89 de             	mov    %rbx,%rsi
    34802941:	e8 9a 44 00 00       	callq  34806de0 <FreeMemory>
    34802946:	4c 89 e7             	mov    %r12,%rdi
    34802949:	e8 c2 46 00 00       	callq  34807010 <TicksToFracSecs>
    3480294e:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    34802954:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34802958:	f2 0f 11 0d c0 61 b1 	movsd  %xmm1,0xb161c0(%rip)        # 35318b20 <global_fourierstruct+0x18>
    3480295f:	00 
    34802960:	4c 89 e7             	mov    %r12,%rdi
    34802963:	e8 a8 46 00 00       	callq  34807010 <TicksToFracSecs>
    34802968:	f2 0f 5e 44 24 10    	divsd  0x10(%rsp),%xmm0
    3480296e:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    34802973:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34802978:	b0 01                	mov    $0x1,%al
    3480297a:	48 89 df             	mov    %rbx,%rdi
    3480297d:	e8 fe 98 00 00       	callq  3480c280 <sprintf>
    34802982:	48 89 df             	mov    %rbx,%rdi
    34802985:	e8 36 9f 00 00       	callq  3480c8c0 <puts>
    3480298a:	83 3d 77 61 b1 00 00 	cmpl   $0x0,0xb16177(%rip)        # 35318b08 <global_fourierstruct>
    34802991:	0f 85 0a 00 00 00    	jne    348029a1 <DoFourier+0x271>
    34802997:	c7 05 67 61 b1 00 01 	movl   $0x1,0xb16167(%rip)        # 35318b08 <global_fourierstruct>
    3480299e:	00 00 00 
    348029a1:	48 83 c4 68          	add    $0x68,%rsp
    348029a5:	5b                   	pop    %rbx
    348029a6:	41 5c                	pop    %r12
    348029a8:	c3                   	retq   
    348029a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000348029b0 <DoFPUTransIteration>:
    348029b0:	41 54                	push   %r12
    348029b2:	53                   	push   %rbx
    348029b3:	48 83 ec 28          	sub    $0x28,%rsp
    348029b7:	48 89 14 24          	mov    %rdx,(%rsp)
    348029bb:	49 89 f4             	mov    %rsi,%r12
    348029be:	48 89 fb             	mov    %rdi,%rbx
    348029c1:	31 c0                	xor    %eax,%eax
    348029c3:	e8 08 46 00 00       	callq  34806fd0 <StartStopwatch>
    348029c8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348029cd:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    348029d1:	31 ff                	xor    %edi,%edi
    348029d3:	e8 d8 24 00 00       	callq  34804eb0 <TrapezoidIntegrate>
    348029d8:	48 8b 04 24          	mov    (%rsp),%rax
    348029dc:	f2 0f 59 05 a4 0d 01 	mulsd  0x10da4(%rip),%xmm0        # 34813788 <DoEmFloatIteration.jtable+0x868>
    348029e3:	00 
    348029e4:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    348029e9:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
    348029ed:	48 83 f8 02          	cmp    $0x2,%rax
    348029f1:	0f 82 84 00 00 00    	jb     34802a7b <DoFPUTransIteration+0xcb>
    348029f7:	bb 01 00 00 00       	mov    $0x1,%ebx
    348029fc:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    34802a01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34802a08:	0f 1f 84 00 00 00 00 
    34802a0f:	00 
    34802a10:	66 48 0f 6e cb       	movq   %rbx,%xmm1
    34802a15:	66 0f 62 0d d3 0d 01 	punpckldq 0x10dd3(%rip),%xmm1        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34802a1c:	00 
    34802a1d:	66 0f 5c 0d db 0d 01 	subpd  0x10ddb(%rip),%xmm1        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34802a24:	00 
    34802a25:	66 0f 70 c1 4e       	pshufd $0x4e,%xmm1,%xmm0
    34802a2a:	66 0f 58 c1          	addpd  %xmm1,%xmm0
    34802a2e:	f2 0f 59 05 5a 0d 01 	mulsd  0x10d5a(%rip),%xmm0        # 34813790 <DoEmFloatIteration.jtable+0x870>
    34802a35:	00 
    34802a36:	66 0f 29 04 24       	movapd %xmm0,(%rsp)
    34802a3b:	bf 01 00 00 00       	mov    $0x1,%edi
    34802a40:	49 89 c4             	mov    %rax,%r12
    34802a43:	e8 68 24 00 00       	callq  34804eb0 <TrapezoidIntegrate>
    34802a48:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    34802a4d:	f2 0f 11 04 d8       	movsd  %xmm0,(%rax,%rbx,8)
    34802a52:	bf 02 00 00 00       	mov    $0x2,%edi
    34802a57:	66 0f 28 04 24       	movapd (%rsp),%xmm0
    34802a5c:	e8 4f 24 00 00       	callq  34804eb0 <TrapezoidIntegrate>
    34802a61:	4c 89 e0             	mov    %r12,%rax
    34802a64:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    34802a69:	f2 41 0f 11 04 dc    	movsd  %xmm0,(%r12,%rbx,8)
    34802a6f:	48 ff c3             	inc    %rbx
    34802a72:	48 39 d8             	cmp    %rbx,%rax
    34802a75:	0f 85 95 ff ff ff    	jne    34802a10 <DoFPUTransIteration+0x60>
    34802a7b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802a80:	48 83 c4 28          	add    $0x28,%rsp
    34802a84:	5b                   	pop    %rbx
    34802a85:	41 5c                	pop    %r12
    34802a87:	e9 54 45 00 00       	jmpq   34806fe0 <StopStopwatch>
    34802a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034802a90 <DoAssign>:
    34802a90:	41 54                	push   %r12
    34802a92:	53                   	push   %rbx
    34802a93:	48 83 ec 68          	sub    $0x68,%rsp
    34802a97:	83 3d 02 60 b1 00 00 	cmpl   $0x0,0xb16002(%rip)        # 35318aa0 <global_assignstruct>
    34802a9e:	0f 84 47 00 00 00    	je     34802aeb <DoAssign+0x5b>
    34802aa4:	48 69 3d 01 60 b1 00 	imul   $0x13ec8,0xb16001(%rip),%rdi        # 35318ab0 <global_assignstruct+0x10>
    34802aab:	c8 3e 01 00 
    34802aaf:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34802ab4:	e8 07 42 00 00       	callq  34806cc0 <AllocateMemory>
    34802ab9:	49 89 c4             	mov    %rax,%r12
    34802abc:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34802ac0:	85 f6                	test   %esi,%esi
    34802ac2:	0f 84 aa 00 00 00    	je     34802b72 <DoAssign+0xe2>
    34802ac8:	bf 25 3a 81 34       	mov    $0x34813a25,%edi
    34802acd:	e8 3e 44 00 00       	callq  34806f10 <ReportError>
    34802ad2:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34802ad7:	4c 89 e7             	mov    %r12,%rdi
    34802ada:	e8 01 43 00 00       	callq  34806de0 <FreeMemory>
    34802adf:	31 c0                	xor    %eax,%eax
    34802ae1:	e8 da 44 00 00       	callq  34806fc0 <ErrorExit>
    34802ae6:	e9 87 00 00 00       	jmpq   34802b72 <DoAssign+0xe2>
    34802aeb:	b8 01 00 00 00       	mov    $0x1,%eax
    34802af0:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34802af5:	e9 1b 00 00 00       	jmpq   34802b15 <DoAssign+0x85>
    34802afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34802b00:	4c 89 e7             	mov    %r12,%rdi
    34802b03:	48 89 de             	mov    %rbx,%rsi
    34802b06:	e8 d5 42 00 00       	callq  34806de0 <FreeMemory>
    34802b0b:	48 8b 05 9e 5f b1 00 	mov    0xb15f9e(%rip),%rax        # 35318ab0 <global_assignstruct+0x10>
    34802b12:	48 ff c0             	inc    %rax
    34802b15:	48 89 05 94 5f b1 00 	mov    %rax,0xb15f94(%rip)        # 35318ab0 <global_assignstruct+0x10>
    34802b1c:	48 69 f8 c8 3e 01 00 	imul   $0x13ec8,%rax,%rdi
    34802b23:	48 89 de             	mov    %rbx,%rsi
    34802b26:	e8 95 41 00 00       	callq  34806cc0 <AllocateMemory>
    34802b2b:	49 89 c4             	mov    %rax,%r12
    34802b2e:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34802b32:	85 f6                	test   %esi,%esi
    34802b34:	0f 84 1c 00 00 00    	je     34802b56 <DoAssign+0xc6>
    34802b3a:	bf 25 3a 81 34       	mov    $0x34813a25,%edi
    34802b3f:	e8 cc 43 00 00       	callq  34806f10 <ReportError>
    34802b44:	4c 89 e7             	mov    %r12,%rdi
    34802b47:	48 89 de             	mov    %rbx,%rsi
    34802b4a:	e8 91 42 00 00       	callq  34806de0 <FreeMemory>
    34802b4f:	31 c0                	xor    %eax,%eax
    34802b51:	e8 6a 44 00 00       	callq  34806fc0 <ErrorExit>
    34802b56:	48 8b 35 53 5f b1 00 	mov    0xb15f53(%rip),%rsi        # 35318ab0 <global_assignstruct+0x10>
    34802b5d:	4c 89 e7             	mov    %r12,%rdi
    34802b60:	e8 fb 00 00 00       	callq  34802c60 <DoAssignIteration>
    34802b65:	48 3b 05 f4 5e b1 00 	cmp    0xb15ef4(%rip),%rax        # 35318a60 <global_min_ticks>
    34802b6c:	0f 86 8e ff ff ff    	jbe    34802b00 <DoAssign+0x70>
    34802b72:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34802b76:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34802b7c:	31 db                	xor    %ebx,%ebx
    34802b7e:	66 90                	xchg   %ax,%ax
    34802b80:	48 8b 35 29 5f b1 00 	mov    0xb15f29(%rip),%rsi        # 35318ab0 <global_assignstruct+0x10>
    34802b87:	4c 89 e7             	mov    %r12,%rdi
    34802b8a:	e8 d1 00 00 00       	callq  34802c60 <DoAssignIteration>
    34802b8f:	48 01 c3             	add    %rax,%rbx
    34802b92:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34802b98:	f2 0f 58 05 c0 03 01 	addsd  0x103c0(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34802b9f:	00 
    34802ba0:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34802ba6:	48 89 df             	mov    %rbx,%rdi
    34802ba9:	e8 42 44 00 00       	callq  34806ff0 <TicksToSecs>
    34802bae:	48 3b 05 f3 5e b1 00 	cmp    0xb15ef3(%rip),%rax        # 35318aa8 <global_assignstruct+0x8>
    34802bb5:	0f 82 c5 ff ff ff    	jb     34802b80 <DoAssign+0xf0>
    34802bbb:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34802bc0:	4c 89 e7             	mov    %r12,%rdi
    34802bc3:	e8 18 42 00 00       	callq  34806de0 <FreeMemory>
    34802bc8:	f3 0f 7e 05 e0 5e b1 	movq   0xb15ee0(%rip),%xmm0        # 35318ab0 <global_assignstruct+0x10>
    34802bcf:	00 
    34802bd0:	66 0f 62 05 18 0c 01 	punpckldq 0x10c18(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34802bd7:	00 
    34802bd8:	66 0f 5c 05 20 0c 01 	subpd  0x10c20(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34802bdf:	00 
    34802be0:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34802be5:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    34802be9:	f2 0f 59 4c 24 08    	mulsd  0x8(%rsp),%xmm1
    34802bef:	66 0f 29 4c 24 10    	movapd %xmm1,0x10(%rsp)
    34802bf5:	48 89 df             	mov    %rbx,%rdi
    34802bf8:	e8 13 44 00 00       	callq  34807010 <TicksToFracSecs>
    34802bfd:	66 0f 28 4c 24 10    	movapd 0x10(%rsp),%xmm1
    34802c03:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34802c07:	f2 0f 11 0d a9 5e b1 	movsd  %xmm1,0xb15ea9(%rip)        # 35318ab8 <global_assignstruct+0x18>
    34802c0e:	00 
    34802c0f:	48 89 df             	mov    %rbx,%rdi
    34802c12:	e8 f9 43 00 00       	callq  34807010 <TicksToFracSecs>
    34802c17:	f2 0f 5e 44 24 08    	divsd  0x8(%rsp),%xmm0
    34802c1d:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    34802c22:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34802c27:	b0 01                	mov    $0x1,%al
    34802c29:	48 89 df             	mov    %rbx,%rdi
    34802c2c:	e8 4f 96 00 00       	callq  3480c280 <sprintf>
    34802c31:	48 89 df             	mov    %rbx,%rdi
    34802c34:	e8 87 9c 00 00       	callq  3480c8c0 <puts>
    34802c39:	83 3d 60 5e b1 00 00 	cmpl   $0x0,0xb15e60(%rip)        # 35318aa0 <global_assignstruct>
    34802c40:	0f 85 0a 00 00 00    	jne    34802c50 <DoAssign+0x1c0>
    34802c46:	c7 05 50 5e b1 00 01 	movl   $0x1,0xb15e50(%rip)        # 35318aa0 <global_assignstruct>
    34802c4d:	00 00 00 
    34802c50:	48 83 c4 68          	add    $0x68,%rsp
    34802c54:	5b                   	pop    %rbx
    34802c55:	41 5c                	pop    %r12
    34802c57:	c3                   	retq   
    34802c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34802c5f:	00 

0000000034802c60 <DoAssignIteration>:
    34802c60:	41 54                	push   %r12
    34802c62:	53                   	push   %rbx
    34802c63:	50                   	push   %rax
    34802c64:	49 89 f4             	mov    %rsi,%r12
    34802c67:	48 89 fb             	mov    %rdi,%rbx
    34802c6a:	e8 b1 23 00 00       	callq  34805020 <LoadAssignArrayWithRand>
    34802c6f:	31 c0                	xor    %eax,%eax
    34802c71:	e8 5a 43 00 00       	callq  34806fd0 <StartStopwatch>
    34802c76:	48 89 04 24          	mov    %rax,(%rsp)
    34802c7a:	4d 85 e4             	test   %r12,%r12
    34802c7d:	0f 84 25 00 00 00    	je     34802ca8 <DoAssignIteration+0x48>
    34802c83:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34802c8a:	84 00 00 00 00 00 
    34802c90:	48 89 df             	mov    %rbx,%rdi
    34802c93:	e8 e8 23 00 00       	callq  34805080 <Assignment>
    34802c98:	48 81 c3 c8 3e 01 00 	add    $0x13ec8,%rbx
    34802c9f:	49 ff cc             	dec    %r12
    34802ca2:	0f 85 e8 ff ff ff    	jne    34802c90 <DoAssignIteration+0x30>
    34802ca8:	48 8b 3c 24          	mov    (%rsp),%rdi
    34802cac:	48 83 c4 08          	add    $0x8,%rsp
    34802cb0:	5b                   	pop    %rbx
    34802cb1:	41 5c                	pop    %r12
    34802cb3:	e9 28 43 00 00       	jmpq   34806fe0 <StopStopwatch>
    34802cb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34802cbf:	00 

0000000034802cc0 <DoIDEA>:
    34802cc0:	41 54                	push   %r12
    34802cc2:	53                   	push   %rbx
    34802cc3:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    34802cca:	bf 03 00 00 00       	mov    $0x3,%edi
    34802ccf:	e8 3c e5 ff ff       	callq  34801210 <randnum>
    34802cd4:	31 db                	xor    %ebx,%ebx
    34802cd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34802cdd:	00 00 00 
    34802ce0:	bf 60 ea 00 00       	mov    $0xea60,%edi
    34802ce5:	e8 a6 e5 ff ff       	callq  34801290 <abs_randwc>
    34802cea:	66 89 44 5c 30       	mov    %ax,0x30(%rsp,%rbx,2)
    34802cef:	48 ff c3             	inc    %rbx
    34802cf2:	48 83 fb 08          	cmp    $0x8,%rbx
    34802cf6:	0f 85 e4 ff ff ff    	jne    34802ce0 <DoIDEA+0x20>
    34802cfc:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34802d00:	66 0f 29 84 24 90 00 	movapd %xmm0,0x90(%rsp)
    34802d07:	00 00 
    34802d09:	66 0f 29 84 24 80 00 	movapd %xmm0,0x80(%rsp)
    34802d10:	00 00 
    34802d12:	66 0f 29 44 24 70    	movapd %xmm0,0x70(%rsp)
    34802d18:	66 0f 29 44 24 60    	movapd %xmm0,0x60(%rsp)
    34802d1e:	66 0f 29 44 24 50    	movapd %xmm0,0x50(%rsp)
    34802d24:	66 0f 29 44 24 40    	movapd %xmm0,0x40(%rsp)
    34802d2a:	48 c7 84 24 a0 00 00 	movq   $0x0,0xa0(%rsp)
    34802d31:	00 00 00 00 00 
    34802d36:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    34802d3b:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    34802d40:	48 89 de             	mov    %rbx,%rsi
    34802d43:	e8 f8 02 00 00       	callq  34803040 <en_key_idea>
    34802d48:	48 8d b4 24 b0 00 00 	lea    0xb0(%rsp),%rsi
    34802d4f:	00 
    34802d50:	48 89 df             	mov    %rbx,%rdi
    34802d53:	e8 58 03 00 00       	callq  348030b0 <de_key_idea>
    34802d58:	48 8b 3d 91 5d b1 00 	mov    0xb15d91(%rip),%rdi        # 35318af0 <global_ideastruct+0x10>
    34802d5f:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802d64:	e8 57 3f 00 00       	callq  34806cc0 <AllocateMemory>
    34802d69:	48 89 c3             	mov    %rax,%rbx
    34802d6c:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802d70:	85 f6                	test   %esi,%esi
    34802d72:	0f 84 11 00 00 00    	je     34802d89 <DoIDEA+0xc9>
    34802d78:	bf 34 3a 81 34       	mov    $0x34813a34,%edi
    34802d7d:	e8 8e 41 00 00       	callq  34806f10 <ReportError>
    34802d82:	31 c0                	xor    %eax,%eax
    34802d84:	e8 37 42 00 00       	callq  34806fc0 <ErrorExit>
    34802d89:	48 8b 3d 60 5d b1 00 	mov    0xb15d60(%rip),%rdi        # 35318af0 <global_ideastruct+0x10>
    34802d90:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802d95:	e8 26 3f 00 00       	callq  34806cc0 <AllocateMemory>
    34802d9a:	49 89 c4             	mov    %rax,%r12
    34802d9d:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802da1:	85 f6                	test   %esi,%esi
    34802da3:	0f 84 1e 00 00 00    	je     34802dc7 <DoIDEA+0x107>
    34802da9:	bf 34 3a 81 34       	mov    $0x34813a34,%edi
    34802dae:	e8 5d 41 00 00       	callq  34806f10 <ReportError>
    34802db3:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802db8:	48 89 df             	mov    %rbx,%rdi
    34802dbb:	e8 20 40 00 00       	callq  34806de0 <FreeMemory>
    34802dc0:	31 c0                	xor    %eax,%eax
    34802dc2:	e8 f9 41 00 00       	callq  34806fc0 <ErrorExit>
    34802dc7:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    34802dcc:	48 8b 3d 1d 5d b1 00 	mov    0xb15d1d(%rip),%rdi        # 35318af0 <global_ideastruct+0x10>
    34802dd3:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
    34802dd8:	e8 e3 3e 00 00       	callq  34806cc0 <AllocateMemory>
    34802ddd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    34802de2:	8b 74 24 0c          	mov    0xc(%rsp),%esi
    34802de6:	85 f6                	test   %esi,%esi
    34802de8:	0f 84 2e 00 00 00    	je     34802e1c <DoIDEA+0x15c>
    34802dee:	bf 34 3a 81 34       	mov    $0x34813a34,%edi
    34802df3:	e8 18 41 00 00       	callq  34806f10 <ReportError>
    34802df8:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
    34802dfd:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802e02:	48 89 de             	mov    %rbx,%rsi
    34802e05:	e8 d6 3f 00 00       	callq  34806de0 <FreeMemory>
    34802e0a:	4c 89 e7             	mov    %r12,%rdi
    34802e0d:	48 89 de             	mov    %rbx,%rsi
    34802e10:	e8 cb 3f 00 00       	callq  34806de0 <FreeMemory>
    34802e15:	31 c0                	xor    %eax,%eax
    34802e17:	e8 a4 41 00 00       	callq  34806fc0 <ErrorExit>
    34802e1c:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    34802e21:	48 83 3d c7 5c b1 00 	cmpq   $0x0,0xb15cc7(%rip)        # 35318af0 <global_ideastruct+0x10>
    34802e28:	00 
    34802e29:	0f 84 37 00 00 00    	je     34802e66 <DoIDEA+0x1a6>
    34802e2f:	31 db                	xor    %ebx,%ebx
    34802e31:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    34802e36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34802e3d:	00 00 00 
    34802e40:	bf ff 00 00 00       	mov    $0xff,%edi
    34802e45:	e8 46 e4 ff ff       	callq  34801290 <abs_randwc>
    34802e4a:	41 88 04 1c          	mov    %al,(%r12,%rbx,1)
    34802e4e:	48 ff c3             	inc    %rbx
    34802e51:	48 8b 0d 98 5c b1 00 	mov    0xb15c98(%rip),%rcx        # 35318af0 <global_ideastruct+0x10>
    34802e58:	48 39 d9             	cmp    %rbx,%rcx
    34802e5b:	0f 87 df ff ff ff    	ja     34802e40 <DoIDEA+0x180>
    34802e61:	e9 02 00 00 00       	jmpq   34802e68 <DoIDEA+0x1a8>
    34802e66:	31 c9                	xor    %ecx,%ecx
    34802e68:	83 3d 71 5c b1 00 00 	cmpl   $0x0,0xb15c71(%rip)        # 35318ae0 <global_ideastruct>
    34802e6f:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    34802e74:	0f 85 9a 00 00 00    	jne    34802f14 <DoIDEA+0x254>
    34802e7a:	48 c7 05 73 5c b1 00 	movq   $0x64,0xb15c73(%rip)        # 35318af8 <global_ideastruct+0x18>
    34802e81:	64 00 00 00 
    34802e85:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
    34802e8c:	00 
    34802e8d:	48 89 04 24          	mov    %rax,(%rsp)
    34802e91:	4c 8d 4c 24 40       	lea    0x40(%rsp),%r9
    34802e96:	41 b8 64 00 00 00    	mov    $0x64,%r8d
    34802e9c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802ea1:	48 89 de             	mov    %rbx,%rsi
    34802ea4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34802ea9:	e8 c2 03 00 00       	callq  34803270 <DoIDEAIteration>
    34802eae:	48 3b 05 ab 5b b1 00 	cmp    0xb15bab(%rip),%rax        # 35318a60 <global_min_ticks>
    34802eb5:	0f 87 59 00 00 00    	ja     34802f14 <DoIDEA+0x254>
    34802ebb:	4c 8d 64 24 40       	lea    0x40(%rsp),%r12
    34802ec0:	4c 8b 05 31 5c b1 00 	mov    0xb15c31(%rip),%r8        # 35318af8 <global_ideastruct+0x18>
    34802ec7:	49 83 c0 0a          	add    $0xa,%r8
    34802ecb:	4c 89 05 26 5c b1 00 	mov    %r8,0xb15c26(%rip)        # 35318af8 <global_ideastruct+0x18>
    34802ed2:	49 81 f8 1f a1 07 00 	cmp    $0x7a11f,%r8
    34802ed9:	0f 87 35 00 00 00    	ja     34802f14 <DoIDEA+0x254>
    34802edf:	48 8b 0d 0a 5c b1 00 	mov    0xb15c0a(%rip),%rcx        # 35318af0 <global_ideastruct+0x10>
    34802ee6:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
    34802eed:	00 
    34802eee:	48 89 04 24          	mov    %rax,(%rsp)
    34802ef2:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34802ef7:	48 89 de             	mov    %rbx,%rsi
    34802efa:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34802eff:	4d 89 e1             	mov    %r12,%r9
    34802f02:	e8 69 03 00 00       	callq  34803270 <DoIDEAIteration>
    34802f07:	48 3b 05 52 5b b1 00 	cmp    0xb15b52(%rip),%rax        # 35318a60 <global_min_ticks>
    34802f0e:	0f 86 ac ff ff ff    	jbe    34802ec0 <DoIDEA+0x200>
    34802f14:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34802f18:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    34802f1e:	45 31 e4             	xor    %r12d,%r12d
    34802f21:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    34802f26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34802f2d:	00 00 00 
    34802f30:	48 8b 0d b9 5b b1 00 	mov    0xb15bb9(%rip),%rcx        # 35318af0 <global_ideastruct+0x10>
    34802f37:	4c 8b 05 ba 5b b1 00 	mov    0xb15bba(%rip),%r8        # 35318af8 <global_ideastruct+0x18>
    34802f3e:	48 8d 84 24 b0 00 00 	lea    0xb0(%rsp),%rax
    34802f45:	00 
    34802f46:	48 89 04 24          	mov    %rax,(%rsp)
    34802f4a:	48 89 df             	mov    %rbx,%rdi
    34802f4d:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    34802f52:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34802f57:	4c 8d 4c 24 40       	lea    0x40(%rsp),%r9
    34802f5c:	e8 0f 03 00 00       	callq  34803270 <DoIDEAIteration>
    34802f61:	49 01 c4             	add    %rax,%r12
    34802f64:	f3 0f 7e 05 8c 5b b1 	movq   0xb15b8c(%rip),%xmm0        # 35318af8 <global_ideastruct+0x18>
    34802f6b:	00 
    34802f6c:	66 0f 62 05 7c 08 01 	punpckldq 0x1087c(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34802f73:	00 
    34802f74:	66 0f 5c 05 84 08 01 	subpd  0x10884(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34802f7b:	00 
    34802f7c:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34802f81:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    34802f85:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
    34802f8b:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34802f8f:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    34802f95:	4c 89 e7             	mov    %r12,%rdi
    34802f98:	e8 53 40 00 00       	callq  34806ff0 <TicksToSecs>
    34802f9d:	48 3b 05 44 5b b1 00 	cmp    0xb15b44(%rip),%rax        # 35318ae8 <global_ideastruct+0x8>
    34802fa4:	0f 82 86 ff ff ff    	jb     34802f30 <DoIDEA+0x270>
    34802faa:	48 8d 44 24 0c       	lea    0xc(%rsp),%rax
    34802faf:	48 89 df             	mov    %rbx,%rdi
    34802fb2:	48 89 c3             	mov    %rax,%rbx
    34802fb5:	48 89 de             	mov    %rbx,%rsi
    34802fb8:	e8 23 3e 00 00       	callq  34806de0 <FreeMemory>
    34802fbd:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    34802fc2:	48 89 de             	mov    %rbx,%rsi
    34802fc5:	e8 16 3e 00 00       	callq  34806de0 <FreeMemory>
    34802fca:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    34802fcf:	48 89 de             	mov    %rbx,%rsi
    34802fd2:	e8 09 3e 00 00       	callq  34806de0 <FreeMemory>
    34802fd7:	4c 89 e7             	mov    %r12,%rdi
    34802fda:	e8 31 40 00 00       	callq  34807010 <TicksToFracSecs>
    34802fdf:	f2 0f 10 4c 24 20    	movsd  0x20(%rsp),%xmm1
    34802fe5:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34802fe9:	f2 0f 11 0d 0f 5b b1 	movsd  %xmm1,0xb15b0f(%rip)        # 35318b00 <global_ideastruct+0x20>
    34802ff0:	00 
    34802ff1:	4c 89 e7             	mov    %r12,%rdi
    34802ff4:	e8 17 40 00 00       	callq  34807010 <TicksToFracSecs>
    34802ff9:	f2 0f 5e 44 24 20    	divsd  0x20(%rsp),%xmm0
    34802fff:	48 8d 9c 24 20 01 00 	lea    0x120(%rsp),%rbx
    34803006:	00 
    34803007:	be ac 39 81 34       	mov    $0x348139ac,%esi
    3480300c:	b0 01                	mov    $0x1,%al
    3480300e:	48 89 df             	mov    %rbx,%rdi
    34803011:	e8 6a 92 00 00       	callq  3480c280 <sprintf>
    34803016:	48 89 df             	mov    %rbx,%rdi
    34803019:	e8 a2 98 00 00       	callq  3480c8c0 <puts>
    3480301e:	83 3d bb 5a b1 00 00 	cmpl   $0x0,0xb15abb(%rip)        # 35318ae0 <global_ideastruct>
    34803025:	0f 85 0a 00 00 00    	jne    34803035 <DoIDEA+0x375>
    3480302b:	c7 05 ab 5a b1 00 01 	movl   $0x1,0xb15aab(%rip)        # 35318ae0 <global_ideastruct>
    34803032:	00 00 00 
    34803035:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    3480303c:	5b                   	pop    %rbx
    3480303d:	41 5c                	pop    %r12
    3480303f:	c3                   	retq   

0000000034803040 <en_key_idea>:
    34803040:	31 c0                	xor    %eax,%eax
    34803042:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34803049:	1f 84 00 00 00 00 00 
    34803050:	0f b7 0c 47          	movzwl (%rdi,%rax,2),%ecx
    34803054:	66 89 0c 46          	mov    %cx,(%rsi,%rax,2)
    34803058:	48 ff c0             	inc    %rax
    3480305b:	48 83 f8 08          	cmp    $0x8,%rax
    3480305f:	0f 85 eb ff ff ff    	jne    34803050 <en_key_idea+0x10>
    34803065:	31 c9                	xor    %ecx,%ecx
    34803067:	b8 07 00 00 00       	mov    $0x7,%eax
    3480306c:	0f 1f 40 00          	nopl   0x0(%rax)
    34803070:	8d 51 01             	lea    0x1(%rcx),%edx
    34803073:	41 89 d1             	mov    %edx,%r9d
    34803076:	41 83 e1 07          	and    $0x7,%r9d
    3480307a:	46 0f b7 04 4e       	movzwl (%rsi,%r9,2),%r8d
    3480307f:	8d 79 02             	lea    0x2(%rcx),%edi
    34803082:	83 e7 07             	and    $0x7,%edi
    34803085:	0f b7 3c 7e          	movzwl (%rsi,%rdi,2),%edi
    34803089:	66 44 0f ac c7 07    	shrd   $0x7,%r8w,%di
    3480308f:	83 c9 08             	or     $0x8,%ecx
    34803092:	66 89 3c 4e          	mov    %di,(%rsi,%rcx,2)
    34803096:	83 e2 08             	and    $0x8,%edx
    34803099:	48 8d 34 56          	lea    (%rsi,%rdx,2),%rsi
    3480309d:	ff c0                	inc    %eax
    3480309f:	83 f8 33             	cmp    $0x33,%eax
    348030a2:	44 89 c9             	mov    %r9d,%ecx
    348030a5:	0f 8c c5 ff ff ff    	jl     34803070 <en_key_idea+0x30>
    348030ab:	c3                   	retq   
    348030ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000348030b0 <de_key_idea>:
    348030b0:	41 54                	push   %r12
    348030b2:	53                   	push   %rbx
    348030b3:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    348030ba:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    348030bf:	48 89 fb             	mov    %rdi,%rbx
    348030c2:	0f b7 3b             	movzwl (%rbx),%edi
    348030c5:	e8 76 29 00 00       	callq  34805a40 <inv>
    348030ca:	66 89 44 24 08       	mov    %ax,0x8(%rsp)
    348030cf:	31 c9                	xor    %ecx,%ecx
    348030d1:	45 31 e4             	xor    %r12d,%r12d
    348030d4:	66 44 2b 63 02       	sub    0x2(%rbx),%r12w
    348030d9:	0f b7 43 04          	movzwl 0x4(%rbx),%eax
    348030dd:	66 29 c1             	sub    %ax,%cx
    348030e0:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
    348030e4:	0f b7 7b 06          	movzwl 0x6(%rbx),%edi
    348030e8:	48 83 c3 08          	add    $0x8,%rbx
    348030ec:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    348030f1:	e8 4a 29 00 00       	callq  34805a40 <inv>
    348030f6:	66 89 84 24 86 00 00 	mov    %ax,0x86(%rsp)
    348030fd:	00 
    348030fe:	8b 44 24 04          	mov    0x4(%rsp),%eax
    34803102:	66 89 84 24 84 00 00 	mov    %ax,0x84(%rsp)
    34803109:	00 
    3480310a:	66 44 89 a4 24 82 00 	mov    %r12w,0x82(%rsp)
    34803111:	00 00 
    34803113:	0f b7 44 24 08       	movzwl 0x8(%rsp),%eax
    34803118:	66 89 84 24 80 00 00 	mov    %ax,0x80(%rsp)
    3480311f:	00 
    34803120:	b9 54 00 00 00       	mov    $0x54,%ecx
    34803125:	e9 25 00 00 00       	jmpq   3480314f <de_key_idea+0x9f>
    3480312a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34803130:	66 44 89 64 0c 24    	mov    %r12w,0x24(%rsp,%rcx,1)
    34803136:	66 89 5c 0c 22       	mov    %bx,0x22(%rsp,%rcx,1)
    3480313b:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
    34803140:	66 89 44 0c 20       	mov    %ax,0x20(%rsp,%rcx,1)
    34803145:	48 83 c1 f4          	add    $0xfffffffffffffff4,%rcx
    34803149:	48 83 44 24 10 0c    	addq   $0xc,0x10(%rsp)
    3480314f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    34803154:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    34803159:	8b 03                	mov    (%rbx),%eax
    3480315b:	89 44 0c 28          	mov    %eax,0x28(%rsp,%rcx,1)
    3480315f:	0f b7 7b 04          	movzwl 0x4(%rbx),%edi
    34803163:	e8 d8 28 00 00       	callq  34805a40 <inv>
    34803168:	66 89 44 24 04       	mov    %ax,0x4(%rsp)
    3480316d:	45 31 e4             	xor    %r12d,%r12d
    34803170:	66 44 2b 63 06       	sub    0x6(%rbx),%r12w
    34803175:	0f b7 43 08          	movzwl 0x8(%rbx),%eax
    34803179:	48 89 d9             	mov    %rbx,%rcx
    3480317c:	31 db                	xor    %ebx,%ebx
    3480317e:	66 29 c3             	sub    %ax,%bx
    34803181:	0f b7 79 0a          	movzwl 0xa(%rcx),%edi
    34803185:	e8 b6 28 00 00       	callq  34805a40 <inv>
    3480318a:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480318f:	66 89 44 0c 26       	mov    %ax,0x26(%rsp,%rcx,1)
    34803194:	85 c9                	test   %ecx,%ecx
    34803196:	0f 85 94 ff ff ff    	jne    34803130 <de_key_idea+0x80>
    3480319c:	66 89 5c 24 24       	mov    %bx,0x24(%rsp)
    348031a1:	66 44 89 64 24 22    	mov    %r12w,0x22(%rsp)
    348031a7:	0f b7 44 24 04       	movzwl 0x4(%rsp),%eax
    348031ac:	66 89 44 24 20       	mov    %ax,0x20(%rsp)
    348031b1:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    348031b6:	66 89 07             	mov    %ax,(%rdi)
    348031b9:	66 c7 44 24 20 00 00 	movw   $0x0,0x20(%rsp)
    348031c0:	48 8d 47 02          	lea    0x2(%rdi),%rax
    348031c4:	48 8d 8c 24 88 00 00 	lea    0x88(%rsp),%rcx
    348031cb:	00 
    348031cc:	48 39 c8             	cmp    %rcx,%rax
    348031cf:	0f 83 1f 00 00 00    	jae    348031f4 <de_key_idea+0x144>
    348031d5:	48 8d 44 24 22       	lea    0x22(%rsp),%rax
    348031da:	48 8d 4f 68          	lea    0x68(%rdi),%rcx
    348031de:	be 01 00 00 00       	mov    $0x1,%esi
    348031e3:	48 39 c8             	cmp    %rcx,%rax
    348031e6:	0f 83 08 00 00 00    	jae    348031f4 <de_key_idea+0x144>
    348031ec:	48 89 f9             	mov    %rdi,%rcx
    348031ef:	e9 3d 00 00 00       	jmpq   34803231 <de_key_idea+0x181>
    348031f4:	48 8d 4f 60          	lea    0x60(%rdi),%rcx
    348031f8:	48 8d 84 24 82 00 00 	lea    0x82(%rsp),%rax
    348031ff:	00 
    34803200:	ba 01 00 00 00       	mov    $0x1,%edx
    34803205:	0f 57 c0             	xorps  %xmm0,%xmm0
    34803208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480320f:	00 
    34803210:	0f 10 4c 54 20       	movups 0x20(%rsp,%rdx,2),%xmm1
    34803215:	0f 11 0c 57          	movups %xmm1,(%rdi,%rdx,2)
    34803219:	0f 11 44 54 20       	movups %xmm0,0x20(%rsp,%rdx,2)
    3480321e:	48 83 c2 08          	add    $0x8,%rdx
    34803222:	48 83 fa 31          	cmp    $0x31,%rdx
    34803226:	0f 85 e4 ff ff ff    	jne    34803210 <de_key_idea+0x160>
    3480322c:	be 31 00 00 00       	mov    $0x31,%esi
    34803231:	ba 34 00 00 00       	mov    $0x34,%edx
    34803236:	29 f2                	sub    %esi,%edx
    34803238:	48 83 c1 02          	add    $0x2,%rcx
    3480323c:	0f 1f 40 00          	nopl   0x0(%rax)
    34803240:	0f b7 30             	movzwl (%rax),%esi
    34803243:	66 89 31             	mov    %si,(%rcx)
    34803246:	66 c7 00 00 00       	movw   $0x0,(%rax)
    3480324b:	48 83 c0 02          	add    $0x2,%rax
    3480324f:	48 83 c1 02          	add    $0x2,%rcx
    34803253:	ff ca                	dec    %edx
    34803255:	0f 85 e5 ff ff ff    	jne    34803240 <de_key_idea+0x190>
    3480325b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    34803262:	5b                   	pop    %rbx
    34803263:	41 5c                	pop    %r12
    34803265:	c3                   	retq   
    34803266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480326d:	00 00 00 

0000000034803270 <DoIDEAIteration>:
    34803270:	41 54                	push   %r12
    34803272:	53                   	push   %rbx
    34803273:	48 83 ec 48          	sub    $0x48,%rsp
    34803277:	4c 89 4c 24 40       	mov    %r9,0x40(%rsp)
    3480327c:	4c 89 c3             	mov    %r8,%rbx
    3480327f:	49 89 cc             	mov    %rcx,%r12
    34803282:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    34803287:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    3480328c:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    34803291:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34803296:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3480329b:	31 c0                	xor    %eax,%eax
    3480329d:	e8 2e 3d 00 00       	callq  34806fd0 <StartStopwatch>
    348032a2:	4c 89 e1             	mov    %r12,%rcx
    348032a5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348032aa:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    348032af:	48 85 db             	test   %rbx,%rbx
    348032b2:	0f 84 9a 00 00 00    	je     34803352 <DoIDEAIteration+0xe2>
    348032b8:	31 c0                	xor    %eax,%eax
    348032ba:	48 89 0c 24          	mov    %rcx,(%rsp)
    348032be:	66 90                	xchg   %ax,%ax
    348032c0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    348032c5:	48 85 c9             	test   %rcx,%rcx
    348032c8:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    348032cd:	0f 84 6c 00 00 00    	je     3480333f <DoIDEAIteration+0xcf>
    348032d3:	31 db                	xor    %ebx,%ebx
    348032d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348032dc:	00 00 00 00 
    348032e0:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    348032e5:	48 8d 3c 18          	lea    (%rax,%rbx,1),%rdi
    348032e9:	49 8d 34 1c          	lea    (%r12,%rbx,1),%rsi
    348032ed:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    348032f2:	e8 d9 25 00 00       	callq  348058d0 <cipher_idea>
    348032f7:	48 83 c3 08          	add    $0x8,%rbx
    348032fb:	48 3b 1c 24          	cmp    (%rsp),%rbx
    348032ff:	0f 82 db ff ff ff    	jb     348032e0 <DoIDEAIteration+0x70>
    34803305:	31 db                	xor    %ebx,%ebx
    34803307:	48 8b 0c 24          	mov    (%rsp),%rcx
    3480330b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34803310:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
    34803314:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    34803319:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    3480331d:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    34803322:	49 89 cc             	mov    %rcx,%r12
    34803325:	e8 a6 25 00 00       	callq  348058d0 <cipher_idea>
    3480332a:	4c 89 e1             	mov    %r12,%rcx
    3480332d:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    34803332:	48 83 c3 08          	add    $0x8,%rbx
    34803336:	48 39 cb             	cmp    %rcx,%rbx
    34803339:	0f 82 d1 ff ff ff    	jb     34803310 <DoIDEAIteration+0xa0>
    3480333f:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    34803344:	48 ff c0             	inc    %rax
    34803347:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
    3480334c:	0f 85 6e ff ff ff    	jne    348032c0 <DoIDEAIteration+0x50>
    34803352:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34803357:	48 83 c4 48          	add    $0x48,%rsp
    3480335b:	5b                   	pop    %rbx
    3480335c:	41 5c                	pop    %r12
    3480335e:	e9 7d 3c 00 00       	jmpq   34806fe0 <StopStopwatch>
    34803363:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480336a:	84 00 00 00 00 00 

0000000034803370 <DoHuffman>:
    34803370:	41 54                	push   %r12
    34803372:	53                   	push   %rbx
    34803373:	48 83 ec 68          	sub    $0x68,%rsp
    34803377:	48 8b 3d 92 56 b1 00 	mov    0xb15692(%rip),%rdi        # 35318a10 <global_huffstruct+0x10>
    3480337e:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34803383:	e8 38 39 00 00       	callq  34806cc0 <AllocateMemory>
    34803388:	48 89 c3             	mov    %rax,%rbx
    3480338b:	8b 74 24 04          	mov    0x4(%rsp),%esi
    3480338f:	85 f6                	test   %esi,%esi
    34803391:	0f 84 11 00 00 00    	je     348033a8 <DoHuffman+0x38>
    34803397:	bf 3d 3a 81 34       	mov    $0x34813a3d,%edi
    3480339c:	e8 6f 3b 00 00       	callq  34806f10 <ReportError>
    348033a1:	31 c0                	xor    %eax,%eax
    348033a3:	e8 18 3c 00 00       	callq  34806fc0 <ErrorExit>
    348033a8:	48 8b 3d 61 56 b1 00 	mov    0xb15661(%rip),%rdi        # 35318a10 <global_huffstruct+0x10>
    348033af:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    348033b4:	e8 07 39 00 00       	callq  34806cc0 <AllocateMemory>
    348033b9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    348033be:	8b 74 24 04          	mov    0x4(%rsp),%esi
    348033c2:	85 f6                	test   %esi,%esi
    348033c4:	0f 84 1e 00 00 00    	je     348033e8 <DoHuffman+0x78>
    348033ca:	bf 3d 3a 81 34       	mov    $0x34813a3d,%edi
    348033cf:	e8 3c 3b 00 00       	callq  34806f10 <ReportError>
    348033d4:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    348033d9:	48 89 df             	mov    %rbx,%rdi
    348033dc:	e8 ff 39 00 00       	callq  34806de0 <FreeMemory>
    348033e1:	31 c0                	xor    %eax,%eax
    348033e3:	e8 d8 3b 00 00       	callq  34806fc0 <ErrorExit>
    348033e8:	48 8b 3d 21 56 b1 00 	mov    0xb15621(%rip),%rdi        # 35318a10 <global_huffstruct+0x10>
    348033ef:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    348033f4:	e8 c7 38 00 00       	callq  34806cc0 <AllocateMemory>
    348033f9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348033fe:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803402:	85 f6                	test   %esi,%esi
    34803404:	0f 84 2e 00 00 00    	je     34803438 <DoHuffman+0xc8>
    3480340a:	bf 3d 3a 81 34       	mov    $0x34813a3d,%edi
    3480340f:	e8 fc 3a 00 00       	callq  34806f10 <ReportError>
    34803414:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    34803419:	48 89 df             	mov    %rbx,%rdi
    3480341c:	4c 89 e6             	mov    %r12,%rsi
    3480341f:	e8 bc 39 00 00       	callq  34806de0 <FreeMemory>
    34803424:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803429:	4c 89 e6             	mov    %r12,%rsi
    3480342c:	e8 af 39 00 00       	callq  34806de0 <FreeMemory>
    34803431:	31 c0                	xor    %eax,%eax
    34803433:	e8 88 3b 00 00       	callq  34806fc0 <ErrorExit>
    34803438:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    3480343d:	bf 00 28 00 00       	mov    $0x2800,%edi
    34803442:	e8 79 38 00 00       	callq  34806cc0 <AllocateMemory>
    34803447:	48 89 05 a2 42 21 00 	mov    %rax,0x2142a2(%rip)        # 34a176f0 <hufftree>
    3480344e:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803452:	85 f6                	test   %esi,%esi
    34803454:	0f 84 3b 00 00 00    	je     34803495 <DoHuffman+0x125>
    3480345a:	bf 3d 3a 81 34       	mov    $0x34813a3d,%edi
    3480345f:	e8 ac 3a 00 00       	callq  34806f10 <ReportError>
    34803464:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    34803469:	48 89 df             	mov    %rbx,%rdi
    3480346c:	4c 89 e6             	mov    %r12,%rsi
    3480346f:	e8 6c 39 00 00       	callq  34806de0 <FreeMemory>
    34803474:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803479:	4c 89 e6             	mov    %r12,%rsi
    3480347c:	e8 5f 39 00 00       	callq  34806de0 <FreeMemory>
    34803481:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34803486:	4c 89 e6             	mov    %r12,%rsi
    34803489:	e8 52 39 00 00       	callq  34806de0 <FreeMemory>
    3480348e:	31 c0                	xor    %eax,%eax
    34803490:	e8 2b 3b 00 00       	callq  34806fc0 <ErrorExit>
    34803495:	bf 0d 00 00 00       	mov    $0xd,%edi
    3480349a:	e8 71 dd ff ff       	callq  34801210 <randnum>
    3480349f:	48 8b 35 6a 55 b1 00 	mov    0xb1556a(%rip),%rsi        # 35318a10 <global_huffstruct+0x10>
    348034a6:	48 ff ce             	dec    %rsi
    348034a9:	48 89 df             	mov    %rbx,%rdi
    348034ac:	e8 af 01 00 00       	callq  34803660 <create_text_block>
    348034b1:	48 8b 05 58 55 b1 00 	mov    0xb15558(%rip),%rax        # 35318a10 <global_huffstruct+0x10>
    348034b8:	c6 44 03 ff 00       	movb   $0x0,-0x1(%rbx,%rax,1)
    348034bd:	83 3d 3c 55 b1 00 00 	cmpl   $0x0,0xb1553c(%rip)        # 35318a00 <global_huffstruct>
    348034c4:	49 89 dc             	mov    %rbx,%r12
    348034c7:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348034cc:	0f 85 68 00 00 00    	jne    3480353a <DoHuffman+0x1ca>
    348034d2:	48 c7 05 3b 55 b1 00 	movq   $0x64,0xb1553b(%rip)        # 35318a18 <global_huffstruct+0x18>
    348034d9:	64 00 00 00 
    348034dd:	41 b8 64 00 00 00    	mov    $0x64,%r8d
    348034e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348034ea:	84 00 00 00 00 00 
    348034f0:	48 8b 0d 19 55 b1 00 	mov    0xb15519(%rip),%rcx        # 35318a10 <global_huffstruct+0x10>
    348034f7:	4c 8b 0d f2 41 21 00 	mov    0x2141f2(%rip),%r9        # 34a176f0 <hufftree>
    348034fe:	4c 89 e7             	mov    %r12,%rdi
    34803501:	48 89 de             	mov    %rbx,%rsi
    34803504:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34803509:	e8 e2 01 00 00       	callq  348036f0 <DoHuffIteration>
    3480350e:	48 3b 05 4b 55 b1 00 	cmp    0xb1554b(%rip),%rax        # 35318a60 <global_min_ticks>
    34803515:	0f 87 1f 00 00 00    	ja     3480353a <DoHuffman+0x1ca>
    3480351b:	4c 8b 05 f6 54 b1 00 	mov    0xb154f6(%rip),%r8        # 35318a18 <global_huffstruct+0x18>
    34803522:	49 83 c0 0a          	add    $0xa,%r8
    34803526:	4c 89 05 eb 54 b1 00 	mov    %r8,0xb154eb(%rip)        # 35318a18 <global_huffstruct+0x18>
    3480352d:	49 81 f8 20 a1 07 00 	cmp    $0x7a120,%r8
    34803534:	0f 82 b6 ff ff ff    	jb     348034f0 <DoHuffman+0x180>
    3480353a:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480353e:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    34803544:	31 db                	xor    %ebx,%ebx
    34803546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480354d:	00 00 00 
    34803550:	48 8b 0d b9 54 b1 00 	mov    0xb154b9(%rip),%rcx        # 35318a10 <global_huffstruct+0x10>
    34803557:	4c 8b 05 ba 54 b1 00 	mov    0xb154ba(%rip),%r8        # 35318a18 <global_huffstruct+0x18>
    3480355e:	4c 8b 0d 8b 41 21 00 	mov    0x21418b(%rip),%r9        # 34a176f0 <hufftree>
    34803565:	4c 89 e7             	mov    %r12,%rdi
    34803568:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3480356d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34803572:	e8 79 01 00 00       	callq  348036f0 <DoHuffIteration>
    34803577:	48 01 c3             	add    %rax,%rbx
    3480357a:	f3 0f 7e 05 96 54 b1 	movq   0xb15496(%rip),%xmm0        # 35318a18 <global_huffstruct+0x18>
    34803581:	00 
    34803582:	66 0f 62 05 66 02 01 	punpckldq 0x10266(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34803589:	00 
    3480358a:	66 0f 5c 05 6e 02 01 	subpd  0x1026e(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34803591:	00 
    34803592:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34803597:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    3480359b:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    348035a1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    348035a5:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    348035ab:	48 89 df             	mov    %rbx,%rdi
    348035ae:	e8 3d 3a 00 00       	callq  34806ff0 <TicksToSecs>
    348035b3:	48 3b 05 4e 54 b1 00 	cmp    0xb1544e(%rip),%rax        # 35318a08 <global_huffstruct+0x8>
    348035ba:	0f 82 90 ff ff ff    	jb     34803550 <DoHuffman+0x1e0>
    348035c0:	48 8d 44 24 04       	lea    0x4(%rsp),%rax
    348035c5:	4c 89 e7             	mov    %r12,%rdi
    348035c8:	49 89 c4             	mov    %rax,%r12
    348035cb:	4c 89 e6             	mov    %r12,%rsi
    348035ce:	e8 0d 38 00 00       	callq  34806de0 <FreeMemory>
    348035d3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348035d8:	4c 89 e6             	mov    %r12,%rsi
    348035db:	e8 00 38 00 00       	callq  34806de0 <FreeMemory>
    348035e0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    348035e5:	4c 89 e6             	mov    %r12,%rsi
    348035e8:	e8 f3 37 00 00       	callq  34806de0 <FreeMemory>
    348035ed:	48 8b 3d fc 40 21 00 	mov    0x2140fc(%rip),%rdi        # 34a176f0 <hufftree>
    348035f4:	4c 89 e6             	mov    %r12,%rsi
    348035f7:	e8 e4 37 00 00       	callq  34806de0 <FreeMemory>
    348035fc:	48 89 df             	mov    %rbx,%rdi
    348035ff:	e8 0c 3a 00 00       	callq  34807010 <TicksToFracSecs>
    34803604:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
    3480360a:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    3480360e:	f2 0f 11 0d 0a 54 b1 	movsd  %xmm1,0xb1540a(%rip)        # 35318a20 <global_huffstruct+0x20>
    34803615:	00 
    34803616:	48 89 df             	mov    %rbx,%rdi
    34803619:	e8 f2 39 00 00       	callq  34807010 <TicksToFracSecs>
    3480361e:	f2 0f 5e 44 24 18    	divsd  0x18(%rsp),%xmm0
    34803624:	48 8d 5c 24 20       	lea    0x20(%rsp),%rbx
    34803629:	be ac 39 81 34       	mov    $0x348139ac,%esi
    3480362e:	b0 01                	mov    $0x1,%al
    34803630:	48 89 df             	mov    %rbx,%rdi
    34803633:	e8 48 8c 00 00       	callq  3480c280 <sprintf>
    34803638:	48 89 df             	mov    %rbx,%rdi
    3480363b:	e8 80 92 00 00       	callq  3480c8c0 <puts>
    34803640:	83 3d b9 53 b1 00 00 	cmpl   $0x0,0xb153b9(%rip)        # 35318a00 <global_huffstruct>
    34803647:	0f 85 0a 00 00 00    	jne    34803657 <DoHuffman+0x2e7>
    3480364d:	c7 05 a9 53 b1 00 01 	movl   $0x1,0xb153a9(%rip)        # 35318a00 <global_huffstruct>
    34803654:	00 00 00 
    34803657:	48 83 c4 68          	add    $0x68,%rsp
    3480365b:	5b                   	pop    %rbx
    3480365c:	41 5c                	pop    %r12
    3480365e:	c3                   	retq   
    3480365f:	90                   	nop

0000000034803660 <create_text_block>:
    34803660:	41 54                	push   %r12
    34803662:	53                   	push   %rbx
    34803663:	48 83 ec 18          	sub    $0x18,%rsp
    34803667:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    3480366c:	31 db                	xor    %ebx,%ebx
    3480366e:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    34803673:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480367a:	84 00 00 00 00 00 
    34803680:	bf ee 01 00 00       	mov    $0x1ee,%edi
    34803685:	e8 06 dc ff ff       	callq  34801290 <abs_randwc>
    3480368a:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3480368f:	83 c0 06             	add    $0x6,%eax
    34803692:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    34803696:	49 89 f4             	mov    %rsi,%r12
    34803699:	49 29 dc             	sub    %rbx,%r12
    3480369c:	48 39 f1             	cmp    %rsi,%rcx
    3480369f:	4c 0f 46 e0          	cmovbe %rax,%r12
    348036a3:	49 83 fc 02          	cmp    $0x2,%r12
    348036a7:	0f 82 12 00 00 00    	jb     348036bf <create_text_block+0x5f>
    348036ad:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348036b2:	4c 89 e6             	mov    %r12,%rsi
    348036b5:	e8 16 24 00 00       	callq  34805ad0 <create_text_line>
    348036ba:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    348036bf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    348036c4:	42 c6 44 20 ff 0a    	movb   $0xa,-0x1(%rax,%r12,1)
    348036ca:	4c 01 e0             	add    %r12,%rax
    348036cd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    348036d2:	4c 01 e3             	add    %r12,%rbx
    348036d5:	48 39 f3             	cmp    %rsi,%rbx
    348036d8:	0f 82 a2 ff ff ff    	jb     34803680 <create_text_block+0x20>
    348036de:	48 83 c4 18          	add    $0x18,%rsp
    348036e2:	5b                   	pop    %rbx
    348036e3:	41 5c                	pop    %r12
    348036e5:	c3                   	retq   
    348036e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348036ed:	00 00 00 

00000000348036f0 <DoHuffIteration>:
    348036f0:	41 54                	push   %r12
    348036f2:	53                   	push   %rbx
    348036f3:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    348036fa:	4c 89 cb             	mov    %r9,%rbx
    348036fd:	4d 89 c4             	mov    %r8,%r12
    34803700:	48 89 0c 24          	mov    %rcx,(%rsp)
    34803704:	48 89 54 24 78       	mov    %rdx,0x78(%rsp)
    34803709:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    3480370e:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    34803713:	31 c0                	xor    %eax,%eax
    34803715:	e8 b6 38 00 00       	callq  34806fd0 <StartStopwatch>
    3480371a:	49 89 d9             	mov    %rbx,%r9
    3480371d:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34803722:	4d 85 e4             	test   %r12,%r12
    34803725:	0f 84 6b 04 00 00    	je     34803b96 <DoHuffIteration+0x4a6>
    3480372b:	48 8b 0c 24          	mov    (%rsp),%rcx
    3480372f:	48 85 c9             	test   %rcx,%rcx
    34803732:	0f 88 0a 00 00 00    	js     34803742 <DoHuffIteration+0x52>
    34803738:	f3 48 0f 2a c1       	cvtsi2ss %rcx,%xmm0
    3480373d:	e9 15 00 00 00       	jmpq   34803757 <DoHuffIteration+0x67>
    34803742:	48 89 c8             	mov    %rcx,%rax
    34803745:	48 d1 e8             	shr    %rax
    34803748:	83 e1 01             	and    $0x1,%ecx
    3480374b:	48 09 c1             	or     %rax,%rcx
    3480374e:	f3 48 0f 2a c1       	cvtsi2ss %rcx,%xmm0
    34803753:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    34803757:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
    3480375d:	49 8d 81 00 14 00 00 	lea    0x1400(%r9),%rax
    34803764:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    34803769:	49 8d 41 04          	lea    0x4(%r9),%rax
    3480376d:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    34803772:	49 8d 41 08          	lea    0x8(%r9),%rax
    34803776:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3480377b:	f3 0f 10 0d cd 00 01 	movss  0x100cd(%rip),%xmm1        # 34813850 <DoEmFloatIteration.jtable+0x930>
    34803782:	00 
    34803783:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    34803788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480378f:	00 
    34803790:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34803795:	31 c9                	xor    %ecx,%ecx
    34803797:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480379e:	00 00 
    348037a0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    348037a6:	88 48 fc             	mov    %cl,-0x4(%rax)
    348037a9:	48 ff c1             	inc    %rcx
    348037ac:	48 83 c0 14          	add    $0x14,%rax
    348037b0:	48 81 f9 00 01 00 00 	cmp    $0x100,%rcx
    348037b7:	0f 85 e3 ff ff ff    	jne    348037a0 <DoHuffIteration+0xb0>
    348037bd:	48 8b 04 24          	mov    (%rsp),%rax
    348037c1:	48 85 c0             	test   %rax,%rax
    348037c4:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    348037c9:	0f 84 27 00 00 00    	je     348037f6 <DoHuffIteration+0x106>
    348037cf:	90                   	nop
    348037d0:	48 0f be 11          	movsbq (%rcx),%rdx
    348037d4:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    348037d8:	f3 41 0f 10 44 91 04 	movss  0x4(%r9,%rdx,4),%xmm0
    348037df:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    348037e3:	f3 41 0f 11 44 91 04 	movss  %xmm0,0x4(%r9,%rdx,4)
    348037ea:	48 ff c1             	inc    %rcx
    348037ed:	48 ff c8             	dec    %rax
    348037f0:	0f 85 da ff ff ff    	jne    348037d0 <DoHuffIteration+0xe0>
    348037f6:	49 ff cc             	dec    %r12
    348037f9:	b8 04 00 00 00       	mov    $0x4,%eax
    348037fe:	66 90                	xchg   %ax,%ax
    34803800:	f3 41 0f 10 04 01    	movss  (%r9,%rax,1),%xmm0
    34803806:	0f 2e 04 25 58 38 81 	ucomiss 0x34813858,%xmm0
    3480380d:	34 
    3480380e:	0f 85 06 00 00 00    	jne    3480381a <DoHuffIteration+0x12a>
    34803814:	0f 8b 0c 00 00 00    	jnp    34803826 <DoHuffIteration+0x136>
    3480381a:	f3 0f 5e 44 24 0c    	divss  0xc(%rsp),%xmm0
    34803820:	f3 41 0f 11 04 01    	movss  %xmm0,(%r9,%rax,1)
    34803826:	48 83 c0 14          	add    $0x14,%rax
    3480382a:	48 3d 04 14 00 00    	cmp    $0x1404,%rax
    34803830:	0f 85 ca ff ff ff    	jne    34803800 <DoHuffIteration+0x110>
    34803836:	31 f6                	xor    %esi,%esi
    34803838:	ba 00 14 00 00       	mov    $0x1400,%edx
    3480383d:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    34803842:	e8 46 7f 00 00       	callq  3480b78d <memset>
    34803847:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    3480384c:	b8 10 00 00 00       	mov    $0x10,%eax
    34803851:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34803858:	0f 1f 84 00 00 00 00 
    3480385f:	00 
    34803860:	f3 41 0f 10 44 01 f4 	movss  -0xc(%r9,%rax,1),%xmm0
    34803867:	b9 00 7d 00 00       	mov    $0x7d00,%ecx
    3480386c:	0f 2e 04 25 58 38 81 	ucomiss 0x34813858,%xmm0
    34803873:	34 
    34803874:	0f 85 06 00 00 00    	jne    34803880 <DoHuffIteration+0x190>
    3480387a:	0f 8b 0e 00 00 00    	jnp    3480388e <DoHuffIteration+0x19e>
    34803880:	49 c7 44 01 fc ff ff 	movq   $0xffffffffffffffff,-0x4(%r9,%rax,1)
    34803887:	ff ff 
    34803889:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    3480388e:	41 89 4c 01 f8       	mov    %ecx,-0x8(%r9,%rax,1)
    34803893:	48 83 c0 14          	add    $0x14,%rax
    34803897:	48 3d 10 28 00 00    	cmp    $0x2810,%rax
    3480389d:	0f 85 bd ff ff ff    	jne    34803860 <DoHuffIteration+0x170>
    348038a3:	41 ba ff 00 00 00    	mov    $0xff,%r10d
    348038a9:	b8 00 01 00 00       	mov    $0x100,%eax
    348038ae:	e9 56 00 00 00       	jmpq   34803909 <DoHuffIteration+0x219>
    348038b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348038ba:	84 00 00 00 00 00 
    348038c0:	83 fe ff             	cmp    $0xffffffff,%esi
    348038c3:	0f 84 f7 00 00 00    	je     348039c0 <DoHuffIteration+0x2d0>
    348038c9:	49 ff c2             	inc    %r10
    348038cc:	49 63 c8             	movslq %r8d,%rcx
    348038cf:	48 8d 0c 89          	lea    (%rcx,%rcx,4),%rcx
    348038d3:	45 89 54 89 08       	mov    %r10d,0x8(%r9,%rcx,4)
    348038d8:	48 63 ce             	movslq %esi,%rcx
    348038db:	48 8d 0c 89          	lea    (%rcx,%rcx,4),%rcx
    348038df:	45 89 54 89 08       	mov    %r10d,0x8(%r9,%rcx,4)
    348038e4:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    348038e8:	4b 8d 0c 92          	lea    (%r10,%r10,4),%rcx
    348038ec:	f3 41 0f 11 44 89 04 	movss  %xmm0,0x4(%r9,%rcx,4)
    348038f3:	41 89 54 89 0c       	mov    %edx,0xc(%r9,%rcx,4)
    348038f8:	41 89 74 89 10       	mov    %esi,0x10(%r9,%rcx,4)
    348038fd:	41 c7 44 89 08 fe ff 	movl   $0xfffffffe,0x8(%r9,%rcx,4)
    34803904:	ff ff 
    34803906:	48 ff c0             	inc    %rax
    34803909:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    3480390f:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    34803914:	31 f6                	xor    %esi,%esi
    34803916:	f3 0f 10 05 36 ff 00 	movss  0xff36(%rip),%xmm0        # 34813854 <DoEmFloatIteration.jtable+0x934>
    3480391d:	00 
    3480391e:	66 90                	xchg   %ax,%ax
    34803920:	83 3a 00             	cmpl   $0x0,(%rdx)
    34803923:	0f 89 17 00 00 00    	jns    34803940 <DoHuffIteration+0x250>
    34803929:	f3 0f 10 4a fc       	movss  -0x4(%rdx),%xmm1
    3480392e:	0f 2e c1             	ucomiss %xmm1,%xmm0
    34803931:	0f 86 09 00 00 00    	jbe    34803940 <DoHuffIteration+0x250>
    34803937:	0f 28 c1             	movaps %xmm1,%xmm0
    3480393a:	41 89 f0             	mov    %esi,%r8d
    3480393d:	0f 1f 00             	nopl   (%rax)
    34803940:	48 ff c6             	inc    %rsi
    34803943:	48 83 c2 14          	add    $0x14,%rdx
    34803947:	48 39 f0             	cmp    %rsi,%rax
    3480394a:	0f 85 d0 ff ff ff    	jne    34803920 <DoHuffIteration+0x230>
    34803950:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    34803954:	0f 84 66 00 00 00    	je     348039c0 <DoHuffIteration+0x2d0>
    3480395a:	44 89 c2             	mov    %r8d,%edx
    3480395d:	be ff ff ff ff       	mov    $0xffffffff,%esi
    34803962:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    34803967:	31 db                	xor    %ebx,%ebx
    34803969:	f3 0f 10 0d e3 fe 00 	movss  0xfee3(%rip),%xmm1        # 34813854 <DoEmFloatIteration.jtable+0x934>
    34803970:	00 
    34803971:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34803978:	0f 1f 84 00 00 00 00 
    3480397f:	00 
    34803980:	48 39 da             	cmp    %rbx,%rdx
    34803983:	0f 84 1d 00 00 00    	je     348039a6 <DoHuffIteration+0x2b6>
    34803989:	8b 0f                	mov    (%rdi),%ecx
    3480398b:	85 c9                	test   %ecx,%ecx
    3480398d:	0f 89 13 00 00 00    	jns    348039a6 <DoHuffIteration+0x2b6>
    34803993:	f3 0f 10 57 fc       	movss  -0x4(%rdi),%xmm2
    34803998:	0f 2e ca             	ucomiss %xmm2,%xmm1
    3480399b:	0f 86 05 00 00 00    	jbe    348039a6 <DoHuffIteration+0x2b6>
    348039a1:	0f 28 ca             	movaps %xmm2,%xmm1
    348039a4:	89 de                	mov    %ebx,%esi
    348039a6:	48 ff c3             	inc    %rbx
    348039a9:	48 83 c7 14          	add    $0x14,%rdi
    348039ad:	48 39 d8             	cmp    %rbx,%rax
    348039b0:	0f 85 ca ff ff ff    	jne    34803980 <DoHuffIteration+0x290>
    348039b6:	e9 05 ff ff ff       	jmpq   348038c0 <DoHuffIteration+0x1d0>
    348039bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    348039c0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    348039c5:	4c 89 64 24 70       	mov    %r12,0x70(%rsp)
    348039ca:	0f 84 e0 00 00 00    	je     34803ab0 <DoHuffIteration+0x3c0>
    348039d0:	31 f6                	xor    %esi,%esi
    348039d2:	31 c0                	xor    %eax,%eax
    348039d4:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348039d9:	48 8b 14 24          	mov    (%rsp),%rdx
    348039dd:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    348039e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348039e9:	1f 84 00 00 00 00 00 
    348039f0:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    348039f5:	48 0f be 04 30       	movsbq (%rax,%rsi,1),%rax
    348039fa:	48 8d 0c 80          	lea    (%rax,%rax,4),%rcx
    348039fe:	41 8b 4c 89 08       	mov    0x8(%r9,%rcx,4),%ecx
    34803a03:	83 f9 fe             	cmp    $0xfffffffe,%ecx
    34803a06:	0f 84 8e 00 00 00    	je     34803a9a <DoHuffIteration+0x3aa>
    34803a0c:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    34803a11:	45 31 e4             	xor    %r12d,%r12d
    34803a14:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34803a1b:	00 00 00 00 00 
    34803a20:	48 63 d1             	movslq %ecx,%rdx
    34803a23:	48 8d 14 92          	lea    (%rdx,%rdx,4),%rdx
    34803a27:	41 39 44 91 0c       	cmp    %eax,0xc(%r9,%rdx,4)
    34803a2c:	0f 94 c0             	sete   %al
    34803a2f:	b3 31                	mov    $0x31,%bl
    34803a31:	28 c3                	sub    %al,%bl
    34803a33:	42 88 9c 24 80 00 00 	mov    %bl,0x80(%rsp,%r12,1)
    34803a3a:	00 
    34803a3b:	49 ff c4             	inc    %r12
    34803a3e:	89 c8                	mov    %ecx,%eax
    34803a40:	41 8b 4c 91 08       	mov    0x8(%r9,%rdx,4),%ecx
    34803a45:	83 f9 fe             	cmp    $0xfffffffe,%ecx
    34803a48:	0f 85 d2 ff ff ff    	jne    34803a20 <DoHuffIteration+0x330>
    34803a4e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34803a53:	89 c3                	mov    %eax,%ebx
    34803a55:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    34803a5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34803a60:	42 0f be 54 24 7f    	movsbl 0x7f(%rsp,%r12,1),%edx
    34803a66:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    34803a6b:	89 de                	mov    %ebx,%esi
    34803a6d:	e8 1e 21 00 00       	callq  34805b90 <SetCompBit>
    34803a72:	ff c3                	inc    %ebx
    34803a74:	49 ff cc             	dec    %r12
    34803a77:	0f 85 e3 ff ff ff    	jne    34803a60 <DoHuffIteration+0x370>
    34803a7d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    34803a82:	48 01 44 24 10       	add    %rax,0x10(%rsp)
    34803a87:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    34803a8c:	48 8b 14 24          	mov    (%rsp),%rdx
    34803a90:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    34803a95:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    34803a9a:	48 ff c6             	inc    %rsi
    34803a9d:	48 39 d6             	cmp    %rdx,%rsi
    34803aa0:	0f 82 4a ff ff ff    	jb     348039f0 <DoHuffIteration+0x300>
    34803aa6:	e9 0c 00 00 00       	jmpq   34803ab7 <DoHuffIteration+0x3c7>
    34803aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34803ab0:	31 c0                	xor    %eax,%eax
    34803ab2:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    34803ab7:	49 63 c2             	movslq %r10d,%rax
    34803aba:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    34803abf:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    34803ac3:	49 8d 44 81 0c       	lea    0xc(%r9,%rax,4),%rax
    34803ac8:	45 31 e4             	xor    %r12d,%r12d
    34803acb:	31 c9                	xor    %ecx,%ecx
    34803acd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    34803ad2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34803ad9:	1f 84 00 00 00 00 00 
    34803ae0:	83 38 ff             	cmpl   $0xffffffff,(%rax)
    34803ae3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    34803ae8:	0f 84 62 00 00 00    	je     34803b50 <DoHuffIteration+0x460>
    34803aee:	48 89 c1             	mov    %rax,%rcx
    34803af1:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    34803af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34803afd:	00 00 00 
    34803b00:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    34803b05:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
    34803b0a:	44 89 e6             	mov    %r12d,%esi
    34803b0d:	e8 be 20 00 00       	callq  34805bd0 <GetCompBit>
    34803b12:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    34803b17:	85 c0                	test   %eax,%eax
    34803b19:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    34803b1d:	49 8d 44 81 10       	lea    0x10(%r9,%rax,4),%rax
    34803b22:	48 0f 44 44 24 30    	cmove  0x30(%rsp),%rax
    34803b28:	49 ff c4             	inc    %r12
    34803b2b:	48 63 18             	movslq (%rax),%rbx
    34803b2e:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    34803b32:	49 8d 4c 81 0c       	lea    0xc(%r9,%rax,4),%rcx
    34803b37:	41 83 7c 81 0c ff    	cmpl   $0xffffffff,0xc(%r9,%rax,4)
    34803b3d:	0f 85 bd ff ff ff    	jne    34803b00 <DoHuffIteration+0x410>
    34803b43:	e9 0d 00 00 00       	jmpq   34803b55 <DoHuffIteration+0x465>
    34803b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34803b4f:	00 
    34803b50:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    34803b55:	48 8d 04 9b          	lea    (%rbx,%rbx,4),%rax
    34803b59:	41 8a 04 81          	mov    (%r9,%rax,4),%al
    34803b5d:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    34803b62:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    34803b67:	88 04 11             	mov    %al,(%rcx,%rdx,1)
    34803b6a:	48 89 d1             	mov    %rdx,%rcx
    34803b6d:	48 ff c1             	inc    %rcx
    34803b70:	4c 3b 64 24 10       	cmp    0x10(%rsp),%r12
    34803b75:	f3 0f 10 0d d3 fc 00 	movss  0xfcd3(%rip),%xmm1        # 34813850 <DoEmFloatIteration.jtable+0x930>
    34803b7c:	00 
    34803b7d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    34803b82:	0f 8c 58 ff ff ff    	jl     34803ae0 <DoHuffIteration+0x3f0>
    34803b88:	4c 8b 64 24 70       	mov    0x70(%rsp),%r12
    34803b8d:	4d 85 e4             	test   %r12,%r12
    34803b90:	0f 85 fa fb ff ff    	jne    34803790 <DoHuffIteration+0xa0>
    34803b96:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    34803b9b:	e8 40 34 00 00       	callq  34806fe0 <StopStopwatch>
    34803ba0:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    34803ba7:	5b                   	pop    %rbx
    34803ba8:	41 5c                	pop    %r12
    34803baa:	c3                   	retq   
    34803bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034803bb0 <DoNNET>:
    34803bb0:	31 ff                	xor    %edi,%edi
    34803bb2:	e9 09 00 00 00       	jmpq   34803bc0 <__DoNNET>
    34803bb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34803bbe:	00 00 

0000000034803bc0 <__DoNNET>:
    34803bc0:	53                   	push   %rbx
    34803bc1:	48 83 ec 50          	sub    $0x50,%rsp
    34803bc5:	bf 03 00 00 00       	mov    $0x3,%edi
    34803bca:	e8 41 d6 ff ff       	callq  34801210 <randnum>
    34803bcf:	e8 6c 27 00 00       	callq  34806340 <read_data_mem>
    34803bd4:	83 3d e5 4e b1 00 00 	cmpl   $0x0,0xb14ee5(%rip)        # 35318ac0 <global_nnetstruct>
    34803bdb:	0f 85 4f 00 00 00    	jne    34803c30 <__DoNNET+0x70>
    34803be1:	48 c7 05 e4 4e b1 00 	movq   $0x1,0xb14ee4(%rip)        # 35318ad0 <global_nnetstruct+0x10>
    34803be8:	01 00 00 00 
    34803bec:	0f 1f 40 00          	nopl   0x0(%rax)
    34803bf0:	bf 03 00 00 00       	mov    $0x3,%edi
    34803bf5:	e8 16 d6 ff ff       	callq  34801210 <randnum>
    34803bfa:	48 8b 3d cf 4e b1 00 	mov    0xb14ecf(%rip),%rdi        # 35318ad0 <global_nnetstruct+0x10>
    34803c01:	e8 0a 01 00 00       	callq  34803d10 <DoNNetIteration>
    34803c06:	48 3b 05 53 4e b1 00 	cmp    0xb14e53(%rip),%rax        # 35318a60 <global_min_ticks>
    34803c0d:	0f 87 1d 00 00 00    	ja     34803c30 <__DoNNET+0x70>
    34803c13:	48 8b 05 b6 4e b1 00 	mov    0xb14eb6(%rip),%rax        # 35318ad0 <global_nnetstruct+0x10>
    34803c1a:	48 ff c0             	inc    %rax
    34803c1d:	48 89 05 ac 4e b1 00 	mov    %rax,0xb14eac(%rip)        # 35318ad0 <global_nnetstruct+0x10>
    34803c24:	48 3d 20 a1 07 00    	cmp    $0x7a120,%rax
    34803c2a:	0f 82 c0 ff ff ff    	jb     34803bf0 <__DoNNET+0x30>
    34803c30:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34803c34:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34803c3a:	31 db                	xor    %ebx,%ebx
    34803c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    34803c40:	bf 03 00 00 00       	mov    $0x3,%edi
    34803c45:	e8 c6 d5 ff ff       	callq  34801210 <randnum>
    34803c4a:	48 8b 3d 7f 4e b1 00 	mov    0xb14e7f(%rip),%rdi        # 35318ad0 <global_nnetstruct+0x10>
    34803c51:	e8 ba 00 00 00       	callq  34803d10 <DoNNetIteration>
    34803c56:	48 01 c3             	add    %rax,%rbx
    34803c59:	f3 0f 7e 05 6f 4e b1 	movq   0xb14e6f(%rip),%xmm0        # 35318ad0 <global_nnetstruct+0x10>
    34803c60:	00 
    34803c61:	66 0f 62 05 87 fb 00 	punpckldq 0xfb87(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    34803c68:	00 
    34803c69:	66 0f 5c 05 8f fb 00 	subpd  0xfb8f(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34803c70:	00 
    34803c71:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34803c76:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    34803c7a:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34803c80:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34803c84:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    34803c8a:	48 89 df             	mov    %rbx,%rdi
    34803c8d:	e8 5e 33 00 00       	callq  34806ff0 <TicksToSecs>
    34803c92:	48 3b 05 2f 4e b1 00 	cmp    0xb14e2f(%rip),%rax        # 35318ac8 <global_nnetstruct+0x8>
    34803c99:	0f 82 a1 ff ff ff    	jb     34803c40 <__DoNNET+0x80>
    34803c9f:	48 89 df             	mov    %rbx,%rdi
    34803ca2:	e8 69 33 00 00       	callq  34807010 <TicksToFracSecs>
    34803ca7:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34803cad:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34803cb1:	f2 0f 11 0d 1f 4e b1 	movsd  %xmm1,0xb14e1f(%rip)        # 35318ad8 <global_nnetstruct+0x18>
    34803cb8:	00 
    34803cb9:	48 89 df             	mov    %rbx,%rdi
    34803cbc:	e8 4f 33 00 00       	callq  34807010 <TicksToFracSecs>
    34803cc1:	f2 0f 5e 44 24 08    	divsd  0x8(%rsp),%xmm0
    34803cc7:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    34803ccc:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34803cd1:	b0 01                	mov    $0x1,%al
    34803cd3:	48 89 df             	mov    %rbx,%rdi
    34803cd6:	e8 a5 85 00 00       	callq  3480c280 <sprintf>
    34803cdb:	48 89 df             	mov    %rbx,%rdi
    34803cde:	e8 dd 8b 00 00       	callq  3480c8c0 <puts>
    34803ce3:	83 3d d6 4d b1 00 00 	cmpl   $0x0,0xb14dd6(%rip)        # 35318ac0 <global_nnetstruct>
    34803cea:	0f 85 0a 00 00 00    	jne    34803cfa <__DoNNET+0x13a>
    34803cf0:	c7 05 c6 4d b1 00 01 	movl   $0x1,0xb14dc6(%rip)        # 35318ac0 <global_nnetstruct>
    34803cf7:	00 00 00 
    34803cfa:	48 83 c4 50          	add    $0x50,%rsp
    34803cfe:	5b                   	pop    %rbx
    34803cff:	c3                   	retq   

0000000034803d00 <DoNNETfromFile>:
    34803d00:	31 ff                	xor    %edi,%edi
    34803d02:	e9 b9 fe ff ff       	jmpq   34803bc0 <__DoNNET>
    34803d07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34803d0e:	00 00 

0000000034803d10 <DoNNetIteration>:
    34803d10:	41 54                	push   %r12
    34803d12:	53                   	push   %rbx
    34803d13:	50                   	push   %rax
    34803d14:	48 89 fb             	mov    %rdi,%rbx
    34803d17:	31 c0                	xor    %eax,%eax
    34803d19:	e8 b2 32 00 00       	callq  34806fd0 <StartStopwatch>
    34803d1e:	48 89 04 24          	mov    %rax,(%rsp)
    34803d22:	48 85 db             	test   %rbx,%rbx
    34803d25:	0f 84 9d 00 00 00    	je     34803dc8 <DoNNetIteration+0xb8>
    34803d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34803d30:	e8 eb 1e 00 00       	callq  34805c20 <randomize_wts>
    34803d35:	e8 06 20 00 00       	callq  34805d40 <zero_changes>
    34803d3a:	c7 05 78 a7 b1 00 01 	movl   $0x1,0xb1a778(%rip)        # 3531e4bc <iteration_count>
    34803d41:	00 00 00 
    34803d44:	c7 05 6a a7 b1 00 00 	movl   $0x0,0xb1a76a(%rip)        # 3531e4b8 <learned>
    34803d4b:	00 00 00 
    34803d4e:	c7 05 28 b0 b1 00 00 	movl   $0x0,0xb1b028(%rip)        # 3531ed80 <numpasses>
    34803d55:	00 00 00 
    34803d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34803d5f:	00 
    34803d60:	83 3d f1 a6 b1 00 00 	cmpl   $0x0,0xb1a6f1(%rip)        # 3531e458 <numpats>
    34803d67:	0f 8e 39 00 00 00    	jle    34803da6 <DoNNetIteration+0x96>
    34803d6d:	45 31 e4             	xor    %r12d,%r12d
    34803d70:	48 c7 05 35 a7 b1 00 	movq   $0x0,0xb1a735(%rip)        # 3531e4b0 <worst_error>
    34803d77:	00 00 00 00 
    34803d7b:	e8 10 20 00 00       	callq  34805d90 <move_wt_changes>
    34803d80:	44 89 e7             	mov    %r12d,%edi
    34803d83:	e8 68 1e 00 00       	callq  34805bf0 <do_forward_pass>
    34803d88:	44 89 e7             	mov    %r12d,%edi
    34803d8b:	e8 70 1e 00 00       	callq  34805c00 <do_back_pass>
    34803d90:	ff 05 26 a7 b1 00    	incl   0xb1a726(%rip)        # 3531e4bc <iteration_count>
    34803d96:	41 ff c4             	inc    %r12d
    34803d99:	44 3b 25 b8 a6 b1 00 	cmp    0xb1a6b8(%rip),%r12d        # 3531e458 <numpats>
    34803da0:	0f 8c ca ff ff ff    	jl     34803d70 <DoNNetIteration+0x60>
    34803da6:	ff 05 d4 af b1 00    	incl   0xb1afd4(%rip)        # 3531ed80 <numpasses>
    34803dac:	e8 9f 24 00 00       	callq  34806250 <check_out_error>
    34803db1:	89 05 01 a7 b1 00    	mov    %eax,0xb1a701(%rip)        # 3531e4b8 <learned>
    34803db7:	85 c0                	test   %eax,%eax
    34803db9:	0f 84 a1 ff ff ff    	je     34803d60 <DoNNetIteration+0x50>
    34803dbf:	48 ff cb             	dec    %rbx
    34803dc2:	0f 85 68 ff ff ff    	jne    34803d30 <DoNNetIteration+0x20>
    34803dc8:	48 8b 3c 24          	mov    (%rsp),%rdi
    34803dcc:	48 83 c4 08          	add    $0x8,%rsp
    34803dd0:	5b                   	pop    %rbx
    34803dd1:	41 5c                	pop    %r12
    34803dd3:	e9 08 32 00 00       	jmpq   34806fe0 <StopStopwatch>
    34803dd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34803ddf:	00 

0000000034803de0 <DoLU>:
    34803de0:	41 54                	push   %r12
    34803de2:	53                   	push   %rbx
    34803de3:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    34803dea:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    34803def:	bf c8 3e 01 00       	mov    $0x13ec8,%edi
    34803df4:	4c 89 e6             	mov    %r12,%rsi
    34803df7:	e8 c4 2e 00 00       	callq  34806cc0 <AllocateMemory>
    34803dfc:	48 89 c3             	mov    %rax,%rbx
    34803dff:	bf 28 03 00 00       	mov    $0x328,%edi
    34803e04:	4c 89 e6             	mov    %r12,%rsi
    34803e07:	e8 b4 2e 00 00       	callq  34806cc0 <AllocateMemory>
    34803e0c:	bf 28 03 00 00       	mov    $0x328,%edi
    34803e11:	4c 89 e6             	mov    %r12,%rsi
    34803e14:	49 89 dc             	mov    %rbx,%r12
    34803e17:	48 89 c3             	mov    %rax,%rbx
    34803e1a:	e8 a1 2e 00 00       	callq  34806cc0 <AllocateMemory>
    34803e1f:	48 89 05 2a a6 b1 00 	mov    %rax,0xb1a62a(%rip)        # 3531e450 <LUtempvv>
    34803e26:	4c 89 e7             	mov    %r12,%rdi
    34803e29:	48 89 de             	mov    %rbx,%rsi
    34803e2c:	e8 2f 03 00 00       	callq  34804160 <build_problem>
    34803e31:	83 3d 10 46 b1 00 00 	cmpl   $0x0,0xb14610(%rip)        # 35318448 <global_lustruct>
    34803e38:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    34803e3d:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    34803e42:	0f 84 99 00 00 00    	je     34803ee1 <DoLU+0x101>
    34803e48:	48 69 3d 05 46 b1 00 	imul   $0x13ec8,0xb14605(%rip),%rdi        # 35318458 <global_lustruct+0x10>
    34803e4f:	c8 3e 01 00 
    34803e53:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34803e58:	e8 63 2e 00 00       	callq  34806cc0 <AllocateMemory>
    34803e5d:	48 89 c3             	mov    %rax,%rbx
    34803e60:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803e64:	85 f6                	test   %esi,%esi
    34803e66:	0f 84 22 00 00 00    	je     34803e8e <DoLU+0xae>
    34803e6c:	bf 49 3a 81 34       	mov    $0x34813a49,%edi
    34803e71:	e8 9a 30 00 00       	callq  34806f10 <ReportError>
    34803e76:	31 d2                	xor    %edx,%edx
    34803e78:	31 c9                	xor    %ecx,%ecx
    34803e7a:	4c 89 e7             	mov    %r12,%rdi
    34803e7d:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    34803e82:	e8 89 04 00 00       	callq  34804310 <LUFreeMem>
    34803e87:	31 c0                	xor    %eax,%eax
    34803e89:	e8 32 31 00 00       	callq  34806fc0 <ErrorExit>
    34803e8e:	48 69 3d bf 45 b1 00 	imul   $0x328,0xb145bf(%rip),%rdi        # 35318458 <global_lustruct+0x10>
    34803e95:	28 03 00 00 
    34803e99:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34803e9e:	e8 1d 2e 00 00       	callq  34806cc0 <AllocateMemory>
    34803ea3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    34803ea8:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803eac:	85 f6                	test   %esi,%esi
    34803eae:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    34803eb3:	0f 84 a3 01 00 00    	je     3480405c <DoLU+0x27c>
    34803eb9:	bf 49 3a 81 34       	mov    $0x34813a49,%edi
    34803ebe:	e8 4d 30 00 00       	callq  34806f10 <ReportError>
    34803ec3:	31 c9                	xor    %ecx,%ecx
    34803ec5:	4c 89 e7             	mov    %r12,%rdi
    34803ec8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    34803ecd:	48 89 da             	mov    %rbx,%rdx
    34803ed0:	e8 3b 04 00 00       	callq  34804310 <LUFreeMem>
    34803ed5:	31 c0                	xor    %eax,%eax
    34803ed7:	e8 e4 30 00 00       	callq  34806fc0 <ErrorExit>
    34803edc:	e9 7b 01 00 00       	jmpq   3480405c <DoLU+0x27c>
    34803ee1:	48 c7 05 6c 45 b1 00 	movq   $0x0,0xb1456c(%rip)        # 35318458 <global_lustruct+0x10>
    34803ee8:	00 00 00 00 
    34803eec:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    34803ef2:	b9 90 7d 02 00       	mov    $0x27d90,%ecx
    34803ef7:	b8 50 06 00 00       	mov    $0x650,%eax
    34803efc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    34803f01:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34803f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34803f0d:	00 00 00 
    34803f10:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    34803f15:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    34803f1a:	48 89 cf             	mov    %rcx,%rdi
    34803f1d:	48 89 de             	mov    %rbx,%rsi
    34803f20:	e8 9b 2d 00 00       	callq  34806cc0 <AllocateMemory>
    34803f25:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    34803f2a:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803f2e:	85 f6                	test   %esi,%esi
    34803f30:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    34803f35:	0f 84 22 00 00 00    	je     34803f5d <DoLU+0x17d>
    34803f3b:	bf 49 3a 81 34       	mov    $0x34813a49,%edi
    34803f40:	e8 cb 2f 00 00       	callq  34806f10 <ReportError>
    34803f45:	31 d2                	xor    %edx,%edx
    34803f47:	31 c9                	xor    %ecx,%ecx
    34803f49:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803f4e:	4c 89 e6             	mov    %r12,%rsi
    34803f51:	e8 ba 03 00 00       	callq  34804310 <LUFreeMem>
    34803f56:	31 c0                	xor    %eax,%eax
    34803f58:	e8 63 30 00 00       	callq  34806fc0 <ErrorExit>
    34803f5d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34803f62:	48 89 de             	mov    %rbx,%rsi
    34803f65:	e8 56 2d 00 00       	callq  34806cc0 <AllocateMemory>
    34803f6a:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    34803f6f:	8b 74 24 04          	mov    0x4(%rsp),%esi
    34803f73:	85 f6                	test   %esi,%esi
    34803f75:	4c 89 e3             	mov    %r12,%rbx
    34803f78:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803f7d:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    34803f82:	0f 84 28 00 00 00    	je     34803fb0 <DoLU+0x1d0>
    34803f88:	bf 49 3a 81 34       	mov    $0x34813a49,%edi
    34803f8d:	e8 7e 2f 00 00       	callq  34806f10 <ReportError>
    34803f92:	31 c9                	xor    %ecx,%ecx
    34803f94:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803f99:	48 89 de             	mov    %rbx,%rsi
    34803f9c:	4c 89 e2             	mov    %r12,%rdx
    34803f9f:	e8 6c 03 00 00       	callq  34804310 <LUFreeMem>
    34803fa4:	31 c0                	xor    %eax,%eax
    34803fa6:	e8 15 30 00 00       	callq  34806fc0 <ErrorExit>
    34803fab:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34803fb0:	48 89 de             	mov    %rbx,%rsi
    34803fb3:	4c 89 e3             	mov    %r12,%rbx
    34803fb6:	4c 89 e2             	mov    %r12,%rdx
    34803fb9:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34803fbe:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    34803fc3:	4d 89 e0             	mov    %r12,%r8
    34803fc6:	e8 c5 03 00 00       	callq  34804390 <DoLUIteration>
    34803fcb:	48 3b 05 8e 4a b1 00 	cmp    0xb14a8e(%rip),%rax        # 35318a60 <global_min_ticks>
    34803fd2:	0f 87 7d 00 00 00    	ja     34804055 <DoLU+0x275>
    34803fd8:	49 ff c4             	inc    %r12
    34803fdb:	48 89 df             	mov    %rbx,%rdi
    34803fde:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34803fe3:	48 89 de             	mov    %rbx,%rsi
    34803fe6:	e8 f5 2d 00 00       	callq  34806de0 <FreeMemory>
    34803feb:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    34803ff0:	48 89 de             	mov    %rbx,%rsi
    34803ff3:	e8 e8 2d 00 00       	callq  34806de0 <FreeMemory>
    34803ff8:	49 8d 44 24 ff       	lea    -0x1(%r12),%rax
    34803ffd:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    34804002:	48 81 c1 c8 3e 01 00 	add    $0x13ec8,%rcx
    34804009:	48 81 44 24 10 28 03 	addq   $0x328,0x10(%rsp)
    34804010:	00 00 
    34804012:	48 3d 10 27 00 00    	cmp    $0x2710,%rax
    34804018:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3480401d:	0f 8c ed fe ff ff    	jl     34803f10 <DoLU+0x130>
    34804023:	48 83 3d 2d 44 b1 00 	cmpq   $0x0,0xb1442d(%rip)        # 35318458 <global_lustruct+0x10>
    3480402a:	00 
    3480402b:	0f 85 2b 00 00 00    	jne    3480405c <DoLU+0x27c>
    34804031:	bf 50 3a 81 34       	mov    $0x34813a50,%edi
    34804036:	48 89 c3             	mov    %rax,%rbx
    34804039:	e8 82 88 00 00       	callq  3480c8c0 <puts>
    3480403e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804043:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    34804048:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    3480404d:	48 89 d9             	mov    %rbx,%rcx
    34804050:	e9 7b fe ff ff       	jmpq   34803ed0 <DoLU+0xf0>
    34804055:	4c 89 25 fc 43 b1 00 	mov    %r12,0xb143fc(%rip)        # 35318458 <global_lustruct+0x10>
    3480405c:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34804060:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    34804066:	31 db                	xor    %ebx,%ebx
    34804068:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    3480406d:	0f 1f 00             	nopl   (%rax)
    34804070:	4c 8b 05 e1 43 b1 00 	mov    0xb143e1(%rip),%r8        # 35318458 <global_lustruct+0x10>
    34804077:	4c 89 e7             	mov    %r12,%rdi
    3480407a:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3480407f:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    34804084:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34804089:	e8 02 03 00 00       	callq  34804390 <DoLUIteration>
    3480408e:	48 01 c3             	add    %rax,%rbx
    34804091:	f3 0f 7e 05 bf 43 b1 	movq   0xb143bf(%rip),%xmm0        # 35318458 <global_lustruct+0x10>
    34804098:	00 
    34804099:	66 0f 62 05 4f f7 00 	punpckldq 0xf74f(%rip),%xmm0        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    348040a0:	00 
    348040a1:	66 0f 5c 05 57 f7 00 	subpd  0xf757(%rip),%xmm0        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    348040a8:	00 
    348040a9:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    348040ae:	66 0f 58 c8          	addpd  %xmm0,%xmm1
    348040b2:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    348040b8:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    348040bc:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    348040c2:	48 89 df             	mov    %rbx,%rdi
    348040c5:	e8 26 2f 00 00       	callq  34806ff0 <TicksToSecs>
    348040ca:	48 3b 05 7f 43 b1 00 	cmp    0xb1437f(%rip),%rax        # 35318450 <global_lustruct+0x8>
    348040d1:	0f 82 99 ff ff ff    	jb     34804070 <DoLU+0x290>
    348040d7:	48 89 df             	mov    %rbx,%rdi
    348040da:	e8 31 2f 00 00       	callq  34807010 <TicksToFracSecs>
    348040df:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
    348040e5:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    348040e9:	f2 0f 11 0d 6f 43 b1 	movsd  %xmm1,0xb1436f(%rip)        # 35318460 <global_lustruct+0x18>
    348040f0:	00 
    348040f1:	48 89 df             	mov    %rbx,%rdi
    348040f4:	e8 17 2f 00 00       	callq  34807010 <TicksToFracSecs>
    348040f9:	f2 0f 5e 44 24 10    	divsd  0x10(%rsp),%xmm0
    348040ff:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    34804104:	be ac 39 81 34       	mov    $0x348139ac,%esi
    34804109:	b0 01                	mov    $0x1,%al
    3480410b:	48 89 df             	mov    %rbx,%rdi
    3480410e:	e8 6d 81 00 00       	callq  3480c280 <sprintf>
    34804113:	48 89 df             	mov    %rbx,%rdi
    34804116:	e8 a5 87 00 00       	callq  3480c8c0 <puts>
    3480411b:	83 3d 26 43 b1 00 00 	cmpl   $0x0,0xb14326(%rip)        # 35318448 <global_lustruct>
    34804122:	0f 85 0a 00 00 00    	jne    34804132 <DoLU+0x352>
    34804128:	c7 05 16 43 b1 00 01 	movl   $0x1,0xb14316(%rip)        # 35318448 <global_lustruct>
    3480412f:	00 00 00 
    34804132:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804137:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3480413c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    34804141:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34804146:	e8 c5 01 00 00       	callq  34804310 <LUFreeMem>
    3480414b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    34804152:	5b                   	pop    %rbx
    34804153:	41 5c                	pop    %r12
    34804155:	c3                   	retq   
    34804156:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480415d:	00 00 00 

0000000034804160 <build_problem>:
    34804160:	41 54                	push   %r12
    34804162:	53                   	push   %rbx
    34804163:	48 83 ec 18          	sub    $0x18,%rsp
    34804167:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    3480416c:	48 89 fb             	mov    %rdi,%rbx
    3480416f:	bf 0d 00 00 00       	mov    $0xd,%edi
    34804174:	e8 97 d0 ff ff       	callq  34801210 <randnum>
    34804179:	31 c0                	xor    %eax,%eax
    3480417b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    34804180:	48 89 04 24          	mov    %rax,(%rsp)
    34804184:	bf 64 00 00 00       	mov    $0x64,%edi
    34804189:	e8 02 d1 ff ff       	callq  34801290 <abs_randwc>
    3480418e:	ff c0                	inc    %eax
    34804190:	0f 57 c0             	xorps  %xmm0,%xmm0
    34804193:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    34804198:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3480419d:	48 8b 0c 24          	mov    (%rsp),%rcx
    348041a1:	f2 0f 11 04 c8       	movsd  %xmm0,(%rax,%rcx,8)
    348041a6:	48 8b 04 24          	mov    (%rsp),%rax
    348041aa:	45 31 e4             	xor    %r12d,%r12d
    348041ad:	0f 1f 00             	nopl   (%rax)
    348041b0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    348041b4:	4c 39 e0             	cmp    %r12,%rax
    348041b7:	0f 85 18 00 00 00    	jne    348041d5 <build_problem+0x75>
    348041bd:	bf e8 03 00 00       	mov    $0x3e8,%edi
    348041c2:	e8 c9 d0 ff ff       	callq  34801290 <abs_randwc>
    348041c7:	ff c0                	inc    %eax
    348041c9:	0f 57 c0             	xorps  %xmm0,%xmm0
    348041cc:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    348041d1:	48 8b 04 24          	mov    (%rsp),%rax
    348041d5:	f2 42 0f 11 04 e3    	movsd  %xmm0,(%rbx,%r12,8)
    348041db:	49 ff c4             	inc    %r12
    348041de:	49 83 fc 65          	cmp    $0x65,%r12
    348041e2:	0f 85 c8 ff ff ff    	jne    348041b0 <build_problem+0x50>
    348041e8:	48 ff c0             	inc    %rax
    348041eb:	48 81 c3 28 03 00 00 	add    $0x328,%rbx
    348041f2:	48 83 f8 65          	cmp    $0x65,%rax
    348041f6:	0f 85 84 ff ff ff    	jne    34804180 <build_problem+0x20>
    348041fc:	31 db                	xor    %ebx,%ebx
    348041fe:	66 90                	xchg   %ax,%ax
    34804200:	bf 65 00 00 00       	mov    $0x65,%edi
    34804205:	e8 86 d0 ff ff       	callq  34801290 <abs_randwc>
    3480420a:	41 89 c4             	mov    %eax,%r12d
    3480420d:	bf 65 00 00 00       	mov    $0x65,%edi
    34804212:	e8 79 d0 ff ff       	callq  34801290 <abs_randwc>
    34804217:	41 39 c4             	cmp    %eax,%r12d
    3480421a:	0f 84 d7 00 00 00    	je     348042f7 <build_problem+0x197>
    34804220:	45 89 e1             	mov    %r12d,%r9d
    34804223:	41 89 c0             	mov    %eax,%r8d
    34804226:	31 d2                	xor    %edx,%edx
    34804228:	45 39 c1             	cmp    %r8d,%r9d
    3480422b:	0f 92 c2             	setb   %dl
    3480422e:	f2 0f 10 04 d5 10 38 	movsd  0x34813810(,%rdx,8),%xmm0
    34804235:	81 34 
    34804237:	49 69 f9 28 03 00 00 	imul   $0x328,%r9,%rdi
    3480423e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34804243:	48 8d 14 39          	lea    (%rcx,%rdi,1),%rdx
    34804247:	49 69 c0 28 03 00 00 	imul   $0x328,%r8,%rax
    3480424e:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
    34804252:	48 8d 84 01 28 03 00 	lea    0x328(%rcx,%rax,1),%rax
    34804259:	00 
    3480425a:	48 39 c2             	cmp    %rax,%rdx
    3480425d:	0f 83 1d 00 00 00    	jae    34804280 <build_problem+0x120>
    34804263:	48 8d 84 39 28 03 00 	lea    0x328(%rcx,%rdi,1),%rax
    3480426a:	00 
    3480426b:	48 39 c6             	cmp    %rax,%rsi
    3480426e:	0f 83 0c 00 00 00    	jae    34804280 <build_problem+0x120>
    34804274:	31 ff                	xor    %edi,%edi
    34804276:	e9 45 00 00 00       	jmpq   348042c0 <build_problem+0x160>
    3480427b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34804280:	0f 28 c8             	movaps %xmm0,%xmm1
    34804283:	0f 16 c9             	movlhps %xmm1,%xmm1
    34804286:	31 ff                	xor    %edi,%edi
    34804288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480428f:	00 
    34804290:	66 0f 10 14 fe       	movupd (%rsi,%rdi,8),%xmm2
    34804295:	66 0f 59 d1          	mulpd  %xmm1,%xmm2
    34804299:	66 0f 10 1c fa       	movupd (%rdx,%rdi,8),%xmm3
    3480429e:	66 0f 58 da          	addpd  %xmm2,%xmm3
    348042a2:	66 0f 11 1c fa       	movupd %xmm3,(%rdx,%rdi,8)
    348042a7:	48 83 c7 02          	add    $0x2,%rdi
    348042ab:	48 83 ff 64          	cmp    $0x64,%rdi
    348042af:	0f 85 db ff ff ff    	jne    34804290 <build_problem+0x130>
    348042b5:	bf 64 00 00 00       	mov    $0x64,%edi
    348042ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348042c0:	f2 0f 10 0c fe       	movsd  (%rsi,%rdi,8),%xmm1
    348042c5:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    348042c9:	f2 0f 58 0c fa       	addsd  (%rdx,%rdi,8),%xmm1
    348042ce:	f2 0f 11 0c fa       	movsd  %xmm1,(%rdx,%rdi,8)
    348042d3:	48 ff c7             	inc    %rdi
    348042d6:	48 83 ff 65          	cmp    $0x65,%rdi
    348042da:	0f 85 e0 ff ff ff    	jne    348042c0 <build_problem+0x160>
    348042e0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    348042e5:	f2 42 0f 59 04 c0    	mulsd  (%rax,%r8,8),%xmm0
    348042eb:	f2 42 0f 58 04 c8    	addsd  (%rax,%r9,8),%xmm0
    348042f1:	f2 42 0f 11 04 c8    	movsd  %xmm0,(%rax,%r9,8)
    348042f7:	48 ff c3             	inc    %rbx
    348042fa:	48 81 fb 28 03 00 00 	cmp    $0x328,%rbx
    34804301:	0f 85 f9 fe ff ff    	jne    34804200 <build_problem+0xa0>
    34804307:	48 83 c4 18          	add    $0x18,%rsp
    3480430b:	5b                   	pop    %rbx
    3480430c:	41 5c                	pop    %r12
    3480430e:	c3                   	retq   
    3480430f:	90                   	nop

0000000034804310 <LUFreeMem>:
    34804310:	41 54                	push   %r12
    34804312:	53                   	push   %rbx
    34804313:	48 83 ec 18          	sub    $0x18,%rsp
    34804317:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    3480431c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    34804321:	49 89 f4             	mov    %rsi,%r12
    34804324:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
    34804329:	48 89 de             	mov    %rbx,%rsi
    3480432c:	e8 af 2a 00 00       	callq  34806de0 <FreeMemory>
    34804331:	4c 89 e7             	mov    %r12,%rdi
    34804334:	48 89 de             	mov    %rbx,%rsi
    34804337:	e8 a4 2a 00 00       	callq  34806de0 <FreeMemory>
    3480433c:	48 8b 3d 0d a1 b1 00 	mov    0xb1a10d(%rip),%rdi        # 3531e450 <LUtempvv>
    34804343:	48 89 de             	mov    %rbx,%rsi
    34804346:	e8 95 2a 00 00       	callq  34806de0 <FreeMemory>
    3480434b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804350:	48 85 ff             	test   %rdi,%rdi
    34804353:	0f 84 0a 00 00 00    	je     34804363 <LUFreeMem+0x53>
    34804359:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    3480435e:	e8 7d 2a 00 00       	callq  34806de0 <FreeMemory>
    34804363:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34804368:	48 85 ff             	test   %rdi,%rdi
    3480436b:	0f 84 0a 00 00 00    	je     3480437b <LUFreeMem+0x6b>
    34804371:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    34804376:	e8 65 2a 00 00       	callq  34806de0 <FreeMemory>
    3480437b:	48 83 c4 18          	add    $0x18,%rsp
    3480437f:	5b                   	pop    %rbx
    34804380:	41 5c                	pop    %r12
    34804382:	c3                   	retq   
    34804383:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480438a:	84 00 00 00 00 00 

0000000034804390 <DoLUIteration>:
    34804390:	41 54                	push   %r12
    34804392:	53                   	push   %rbx
    34804393:	48 83 ec 28          	sub    $0x28,%rsp
    34804397:	4d 85 c0             	test   %r8,%r8
    3480439a:	0f 84 b3 01 00 00    	je     34804553 <DoLUIteration+0x1c3>
    348043a0:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    348043a5:	48 8d 86 28 03 00 00 	lea    0x328(%rsi),%rax
    348043ac:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348043b1:	4c 8d 8f c8 3e 01 00 	lea    0x13ec8(%rdi),%r9
    348043b8:	45 31 c0             	xor    %r8d,%r8d
    348043bb:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    348043c0:	49 89 cc             	mov    %rcx,%r12
    348043c3:	48 89 d0             	mov    %rdx,%rax
    348043c6:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    348043cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    348043d0:	49 69 c8 c8 3e 01 00 	imul   $0x13ec8,%r8,%rcx
    348043d7:	4c 8d 1c 0a          	lea    (%rdx,%rcx,1),%r11
    348043db:	4d 69 d0 28 03 00 00 	imul   $0x328,%r8,%r10
    348043e2:	4d 39 cb             	cmp    %r9,%r11
    348043e5:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    348043ea:	0f 83 20 00 00 00    	jae    34804410 <DoLUIteration+0x80>
    348043f0:	48 8d 8c 0a c8 3e 01 	lea    0x13ec8(%rdx,%rcx,1),%rcx
    348043f7:	00 
    348043f8:	48 39 f9             	cmp    %rdi,%rcx
    348043fb:	0f 86 0f 00 00 00    	jbe    34804410 <DoLUIteration+0x80>
    34804401:	31 c9                	xor    %ecx,%ecx
    34804403:	e9 36 00 00 00       	jmpq   3480443e <DoLUIteration+0xae>
    34804408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480440f:	00 
    34804410:	31 c9                	xor    %ecx,%ecx
    34804412:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804419:	1f 84 00 00 00 00 00 
    34804420:	0f 10 04 cf          	movups (%rdi,%rcx,8),%xmm0
    34804424:	0f 11 04 c8          	movups %xmm0,(%rax,%rcx,8)
    34804428:	48 83 c1 02          	add    $0x2,%rcx
    3480442c:	48 81 f9 d8 27 00 00 	cmp    $0x27d8,%rcx
    34804433:	0f 85 e7 ff ff ff    	jne    34804420 <DoLUIteration+0x90>
    34804439:	b9 d8 27 00 00       	mov    $0x27d8,%ecx
    3480443e:	4e 8d 1c 13          	lea    (%rbx,%r10,1),%r11
    34804442:	4e 8d 94 13 28 03 00 	lea    0x328(%rbx,%r10,1),%r10
    34804449:	00 
    3480444a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34804450:	48 8b 14 cf          	mov    (%rdi,%rcx,8),%rdx
    34804454:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    34804458:	48 ff c1             	inc    %rcx
    3480445b:	48 81 f9 d9 27 00 00 	cmp    $0x27d9,%rcx
    34804462:	0f 85 e8 ff ff ff    	jne    34804450 <DoLUIteration+0xc0>
    34804468:	4c 3b 5c 24 10       	cmp    0x10(%rsp),%r11
    3480446d:	0f 83 1d 00 00 00    	jae    34804490 <DoLUIteration+0x100>
    34804473:	49 39 f2             	cmp    %rsi,%r10
    34804476:	0f 86 14 00 00 00    	jbe    34804490 <DoLUIteration+0x100>
    3480447c:	31 c9                	xor    %ecx,%ecx
    3480447e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    34804483:	e9 38 00 00 00       	jmpq   348044c0 <DoLUIteration+0x130>
    34804488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480448f:	00 
    34804490:	31 c9                	xor    %ecx,%ecx
    34804492:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    34804497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480449e:	00 00 
    348044a0:	0f 10 04 ce          	movups (%rsi,%rcx,8),%xmm0
    348044a4:	41 0f 11 04 cc       	movups %xmm0,(%r12,%rcx,8)
    348044a9:	48 83 c1 02          	add    $0x2,%rcx
    348044ad:	48 83 f9 64          	cmp    $0x64,%rcx
    348044b1:	0f 85 e9 ff ff ff    	jne    348044a0 <DoLUIteration+0x110>
    348044b7:	b9 64 00 00 00       	mov    $0x64,%ecx
    348044bc:	0f 1f 40 00          	nopl   0x0(%rax)
    348044c0:	48 8b 1c ce          	mov    (%rsi,%rcx,8),%rbx
    348044c4:	49 89 1c cc          	mov    %rbx,(%r12,%rcx,8)
    348044c8:	48 ff c1             	inc    %rcx
    348044cb:	48 83 f9 65          	cmp    $0x65,%rcx
    348044cf:	0f 85 eb ff ff ff    	jne    348044c0 <DoLUIteration+0x130>
    348044d5:	49 ff c0             	inc    %r8
    348044d8:	48 05 c8 3e 01 00    	add    $0x13ec8,%rax
    348044de:	49 81 c4 28 03 00 00 	add    $0x328,%r12
    348044e5:	4c 3b 44 24 20       	cmp    0x20(%rsp),%r8
    348044ea:	0f 85 e0 fe ff ff    	jne    348043d0 <DoLUIteration+0x40>
    348044f0:	31 c0                	xor    %eax,%eax
    348044f2:	e8 d9 2a 00 00       	callq  34806fd0 <StartStopwatch>
    348044f7:	48 89 c7             	mov    %rax,%rdi
    348044fa:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    348044ff:	48 85 db             	test   %rbx,%rbx
    34804502:	0f 84 55 00 00 00    	je     3480455d <DoLUIteration+0x1cd>
    34804508:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    3480450d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804512:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    34804517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480451e:	00 00 
    34804520:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34804525:	4c 89 e6             	mov    %r12,%rsi
    34804528:	e8 f3 21 00 00       	callq  34806720 <lusolve>
    3480452d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804532:	49 81 c4 28 03 00 00 	add    $0x328,%r12
    34804539:	48 81 c7 c8 3e 01 00 	add    $0x13ec8,%rdi
    34804540:	48 ff cb             	dec    %rbx
    34804543:	0f 85 d7 ff ff ff    	jne    34804520 <DoLUIteration+0x190>
    34804549:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480454e:	e9 0a 00 00 00       	jmpq   3480455d <DoLUIteration+0x1cd>
    34804553:	31 c0                	xor    %eax,%eax
    34804555:	e8 76 2a 00 00       	callq  34806fd0 <StartStopwatch>
    3480455a:	48 89 c7             	mov    %rax,%rdi
    3480455d:	48 83 c4 28          	add    $0x28,%rsp
    34804561:	5b                   	pop    %rbx
    34804562:	41 5c                	pop    %r12
    34804564:	e9 77 2a 00 00       	jmpq   34806fe0 <StopStopwatch>
    34804569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034804570 <LoadNumArrayWithRand>:
    34804570:	41 54                	push   %r12
    34804572:	53                   	push   %rbx
    34804573:	48 83 ec 18          	sub    $0x18,%rsp
    34804577:	89 54 24 08          	mov    %edx,0x8(%rsp)
    3480457b:	48 89 f3             	mov    %rsi,%rbx
    3480457e:	48 89 3c 24          	mov    %rdi,(%rsp)
    34804582:	bf 0d 00 00 00       	mov    $0xd,%edi
    34804587:	e8 84 cc ff ff       	callq  34801210 <randnum>
    3480458c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    34804591:	48 85 db             	test   %rbx,%rbx
    34804594:	0f 84 2f 00 00 00    	je     348045c9 <LoadNumArrayWithRand+0x59>
    3480459a:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    3480459f:	48 8b 1c 24          	mov    (%rsp),%rbx
    348045a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348045aa:	84 00 00 00 00 00 
    348045b0:	31 ff                	xor    %edi,%edi
    348045b2:	e8 59 cc ff ff       	callq  34801210 <randnum>
    348045b7:	48 98                	cltq   
    348045b9:	48 89 03             	mov    %rax,(%rbx)
    348045bc:	48 83 c3 08          	add    $0x8,%rbx
    348045c0:	49 ff cc             	dec    %r12
    348045c3:	0f 85 e7 ff ff ff    	jne    348045b0 <LoadNumArrayWithRand+0x40>
    348045c9:	8b 44 24 08          	mov    0x8(%rsp),%eax
    348045cd:	ff c8                	dec    %eax
    348045cf:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    348045d4:	0f 84 e8 00 00 00    	je     348046c2 <LoadNumArrayWithRand+0x152>
    348045da:	4b 8d 0c 24          	lea    (%r12,%r12,1),%rcx
    348045de:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    348045e3:	48 8b 0c 24          	mov    (%rsp),%rcx
    348045e7:	4e 8d 14 e1          	lea    (%rcx,%r12,8),%r10
    348045eb:	4e 8d 1c e5 00 00 00 	lea    0x0(,%r12,8),%r11
    348045f2:	00 
    348045f3:	4d 89 e1             	mov    %r12,%r9
    348045f6:	49 83 e1 fe          	and    $0xfffffffffffffffe,%r9
    348045fa:	31 ff                	xor    %edi,%edi
    348045fc:	4c 89 da             	mov    %r11,%rdx
    348045ff:	e9 3c 00 00 00       	jmpq   34804640 <LoadNumArrayWithRand+0xd0>
    34804604:	4c 89 c9             	mov    %r9,%rcx
    34804607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480460e:	00 00 
    34804610:	41 0f 10 00          	movups (%r8),%xmm0
    34804614:	41 0f 11 04 10       	movups %xmm0,(%r8,%rdx,1)
    34804619:	49 83 c0 10          	add    $0x10,%r8
    3480461d:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
    34804621:	0f 85 e9 ff ff ff    	jne    34804610 <LoadNumArrayWithRand+0xa0>
    34804627:	4c 39 e6             	cmp    %r12,%rsi
    3480462a:	0f 84 84 00 00 00    	je     348046b4 <LoadNumArrayWithRand+0x144>
    34804630:	e9 5d 00 00 00       	jmpq   34804692 <LoadNumArrayWithRand+0x122>
    34804635:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480463c:	00 00 00 00 
    34804640:	4d 85 e4             	test   %r12,%r12
    34804643:	0f 84 6b 00 00 00    	je     348046b4 <LoadNumArrayWithRand+0x144>
    34804649:	49 83 fc 01          	cmp    $0x1,%r12
    3480464d:	0f 84 3d 00 00 00    	je     34804690 <LoadNumArrayWithRand+0x120>
    34804653:	4c 89 e6             	mov    %r12,%rsi
    34804656:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    3480465a:	0f 84 30 00 00 00    	je     34804690 <LoadNumArrayWithRand+0x120>
    34804660:	48 89 f9             	mov    %rdi,%rcx
    34804663:	49 0f af cc          	imul   %r12,%rcx
    34804667:	4a 8d 1c 21          	lea    (%rcx,%r12,1),%rbx
    3480466b:	4c 8b 04 24          	mov    (%rsp),%r8
    3480466f:	49 8d 1c d8          	lea    (%r8,%rbx,8),%rbx
    34804673:	4c 39 d3             	cmp    %r10,%rbx
    34804676:	0f 83 88 ff ff ff    	jae    34804604 <LoadNumArrayWithRand+0x94>
    3480467c:	48 03 4c 24 08       	add    0x8(%rsp),%rcx
    34804681:	49 8d 0c c8          	lea    (%r8,%rcx,8),%rcx
    34804685:	4c 39 c1             	cmp    %r8,%rcx
    34804688:	0f 86 76 ff ff ff    	jbe    34804604 <LoadNumArrayWithRand+0x94>
    3480468e:	66 90                	xchg   %ax,%ax
    34804690:	31 f6                	xor    %esi,%esi
    34804692:	48 8b 0c 24          	mov    (%rsp),%rcx
    34804696:	48 8d 1c f1          	lea    (%rcx,%rsi,8),%rbx
    3480469a:	4c 89 e1             	mov    %r12,%rcx
    3480469d:	48 29 f1             	sub    %rsi,%rcx
    348046a0:	48 8b 33             	mov    (%rbx),%rsi
    348046a3:	48 89 34 13          	mov    %rsi,(%rbx,%rdx,1)
    348046a7:	48 83 c3 08          	add    $0x8,%rbx
    348046ab:	48 ff c9             	dec    %rcx
    348046ae:	0f 85 ec ff ff ff    	jne    348046a0 <LoadNumArrayWithRand+0x130>
    348046b4:	48 ff c7             	inc    %rdi
    348046b7:	4c 01 da             	add    %r11,%rdx
    348046ba:	ff c8                	dec    %eax
    348046bc:	0f 85 7e ff ff ff    	jne    34804640 <LoadNumArrayWithRand+0xd0>
    348046c2:	48 83 c4 18          	add    $0x18,%rsp
    348046c6:	5b                   	pop    %rbx
    348046c7:	41 5c                	pop    %r12
    348046c9:	c3                   	retq   
    348046ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000348046d0 <NumHeapSort>:
    348046d0:	41 54                	push   %r12
    348046d2:	53                   	push   %rbx
    348046d3:	50                   	push   %rax
    348046d4:	48 89 f3             	mov    %rsi,%rbx
    348046d7:	49 89 dc             	mov    %rbx,%r12
    348046da:	49 d1 ec             	shr    %r12
    348046dd:	0f 84 29 00 00 00    	je     3480470c <NumHeapSort+0x3c>
    348046e3:	48 89 3c 24          	mov    %rdi,(%rsp)
    348046e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348046ee:	00 00 
    348046f0:	48 8b 3c 24          	mov    (%rsp),%rdi
    348046f4:	4c 89 e6             	mov    %r12,%rsi
    348046f7:	48 89 da             	mov    %rbx,%rdx
    348046fa:	e8 31 d3 ff ff       	callq  34801a30 <NumSift>
    348046ff:	48 8b 3c 24          	mov    (%rsp),%rdi
    34804703:	49 ff cc             	dec    %r12
    34804706:	0f 85 e4 ff ff ff    	jne    348046f0 <NumHeapSort+0x20>
    3480470c:	48 85 db             	test   %rbx,%rbx
    3480470f:	49 89 fc             	mov    %rdi,%r12
    34804712:	0f 84 2e 00 00 00    	je     34804746 <NumHeapSort+0x76>
    34804718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480471f:	00 
    34804720:	31 f6                	xor    %esi,%esi
    34804722:	4c 89 e7             	mov    %r12,%rdi
    34804725:	48 89 da             	mov    %rbx,%rdx
    34804728:	e8 03 d3 ff ff       	callq  34801a30 <NumSift>
    3480472d:	49 8b 04 24          	mov    (%r12),%rax
    34804731:	49 8b 0c dc          	mov    (%r12,%rbx,8),%rcx
    34804735:	49 89 0c 24          	mov    %rcx,(%r12)
    34804739:	49 89 04 dc          	mov    %rax,(%r12,%rbx,8)
    3480473d:	48 ff cb             	dec    %rbx
    34804740:	0f 85 da ff ff ff    	jne    34804720 <NumHeapSort+0x50>
    34804746:	48 83 c4 08          	add    $0x8,%rsp
    3480474a:	5b                   	pop    %rbx
    3480474b:	41 5c                	pop    %r12
    3480474d:	c3                   	retq   
    3480474e:	66 90                	xchg   %ax,%ax

0000000034804750 <LoadStringArray>:
    34804750:	41 54                	push   %r12
    34804752:	53                   	push   %rbx
    34804753:	48 83 ec 48          	sub    $0x48,%rsp
    34804757:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    3480475c:	49 89 d4             	mov    %rdx,%r12
    3480475f:	89 34 24             	mov    %esi,(%rsp)
    34804762:	48 89 fb             	mov    %rdi,%rbx
    34804765:	bf 0d 00 00 00       	mov    $0xd,%edi
    3480476a:	e8 a1 ca ff ff       	callq  34801210 <randnum>
    3480476f:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    34804774:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    3480477b:	00 
    3480477c:	49 8d 82 ff 00 00 00 	lea    0xff(%r10),%rax
    34804783:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    34804788:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    3480478d:	48 8d 43 01          	lea    0x1(%rbx),%rax
    34804791:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    34804796:	31 db                	xor    %ebx,%ebx
    34804798:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    3480479d:	0f 1f 00             	nopl   (%rax)
    348047a0:	bf 4c 00 00 00       	mov    $0x4c,%edi
    348047a5:	e8 e6 ca ff ff       	callq  34801290 <abs_randwc>
    348047aa:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    348047af:	ff c0                	inc    %eax
    348047b1:	0f b6 c8             	movzbl %al,%ecx
    348047b4:	48 8d 54 0b 01       	lea    0x1(%rbx,%rcx,1),%rdx
    348047b9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348047be:	41 89 cc             	mov    %ecx,%r12d
    348047c1:	41 29 dc             	sub    %ebx,%r12d
    348047c4:	4c 39 d2             	cmp    %r10,%rdx
    348047c7:	44 0f 42 e0          	cmovb  %eax,%r12d
    348047cb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    348047d0:	44 88 24 18          	mov    %r12b,(%rax,%rbx,1)
    348047d4:	45 84 e4             	test   %r12b,%r12b
    348047d7:	0f 84 63 00 00 00    	je     34804840 <LoadStringArray+0xf0>
    348047dd:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    348047e2:	44 89 e0             	mov    %r12d,%eax
    348047e5:	fe c8                	dec    %al
    348047e7:	0f b6 c0             	movzbl %al,%eax
    348047ea:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    348047ef:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    348047f4:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    348047f9:	48 8d 1c 18          	lea    (%rax,%rbx,1),%rbx
    348047fd:	0f 1f 00             	nopl   (%rax)
    34804800:	bf fe 00 00 00       	mov    $0xfe,%edi
    34804805:	e8 86 ca ff ff       	callq  34801290 <abs_randwc>
    3480480a:	88 03                	mov    %al,(%rbx)
    3480480c:	48 ff c3             	inc    %rbx
    3480480f:	41 fe cc             	dec    %r12b
    34804812:	0f 85 e8 ff ff ff    	jne    34804800 <LoadStringArray+0xb0>
    34804818:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    3480481d:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34804822:	48 8d 5c 03 02       	lea    0x2(%rbx,%rax,1),%rbx
    34804827:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    3480482c:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    34804831:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    34804836:	e9 0d 00 00 00       	jmpq   34804848 <LoadStringArray+0xf8>
    3480483b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34804840:	48 ff c3             	inc    %rbx
    34804843:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    34804848:	49 8b 04 24          	mov    (%r12),%rax
    3480484c:	48 ff c0             	inc    %rax
    3480484f:	4c 39 d2             	cmp    %r10,%rdx
    34804852:	49 89 04 24          	mov    %rax,(%r12)
    34804856:	0f 82 44 ff ff ff    	jb     348047a0 <LoadStringArray+0x50>
    3480485c:	44 8b 04 24          	mov    (%rsp),%r8d
    34804860:	41 83 f8 02          	cmp    $0x2,%r8d
    34804864:	0f 82 59 00 00 00    	jb     348048c3 <LoadStringArray+0x173>
    3480486a:	4d 8d 4a 64          	lea    0x64(%r10),%r9
    3480486e:	b9 01 00 00 00       	mov    $0x1,%ecx
    34804873:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    34804878:	48 89 c2             	mov    %rax,%rdx
    3480487b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34804880:	4c 01 ca             	add    %r9,%rdx
    34804883:	4d 85 d2             	test   %r10,%r10
    34804886:	0f 84 28 00 00 00    	je     348048b4 <LoadStringArray+0x164>
    3480488c:	be 01 00 00 00       	mov    $0x1,%esi
    34804891:	31 ff                	xor    %edi,%edi
    34804893:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480489a:	84 00 00 00 00 00 
    348048a0:	0f b6 1c 38          	movzbl (%rax,%rdi,1),%ebx
    348048a4:	88 1c 3a             	mov    %bl,(%rdx,%rdi,1)
    348048a7:	89 f7                	mov    %esi,%edi
    348048a9:	ff c6                	inc    %esi
    348048ab:	4c 39 d7             	cmp    %r10,%rdi
    348048ae:	0f 82 ec ff ff ff    	jb     348048a0 <LoadStringArray+0x150>
    348048b4:	ff c1                	inc    %ecx
    348048b6:	44 39 c1             	cmp    %r8d,%ecx
    348048b9:	0f 85 c1 ff ff ff    	jne    34804880 <LoadStringArray+0x130>
    348048bf:	49 8b 04 24          	mov    (%r12),%rax
    348048c3:	44 89 c7             	mov    %r8d,%edi
    348048c6:	48 0f af f8          	imul   %rax,%rdi
    348048ca:	48 c1 e7 03          	shl    $0x3,%rdi
    348048ce:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    348048d3:	e8 e8 23 00 00       	callq  34806cc0 <AllocateMemory>
    348048d8:	48 89 c3             	mov    %rax,%rbx
    348048db:	8b 74 24 04          	mov    0x4(%rsp),%esi
    348048df:	85 f6                	test   %esi,%esi
    348048e1:	0f 84 20 00 00 00    	je     34804907 <LoadStringArray+0x1b7>
    348048e7:	bf 6f 3a 81 34       	mov    $0x34813a6f,%edi
    348048ec:	e8 1f 26 00 00       	callq  34806f10 <ReportError>
    348048f1:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    348048f6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348048fb:	e8 e0 24 00 00       	callq  34806de0 <FreeMemory>
    34804900:	31 c0                	xor    %eax,%eax
    34804902:	e8 b9 26 00 00       	callq  34806fc0 <ErrorExit>
    34804907:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
    3480490c:	0f 84 3a 00 00 00    	je     3480494c <LoadStringArray+0x1fc>
    34804912:	31 c9                	xor    %ecx,%ecx
    34804914:	31 d2                	xor    %edx,%edx
    34804916:	44 8b 04 24          	mov    (%rsp),%r8d
    3480491a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3480491f:	90                   	nop
    34804920:	48 89 14 cb          	mov    %rdx,(%rbx,%rcx,8)
    34804924:	0f b6 04 16          	movzbl (%rsi,%rdx,1),%eax
    34804928:	48 8d 54 02 01       	lea    0x1(%rdx,%rax,1),%rdx
    3480492d:	48 ff c1             	inc    %rcx
    34804930:	49 8b 04 24          	mov    (%r12),%rax
    34804934:	48 39 c1             	cmp    %rax,%rcx
    34804937:	0f 82 e3 ff ff ff    	jb     34804920 <LoadStringArray+0x1d0>
    3480493d:	41 83 f8 02          	cmp    $0x2,%r8d
    34804941:	0f 83 15 00 00 00    	jae    3480495c <LoadStringArray+0x20c>
    34804947:	e9 71 00 00 00       	jmpq   348049bd <LoadStringArray+0x26d>
    3480494c:	31 c0                	xor    %eax,%eax
    3480494e:	44 8b 04 24          	mov    (%rsp),%r8d
    34804952:	41 83 f8 02          	cmp    $0x2,%r8d
    34804956:	0f 82 61 00 00 00    	jb     348049bd <LoadStringArray+0x26d>
    3480495c:	b9 01 00 00 00       	mov    $0x1,%ecx
    34804961:	48 89 da             	mov    %rbx,%rdx
    34804964:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480496b:	00 00 00 00 00 
    34804970:	48 8d 14 c2          	lea    (%rdx,%rax,8),%rdx
    34804974:	48 85 c0             	test   %rax,%rax
    34804977:	0f 84 33 00 00 00    	je     348049b0 <LoadStringArray+0x260>
    3480497d:	be 01 00 00 00       	mov    $0x1,%esi
    34804982:	31 ff                	xor    %edi,%edi
    34804984:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480498b:	00 00 00 00 00 
    34804990:	48 8b 04 fb          	mov    (%rbx,%rdi,8),%rax
    34804994:	48 89 04 fa          	mov    %rax,(%rdx,%rdi,8)
    34804998:	89 f7                	mov    %esi,%edi
    3480499a:	49 8b 04 24          	mov    (%r12),%rax
    3480499e:	ff c6                	inc    %esi
    348049a0:	48 39 f8             	cmp    %rdi,%rax
    348049a3:	0f 87 e7 ff ff ff    	ja     34804990 <LoadStringArray+0x240>
    348049a9:	e9 04 00 00 00       	jmpq   348049b2 <LoadStringArray+0x262>
    348049ae:	66 90                	xchg   %ax,%ax
    348049b0:	31 c0                	xor    %eax,%eax
    348049b2:	ff c1                	inc    %ecx
    348049b4:	44 39 c1             	cmp    %r8d,%ecx
    348049b7:	0f 85 b3 ff ff ff    	jne    34804970 <LoadStringArray+0x220>
    348049bd:	48 89 d8             	mov    %rbx,%rax
    348049c0:	48 83 c4 48          	add    $0x48,%rsp
    348049c4:	5b                   	pop    %rbx
    348049c5:	41 5c                	pop    %r12
    348049c7:	c3                   	retq   
    348049c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348049cf:	00 

00000000348049d0 <StrHeapSort>:
    348049d0:	41 54                	push   %r12
    348049d2:	53                   	push   %rbx
    348049d3:	48 83 ec 78          	sub    $0x78,%rsp
    348049d7:	48 89 cb             	mov    %rcx,%rbx
    348049da:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    348049df:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    348049e4:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    348049e9:	49 89 dc             	mov    %rbx,%r12
    348049ec:	49 d1 ec             	shr    %r12
    348049ef:	0f 84 2e 00 00 00    	je     34804a23 <StrHeapSort+0x53>
    348049f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348049fc:	00 00 00 00 
    34804a00:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34804a05:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34804a0a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804a0f:	4c 89 e1             	mov    %r12,%rcx
    34804a12:	49 89 d8             	mov    %rbx,%r8
    34804a15:	e8 f6 00 00 00       	callq  34804b10 <strsift>
    34804a1a:	49 ff cc             	dec    %r12
    34804a1d:	0f 85 dd ff ff ff    	jne    34804a00 <StrHeapSort+0x30>
    34804a23:	48 85 db             	test   %rbx,%rbx
    34804a26:	0f 84 cf 00 00 00    	je     34804afb <StrHeapSort+0x12b>
    34804a2c:	0f 1f 40 00          	nopl   0x0(%rax)
    34804a30:	31 c9                	xor    %ecx,%ecx
    34804a32:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34804a37:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34804a3c:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804a41:	49 89 d8             	mov    %rbx,%r8
    34804a44:	e8 c7 00 00 00       	callq  34804b10 <strsift>
    34804a49:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    34804a4e:	0f b6 10             	movzbl (%rax),%edx
    34804a51:	48 ff c2             	inc    %rdx
    34804a54:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    34804a59:	48 89 c7             	mov    %rax,%rdi
    34804a5c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34804a61:	e8 8a 24 00 00       	callq  34806ef0 <MoveMemory>
    34804a66:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34804a6b:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    34804a6f:	49 89 dc             	mov    %rbx,%r12
    34804a72:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    34804a77:	0f b6 1c 01          	movzbl (%rcx,%rax,1),%ebx
    34804a7b:	31 c9                	xor    %ecx,%ecx
    34804a7d:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34804a82:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34804a87:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804a8c:	41 89 d8             	mov    %ebx,%r8d
    34804a8f:	e8 ec 01 00 00       	callq  34804c80 <stradjust>
    34804a94:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34804a99:	4a 8b 34 e0          	mov    (%rax,%r12,8),%rsi
    34804a9d:	48 03 74 24 08       	add    0x8(%rsp),%rsi
    34804aa2:	48 ff c3             	inc    %rbx
    34804aa5:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804aaa:	48 89 da             	mov    %rbx,%rdx
    34804aad:	e8 3e 24 00 00       	callq  34806ef0 <MoveMemory>
    34804ab2:	0f b6 5c 24 20       	movzbl 0x20(%rsp),%ebx
    34804ab7:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    34804abc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34804ac1:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804ac6:	4c 89 e1             	mov    %r12,%rcx
    34804ac9:	41 89 d8             	mov    %ebx,%r8d
    34804acc:	e8 af 01 00 00       	callq  34804c80 <stradjust>
    34804ad1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34804ad6:	4a 8b 3c e0          	mov    (%rax,%r12,8),%rdi
    34804ada:	48 03 7c 24 08       	add    0x8(%rsp),%rdi
    34804adf:	48 ff c3             	inc    %rbx
    34804ae2:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    34804ae7:	48 89 da             	mov    %rbx,%rdx
    34804aea:	4c 89 e3             	mov    %r12,%rbx
    34804aed:	e8 fe 23 00 00       	callq  34806ef0 <MoveMemory>
    34804af2:	48 ff cb             	dec    %rbx
    34804af5:	0f 85 35 ff ff ff    	jne    34804a30 <StrHeapSort+0x60>
    34804afb:	48 83 c4 78          	add    $0x78,%rsp
    34804aff:	5b                   	pop    %rbx
    34804b00:	41 5c                	pop    %r12
    34804b02:	c3                   	retq   
    34804b03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804b0a:	84 00 00 00 00 00 

0000000034804b10 <strsift>:
    34804b10:	41 54                	push   %r12
    34804b12:	53                   	push   %rbx
    34804b13:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    34804b1a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    34804b1f:	48 89 34 24          	mov    %rsi,(%rsp)
    34804b23:	48 8d 1c 09          	lea    (%rcx,%rcx,1),%rbx
    34804b27:	4c 39 c3             	cmp    %r8,%rbx
    34804b2a:	0f 87 45 01 00 00    	ja     34804c75 <strsift+0x165>
    34804b30:	49 8d 40 01          	lea    0x1(%r8),%rax
    34804b34:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    34804b39:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    34804b3e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34804b43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804b4a:	84 00 00 00 00 00 
    34804b50:	4c 39 c3             	cmp    %r8,%rbx
    34804b53:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34804b58:	0f 83 2b 00 00 00    	jae    34804b89 <strsift+0x79>
    34804b5e:	49 89 dc             	mov    %rbx,%r12
    34804b61:	49 83 cc 01          	or     $0x1,%r12
    34804b65:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804b6a:	48 8b 34 24          	mov    (%rsp),%rsi
    34804b6e:	48 89 da             	mov    %rbx,%rdx
    34804b71:	4c 89 e1             	mov    %r12,%rcx
    34804b74:	e8 57 02 00 00       	callq  34804dd0 <str_is_less>
    34804b79:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34804b7e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804b83:	85 c0                	test   %eax,%eax
    34804b85:	49 0f 45 dc          	cmovne %r12,%rbx
    34804b89:	48 8b 34 24          	mov    (%rsp),%rsi
    34804b8d:	48 89 ca             	mov    %rcx,%rdx
    34804b90:	48 89 d9             	mov    %rbx,%rcx
    34804b93:	e8 38 02 00 00       	callq  34804dd0 <str_is_less>
    34804b98:	85 c0                	test   %eax,%eax
    34804b9a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34804b9f:	0f 84 b9 00 00 00    	je     34804c5e <strsift+0x14e>
    34804ba5:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    34804baa:	49 8b 04 dc          	mov    (%r12,%rbx,8),%rax
    34804bae:	48 8b 0c 24          	mov    (%rsp),%rcx
    34804bb2:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
    34804bb6:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    34804bba:	48 ff c2             	inc    %rdx
    34804bbd:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    34804bc2:	48 89 c7             	mov    %rax,%rdi
    34804bc5:	e8 26 23 00 00       	callq  34806ef0 <MoveMemory>
    34804bca:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34804bcf:	4c 89 e7             	mov    %r12,%rdi
    34804bd2:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    34804bd6:	48 8b 0c 24          	mov    (%rsp),%rcx
    34804bda:	44 0f b6 24 01       	movzbl (%rcx,%rax,1),%r12d
    34804bdf:	48 8b 34 24          	mov    (%rsp),%rsi
    34804be3:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804be8:	48 89 d9             	mov    %rbx,%rcx
    34804beb:	45 89 e0             	mov    %r12d,%r8d
    34804bee:	e8 8d 00 00 00       	callq  34804c80 <stradjust>
    34804bf3:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    34804bf8:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    34804bfc:	48 03 3c 24          	add    (%rsp),%rdi
    34804c00:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34804c05:	48 8b 34 c8          	mov    (%rax,%rcx,8),%rsi
    34804c09:	48 03 34 24          	add    (%rsp),%rsi
    34804c0d:	49 ff c4             	inc    %r12
    34804c10:	4c 89 e2             	mov    %r12,%rdx
    34804c13:	e8 d8 22 00 00       	callq  34806ef0 <MoveMemory>
    34804c18:	44 0f b6 64 24 30    	movzbl 0x30(%rsp),%r12d
    34804c1e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804c23:	48 8b 34 24          	mov    (%rsp),%rsi
    34804c27:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34804c2c:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34804c31:	45 89 e0             	mov    %r12d,%r8d
    34804c34:	e8 47 00 00 00       	callq  34804c80 <stradjust>
    34804c39:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34804c3e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    34804c43:	48 8b 3c c1          	mov    (%rcx,%rax,8),%rdi
    34804c47:	48 03 3c 24          	add    (%rsp),%rdi
    34804c4b:	49 ff c4             	inc    %r12
    34804c4e:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
    34804c53:	4c 89 e2             	mov    %r12,%rdx
    34804c56:	e8 95 22 00 00       	callq  34806ef0 <MoveMemory>
    34804c5b:	48 89 d9             	mov    %rbx,%rcx
    34804c5e:	48 8d 1c 09          	lea    (%rcx,%rcx,1),%rbx
    34804c62:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    34804c67:	4c 39 c3             	cmp    %r8,%rbx
    34804c6a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34804c6f:	0f 86 db fe ff ff    	jbe    34804b50 <strsift+0x40>
    34804c75:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    34804c7c:	5b                   	pop    %rbx
    34804c7d:	41 5c                	pop    %r12
    34804c7f:	c3                   	retq   

0000000034804c80 <stradjust>:
    34804c80:	41 54                	push   %r12
    34804c82:	53                   	push   %rbx
    34804c83:	48 83 ec 28          	sub    $0x28,%rsp
    34804c87:	48 89 d3             	mov    %rdx,%rbx
    34804c8a:	48 89 f0             	mov    %rsi,%rax
    34804c8d:	49 89 fa             	mov    %rdi,%r10
    34804c90:	49 8b 14 ca          	mov    (%r10,%rcx,8),%rdx
    34804c94:	4c 8d 0c 10          	lea    (%rax,%rdx,1),%r9
    34804c98:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
    34804c9c:	44 89 c6             	mov    %r8d,%esi
    34804c9f:	29 d6                	sub    %edx,%esi
    34804ca1:	41 89 f4             	mov    %esi,%r12d
    34804ca4:	41 f7 dc             	neg    %r12d
    34804ca7:	44 0f 4c e6          	cmovl  %esi,%r12d
    34804cab:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    34804caf:	48 29 ca             	sub    %rcx,%rdx
    34804cb2:	0f 84 09 01 00 00    	je     34804dc1 <stradjust+0x141>
    34804cb8:	89 34 24             	mov    %esi,(%rsp)
    34804cbb:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    34804cc0:	49 8b 7c da f8       	mov    -0x8(%r10,%rbx,8),%rdi
    34804cc5:	0f b6 14 38          	movzbl (%rax,%rdi,1),%edx
    34804cc9:	49 8b 74 ca 08       	mov    0x8(%r10,%rcx,8),%rsi
    34804cce:	48 8d 54 17 01       	lea    0x1(%rdi,%rdx,1),%rdx
    34804cd3:	48 29 f2             	sub    %rsi,%rdx
    34804cd6:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    34804cdb:	41 0f b6 f8          	movzbl %r8b,%edi
    34804cdf:	49 8d 7c 39 01       	lea    0x1(%r9,%rdi,1),%rdi
    34804ce4:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    34804ce9:	48 01 c6             	add    %rax,%rsi
    34804cec:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
    34804cf1:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    34804cf6:	e8 f5 21 00 00       	callq  34806ef0 <MoveMemory>
    34804cfb:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    34804d00:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    34804d05:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    34804d09:	48 39 da             	cmp    %rbx,%rdx
    34804d0c:	0f 83 9e 00 00 00    	jae    34804db0 <stradjust+0x130>
    34804d12:	41 0f b6 cc          	movzbl %r12b,%ecx
    34804d16:	48 89 c8             	mov    %rcx,%rax
    34804d19:	48 f7 d8             	neg    %rax
    34804d1c:	83 3c 24 00          	cmpl   $0x0,(%rsp)
    34804d20:	48 0f 49 c1          	cmovns %rcx,%rax
    34804d24:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    34804d29:	49 83 fa 02          	cmp    $0x2,%r10
    34804d2d:	0f 82 55 00 00 00    	jb     34804d88 <stradjust+0x108>
    34804d33:	4c 89 d1             	mov    %r10,%rcx
    34804d36:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    34804d3a:	4d 89 d0             	mov    %r10,%r8
    34804d3d:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    34804d41:	0f 84 41 00 00 00    	je     34804d88 <stradjust+0x108>
    34804d47:	48 01 d1             	add    %rdx,%rcx
    34804d4a:	66 48 0f 6e c0       	movq   %rax,%xmm0
    34804d4f:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
    34804d54:	49 8d 14 d1          	lea    (%r9,%rdx,8),%rdx
    34804d58:	4c 89 c7             	mov    %r8,%rdi
    34804d5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34804d60:	f3 0f 6f 0a          	movdqu (%rdx),%xmm1
    34804d64:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    34804d68:	f3 0f 7f 0a          	movdqu %xmm1,(%rdx)
    34804d6c:	48 83 c2 10          	add    $0x10,%rdx
    34804d70:	48 83 c7 fe          	add    $0xfffffffffffffffe,%rdi
    34804d74:	0f 85 e6 ff ff ff    	jne    34804d60 <stradjust+0xe0>
    34804d7a:	4d 39 c2             	cmp    %r8,%r10
    34804d7d:	0f 85 08 00 00 00    	jne    34804d8b <stradjust+0x10b>
    34804d83:	e9 28 00 00 00       	jmpq   34804db0 <stradjust+0x130>
    34804d88:	48 89 d1             	mov    %rdx,%rcx
    34804d8b:	48 29 cb             	sub    %rcx,%rbx
    34804d8e:	49 8d 0c c9          	lea    (%r9,%rcx,8),%rcx
    34804d92:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804d99:	1f 84 00 00 00 00 00 
    34804da0:	48 01 01             	add    %rax,(%rcx)
    34804da3:	48 83 c1 08          	add    $0x8,%rcx
    34804da7:	48 ff cb             	dec    %rbx
    34804daa:	0f 85 f0 ff ff ff    	jne    34804da0 <stradjust+0x120>
    34804db0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    34804db5:	49 03 04 f1          	add    (%r9,%rsi,8),%rax
    34804db9:	49 89 c1             	mov    %rax,%r9
    34804dbc:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    34804dc1:	45 88 01             	mov    %r8b,(%r9)
    34804dc4:	48 83 c4 28          	add    $0x28,%rsp
    34804dc8:	5b                   	pop    %rbx
    34804dc9:	41 5c                	pop    %r12
    34804dcb:	c3                   	retq   
    34804dcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034804dd0 <str_is_less>:
    34804dd0:	53                   	push   %rbx
    34804dd1:	48 89 f0             	mov    %rsi,%rax
    34804dd4:	48 89 fe             	mov    %rdi,%rsi
    34804dd7:	48 8b 14 d6          	mov    (%rsi,%rdx,8),%rdx
    34804ddb:	48 8d 3c 10          	lea    (%rax,%rdx,1),%rdi
    34804ddf:	8a 14 10             	mov    (%rax,%rdx,1),%dl
    34804de2:	48 8b 0c ce          	mov    (%rsi,%rcx,8),%rcx
    34804de6:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    34804dea:	8a 04 08             	mov    (%rax,%rcx,1),%al
    34804ded:	38 c2                	cmp    %al,%dl
    34804def:	0f 97 c3             	seta   %bl
    34804df2:	0f 87 02 00 00 00    	ja     34804dfa <str_is_less+0x2a>
    34804df8:	89 d0                	mov    %edx,%eax
    34804dfa:	0f b6 d0             	movzbl %al,%edx
    34804dfd:	e8 f0 77 00 00       	callq  3480c5f2 <strncmp>
    34804e02:	85 c0                	test   %eax,%eax
    34804e04:	0f 98 c0             	sets   %al
    34804e07:	0f 84 02 00 00 00    	je     34804e0f <str_is_less+0x3f>
    34804e0d:	89 c3                	mov    %eax,%ebx
    34804e0f:	0f b6 c3             	movzbl %bl,%eax
    34804e12:	5b                   	pop    %rbx
    34804e13:	c3                   	retq   
    34804e14:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804e1b:	00 00 00 00 00 

0000000034804e20 <ToggleBitRun>:
    34804e20:	41 89 c8             	mov    %ecx,%r8d
    34804e23:	48 89 f1             	mov    %rsi,%rcx
    34804e26:	48 85 d2             	test   %rdx,%rdx
    34804e29:	0f 85 21 00 00 00    	jne    34804e50 <ToggleBitRun+0x30>
    34804e2f:	e9 4a 00 00 00       	jmpq   34804e7e <ToggleBitRun+0x5e>
    34804e34:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34804e3b:	00 00 00 00 00 
    34804e40:	48 09 04 f7          	or     %rax,(%rdi,%rsi,8)
    34804e44:	48 ff c1             	inc    %rcx
    34804e47:	48 85 d2             	test   %rdx,%rdx
    34804e4a:	0f 84 2e 00 00 00    	je     34804e7e <ToggleBitRun+0x5e>
    34804e50:	48 ff ca             	dec    %rdx
    34804e53:	48 89 ce             	mov    %rcx,%rsi
    34804e56:	48 c1 ee 06          	shr    $0x6,%rsi
    34804e5a:	b8 01 00 00 00       	mov    $0x1,%eax
    34804e5f:	48 d3 e0             	shl    %cl,%rax
    34804e62:	45 85 c0             	test   %r8d,%r8d
    34804e65:	0f 85 d5 ff ff ff    	jne    34804e40 <ToggleBitRun+0x20>
    34804e6b:	48 f7 d0             	not    %rax
    34804e6e:	48 21 04 f7          	and    %rax,(%rdi,%rsi,8)
    34804e72:	48 ff c1             	inc    %rcx
    34804e75:	48 85 d2             	test   %rdx,%rdx
    34804e78:	0f 85 d2 ff ff ff    	jne    34804e50 <ToggleBitRun+0x30>
    34804e7e:	c3                   	retq   
    34804e7f:	90                   	nop

0000000034804e80 <FlipBitRun>:
    34804e80:	48 89 f1             	mov    %rsi,%rcx
    34804e83:	48 85 d2             	test   %rdx,%rdx
    34804e86:	0f 84 23 00 00 00    	je     34804eaf <FlipBitRun+0x2f>
    34804e8c:	0f 1f 40 00          	nopl   0x0(%rax)
    34804e90:	48 89 c8             	mov    %rcx,%rax
    34804e93:	48 c1 e8 06          	shr    $0x6,%rax
    34804e97:	be 01 00 00 00       	mov    $0x1,%esi
    34804e9c:	48 d3 e6             	shl    %cl,%rsi
    34804e9f:	48 31 34 c7          	xor    %rsi,(%rdi,%rax,8)
    34804ea3:	48 ff c1             	inc    %rcx
    34804ea6:	48 ff ca             	dec    %rdx
    34804ea9:	0f 85 e1 ff ff ff    	jne    34804e90 <FlipBitRun+0x10>
    34804eaf:	c3                   	retq   

0000000034804eb0 <TrapezoidIntegrate>:
    34804eb0:	41 54                	push   %r12
    34804eb2:	53                   	push   %rbx
    34804eb3:	48 83 ec 18          	sub    $0x18,%rsp
    34804eb7:	41 89 fc             	mov    %edi,%r12d
    34804eba:	66 0f 28 c8          	movapd %xmm0,%xmm1
    34804ebe:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34804ec2:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    34804ec8:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34804ecc:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    34804ed2:	e8 89 00 00 00       	callq  34804f60 <thefunction>
    34804ed7:	f2 0f 59 05 a9 e8 00 	mulsd  0xe8a9(%rip),%xmm0        # 34813788 <DoEmFloatIteration.jtable+0x868>
    34804ede:	00 
    34804edf:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    34804ee4:	bb 3a ff ff ff       	mov    $0xffffff3a,%ebx
    34804ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    34804ef0:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    34804ef6:	f2 0f 58 05 9a e8 00 	addsd  0xe89a(%rip),%xmm0        # 34813798 <DoEmFloatIteration.jtable+0x878>
    34804efd:	00 
    34804efe:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    34804f04:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34804f0a:	44 89 e7             	mov    %r12d,%edi
    34804f0d:	e8 4e 00 00 00       	callq  34804f60 <thefunction>
    34804f12:	f2 0f 10 0c 24       	movsd  (%rsp),%xmm1
    34804f17:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    34804f1b:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    34804f20:	ff c3                	inc    %ebx
    34804f22:	0f 85 c8 ff ff ff    	jne    34804ef0 <TrapezoidIntegrate+0x40>
    34804f28:	f2 0f 10 05 70 e8 00 	movsd  0xe870(%rip),%xmm0        # 348137a0 <DoEmFloatIteration.jtable+0x880>
    34804f2f:	00 
    34804f30:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34804f36:	44 89 e7             	mov    %r12d,%edi
    34804f39:	e8 22 00 00 00       	callq  34804f60 <thefunction>
    34804f3e:	f2 0f 59 05 42 e8 00 	mulsd  0xe842(%rip),%xmm0        # 34813788 <DoEmFloatIteration.jtable+0x868>
    34804f45:	00 
    34804f46:	f2 0f 58 04 24       	addsd  (%rsp),%xmm0
    34804f4b:	f2 0f 59 05 45 e8 00 	mulsd  0xe845(%rip),%xmm0        # 34813798 <DoEmFloatIteration.jtable+0x878>
    34804f52:	00 
    34804f53:	48 83 c4 18          	add    $0x18,%rsp
    34804f57:	5b                   	pop    %rbx
    34804f58:	41 5c                	pop    %r12
    34804f5a:	c3                   	retq   
    34804f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034804f60 <thefunction>:
    34804f60:	48 83 ec 18          	sub    $0x18,%rsp
    34804f64:	0f 28 d1             	movaps %xmm1,%xmm2
    34804f67:	66 0f 28 c8          	movapd %xmm0,%xmm1
    34804f6b:	83 ff 02             	cmp    $0x2,%edi
    34804f6e:	0f 84 2a 00 00 00    	je     34804f9e <thefunction+0x3e>
    34804f74:	83 ff 01             	cmp    $0x1,%edi
    34804f77:	0f 84 59 00 00 00    	je     34804fd6 <thefunction+0x76>
    34804f7d:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34804f81:	85 ff                	test   %edi,%edi
    34804f83:	0f 85 85 00 00 00    	jne    3480500e <thefunction+0xae>
    34804f89:	f2 0f 10 05 cf df 00 	movsd  0xdfcf(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34804f90:	00 
    34804f91:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34804f95:	48 83 c4 18          	add    $0x18,%rsp
    34804f99:	e9 52 68 00 00       	jmpq   3480b7f0 <pow>
    34804f9e:	f2 0f 10 05 ba df 00 	movsd  0xdfba(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34804fa5:	00 
    34804fa6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34804faa:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    34804fb0:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    34804fb6:	e8 35 68 00 00       	callq  3480b7f0 <pow>
    34804fbb:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    34804fc0:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34804fc6:	f2 0f 59 44 24 10    	mulsd  0x10(%rsp),%xmm0
    34804fcc:	e8 9f 71 00 00       	callq  3480c170 <sin>
    34804fd1:	e9 33 00 00 00       	jmpq   34805009 <thefunction+0xa9>
    34804fd6:	f2 0f 10 05 82 df 00 	movsd  0xdf82(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34804fdd:	00 
    34804fde:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34804fe2:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
    34804fe8:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    34804fee:	e8 fd 67 00 00       	callq  3480b7f0 <pow>
    34804ff3:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    34804ff8:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    34804ffe:	f2 0f 59 44 24 10    	mulsd  0x10(%rsp),%xmm0
    34805004:	e8 37 20 00 00       	callq  34807040 <cos>
    34805009:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    3480500e:	48 83 c4 18          	add    $0x18,%rsp
    34805012:	c3                   	retq   
    34805013:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480501a:	84 00 00 00 00 00 

0000000034805020 <LoadAssignArrayWithRand>:
    34805020:	41 54                	push   %r12
    34805022:	53                   	push   %rbx
    34805023:	50                   	push   %rax
    34805024:	48 89 f3             	mov    %rsi,%rbx
    34805027:	48 89 3c 24          	mov    %rdi,(%rsp)
    3480502b:	e8 80 00 00 00       	callq  348050b0 <LoadAssign>
    34805030:	48 83 fb 02          	cmp    $0x2,%rbx
    34805034:	0f 82 32 00 00 00    	jb     3480506c <LoadAssignArrayWithRand+0x4c>
    3480503a:	48 ff cb             	dec    %rbx
    3480503d:	48 8b 04 24          	mov    (%rsp),%rax
    34805041:	4c 8d a0 c8 3e 01 00 	lea    0x13ec8(%rax),%r12
    34805048:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480504f:	00 
    34805050:	48 8b 3c 24          	mov    (%rsp),%rdi
    34805054:	4c 89 e6             	mov    %r12,%rsi
    34805057:	e8 c4 00 00 00       	callq  34805120 <CopyToAssign>
    3480505c:	49 81 c4 c8 3e 01 00 	add    $0x13ec8,%r12
    34805063:	48 ff cb             	dec    %rbx
    34805066:	0f 85 e4 ff ff ff    	jne    34805050 <LoadAssignArrayWithRand+0x30>
    3480506c:	48 83 c4 08          	add    $0x8,%rsp
    34805070:	5b                   	pop    %rbx
    34805071:	41 5c                	pop    %r12
    34805073:	c3                   	retq   
    34805074:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480507b:	00 00 00 00 00 

0000000034805080 <Assignment>:
    34805080:	53                   	push   %rbx
    34805081:	48 89 fb             	mov    %rdi,%rbx
    34805084:	e8 57 01 00 00       	callq  348051e0 <calc_minimum_costs>
    34805089:	e9 0a 00 00 00       	jmpq   34805098 <Assignment+0x18>
    3480508e:	66 90                	xchg   %ax,%ax
    34805090:	48 89 df             	mov    %rbx,%rdi
    34805093:	e8 58 05 00 00       	callq  348055f0 <second_assignments>
    34805098:	48 89 df             	mov    %rbx,%rdi
    3480509b:	e8 60 02 00 00       	callq  34805300 <first_assignments>
    348050a0:	83 f8 65             	cmp    $0x65,%eax
    348050a3:	0f 85 e7 ff ff ff    	jne    34805090 <Assignment+0x10>
    348050a9:	5b                   	pop    %rbx
    348050aa:	c3                   	retq   
    348050ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000348050b0 <LoadAssign>:
    348050b0:	41 54                	push   %r12
    348050b2:	53                   	push   %rbx
    348050b3:	50                   	push   %rax
    348050b4:	48 89 fb             	mov    %rdi,%rbx
    348050b7:	bf 0d 00 00 00       	mov    $0xd,%edi
    348050bc:	e8 4f c1 ff ff       	callq  34801210 <randnum>
    348050c1:	31 c0                	xor    %eax,%eax
    348050c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348050ca:	84 00 00 00 00 00 
    348050d0:	48 89 04 24          	mov    %rax,(%rsp)
    348050d4:	45 31 e4             	xor    %r12d,%r12d
    348050d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348050de:	00 00 
    348050e0:	bf 40 4b 4c 00       	mov    $0x4c4b40,%edi
    348050e5:	e8 a6 c1 ff ff       	callq  34801290 <abs_randwc>
    348050ea:	89 c0                	mov    %eax,%eax
    348050ec:	4a 89 04 e3          	mov    %rax,(%rbx,%r12,8)
    348050f0:	49 ff c4             	inc    %r12
    348050f3:	49 83 fc 65          	cmp    $0x65,%r12
    348050f7:	0f 85 e3 ff ff ff    	jne    348050e0 <LoadAssign+0x30>
    348050fd:	48 8b 04 24          	mov    (%rsp),%rax
    34805101:	48 ff c0             	inc    %rax
    34805104:	48 81 c3 28 03 00 00 	add    $0x328,%rbx
    3480510b:	48 83 f8 65          	cmp    $0x65,%rax
    3480510f:	0f 85 bb ff ff ff    	jne    348050d0 <LoadAssign+0x20>
    34805115:	48 83 c4 08          	add    $0x8,%rsp
    34805119:	5b                   	pop    %rbx
    3480511a:	41 5c                	pop    %r12
    3480511c:	c3                   	retq   
    3480511d:	0f 1f 00             	nopl   (%rax)

0000000034805120 <CopyToAssign>:
    34805120:	45 31 c0             	xor    %r8d,%r8d
    34805123:	49 89 f3             	mov    %rsi,%r11
    34805126:	48 89 fa             	mov    %rdi,%rdx
    34805129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    34805130:	4d 69 d0 28 03 00 00 	imul   $0x328,%r8,%r10
    34805137:	4e 8d 0c 16          	lea    (%rsi,%r10,1),%r9
    3480513b:	4a 8d 84 17 28 03 00 	lea    0x328(%rdi,%r10,1),%rax
    34805142:	00 
    34805143:	49 39 c1             	cmp    %rax,%r9
    34805146:	0f 83 24 00 00 00    	jae    34805170 <CopyToAssign+0x50>
    3480514c:	4a 8d 84 16 28 03 00 	lea    0x328(%rsi,%r10,1),%rax
    34805153:	00 
    34805154:	49 01 fa             	add    %rdi,%r10
    34805157:	49 39 c2             	cmp    %rax,%r10
    3480515a:	0f 83 10 00 00 00    	jae    34805170 <CopyToAssign+0x50>
    34805160:	31 c0                	xor    %eax,%eax
    34805162:	e9 39 00 00 00       	jmpq   348051a0 <CopyToAssign+0x80>
    34805167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480516e:	00 00 
    34805170:	31 c0                	xor    %eax,%eax
    34805172:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805179:	1f 84 00 00 00 00 00 
    34805180:	0f 10 04 c2          	movups (%rdx,%rax,8),%xmm0
    34805184:	41 0f 11 04 c3       	movups %xmm0,(%r11,%rax,8)
    34805189:	48 83 c0 02          	add    $0x2,%rax
    3480518d:	48 83 f8 64          	cmp    $0x64,%rax
    34805191:	0f 85 e9 ff ff ff    	jne    34805180 <CopyToAssign+0x60>
    34805197:	b8 64 00 00 00       	mov    $0x64,%eax
    3480519c:	0f 1f 40 00          	nopl   0x0(%rax)
    348051a0:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    348051a4:	49 89 0c c3          	mov    %rcx,(%r11,%rax,8)
    348051a8:	48 ff c0             	inc    %rax
    348051ab:	48 83 f8 65          	cmp    $0x65,%rax
    348051af:	0f 85 eb ff ff ff    	jne    348051a0 <CopyToAssign+0x80>
    348051b5:	49 ff c0             	inc    %r8
    348051b8:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    348051bf:	49 81 c3 28 03 00 00 	add    $0x328,%r11
    348051c6:	49 83 f8 65          	cmp    $0x65,%r8
    348051ca:	0f 85 60 ff ff ff    	jne    34805130 <CopyToAssign+0x10>
    348051d0:	c3                   	retq   
    348051d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348051d8:	0f 1f 84 00 00 00 00 
    348051df:	00 

00000000348051e0 <calc_minimum_costs>:
    348051e0:	49 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%r8
    348051e7:	ff ff 7f 
    348051ea:	45 31 c9             	xor    %r9d,%r9d
    348051ed:	48 89 fa             	mov    %rdi,%rdx
    348051f0:	31 c0                	xor    %eax,%eax
    348051f2:	4c 89 c6             	mov    %r8,%rsi
    348051f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348051fc:	00 00 00 00 
    34805200:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    34805204:	48 39 f1             	cmp    %rsi,%rcx
    34805207:	48 0f 4e f1          	cmovle %rcx,%rsi
    3480520b:	48 ff c0             	inc    %rax
    3480520e:	48 83 f8 65          	cmp    $0x65,%rax
    34805212:	0f 85 e8 ff ff ff    	jne    34805200 <calc_minimum_costs+0x20>
    34805218:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    3480521d:	66 0f 70 c0 44       	pshufd $0x44,%xmm0,%xmm0
    34805222:	31 c0                	xor    %eax,%eax
    34805224:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480522b:	00 00 00 00 00 
    34805230:	f3 0f 6f 0c c2       	movdqu (%rdx,%rax,8),%xmm1
    34805235:	66 0f fb c8          	psubq  %xmm0,%xmm1
    34805239:	f3 0f 7f 0c c2       	movdqu %xmm1,(%rdx,%rax,8)
    3480523e:	48 83 c0 02          	add    $0x2,%rax
    34805242:	48 83 f8 64          	cmp    $0x64,%rax
    34805246:	0f 85 e4 ff ff ff    	jne    34805230 <calc_minimum_costs+0x50>
    3480524c:	b8 64 00 00 00       	mov    $0x64,%eax
    34805251:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805258:	0f 1f 84 00 00 00 00 
    3480525f:	00 
    34805260:	48 29 34 c2          	sub    %rsi,(%rdx,%rax,8)
    34805264:	48 ff c0             	inc    %rax
    34805267:	48 83 f8 65          	cmp    $0x65,%rax
    3480526b:	0f 85 ef ff ff ff    	jne    34805260 <calc_minimum_costs+0x80>
    34805271:	49 ff c1             	inc    %r9
    34805274:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    3480527b:	49 83 f9 65          	cmp    $0x65,%r9
    3480527f:	0f 85 6b ff ff ff    	jne    348051f0 <calc_minimum_costs+0x10>
    34805285:	31 c9                	xor    %ecx,%ecx
    34805287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480528e:	00 00 
    34805290:	48 c7 c0 38 c1 fe ff 	mov    $0xfffffffffffec138,%rax
    34805297:	4c 89 c2             	mov    %r8,%rdx
    3480529a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348052a0:	48 8b b4 07 c8 3e 01 	mov    0x13ec8(%rdi,%rax,1),%rsi
    348052a7:	00 
    348052a8:	48 39 d6             	cmp    %rdx,%rsi
    348052ab:	48 0f 4e d6          	cmovle %rsi,%rdx
    348052af:	48 05 28 03 00 00    	add    $0x328,%rax
    348052b5:	0f 85 e5 ff ff ff    	jne    348052a0 <calc_minimum_costs+0xc0>
    348052bb:	48 85 d2             	test   %rdx,%rdx
    348052be:	0f 84 22 00 00 00    	je     348052e6 <calc_minimum_costs+0x106>
    348052c4:	31 c0                	xor    %eax,%eax
    348052c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348052cd:	00 00 00 
    348052d0:	48 29 14 07          	sub    %rdx,(%rdi,%rax,1)
    348052d4:	48 05 28 03 00 00    	add    $0x328,%rax
    348052da:	48 3d c8 3e 01 00    	cmp    $0x13ec8,%rax
    348052e0:	0f 85 ea ff ff ff    	jne    348052d0 <calc_minimum_costs+0xf0>
    348052e6:	48 ff c1             	inc    %rcx
    348052e9:	48 83 c7 08          	add    $0x8,%rdi
    348052ed:	48 83 f9 65          	cmp    $0x65,%rcx
    348052f1:	0f 85 99 ff ff ff    	jne    34805290 <calc_minimum_costs+0xb0>
    348052f7:	c3                   	retq   
    348052f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348052ff:	00 

0000000034805300 <first_assignments>:
    34805300:	41 54                	push   %r12
    34805302:	53                   	push   %rbx
    34805303:	50                   	push   %rax
    34805304:	48 89 fb             	mov    %rdi,%rbx
    34805307:	45 31 e4             	xor    %r12d,%r12d
    3480530a:	bf 30 8b 31 35       	mov    $0x35318b30,%edi
    3480530f:	31 f6                	xor    %esi,%esi
    34805311:	ba b2 4f 00 00       	mov    $0x4fb2,%edx
    34805316:	e8 72 64 00 00       	callq  3480b78d <memset>
    3480531b:	45 31 c9             	xor    %r9d,%r9d
    3480531e:	66 90                	xchg   %ax,%ax
    34805320:	31 d2                	xor    %edx,%edx
    34805322:	48 89 de             	mov    %rbx,%rsi
    34805325:	bf 30 8b 31 35       	mov    $0x35318b30,%edi
    3480532a:	45 31 c0             	xor    %r8d,%r8d
    3480532d:	0f 1f 00             	nopl   (%rax)
    34805330:	31 c0                	xor    %eax,%eax
    34805332:	31 c9                	xor    %ecx,%ecx
    34805334:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480533b:	00 00 00 00 00 
    34805340:	48 83 3c c6 00       	cmpq   $0x0,(%rsi,%rax,8)
    34805345:	0f 85 15 00 00 00    	jne    34805360 <first_assignments+0x60>
    3480534b:	66 83 3c 47 00       	cmpw   $0x0,(%rdi,%rax,2)
    34805350:	0f 85 0a 00 00 00    	jne    34805360 <first_assignments+0x60>
    34805356:	ff c1                	inc    %ecx
    34805358:	41 89 c1             	mov    %eax,%r9d
    3480535b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34805360:	48 ff c0             	inc    %rax
    34805363:	48 83 f8 65          	cmp    $0x65,%rax
    34805367:	0f 85 d3 ff ff ff    	jne    34805340 <first_assignments+0x40>
    3480536d:	0f b7 c1             	movzwl %cx,%eax
    34805370:	83 f8 01             	cmp    $0x1,%eax
    34805373:	0f 85 5d 00 00 00    	jne    348053d6 <first_assignments+0xd6>
    34805379:	41 ff c0             	inc    %r8d
    3480537c:	49 63 c1             	movslq %r9d,%rax
    3480537f:	48 69 ca ca 00 00 00 	imul   $0xca,%rdx,%rcx
    34805386:	66 c7 84 41 30 8b 31 	movw   $0x1,0x35318b30(%rcx,%rax,2)
    3480538d:	35 01 00 
    34805390:	48 01 c0             	add    %rax,%rax
    34805393:	31 c9                	xor    %ecx,%ecx
    34805395:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480539c:	00 00 00 00 
    348053a0:	48 39 ca             	cmp    %rcx,%rdx
    348053a3:	0f 84 17 00 00 00    	je     348053c0 <first_assignments+0xc0>
    348053a9:	48 83 3c 83 00       	cmpq   $0x0,(%rbx,%rax,4)
    348053ae:	0f 85 0c 00 00 00    	jne    348053c0 <first_assignments+0xc0>
    348053b4:	66 c7 80 30 8b 31 35 	movw   $0x2,0x35318b30(%rax)
    348053bb:	02 00 
    348053bd:	0f 1f 00             	nopl   (%rax)
    348053c0:	48 ff c1             	inc    %rcx
    348053c3:	48 05 ca 00 00 00    	add    $0xca,%rax
    348053c9:	48 83 f9 65          	cmp    $0x65,%rcx
    348053cd:	0f 85 cd ff ff ff    	jne    348053a0 <first_assignments+0xa0>
    348053d3:	41 ff c4             	inc    %r12d
    348053d6:	48 ff c2             	inc    %rdx
    348053d9:	48 81 c7 ca 00 00 00 	add    $0xca,%rdi
    348053e0:	48 81 c6 28 03 00 00 	add    $0x328,%rsi
    348053e7:	48 83 fa 65          	cmp    $0x65,%rdx
    348053eb:	0f 85 3f ff ff ff    	jne    34805330 <first_assignments+0x30>
    348053f1:	31 c9                	xor    %ecx,%ecx
    348053f3:	31 f6                	xor    %esi,%esi
    348053f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348053fc:	00 00 00 00 
    34805400:	31 ff                	xor    %edi,%edi
    34805402:	48 89 ca             	mov    %rcx,%rdx
    34805405:	31 c0                	xor    %eax,%eax
    34805407:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480540e:	00 00 
    34805410:	48 83 3c 93 00       	cmpq   $0x0,(%rbx,%rdx,4)
    34805415:	0f 85 15 00 00 00    	jne    34805430 <first_assignments+0x130>
    3480541b:	66 83 ba 30 8b 31 35 	cmpw   $0x0,0x35318b30(%rdx)
    34805422:	00 
    34805423:	0f 85 07 00 00 00    	jne    34805430 <first_assignments+0x130>
    34805429:	ff c0                	inc    %eax
    3480542b:	41 89 f9             	mov    %edi,%r9d
    3480542e:	66 90                	xchg   %ax,%ax
    34805430:	48 ff c7             	inc    %rdi
    34805433:	48 81 c2 ca 00 00 00 	add    $0xca,%rdx
    3480543a:	48 83 ff 65          	cmp    $0x65,%rdi
    3480543e:	0f 85 cc ff ff ff    	jne    34805410 <first_assignments+0x110>
    34805444:	0f b7 c0             	movzwl %ax,%eax
    34805447:	83 f8 01             	cmp    $0x1,%eax
    3480544a:	0f 85 60 00 00 00    	jne    348054b0 <first_assignments+0x1b0>
    34805450:	41 ff c0             	inc    %r8d
    34805453:	49 63 d1             	movslq %r9d,%rdx
    34805456:	48 69 fa ca 00 00 00 	imul   $0xca,%rdx,%rdi
    3480545d:	48 8d 87 30 8b 31 35 	lea    0x35318b30(%rdi),%rax
    34805464:	66 c7 84 77 30 8b 31 	movw   $0x1,0x35318b30(%rdi,%rsi,2)
    3480546b:	35 01 00 
    3480546e:	48 69 d2 28 03 00 00 	imul   $0x328,%rdx,%rdx
    34805475:	48 01 da             	add    %rbx,%rdx
    34805478:	31 ff                	xor    %edi,%edi
    3480547a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34805480:	48 39 fe             	cmp    %rdi,%rsi
    34805483:	0f 84 17 00 00 00    	je     348054a0 <first_assignments+0x1a0>
    34805489:	48 83 3c fa 00       	cmpq   $0x0,(%rdx,%rdi,8)
    3480548e:	0f 85 0c 00 00 00    	jne    348054a0 <first_assignments+0x1a0>
    34805494:	66 c7 04 78 02 00    	movw   $0x2,(%rax,%rdi,2)
    3480549a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348054a0:	48 ff c7             	inc    %rdi
    348054a3:	48 83 ff 65          	cmp    $0x65,%rdi
    348054a7:	0f 85 d3 ff ff ff    	jne    34805480 <first_assignments+0x180>
    348054ad:	41 ff c4             	inc    %r12d
    348054b0:	48 ff c6             	inc    %rsi
    348054b3:	48 83 c1 02          	add    $0x2,%rcx
    348054b7:	48 83 fe 65          	cmp    $0x65,%rsi
    348054bb:	0f 85 3f ff ff ff    	jne    34805400 <first_assignments+0x100>
    348054c1:	66 45 85 c0          	test   %r8w,%r8w
    348054c5:	0f 85 55 fe ff ff    	jne    34805320 <first_assignments+0x20>
    348054cb:	41 0f b7 c4          	movzwl %r12w,%eax
    348054cf:	66 41 b8 65 00       	mov    $0x65,%r8w
    348054d4:	83 f8 65             	cmp    $0x65,%eax
    348054d7:	0f 84 05 01 00 00    	je     348055e2 <first_assignments+0x2e2>
    348054dd:	41 b9 30 8b 31 35    	mov    $0x35318b30,%r9d
    348054e3:	31 d2                	xor    %edx,%edx
    348054e5:	49 89 da             	mov    %rbx,%r10
    348054e8:	66 45 89 e0          	mov    %r12w,%r8w
    348054ec:	0f 1f 40 00          	nopl   0x0(%rax)
    348054f0:	31 ff                	xor    %edi,%edi
    348054f2:	31 c0                	xor    %eax,%eax
    348054f4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348054fb:	00 00 00 00 00 
    34805500:	48 69 ca 28 03 00 00 	imul   $0x328,%rdx,%rcx
    34805507:	48 01 d9             	add    %rbx,%rcx
    3480550a:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
    3480550f:	0f 85 16 00 00 00    	jne    3480552b <first_assignments+0x22b>
    34805515:	48 69 ca ca 00 00 00 	imul   $0xca,%rdx,%rcx
    3480551c:	66 83 bc 41 30 8b 31 	cmpw   $0x0,0x35318b30(%rcx,%rax,2)
    34805523:	35 00 
    34805525:	0f 84 25 00 00 00    	je     34805550 <first_assignments+0x250>
    3480552b:	48 ff c0             	inc    %rax
    3480552e:	48 83 c7 02          	add    $0x2,%rdi
    34805532:	48 83 f8 65          	cmp    $0x65,%rax
    34805536:	0f 82 c4 ff ff ff    	jb     34805500 <first_assignments+0x200>
    3480553c:	e9 86 00 00 00       	jmpq   348055c7 <first_assignments+0x2c7>
    34805541:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805548:	0f 1f 84 00 00 00 00 
    3480554f:	00 
    34805550:	0f b7 f0             	movzwl %ax,%esi
    34805553:	66 c7 84 71 30 8b 31 	movw   $0x1,0x35318b30(%rcx,%rsi,2)
    3480555a:	35 01 00 
    3480555d:	31 c9                	xor    %ecx,%ecx
    3480555f:	90                   	nop
    34805560:	48 39 c8             	cmp    %rcx,%rax
    34805563:	0f 84 17 00 00 00    	je     34805580 <first_assignments+0x280>
    34805569:	49 83 3c ca 00       	cmpq   $0x0,(%r10,%rcx,8)
    3480556e:	0f 85 0c 00 00 00    	jne    34805580 <first_assignments+0x280>
    34805574:	66 41 c7 04 49 02 00 	movw   $0x2,(%r9,%rcx,2)
    3480557b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34805580:	48 ff c1             	inc    %rcx
    34805583:	48 83 f9 65          	cmp    $0x65,%rcx
    34805587:	0f 85 d3 ff ff ff    	jne    34805560 <first_assignments+0x260>
    3480558d:	31 c0                	xor    %eax,%eax
    3480558f:	90                   	nop
    34805590:	48 39 c2             	cmp    %rax,%rdx
    34805593:	0f 84 17 00 00 00    	je     348055b0 <first_assignments+0x2b0>
    34805599:	48 83 3c bb 00       	cmpq   $0x0,(%rbx,%rdi,4)
    3480559e:	0f 85 0c 00 00 00    	jne    348055b0 <first_assignments+0x2b0>
    348055a4:	66 c7 87 30 8b 31 35 	movw   $0x2,0x35318b30(%rdi)
    348055ab:	02 00 
    348055ad:	0f 1f 00             	nopl   (%rax)
    348055b0:	48 ff c0             	inc    %rax
    348055b3:	48 81 c7 ca 00 00 00 	add    $0xca,%rdi
    348055ba:	48 83 f8 65          	cmp    $0x65,%rax
    348055be:	0f 85 cc ff ff ff    	jne    34805590 <first_assignments+0x290>
    348055c4:	41 ff c0             	inc    %r8d
    348055c7:	48 ff c2             	inc    %rdx
    348055ca:	49 81 c1 ca 00 00 00 	add    $0xca,%r9
    348055d1:	49 81 c2 28 03 00 00 	add    $0x328,%r10
    348055d8:	48 83 fa 65          	cmp    $0x65,%rdx
    348055dc:	0f 85 0e ff ff ff    	jne    348054f0 <first_assignments+0x1f0>
    348055e2:	41 0f b7 c0          	movzwl %r8w,%eax
    348055e6:	48 83 c4 08          	add    $0x8,%rsp
    348055ea:	5b                   	pop    %rbx
    348055eb:	41 5c                	pop    %r12
    348055ed:	c3                   	retq   
    348055ee:	66 90                	xchg   %ax,%ax

00000000348055f0 <second_assignments>:
    348055f0:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    348055f7:	0f 57 c0             	xorps  %xmm0,%xmm0
    348055fa:	0f 11 44 24 3a       	movups %xmm0,0x3a(%rsp)
    348055ff:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    34805604:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    34805609:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    3480560e:	0f 29 04 24          	movaps %xmm0,(%rsp)
    34805612:	0f 29 44 24 f0       	movaps %xmm0,-0x10(%rsp)
    34805617:	0f 29 44 24 e0       	movaps %xmm0,-0x20(%rsp)
    3480561c:	0f 29 44 24 d0       	movaps %xmm0,-0x30(%rsp)
    34805621:	0f 29 44 24 c0       	movaps %xmm0,-0x40(%rsp)
    34805626:	0f 29 44 24 b0       	movaps %xmm0,-0x50(%rsp)
    3480562b:	0f 29 44 24 a0       	movaps %xmm0,-0x60(%rsp)
    34805630:	0f 29 44 24 90       	movaps %xmm0,-0x70(%rsp)
    34805635:	0f 29 44 24 80       	movaps %xmm0,-0x80(%rsp)
    3480563a:	0f 11 84 24 0a 01 00 	movups %xmm0,0x10a(%rsp)
    34805641:	00 
    34805642:	0f 29 84 24 00 01 00 	movaps %xmm0,0x100(%rsp)
    34805649:	00 
    3480564a:	0f 29 84 24 f0 00 00 	movaps %xmm0,0xf0(%rsp)
    34805651:	00 
    34805652:	0f 29 84 24 e0 00 00 	movaps %xmm0,0xe0(%rsp)
    34805659:	00 
    3480565a:	0f 29 84 24 d0 00 00 	movaps %xmm0,0xd0(%rsp)
    34805661:	00 
    34805662:	0f 29 84 24 c0 00 00 	movaps %xmm0,0xc0(%rsp)
    34805669:	00 
    3480566a:	0f 29 84 24 b0 00 00 	movaps %xmm0,0xb0(%rsp)
    34805671:	00 
    34805672:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    34805679:	00 
    3480567a:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    34805681:	00 
    34805682:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    34805689:	00 
    3480568a:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    3480568f:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    34805694:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    34805699:	b8 30 8b 31 35       	mov    $0x35318b30,%eax
    3480569e:	31 c9                	xor    %ecx,%ecx
    348056a0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    348056a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348056ae:	00 00 
    348056b0:	0f b7 74 50 02       	movzwl 0x2(%rax,%rdx,2),%esi
    348056b5:	83 fe 01             	cmp    $0x1,%esi
    348056b8:	0f 84 14 00 00 00    	je     348056d2 <second_assignments+0xe2>
    348056be:	48 ff c2             	inc    %rdx
    348056c1:	48 83 fa 63          	cmp    $0x63,%rdx
    348056c5:	0f 8e e5 ff ff ff    	jle    348056b0 <second_assignments+0xc0>
    348056cb:	66 c7 44 4c 80 01 00 	movw   $0x1,-0x80(%rsp,%rcx,2)
    348056d2:	48 ff c1             	inc    %rcx
    348056d5:	48 05 ca 00 00 00    	add    $0xca,%rax
    348056db:	48 83 f9 65          	cmp    $0x65,%rcx
    348056df:	0f 85 bb ff ff ff    	jne    348056a0 <second_assignments+0xb0>
    348056e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348056ec:	00 00 00 00 
    348056f0:	48 89 f8             	mov    %rdi,%rax
    348056f3:	31 c9                	xor    %ecx,%ecx
    348056f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348056fc:	00 00 00 00 
    34805700:	0f b7 54 4c 80       	movzwl -0x80(%rsp,%rcx,2),%edx
    34805705:	83 fa 01             	cmp    $0x1,%edx
    34805708:	0f 85 21 00 00 00    	jne    3480572f <second_assignments+0x13f>
    3480570e:	31 d2                	xor    %edx,%edx
    34805710:	48 83 3c d0 00       	cmpq   $0x0,(%rax,%rdx,8)
    34805715:	0f 85 07 00 00 00    	jne    34805722 <second_assignments+0x132>
    3480571b:	66 c7 44 54 50 01 00 	movw   $0x1,0x50(%rsp,%rdx,2)
    34805722:	48 ff c2             	inc    %rdx
    34805725:	48 83 fa 65          	cmp    $0x65,%rdx
    34805729:	0f 85 e1 ff ff ff    	jne    34805710 <second_assignments+0x120>
    3480572f:	48 ff c1             	inc    %rcx
    34805732:	48 05 28 03 00 00    	add    $0x328,%rax
    34805738:	48 83 f9 65          	cmp    $0x65,%rcx
    3480573c:	0f 85 be ff ff ff    	jne    34805700 <second_assignments+0x110>
    34805742:	45 31 c9             	xor    %r9d,%r9d
    34805745:	41 b8 30 8b 31 35    	mov    $0x35318b30,%r8d
    3480574b:	31 d2                	xor    %edx,%edx
    3480574d:	0f 1f 00             	nopl   (%rax)
    34805750:	42 0f b7 4c 4c 50    	movzwl 0x50(%rsp,%r9,2),%ecx
    34805756:	83 f9 01             	cmp    $0x1,%ecx
    34805759:	0f 85 48 00 00 00    	jne    348057a7 <second_assignments+0x1b7>
    3480575f:	4c 89 c6             	mov    %r8,%rsi
    34805762:	31 c9                	xor    %ecx,%ecx
    34805764:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480576b:	00 00 00 00 00 
    34805770:	0f b7 06             	movzwl (%rsi),%eax
    34805773:	83 f8 01             	cmp    $0x1,%eax
    34805776:	0f 85 17 00 00 00    	jne    34805793 <second_assignments+0x1a3>
    3480577c:	0f b7 44 4c 80       	movzwl -0x80(%rsp,%rcx,2),%eax
    34805781:	83 f8 01             	cmp    $0x1,%eax
    34805784:	0f 84 09 00 00 00    	je     34805793 <second_assignments+0x1a3>
    3480578a:	66 c7 44 4c 80 01 00 	movw   $0x1,-0x80(%rsp,%rcx,2)
    34805791:	ff c2                	inc    %edx
    34805793:	48 ff c1             	inc    %rcx
    34805796:	48 81 c6 ca 00 00 00 	add    $0xca,%rsi
    3480579d:	48 83 f9 65          	cmp    $0x65,%rcx
    348057a1:	0f 85 c9 ff ff ff    	jne    34805770 <second_assignments+0x180>
    348057a7:	49 ff c1             	inc    %r9
    348057aa:	49 83 c0 02          	add    $0x2,%r8
    348057ae:	49 83 f9 65          	cmp    $0x65,%r9
    348057b2:	0f 85 98 ff ff ff    	jne    34805750 <second_assignments+0x160>
    348057b8:	66 85 d2             	test   %dx,%dx
    348057bb:	0f 85 2f ff ff ff    	jne    348056f0 <second_assignments+0x100>
    348057c1:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    348057c8:	ff ff 7f 
    348057cb:	45 31 c0             	xor    %r8d,%r8d
    348057ce:	48 89 fa             	mov    %rdi,%rdx
    348057d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348057d8:	0f 1f 84 00 00 00 00 
    348057df:	00 
    348057e0:	66 42 83 7c 44 80 00 	cmpw   $0x0,-0x80(%rsp,%r8,2)
    348057e7:	0f 84 29 00 00 00    	je     34805816 <second_assignments+0x226>
    348057ed:	31 f6                	xor    %esi,%esi
    348057ef:	90                   	nop
    348057f0:	0f b7 4c 74 50       	movzwl 0x50(%rsp,%rsi,2),%ecx
    348057f5:	83 f9 01             	cmp    $0x1,%ecx
    348057f8:	0f 84 0b 00 00 00    	je     34805809 <second_assignments+0x219>
    348057fe:	48 8b 0c f2          	mov    (%rdx,%rsi,8),%rcx
    34805802:	48 39 c1             	cmp    %rax,%rcx
    34805805:	48 0f 4e c1          	cmovle %rcx,%rax
    34805809:	48 ff c6             	inc    %rsi
    3480580c:	48 83 fe 65          	cmp    $0x65,%rsi
    34805810:	0f 85 da ff ff ff    	jne    348057f0 <second_assignments+0x200>
    34805816:	49 ff c0             	inc    %r8
    34805819:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    34805820:	49 83 f8 65          	cmp    $0x65,%r8
    34805824:	0f 85 b6 ff ff ff    	jne    348057e0 <second_assignments+0x1f0>
    3480582a:	45 31 c0             	xor    %r8d,%r8d
    3480582d:	48 89 fa             	mov    %rdi,%rdx
    34805830:	66 42 83 7c 44 80 00 	cmpw   $0x0,-0x80(%rsp,%r8,2)
    34805837:	0f 84 22 00 00 00    	je     3480585f <second_assignments+0x26f>
    3480583d:	31 f6                	xor    %esi,%esi
    3480583f:	90                   	nop
    34805840:	0f b7 4c 74 50       	movzwl 0x50(%rsp,%rsi,2),%ecx
    34805845:	83 f9 01             	cmp    $0x1,%ecx
    34805848:	0f 84 04 00 00 00    	je     34805852 <second_assignments+0x262>
    3480584e:	48 29 04 f2          	sub    %rax,(%rdx,%rsi,8)
    34805852:	48 ff c6             	inc    %rsi
    34805855:	48 83 fe 65          	cmp    $0x65,%rsi
    34805859:	0f 85 e1 ff ff ff    	jne    34805840 <second_assignments+0x250>
    3480585f:	49 ff c0             	inc    %r8
    34805862:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    34805869:	49 83 f8 65          	cmp    $0x65,%r8
    3480586d:	0f 85 bd ff ff ff    	jne    34805830 <second_assignments+0x240>
    34805873:	31 c9                	xor    %ecx,%ecx
    34805875:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480587c:	00 00 00 00 
    34805880:	66 83 7c 4c 80 00    	cmpw   $0x0,-0x80(%rsp,%rcx,2)
    34805886:	0f 85 23 00 00 00    	jne    348058af <second_assignments+0x2bf>
    3480588c:	31 d2                	xor    %edx,%edx
    3480588e:	66 90                	xchg   %ax,%ax
    34805890:	0f b7 74 54 50       	movzwl 0x50(%rsp,%rdx,2),%esi
    34805895:	83 fe 01             	cmp    $0x1,%esi
    34805898:	0f 85 04 00 00 00    	jne    348058a2 <second_assignments+0x2b2>
    3480589e:	48 01 04 d7          	add    %rax,(%rdi,%rdx,8)
    348058a2:	48 ff c2             	inc    %rdx
    348058a5:	48 83 fa 65          	cmp    $0x65,%rdx
    348058a9:	0f 85 e1 ff ff ff    	jne    34805890 <second_assignments+0x2a0>
    348058af:	48 ff c1             	inc    %rcx
    348058b2:	48 81 c7 28 03 00 00 	add    $0x328,%rdi
    348058b9:	48 83 f9 65          	cmp    $0x65,%rcx
    348058bd:	0f 85 bd ff ff ff    	jne    34805880 <second_assignments+0x290>
    348058c3:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    348058ca:	c3                   	retq   
    348058cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000348058d0 <cipher_idea>:
    348058d0:	41 54                	push   %r12
    348058d2:	53                   	push   %rbx
    348058d3:	48 83 ec 28          	sub    $0x28,%rsp
    348058d7:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    348058dc:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    348058e1:	66 8b 0f             	mov    (%rdi),%cx
    348058e4:	66 8b 47 02          	mov    0x2(%rdi),%ax
    348058e8:	89 44 24 08          	mov    %eax,0x8(%rsp)
    348058ec:	66 44 8b 67 04       	mov    0x4(%rdi),%r12w
    348058f1:	66 8b 47 06          	mov    0x6(%rdi),%ax
    348058f5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    348058f9:	31 db                	xor    %ebx,%ebx
    348058fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34805900:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34805905:	0f b7 34 18          	movzwl (%rax,%rbx,1),%esi
    34805909:	0f b7 f9             	movzwl %cx,%edi
    3480590c:	e8 ef 00 00 00       	callq  34805a00 <mul>
    34805911:	89 44 24 18          	mov    %eax,0x18(%rsp)
    34805915:	8b 44 24 08          	mov    0x8(%rsp),%eax
    34805919:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    3480591e:	66 03 44 19 02       	add    0x2(%rcx,%rbx,1),%ax
    34805923:	89 44 24 08          	mov    %eax,0x8(%rsp)
    34805927:	66 44 03 64 19 04    	add    0x4(%rcx,%rbx,1),%r12w
    3480592d:	44 89 64 24 1c       	mov    %r12d,0x1c(%rsp)
    34805932:	0f b7 74 19 06       	movzwl 0x6(%rcx,%rbx,1),%esi
    34805937:	0f b7 7c 24 0c       	movzwl 0xc(%rsp),%edi
    3480593c:	e8 bf 00 00 00       	callq  34805a00 <mul>
    34805941:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    34805945:	44 89 e0             	mov    %r12d,%eax
    34805948:	33 44 24 18          	xor    0x18(%rsp),%eax
    3480594c:	0f b7 f8             	movzwl %ax,%edi
    3480594f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34805954:	0f b7 74 18 08       	movzwl 0x8(%rax,%rbx,1),%esi
    34805959:	e8 a2 00 00 00       	callq  34805a00 <mul>
    3480595e:	66 41 89 c4          	mov    %ax,%r12w
    34805962:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    34805966:	33 44 24 08          	xor    0x8(%rsp),%eax
    3480596a:	44 01 e0             	add    %r12d,%eax
    3480596d:	0f b7 f8             	movzwl %ax,%edi
    34805970:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34805975:	0f b7 74 18 0a       	movzwl 0xa(%rax,%rbx,1),%esi
    3480597a:	e8 81 00 00 00       	callq  34805a00 <mul>
    3480597f:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
    34805983:	41 01 c4             	add    %eax,%r12d
    34805986:	31 c1                	xor    %eax,%ecx
    34805988:	44 31 64 24 0c       	xor    %r12d,0xc(%rsp)
    3480598d:	44 33 64 24 08       	xor    0x8(%rsp),%r12d
    34805992:	33 44 24 1c          	xor    0x1c(%rsp),%eax
    34805996:	89 44 24 08          	mov    %eax,0x8(%rsp)
    3480599a:	48 83 c3 0c          	add    $0xc,%rbx
    3480599e:	83 fb 60             	cmp    $0x60,%ebx
    348059a1:	0f 85 59 ff ff ff    	jne    34805900 <cipher_idea+0x30>
    348059a7:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    348059ac:	0f b7 70 60          	movzwl 0x60(%rax),%esi
    348059b0:	0f b7 f9             	movzwl %cx,%edi
    348059b3:	e8 48 00 00 00       	callq  34805a00 <mul>
    348059b8:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    348059bd:	66 89 03             	mov    %ax,(%rbx)
    348059c0:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    348059c5:	66 44 03 61 62       	add    0x62(%rcx),%r12w
    348059ca:	66 44 89 63 02       	mov    %r12w,0x2(%rbx)
    348059cf:	8b 44 24 08          	mov    0x8(%rsp),%eax
    348059d3:	66 03 41 64          	add    0x64(%rcx),%ax
    348059d7:	66 89 43 04          	mov    %ax,0x4(%rbx)
    348059db:	0f b7 71 66          	movzwl 0x66(%rcx),%esi
    348059df:	0f b7 7c 24 0c       	movzwl 0xc(%rsp),%edi
    348059e4:	e8 17 00 00 00       	callq  34805a00 <mul>
    348059e9:	66 89 43 06          	mov    %ax,0x6(%rbx)
    348059ed:	48 83 c4 28          	add    $0x28,%rsp
    348059f1:	5b                   	pop    %rbx
    348059f2:	41 5c                	pop    %r12
    348059f4:	c3                   	retq   
    348059f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348059fc:	00 00 00 00 

0000000034805a00 <mul>:
    34805a00:	66 85 ff             	test   %di,%di
    34805a03:	0f 84 22 00 00 00    	je     34805a2b <mul+0x2b>
    34805a09:	66 85 f6             	test   %si,%si
    34805a0c:	0f 84 21 00 00 00    	je     34805a33 <mul+0x33>
    34805a12:	0f b7 cf             	movzwl %di,%ecx
    34805a15:	0f b7 c6             	movzwl %si,%eax
    34805a18:	0f af c1             	imul   %ecx,%eax
    34805a1b:	89 c1                	mov    %eax,%ecx
    34805a1d:	c1 e9 10             	shr    $0x10,%ecx
    34805a20:	0f b7 d0             	movzwl %ax,%edx
    34805a23:	29 c8                	sub    %ecx,%eax
    34805a25:	39 ca                	cmp    %ecx,%edx
    34805a27:	83 d0 00             	adc    $0x0,%eax
    34805a2a:	c3                   	retq   
    34805a2b:	b8 01 00 00 00       	mov    $0x1,%eax
    34805a30:	29 f0                	sub    %esi,%eax
    34805a32:	c3                   	retq   
    34805a33:	b8 01 00 00 00       	mov    $0x1,%eax
    34805a38:	29 f8                	sub    %edi,%eax
    34805a3a:	c3                   	retq   
    34805a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034805a40 <inv>:
    34805a40:	41 89 f8             	mov    %edi,%r8d
    34805a43:	41 83 f8 02          	cmp    $0x2,%r8d
    34805a47:	0f 82 6a 00 00 00    	jb     34805ab7 <inv+0x77>
    34805a4d:	b8 01 00 01 00       	mov    $0x10001,%eax
    34805a52:	31 d2                	xor    %edx,%edx
    34805a54:	41 f7 f0             	div    %r8d
    34805a57:	89 c6                	mov    %eax,%esi
    34805a59:	83 fa 01             	cmp    $0x1,%edx
    34805a5c:	0f 84 4c 00 00 00    	je     34805aae <inv+0x6e>
    34805a62:	b9 01 00 00 00       	mov    $0x1,%ecx
    34805a67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805a6e:	00 00 
    34805a70:	41 0f b7 c0          	movzwl %r8w,%eax
    34805a74:	0f b7 fa             	movzwl %dx,%edi
    34805a77:	31 d2                	xor    %edx,%edx
    34805a79:	f7 f7                	div    %edi
    34805a7b:	44 0f b7 ce          	movzwl %si,%r9d
    34805a7f:	41 0f af c1          	imul   %r9d,%eax
    34805a83:	0f b7 c9             	movzwl %cx,%ecx
    34805a86:	01 c1                	add    %eax,%ecx
    34805a88:	41 89 d0             	mov    %edx,%r8d
    34805a8b:	41 83 f8 01          	cmp    $0x1,%r8d
    34805a8f:	0f 84 26 00 00 00    	je     34805abb <inv+0x7b>
    34805a95:	31 d2                	xor    %edx,%edx
    34805a97:	89 f8                	mov    %edi,%eax
    34805a99:	41 f7 f0             	div    %r8d
    34805a9c:	0f b7 f1             	movzwl %cx,%esi
    34805a9f:	0f af f0             	imul   %eax,%esi
    34805aa2:	44 01 ce             	add    %r9d,%esi
    34805aa5:	83 fa 01             	cmp    $0x1,%edx
    34805aa8:	0f 85 c2 ff ff ff    	jne    34805a70 <inv+0x30>
    34805aae:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    34805ab4:	41 29 f0             	sub    %esi,%r8d
    34805ab7:	44 89 c0             	mov    %r8d,%eax
    34805aba:	c3                   	retq   
    34805abb:	66 41 89 c8          	mov    %cx,%r8w
    34805abf:	44 89 c0             	mov    %r8d,%eax
    34805ac2:	c3                   	retq   
    34805ac3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805aca:	84 00 00 00 00 00 

0000000034805ad0 <create_text_line>:
    34805ad0:	41 54                	push   %r12
    34805ad2:	53                   	push   %rbx
    34805ad3:	48 83 ec 48          	sub    $0x48,%rsp
    34805ad7:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    34805adc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34805ae1:	45 31 e4             	xor    %r12d,%r12d
    34805ae4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805aeb:	00 00 00 00 00 
    34805af0:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    34805af5:	bf 32 00 00 00       	mov    $0x32,%edi
    34805afa:	e8 91 b7 ff ff       	callq  34801290 <abs_randwc>
    34805aff:	89 c0                	mov    %eax,%eax
    34805b01:	48 8b 1c c5 40 73 a1 	mov    0x34a17340(,%rax,8),%rbx
    34805b08:	34 
    34805b09:	48 89 df             	mov    %rbx,%rdi
    34805b0c:	e8 5f 6a 00 00       	callq  3480c570 <strlen>
    34805b11:	48 8d 50 01          	lea    0x1(%rax),%rdx
    34805b15:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    34805b1a:	48 89 c7             	mov    %rax,%rdi
    34805b1d:	48 89 de             	mov    %rbx,%rsi
    34805b20:	e8 cb 13 00 00       	callq  34806ef0 <MoveMemory>
    34805b25:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    34805b2a:	e8 41 6a 00 00       	callq  3480c570 <strlen>
    34805b2f:	c6 44 04 20 20       	movb   $0x20,0x20(%rsp,%rax,1)
    34805b34:	4a 8d 4c 20 01       	lea    0x1(%rax,%r12,1),%rcx
    34805b39:	48 ff c0             	inc    %rax
    34805b3c:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    34805b41:	48 89 d3             	mov    %rdx,%rbx
    34805b44:	4c 29 e3             	sub    %r12,%rbx
    34805b47:	48 39 d1             	cmp    %rdx,%rcx
    34805b4a:	48 0f 4e d8          	cmovle %rax,%rbx
    34805b4e:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    34805b53:	4c 89 e7             	mov    %r12,%rdi
    34805b56:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    34805b5b:	48 89 da             	mov    %rbx,%rdx
    34805b5e:	e8 8d 13 00 00       	callq  34806ef0 <MoveMemory>
    34805b63:	48 01 5c 24 18       	add    %rbx,0x18(%rsp)
    34805b68:	49 01 dc             	add    %rbx,%r12
    34805b6b:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    34805b70:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    34805b75:	4c 3b 64 24 10       	cmp    0x10(%rsp),%r12
    34805b7a:	0f 8c 70 ff ff ff    	jl     34805af0 <create_text_line+0x20>
    34805b80:	48 83 c4 48          	add    $0x48,%rsp
    34805b84:	5b                   	pop    %rbx
    34805b85:	41 5c                	pop    %r12
    34805b87:	c3                   	retq   
    34805b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34805b8f:	00 

0000000034805b90 <SetCompBit>:
    34805b90:	41 89 f0             	mov    %esi,%r8d
    34805b93:	41 c1 e8 03          	shr    $0x3,%r8d
    34805b97:	40 80 e6 07          	and    $0x7,%sil
    34805b9b:	b8 01 00 00 00       	mov    $0x1,%eax
    34805ba0:	89 f1                	mov    %esi,%ecx
    34805ba2:	d3 e0                	shl    %cl,%eax
    34805ba4:	80 fa 31             	cmp    $0x31,%dl
    34805ba7:	0f 85 10 00 00 00    	jne    34805bbd <SetCompBit+0x2d>
    34805bad:	44 89 c2             	mov    %r8d,%edx
    34805bb0:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
    34805bb4:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
    34805bb8:	09 d0                	or     %edx,%eax
    34805bba:	88 01                	mov    %al,(%rcx)
    34805bbc:	c3                   	retq   
    34805bbd:	f7 d0                	not    %eax
    34805bbf:	44 89 c2             	mov    %r8d,%edx
    34805bc2:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
    34805bc6:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
    34805bca:	21 d0                	and    %edx,%eax
    34805bcc:	88 01                	mov    %al,(%rcx)
    34805bce:	c3                   	retq   
    34805bcf:	90                   	nop

0000000034805bd0 <GetCompBit>:
    34805bd0:	89 f0                	mov    %esi,%eax
    34805bd2:	c1 e8 03             	shr    $0x3,%eax
    34805bd5:	40 80 e6 07          	and    $0x7,%sil
    34805bd9:	ba 01 00 00 00       	mov    $0x1,%edx
    34805bde:	89 f1                	mov    %esi,%ecx
    34805be0:	d3 e2                	shl    %cl,%edx
    34805be2:	0f b6 04 07          	movzbl (%rdi,%rax,1),%eax
    34805be6:	21 d0                	and    %edx,%eax
    34805be8:	c3                   	retq   
    34805be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034805bf0 <do_forward_pass>:
    34805bf0:	50                   	push   %rax
    34805bf1:	e8 4a 02 00 00       	callq  34805e40 <do_mid_forward>
    34805bf6:	58                   	pop    %rax
    34805bf7:	e9 e4 02 00 00       	jmpq   34805ee0 <do_out_forward>
    34805bfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034805c00 <do_back_pass>:
    34805c00:	53                   	push   %rbx
    34805c01:	89 fb                	mov    %edi,%ebx
    34805c03:	e8 58 03 00 00       	callq  34805f60 <do_out_error>
    34805c08:	e8 23 05 00 00       	callq  34806130 <do_mid_error>
    34805c0d:	e8 9e 05 00 00       	callq  348061b0 <adjust_out_wts>
    34805c12:	89 df                	mov    %ebx,%edi
    34805c14:	5b                   	pop    %rbx
    34805c15:	e9 f6 03 00 00       	jmpq   34806010 <adjust_mid_wts>
    34805c1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000034805c20 <randomize_wts>:
    34805c20:	41 54                	push   %r12
    34805c22:	53                   	push   %rbx
    34805c23:	50                   	push   %rax
    34805c24:	bb d0 ed 31 35       	mov    $0x3531edd0,%ebx
    34805c29:	31 c0                	xor    %eax,%eax
    34805c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34805c30:	48 89 04 24          	mov    %rax,(%rsp)
    34805c34:	45 31 e4             	xor    %r12d,%r12d
    34805c37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805c3e:	00 00 
    34805c40:	bf a0 86 01 00       	mov    $0x186a0,%edi
    34805c45:	e8 46 b6 ff ff       	callq  34801290 <abs_randwc>
    34805c4a:	f2 0f 10 05 56 db 00 	movsd  0xdb56(%rip),%xmm0        # 348137a8 <DoEmFloatIteration.jtable+0x888>
    34805c51:	00 
    34805c52:	66 0f 28 d0          	movapd %xmm0,%xmm2
    34805c56:	f2 0f 10 05 52 db 00 	movsd  0xdb52(%rip),%xmm0        # 348137b0 <DoEmFloatIteration.jtable+0x890>
    34805c5d:	00 
    34805c5e:	66 0f 28 c8          	movapd %xmm0,%xmm1
    34805c62:	89 c0                	mov    %eax,%eax
    34805c64:	0f 57 c0             	xorps  %xmm0,%xmm0
    34805c67:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    34805c6c:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    34805c70:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34805c74:	f2 0f 10 0d 0c db 00 	movsd  0xdb0c(%rip),%xmm1        # 34813788 <DoEmFloatIteration.jtable+0x868>
    34805c7b:	00 
    34805c7c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    34805c80:	f2 42 0f 11 04 e3    	movsd  %xmm0,(%rbx,%r12,8)
    34805c86:	49 ff c4             	inc    %r12
    34805c89:	49 83 fc 23          	cmp    $0x23,%r12
    34805c8d:	0f 85 ad ff ff ff    	jne    34805c40 <randomize_wts+0x20>
    34805c93:	48 8b 04 24          	mov    (%rsp),%rax
    34805c97:	48 ff c0             	inc    %rax
    34805c9a:	48 81 c3 18 01 00 00 	add    $0x118,%rbx
    34805ca1:	48 83 f8 08          	cmp    $0x8,%rax
    34805ca5:	0f 85 85 ff ff ff    	jne    34805c30 <randomize_wts+0x10>
    34805cab:	bb 50 fb 31 35       	mov    $0x3531fb50,%ebx
    34805cb0:	31 c0                	xor    %eax,%eax
    34805cb2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805cb9:	1f 84 00 00 00 00 00 
    34805cc0:	48 89 04 24          	mov    %rax,(%rsp)
    34805cc4:	45 31 e4             	xor    %r12d,%r12d
    34805cc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805cce:	00 00 
    34805cd0:	bf a0 86 01 00       	mov    $0x186a0,%edi
    34805cd5:	e8 b6 b5 ff ff       	callq  34801290 <abs_randwc>
    34805cda:	f2 0f 10 05 d6 da 00 	movsd  0xdad6(%rip),%xmm0        # 348137b8 <DoEmFloatIteration.jtable+0x898>
    34805ce1:	00 
    34805ce2:	66 0f 28 c8          	movapd %xmm0,%xmm1
    34805ce6:	89 c0                	mov    %eax,%eax
    34805ce8:	0f 57 c0             	xorps  %xmm0,%xmm0
    34805ceb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    34805cf0:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    34805cf4:	f2 0f 58 05 b4 da 00 	addsd  0xdab4(%rip),%xmm0        # 348137b0 <DoEmFloatIteration.jtable+0x890>
    34805cfb:	00 
    34805cfc:	f2 0f 59 05 84 da 00 	mulsd  0xda84(%rip),%xmm0        # 34813788 <DoEmFloatIteration.jtable+0x868>
    34805d03:	00 
    34805d04:	f2 42 0f 11 04 e3    	movsd  %xmm0,(%rbx,%r12,8)
    34805d0a:	49 ff c4             	inc    %r12
    34805d0d:	49 83 fc 08          	cmp    $0x8,%r12
    34805d11:	0f 85 b9 ff ff ff    	jne    34805cd0 <randomize_wts+0xb0>
    34805d17:	48 8b 04 24          	mov    (%rsp),%rax
    34805d1b:	48 ff c0             	inc    %rax
    34805d1e:	48 83 c3 40          	add    $0x40,%rbx
    34805d22:	48 83 f8 08          	cmp    $0x8,%rax
    34805d26:	0f 85 94 ff ff ff    	jne    34805cc0 <randomize_wts+0xa0>
    34805d2c:	48 83 c4 08          	add    $0x8,%rsp
    34805d30:	5b                   	pop    %rbx
    34805d31:	41 5c                	pop    %r12
    34805d33:	c3                   	retq   
    34805d34:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805d3b:	00 00 00 00 00 

0000000034805d40 <zero_changes>:
    34805d40:	50                   	push   %rax
    34805d41:	bf c0 e4 31 35       	mov    $0x3531e4c0,%edi
    34805d46:	31 f6                	xor    %esi,%esi
    34805d48:	ba c0 08 00 00       	mov    $0x8c0,%edx
    34805d4d:	e8 3b 5a 00 00       	callq  3480b78d <memset>
    34805d52:	bf 50 db 31 35       	mov    $0x3531db50,%edi
    34805d57:	31 f6                	xor    %esi,%esi
    34805d59:	ba c0 08 00 00       	mov    $0x8c0,%edx
    34805d5e:	e8 2a 5a 00 00       	callq  3480b78d <memset>
    34805d63:	bf 80 08 32 35       	mov    $0x35320880,%edi
    34805d68:	31 f6                	xor    %esi,%esi
    34805d6a:	ba 00 02 00 00       	mov    $0x200,%edx
    34805d6f:	e8 19 5a 00 00       	callq  3480b78d <memset>
    34805d74:	bf 90 f6 31 35       	mov    $0x3531f690,%edi
    34805d79:	31 f6                	xor    %esi,%esi
    34805d7b:	ba 00 02 00 00       	mov    $0x200,%edx
    34805d80:	e8 08 5a 00 00       	callq  3480b78d <memset>
    34805d85:	58                   	pop    %rax
    34805d86:	c3                   	retq   
    34805d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805d8e:	00 00 

0000000034805d90 <move_wt_changes>:
    34805d90:	31 c0                	xor    %eax,%eax
    34805d92:	31 c9                	xor    %ecx,%ecx
    34805d94:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805d9b:	00 00 00 00 00 
    34805da0:	48 c7 c2 e8 fe ff ff 	mov    $0xfffffffffffffee8,%rdx
    34805da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805dae:	00 00 
    34805db0:	48 8b b4 10 68 dc 31 	mov    0x3531dc68(%rax,%rdx,1),%rsi
    34805db7:	35 
    34805db8:	48 89 b4 10 d8 e5 31 	mov    %rsi,0x3531e5d8(%rax,%rdx,1)
    34805dbf:	35 
    34805dc0:	48 c7 84 10 68 dc 31 	movq   $0x0,0x3531dc68(%rax,%rdx,1)
    34805dc7:	35 00 00 00 00 
    34805dcc:	48 83 c2 08          	add    $0x8,%rdx
    34805dd0:	0f 85 da ff ff ff    	jne    34805db0 <move_wt_changes+0x20>
    34805dd6:	48 ff c1             	inc    %rcx
    34805dd9:	48 05 18 01 00 00    	add    $0x118,%rax
    34805ddf:	48 83 f9 08          	cmp    $0x8,%rcx
    34805de3:	0f 85 b7 ff ff ff    	jne    34805da0 <move_wt_changes+0x10>
    34805de9:	31 c0                	xor    %eax,%eax
    34805deb:	31 c9                	xor    %ecx,%ecx
    34805ded:	0f 1f 00             	nopl   (%rax)
    34805df0:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
    34805df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34805dfe:	00 00 
    34805e00:	48 8b b4 10 d0 f6 31 	mov    0x3531f6d0(%rax,%rdx,1),%rsi
    34805e07:	35 
    34805e08:	48 89 b4 10 c0 08 32 	mov    %rsi,0x353208c0(%rax,%rdx,1)
    34805e0f:	35 
    34805e10:	48 c7 84 10 d0 f6 31 	movq   $0x0,0x3531f6d0(%rax,%rdx,1)
    34805e17:	35 00 00 00 00 
    34805e1c:	48 83 c2 08          	add    $0x8,%rdx
    34805e20:	0f 85 da ff ff ff    	jne    34805e00 <move_wt_changes+0x70>
    34805e26:	48 ff c1             	inc    %rcx
    34805e29:	48 83 c0 40          	add    $0x40,%rax
    34805e2d:	48 83 f9 08          	cmp    $0x8,%rcx
    34805e31:	0f 85 b9 ff ff ff    	jne    34805df0 <move_wt_changes+0x60>
    34805e37:	c3                   	retq   
    34805e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34805e3f:	00 

0000000034805e40 <do_mid_forward>:
    34805e40:	41 54                	push   %r12
    34805e42:	53                   	push   %rbx
    34805e43:	50                   	push   %rax
    34805e44:	48 63 c7             	movslq %edi,%rax
    34805e47:	bb d0 ed 31 35       	mov    $0x3531edd0,%ebx
    34805e4c:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax
    34805e53:	4c 8d a0 90 fd 31 35 	lea    0x3531fd90(%rax),%r12
    34805e5a:	31 c0                	xor    %eax,%eax
    34805e5c:	0f 1f 40 00          	nopl   0x0(%rax)
    34805e60:	48 89 04 24          	mov    %rax,(%rsp)
    34805e64:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34805e68:	31 c0                	xor    %eax,%eax
    34805e6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34805e70:	f2 0f 10 0c c3       	movsd  (%rbx,%rax,8),%xmm1
    34805e75:	f2 41 0f 59 0c c4    	mulsd  (%r12,%rax,8),%xmm1
    34805e7b:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34805e7f:	48 ff c0             	inc    %rax
    34805e82:	48 83 f8 23          	cmp    $0x23,%rax
    34805e86:	0f 85 e4 ff ff ff    	jne    34805e70 <do_mid_forward+0x30>
    34805e8c:	66 0f 57 05 8c d9 00 	xorpd  0xd98c(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    34805e93:	00 
    34805e94:	e8 a7 12 00 00       	callq  34807140 <exp>
    34805e99:	f2 0f 10 0d bf d0 00 	movsd  0xd0bf(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34805ea0:	00 
    34805ea1:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34805ea5:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34805ea9:	48 8b 04 24          	mov    (%rsp),%rax
    34805ead:	f2 0f 11 0c c5 90 ed 	movsd  %xmm1,0x3531ed90(,%rax,8)
    34805eb4:	31 35 
    34805eb6:	48 ff c0             	inc    %rax
    34805eb9:	48 81 c3 18 01 00 00 	add    $0x118,%rbx
    34805ec0:	48 83 f8 08          	cmp    $0x8,%rax
    34805ec4:	0f 85 96 ff ff ff    	jne    34805e60 <do_mid_forward+0x20>
    34805eca:	48 83 c4 08          	add    $0x8,%rsp
    34805ece:	5b                   	pop    %rbx
    34805ecf:	41 5c                	pop    %r12
    34805ed1:	c3                   	retq   
    34805ed2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34805ed9:	1f 84 00 00 00 00 00 

0000000034805ee0 <do_out_forward>:
    34805ee0:	41 54                	push   %r12
    34805ee2:	53                   	push   %rbx
    34805ee3:	50                   	push   %rax
    34805ee4:	bb 50 fb 31 35       	mov    $0x3531fb50,%ebx
    34805ee9:	45 31 e4             	xor    %r12d,%r12d
    34805eec:	0f 1f 40 00          	nopl   0x0(%rax)
    34805ef0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34805ef4:	31 c0                	xor    %eax,%eax
    34805ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34805efd:	00 00 00 
    34805f00:	f2 0f 10 0c 03       	movsd  (%rbx,%rax,1),%xmm1
    34805f05:	f2 0f 59 88 90 ed 31 	mulsd  0x3531ed90(%rax),%xmm1
    34805f0c:	35 
    34805f0d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34805f11:	48 83 c0 08          	add    $0x8,%rax
    34805f15:	48 83 f8 40          	cmp    $0x40,%rax
    34805f19:	0f 85 e1 ff ff ff    	jne    34805f00 <do_out_forward+0x20>
    34805f1f:	66 0f 57 05 f9 d8 00 	xorpd  0xd8f9(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    34805f26:	00 
    34805f27:	e8 14 12 00 00       	callq  34807140 <exp>
    34805f2c:	f2 0f 10 0d 2c d0 00 	movsd  0xd02c(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    34805f33:	00 
    34805f34:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34805f38:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    34805f3c:	f2 42 0f 11 0c e5 90 	movsd  %xmm1,0x3531f890(,%r12,8)
    34805f43:	f8 31 35 
    34805f46:	49 ff c4             	inc    %r12
    34805f49:	48 83 c3 40          	add    $0x40,%rbx
    34805f4d:	49 83 fc 08          	cmp    $0x8,%r12
    34805f51:	0f 85 99 ff ff ff    	jne    34805ef0 <do_out_forward+0x10>
    34805f57:	48 83 c4 08          	add    $0x8,%rsp
    34805f5b:	5b                   	pop    %rbx
    34805f5c:	41 5c                	pop    %r12
    34805f5e:	c3                   	retq   
    34805f5f:	90                   	nop

0000000034805f60 <do_out_error>:
    34805f60:	48 63 c7             	movslq %edi,%rax
    34805f63:	48 89 c1             	mov    %rax,%rcx
    34805f66:	48 c1 e1 06          	shl    $0x6,%rcx
    34805f6a:	48 8d 89 d0 f8 31 35 	lea    0x3531f8d0(%rcx),%rcx
    34805f71:	0f 57 c0             	xorps  %xmm0,%xmm0
    34805f74:	31 d2                	xor    %edx,%edx
    34805f76:	66 0f 28 15 a2 d8 00 	movapd 0xd8a2(%rip),%xmm2        # 34813820 <DoEmFloatIteration.jtable+0x900>
    34805f7d:	00 
    34805f7e:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    34805f82:	66 0f 57 db          	xorpd  %xmm3,%xmm3
    34805f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34805f8d:	00 00 00 
    34805f90:	f2 0f 10 24 11       	movsd  (%rcx,%rdx,1),%xmm4
    34805f95:	f2 0f 5c a2 90 f8 31 	subsd  0x3531f890(%rdx),%xmm4
    34805f9c:	35 
    34805f9d:	f2 0f 11 a2 50 fd 31 	movsd  %xmm4,0x3531fd50(%rdx)
    34805fa4:	35 
    34805fa5:	66 0f 2e c4          	ucomisd %xmm4,%xmm0
    34805fa9:	0f 86 21 00 00 00    	jbe    34805fd0 <do_out_error+0x70>
    34805faf:	f2 0f 5c cc          	subsd  %xmm4,%xmm1
    34805fb3:	66 0f 57 e2          	xorpd  %xmm2,%xmm4
    34805fb7:	66 0f 2e e3          	ucomisd %xmm3,%xmm4
    34805fbb:	0f 87 1d 00 00 00    	ja     34805fde <do_out_error+0x7e>
    34805fc1:	e9 1c 00 00 00       	jmpq   34805fe2 <do_out_error+0x82>
    34805fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34805fcd:	00 00 00 
    34805fd0:	f2 0f 58 cc          	addsd  %xmm4,%xmm1
    34805fd4:	66 0f 2e e3          	ucomisd %xmm3,%xmm4
    34805fd8:	0f 86 04 00 00 00    	jbe    34805fe2 <do_out_error+0x82>
    34805fde:	66 0f 28 dc          	movapd %xmm4,%xmm3
    34805fe2:	48 83 c2 08          	add    $0x8,%rdx
    34805fe6:	48 83 fa 40          	cmp    $0x40,%rdx
    34805fea:	0f 85 a0 ff ff ff    	jne    34805f90 <do_out_error+0x30>
    34805ff0:	f2 0f 59 0d c8 d7 00 	mulsd  0xd7c8(%rip),%xmm1        # 348137c0 <DoEmFloatIteration.jtable+0x8a0>
    34805ff7:	00 
    34805ff8:	f2 0f 11 0c c5 60 e4 	movsd  %xmm1,0x3531e460(,%rax,8)
    34805fff:	31 35 
    34806001:	f2 0f 11 1c c5 f0 da 	movsd  %xmm3,0x3531daf0(,%rax,8)
    34806008:	31 35 
    3480600a:	c3                   	retq   
    3480600b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034806010 <adjust_mid_wts>:
    34806010:	48 63 c7             	movslq %edi,%rax
    34806013:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax
    3480601a:	48 8d 80 90 fd 31 35 	lea    0x3531fd90(%rax),%rax
    34806021:	31 c9                	xor    %ecx,%ecx
    34806023:	f2 0f 10 05 9d d7 00 	movsd  0xd79d(%rip),%xmm0        # 348137c8 <DoEmFloatIteration.jtable+0x8a8>
    3480602a:	00 
    3480602b:	66 0f 28 0d fd d7 00 	movapd 0xd7fd(%rip),%xmm1        # 34813830 <DoEmFloatIteration.jtable+0x910>
    34806032:	00 
    34806033:	31 d2                	xor    %edx,%edx
    34806035:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480603c:	00 00 00 00 
    34806040:	f2 0f 10 14 d5 10 e4 	movsd  0x3531e410(,%rdx,8),%xmm2
    34806047:	31 35 
    34806049:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
    3480604d:	66 0f 28 da          	movapd %xmm2,%xmm3
    34806051:	0f 16 db             	movlhps %xmm3,%xmm3
    34806054:	31 f6                	xor    %esi,%esi
    34806056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480605d:	00 00 00 
    34806060:	66 0f 10 24 f0       	movupd (%rax,%rsi,8),%xmm4
    34806065:	66 0f 59 e3          	mulpd  %xmm3,%xmm4
    34806069:	66 0f 10 ac f1 c0 e4 	movupd 0x3531e4c0(%rcx,%rsi,8),%xmm5
    34806070:	31 35 
    34806072:	66 0f 59 e9          	mulpd  %xmm1,%xmm5
    34806076:	66 0f 58 ec          	addpd  %xmm4,%xmm5
    3480607a:	66 0f 10 a4 f1 d0 ed 	movupd 0x3531edd0(%rcx,%rsi,8),%xmm4
    34806081:	31 35 
    34806083:	66 0f 58 e5          	addpd  %xmm5,%xmm4
    34806087:	66 0f 11 a4 f1 d0 ed 	movupd %xmm4,0x3531edd0(%rcx,%rsi,8)
    3480608e:	31 35 
    34806090:	66 0f 10 a4 f1 50 db 	movupd 0x3531db50(%rcx,%rsi,8),%xmm4
    34806097:	31 35 
    34806099:	66 0f 58 e5          	addpd  %xmm5,%xmm4
    3480609d:	66 0f 11 a4 f1 50 db 	movupd %xmm4,0x3531db50(%rcx,%rsi,8)
    348060a4:	31 35 
    348060a6:	48 83 c6 02          	add    $0x2,%rsi
    348060aa:	48 83 fe 22          	cmp    $0x22,%rsi
    348060ae:	0f 85 ac ff ff ff    	jne    34806060 <adjust_mid_wts+0x50>
    348060b4:	31 f6                	xor    %esi,%esi
    348060b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348060bd:	00 00 00 
    348060c0:	f2 0f 10 9c 30 10 01 	movsd  0x110(%rax,%rsi,1),%xmm3
    348060c7:	00 00 
    348060c9:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    348060cd:	f2 0f 10 a4 31 d0 e5 	movsd  0x3531e5d0(%rcx,%rsi,1),%xmm4
    348060d4:	31 35 
    348060d6:	f2 0f 59 e0          	mulsd  %xmm0,%xmm4
    348060da:	f2 0f 58 e3          	addsd  %xmm3,%xmm4
    348060de:	f2 0f 10 9c 31 e0 ee 	movsd  0x3531eee0(%rcx,%rsi,1),%xmm3
    348060e5:	31 35 
    348060e7:	f2 0f 58 dc          	addsd  %xmm4,%xmm3
    348060eb:	f2 0f 11 9c 31 e0 ee 	movsd  %xmm3,0x3531eee0(%rcx,%rsi,1)
    348060f2:	31 35 
    348060f4:	f2 0f 58 a4 31 60 dc 	addsd  0x3531dc60(%rcx,%rsi,1),%xmm4
    348060fb:	31 35 
    348060fd:	f2 0f 11 a4 31 60 dc 	movsd  %xmm4,0x3531dc60(%rcx,%rsi,1)
    34806104:	31 35 
    34806106:	48 83 c6 08          	add    $0x8,%rsi
    3480610a:	48 83 fe 08          	cmp    $0x8,%rsi
    3480610e:	0f 85 ac ff ff ff    	jne    348060c0 <adjust_mid_wts+0xb0>
    34806114:	48 ff c2             	inc    %rdx
    34806117:	48 81 c1 18 01 00 00 	add    $0x118,%rcx
    3480611e:	48 83 fa 08          	cmp    $0x8,%rdx
    34806122:	0f 85 18 ff ff ff    	jne    34806040 <adjust_mid_wts+0x30>
    34806128:	c3                   	retq   
    34806129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034806130 <do_mid_error>:
    34806130:	b8 50 fb 31 35       	mov    $0x3531fb50,%eax
    34806135:	31 c9                	xor    %ecx,%ecx
    34806137:	f2 0f 10 05 21 ce 00 	movsd  0xce21(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480613e:	00 
    3480613f:	90                   	nop
    34806140:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    34806144:	31 d2                	xor    %edx,%edx
    34806146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480614d:	00 00 00 
    34806150:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
    34806155:	f2 0f 59 92 50 fd 31 	mulsd  0x3531fd50(%rdx),%xmm2
    3480615c:	35 
    3480615d:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    34806161:	48 83 c2 08          	add    $0x8,%rdx
    34806165:	48 83 fa 40          	cmp    $0x40,%rdx
    34806169:	0f 85 e1 ff ff ff    	jne    34806150 <do_mid_error+0x20>
    3480616f:	f2 0f 10 14 cd 90 ed 	movsd  0x3531ed90(,%rcx,8),%xmm2
    34806176:	31 35 
    34806178:	66 0f 28 d8          	movapd %xmm0,%xmm3
    3480617c:	f2 0f 5c da          	subsd  %xmm2,%xmm3
    34806180:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    34806184:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    34806188:	f2 0f 11 0c cd 10 e4 	movsd  %xmm1,0x3531e410(,%rcx,8)
    3480618f:	31 35 
    34806191:	48 ff c1             	inc    %rcx
    34806194:	48 83 c0 08          	add    $0x8,%rax
    34806198:	48 83 f9 08          	cmp    $0x8,%rcx
    3480619c:	0f 85 9e ff ff ff    	jne    34806140 <do_mid_error+0x10>
    348061a2:	c3                   	retq   
    348061a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348061aa:	84 00 00 00 00 00 

00000000348061b0 <adjust_out_wts>:
    348061b0:	31 c0                	xor    %eax,%eax
    348061b2:	f2 0f 10 05 0e d6 00 	movsd  0xd60e(%rip),%xmm0        # 348137c8 <DoEmFloatIteration.jtable+0x8a8>
    348061b9:	00 
    348061ba:	31 c9                	xor    %ecx,%ecx
    348061bc:	0f 1f 40 00          	nopl   0x0(%rax)
    348061c0:	f2 0f 10 0c cd 50 fd 	movsd  0x3531fd50(,%rcx,8),%xmm1
    348061c7:	31 35 
    348061c9:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    348061cd:	48 c7 c2 c0 ff ff ff 	mov    $0xffffffffffffffc0,%rdx
    348061d4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348061db:	00 00 00 00 00 
    348061e0:	f2 0f 10 92 d0 ed 31 	movsd  0x3531edd0(%rdx),%xmm2
    348061e7:	35 
    348061e8:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    348061ec:	f2 0f 10 9c 10 c0 08 	movsd  0x353208c0(%rax,%rdx,1),%xmm3
    348061f3:	32 35 
    348061f5:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    348061f9:	f2 0f 58 da          	addsd  %xmm2,%xmm3
    348061fd:	f2 0f 10 94 10 90 fb 	movsd  0x3531fb90(%rax,%rdx,1),%xmm2
    34806204:	31 35 
    34806206:	f2 0f 58 d3          	addsd  %xmm3,%xmm2
    3480620a:	f2 0f 11 94 10 90 fb 	movsd  %xmm2,0x3531fb90(%rax,%rdx,1)
    34806211:	31 35 
    34806213:	f2 0f 58 9c 10 d0 f6 	addsd  0x3531f6d0(%rax,%rdx,1),%xmm3
    3480621a:	31 35 
    3480621c:	f2 0f 11 9c 10 d0 f6 	movsd  %xmm3,0x3531f6d0(%rax,%rdx,1)
    34806223:	31 35 
    34806225:	48 83 c2 08          	add    $0x8,%rdx
    34806229:	0f 85 b1 ff ff ff    	jne    348061e0 <adjust_out_wts+0x30>
    3480622f:	48 ff c1             	inc    %rcx
    34806232:	48 83 c0 40          	add    $0x40,%rax
    34806236:	48 83 f9 08          	cmp    $0x8,%rcx
    3480623a:	0f 85 80 ff ff ff    	jne    348061c0 <adjust_out_wts+0x10>
    34806240:	c3                   	retq   
    34806241:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806248:	0f 1f 84 00 00 00 00 
    3480624f:	00 

0000000034806250 <check_out_error>:
    34806250:	50                   	push   %rax
    34806251:	e8 7a 00 00 00       	callq  348062d0 <worst_pass_error>
    34806256:	48 63 0d fb 81 b1 00 	movslq 0xb181fb(%rip),%rcx        # 3531e458 <numpats>
    3480625d:	48 85 c9             	test   %rcx,%rcx
    34806260:	0f 8e 5b 00 00 00    	jle    348062c1 <check_out_error+0x71>
    34806266:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3480626c:	31 f6                	xor    %esi,%esi
    3480626e:	f2 0f 10 05 3a 82 b1 	movsd  0xb1823a(%rip),%xmm0        # 3531e4b0 <worst_error>
    34806275:	00 
    34806276:	f2 0f 10 0d 52 d5 00 	movsd  0xd552(%rip),%xmm1        # 348137d0 <DoEmFloatIteration.jtable+0x8b0>
    3480627d:	00 
    3480627e:	f2 0f 10 15 52 d5 00 	movsd  0xd552(%rip),%xmm2        # 348137d8 <DoEmFloatIteration.jtable+0x8b8>
    34806285:	00 
    34806286:	31 d2                	xor    %edx,%edx
    34806288:	31 ff                	xor    %edi,%edi
    3480628a:	b8 01 00 00 00       	mov    $0x1,%eax
    3480628f:	90                   	nop
    34806290:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    34806294:	0f 43 c6             	cmovae %esi,%eax
    34806297:	f2 0f 10 1c d5 f0 da 	movsd  0x3531daf0(,%rdx,8),%xmm3
    3480629e:	31 35 
    348062a0:	66 0f 2e da          	ucomisd %xmm2,%xmm3
    348062a4:	41 0f 43 f8          	cmovae %r8d,%edi
    348062a8:	48 ff c2             	inc    %rdx
    348062ab:	48 39 ca             	cmp    %rcx,%rdx
    348062ae:	0f 8c dc ff ff ff    	jl     34806290 <check_out_error+0x40>
    348062b4:	83 ff 01             	cmp    $0x1,%edi
    348062b7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    348062bc:	0f 44 c1             	cmove  %ecx,%eax
    348062bf:	59                   	pop    %rcx
    348062c0:	c3                   	retq   
    348062c1:	b8 01 00 00 00       	mov    $0x1,%eax
    348062c6:	59                   	pop    %rcx
    348062c7:	c3                   	retq   
    348062c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348062cf:	00 

00000000348062d0 <worst_pass_error>:
    348062d0:	48 63 05 81 81 b1 00 	movslq 0xb18181(%rip),%rax        # 3531e458 <numpats>
    348062d7:	48 85 c0             	test   %rax,%rax
    348062da:	0f 8e 3b 00 00 00    	jle    3480631b <worst_pass_error+0x4b>
    348062e0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    348062e4:	31 c9                	xor    %ecx,%ecx
    348062e6:	66 0f 57 d2          	xorpd  %xmm2,%xmm2
    348062ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348062f0:	f2 0f 10 0c cd f0 da 	movsd  0x3531daf0(,%rcx,8),%xmm1
    348062f7:	31 35 
    348062f9:	f2 0f 5f ca          	maxsd  %xmm2,%xmm1
    348062fd:	f2 0f 58 04 cd 60 e4 	addsd  0x3531e460(,%rcx,8),%xmm0
    34806304:	31 35 
    34806306:	48 ff c1             	inc    %rcx
    34806309:	48 39 c1             	cmp    %rax,%rcx
    3480630c:	66 0f 28 d1          	movapd %xmm1,%xmm2
    34806310:	0f 8c da ff ff ff    	jl     348062f0 <worst_pass_error+0x20>
    34806316:	e9 08 00 00 00       	jmpq   34806323 <worst_pass_error+0x53>
    3480631b:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480631f:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34806323:	f2 0f 11 0d 85 81 b1 	movsd  %xmm1,0xb18185(%rip)        # 3531e4b0 <worst_error>
    3480632a:	00 
    3480632b:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480632e:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    34806332:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    34806336:	f2 0f 11 05 02 78 b1 	movsd  %xmm0,0xb17802(%rip)        # 3531db40 <average_error>
    3480633d:	00 
    3480633e:	c3                   	retq   
    3480633f:	90                   	nop

0000000034806340 <read_data_mem>:
    34806340:	41 54                	push   %r12
    34806342:	53                   	push   %rbx
    34806343:	48 83 ec 58          	sub    $0x58,%rsp
    34806347:	48 8d 7c 24 24       	lea    0x24(%rsp),%rdi
    3480634c:	48 8d 74 24 20       	lea    0x20(%rsp),%rsi
    34806351:	48 8d 54 24 54       	lea    0x54(%rsp),%rdx
    34806356:	e8 75 02 00 00       	callq  348065d0 <get_xyinout>
    3480635b:	e8 b0 02 00 00       	callq  34806610 <get_numpats>
    34806360:	8b 05 f2 80 b1 00    	mov    0xb180f2(%rip),%eax        # 3531e458 <numpats>
    34806366:	83 f8 0b             	cmp    $0xb,%eax
    34806369:	0f 8c 0f 00 00 00    	jl     3480637e <read_data_mem+0x3e>
    3480636f:	c7 05 df 80 b1 00 0a 	movl   $0xa,0xb180df(%rip)        # 3531e458 <numpats>
    34806376:	00 00 00 
    34806379:	e9 08 00 00 00       	jmpq   34806386 <read_data_mem+0x46>
    3480637e:	85 c0                	test   %eax,%eax
    34806380:	0f 8e 34 02 00 00    	jle    348065ba <read_data_mem+0x27a>
    34806386:	48 63 44 24 24       	movslq 0x24(%rsp),%rax
    3480638b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
    3480638f:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    34806394:	bb 90 fd 31 35       	mov    $0x3531fd90,%ebx
    34806399:	48 c1 e0 03          	shl    $0x3,%rax
    3480639d:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    348063a2:	31 c9                	xor    %ecx,%ecx
    348063a4:	b8 b0 fd 31 35       	mov    $0x3531fdb0,%eax
    348063a9:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    348063ae:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
    348063b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348063ba:	84 00 00 00 00 00 
    348063c0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    348063c5:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    348063ca:	83 7c 24 30 00       	cmpl   $0x0,0x30(%rsp)
    348063cf:	4c 89 e2             	mov    %r12,%rdx
    348063d2:	48 89 e0             	mov    %rsp,%rax
    348063d5:	48 89 c1             	mov    %rax,%rcx
    348063d8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    348063dd:	4c 8d 4c 24 0c       	lea    0xc(%rsp),%r9
    348063e2:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    348063e7:	0f 8e 9c 00 00 00    	jle    34806489 <read_data_mem+0x149>
    348063ed:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    348063f2:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    348063f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348063fe:	00 00 
    34806400:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    34806405:	48 89 e6             	mov    %rsp,%rsi
    34806408:	4c 89 c2             	mov    %r8,%rdx
    3480640b:	4c 89 c9             	mov    %r9,%rcx
    3480640e:	4d 89 d0             	mov    %r10,%r8
    34806411:	e8 1a 02 00 00       	callq  34806630 <get_val5>
    34806416:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    3480641b:	4c 8d 4c 24 0c       	lea    0xc(%rsp),%r9
    34806420:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    34806425:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    3480642a:	48 89 e1             	mov    %rsp,%rcx
    3480642d:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806430:	f2 0f 2a 44 24 04    	cvtsi2sdl 0x4(%rsp),%xmm0
    34806436:	f2 41 0f 11 44 24 e0 	movsd  %xmm0,-0x20(%r12)
    3480643d:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806440:	f2 0f 2a 04 24       	cvtsi2sdl (%rsp),%xmm0
    34806445:	f2 41 0f 11 44 24 e8 	movsd  %xmm0,-0x18(%r12)
    3480644c:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480644f:	f2 0f 2a 44 24 10    	cvtsi2sdl 0x10(%rsp),%xmm0
    34806455:	f2 41 0f 11 44 24 f0 	movsd  %xmm0,-0x10(%r12)
    3480645c:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480645f:	f2 0f 2a 44 24 0c    	cvtsi2sdl 0xc(%rsp),%xmm0
    34806465:	f2 41 0f 11 44 24 f8 	movsd  %xmm0,-0x8(%r12)
    3480646c:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480646f:	f2 0f 2a 44 24 08    	cvtsi2sdl 0x8(%rsp),%xmm0
    34806475:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    3480647b:	4c 03 64 24 48       	add    0x48(%rsp),%r12
    34806480:	48 ff cb             	dec    %rbx
    34806483:	0f 85 77 ff ff ff    	jne    34806400 <read_data_mem+0xc0>
    34806489:	31 c0                	xor    %eax,%eax
    3480648b:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    34806490:	49 89 d4             	mov    %rdx,%r12
    34806493:	48 89 ce             	mov    %rcx,%rsi
    34806496:	4c 89 c2             	mov    %r8,%rdx
    34806499:	f2 0f 10 15 3f d3 00 	movsd  0xd33f(%rip),%xmm2        # 348137e0 <DoEmFloatIteration.jtable+0x8c0>
    348064a0:	00 
    348064a1:	f2 0f 10 1d 27 d3 00 	movsd  0xd327(%rip),%xmm3        # 348137d0 <DoEmFloatIteration.jtable+0x8b0>
    348064a8:	00 
    348064a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    348064b0:	f2 0f 10 0c c3       	movsd  (%rbx,%rax,8),%xmm1
    348064b5:	66 0f 2e ca          	ucomisd %xmm2,%xmm1
    348064b9:	0f 28 c2             	movaps %xmm2,%xmm0
    348064bc:	0f 83 0d 00 00 00    	jae    348064cf <read_data_mem+0x18f>
    348064c2:	66 0f 2e d9          	ucomisd %xmm1,%xmm3
    348064c6:	0f 28 c3             	movaps %xmm3,%xmm0
    348064c9:	0f 82 05 00 00 00    	jb     348064d4 <read_data_mem+0x194>
    348064cf:	f2 0f 11 04 c3       	movsd  %xmm0,(%rbx,%rax,8)
    348064d4:	48 ff c0             	inc    %rax
    348064d7:	48 83 f8 23          	cmp    $0x23,%rax
    348064db:	0f 85 cf ff ff ff    	jne    348064b0 <read_data_mem+0x170>
    348064e1:	4c 89 e7             	mov    %r12,%rdi
    348064e4:	4c 89 c9             	mov    %r9,%rcx
    348064e7:	4d 89 d0             	mov    %r10,%r8
    348064ea:	4c 8d 4c 24 1c       	lea    0x1c(%rsp),%r9
    348064ef:	48 8d 44 24 14       	lea    0x14(%rsp),%rax
    348064f4:	50                   	push   %rax
    348064f5:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    348064fa:	50                   	push   %rax
    348064fb:	e8 90 01 00 00       	callq  34806690 <get_val7>
    34806500:	48 83 c4 10          	add    $0x10,%rsp
    34806504:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806507:	f2 0f 2a 44 24 04    	cvtsi2sdl 0x4(%rsp),%xmm0
    3480650d:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    34806512:	48 89 c8             	mov    %rcx,%rax
    34806515:	48 c1 e0 06          	shl    $0x6,%rax
    34806519:	f2 0f 11 80 d0 f8 31 	movsd  %xmm0,0x3531f8d0(%rax)
    34806520:	35 
    34806521:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806524:	f2 0f 2a 04 24       	cvtsi2sdl (%rsp),%xmm0
    34806529:	f2 0f 11 80 d8 f8 31 	movsd  %xmm0,0x3531f8d8(%rax)
    34806530:	35 
    34806531:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806534:	f2 0f 2a 44 24 10    	cvtsi2sdl 0x10(%rsp),%xmm0
    3480653a:	f2 0f 11 80 e0 f8 31 	movsd  %xmm0,0x3531f8e0(%rax)
    34806541:	35 
    34806542:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806545:	f2 0f 2a 44 24 0c    	cvtsi2sdl 0xc(%rsp),%xmm0
    3480654b:	f2 0f 11 80 e8 f8 31 	movsd  %xmm0,0x3531f8e8(%rax)
    34806552:	35 
    34806553:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806556:	f2 0f 2a 44 24 08    	cvtsi2sdl 0x8(%rsp),%xmm0
    3480655c:	f2 0f 11 80 f0 f8 31 	movsd  %xmm0,0x3531f8f0(%rax)
    34806563:	35 
    34806564:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806567:	f2 0f 2a 44 24 1c    	cvtsi2sdl 0x1c(%rsp),%xmm0
    3480656d:	f2 0f 11 80 f8 f8 31 	movsd  %xmm0,0x3531f8f8(%rax)
    34806574:	35 
    34806575:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806578:	f2 0f 2a 44 24 18    	cvtsi2sdl 0x18(%rsp),%xmm0
    3480657e:	f2 0f 11 80 00 f9 31 	movsd  %xmm0,0x3531f900(%rax)
    34806585:	35 
    34806586:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806589:	f2 0f 2a 44 24 14    	cvtsi2sdl 0x14(%rsp),%xmm0
    3480658f:	f2 0f 11 80 08 f9 31 	movsd  %xmm0,0x3531f908(%rax)
    34806596:	35 
    34806597:	48 ff c1             	inc    %rcx
    3480659a:	48 63 05 b7 7e b1 00 	movslq 0xb17eb7(%rip),%rax        # 3531e458 <numpats>
    348065a1:	48 81 44 24 28 18 01 	addq   $0x118,0x28(%rsp)
    348065a8:	00 00 
    348065aa:	48 81 c3 18 01 00 00 	add    $0x118,%rbx
    348065b1:	48 39 c1             	cmp    %rax,%rcx
    348065b4:	0f 8c 06 fe ff ff    	jl     348063c0 <read_data_mem+0x80>
    348065ba:	c7 05 34 11 21 00 00 	movl   $0x0,0x211134(%rip)        # 34a176f8 <val_ndx>
    348065c1:	00 00 00 
    348065c4:	48 83 c4 58          	add    $0x58,%rsp
    348065c8:	5b                   	pop    %rbx
    348065c9:	41 5c                	pop    %r12
    348065cb:	c3                   	retq   
    348065cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000348065d0 <get_xyinout>:
    348065d0:	8b 05 22 11 21 00    	mov    0x211122(%rip),%eax        # 34a176f8 <val_ndx>
    348065d6:	44 8d 40 01          	lea    0x1(%rax),%r8d
    348065da:	8b 0c 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%ecx
    348065e1:	89 0f                	mov    %ecx,(%rdi)
    348065e3:	8d 48 02             	lea    0x2(%rax),%ecx
    348065e6:	42 8b 3c 85 80 3a 81 	mov    0x34813a80(,%r8,4),%edi
    348065ed:	34 
    348065ee:	89 3e                	mov    %edi,(%rsi)
    348065f0:	8d 40 03             	lea    0x3(%rax),%eax
    348065f3:	89 05 ff 10 21 00    	mov    %eax,0x2110ff(%rip)        # 34a176f8 <val_ndx>
    348065f9:	8b 04 8d 80 3a 81 34 	mov    0x34813a80(,%rcx,4),%eax
    34806600:	89 02                	mov    %eax,(%rdx)
    34806602:	c3                   	retq   
    34806603:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480660a:	84 00 00 00 00 00 

0000000034806610 <get_numpats>:
    34806610:	8b 05 e2 10 21 00    	mov    0x2110e2(%rip),%eax        # 34a176f8 <val_ndx>
    34806616:	8d 48 01             	lea    0x1(%rax),%ecx
    34806619:	89 0d d9 10 21 00    	mov    %ecx,0x2110d9(%rip)        # 34a176f8 <val_ndx>
    3480661f:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    34806626:	89 05 2c 7e b1 00    	mov    %eax,0xb17e2c(%rip)        # 3531e458 <numpats>
    3480662c:	c3                   	retq   
    3480662d:	0f 1f 00             	nopl   (%rax)

0000000034806630 <get_val5>:
    34806630:	44 8b 15 c1 10 21 00 	mov    0x2110c1(%rip),%r10d        # 34a176f8 <val_ndx>
    34806637:	45 8d 4a 01          	lea    0x1(%r10),%r9d
    3480663b:	42 8b 04 95 80 3a 81 	mov    0x34813a80(,%r10,4),%eax
    34806642:	34 
    34806643:	89 07                	mov    %eax,(%rdi)
    34806645:	41 8d 42 02          	lea    0x2(%r10),%eax
    34806649:	42 8b 3c 8d 80 3a 81 	mov    0x34813a80(,%r9,4),%edi
    34806650:	34 
    34806651:	89 3e                	mov    %edi,(%rsi)
    34806653:	41 8d 72 03          	lea    0x3(%r10),%esi
    34806657:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    3480665e:	89 02                	mov    %eax,(%rdx)
    34806660:	41 8d 42 04          	lea    0x4(%r10),%eax
    34806664:	8b 14 b5 80 3a 81 34 	mov    0x34813a80(,%rsi,4),%edx
    3480666b:	89 11                	mov    %edx,(%rcx)
    3480666d:	41 8d 4a 05          	lea    0x5(%r10),%ecx
    34806671:	89 0d 81 10 21 00    	mov    %ecx,0x211081(%rip)        # 34a176f8 <val_ndx>
    34806677:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    3480667e:	41 89 00             	mov    %eax,(%r8)
    34806681:	c3                   	retq   
    34806682:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806689:	1f 84 00 00 00 00 00 

0000000034806690 <get_val7>:
    34806690:	44 8b 15 61 10 21 00 	mov    0x211061(%rip),%r10d        # 34a176f8 <val_ndx>
    34806697:	42 8b 04 95 80 3a 81 	mov    0x34813a80(,%r10,4),%eax
    3480669e:	34 
    3480669f:	89 07                	mov    %eax,(%rdi)
    348066a1:	41 8d 42 01          	lea    0x1(%r10),%eax
    348066a5:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    348066ac:	89 06                	mov    %eax,(%rsi)
    348066ae:	41 8d 42 02          	lea    0x2(%r10),%eax
    348066b2:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    348066b9:	89 02                	mov    %eax,(%rdx)
    348066bb:	41 8d 42 03          	lea    0x3(%r10),%eax
    348066bf:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    348066c6:	89 01                	mov    %eax,(%rcx)
    348066c8:	41 8d 42 04          	lea    0x4(%r10),%eax
    348066cc:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    348066d3:	41 89 00             	mov    %eax,(%r8)
    348066d6:	41 8d 42 05          	lea    0x5(%r10),%eax
    348066da:	8b 04 85 80 3a 81 34 	mov    0x34813a80(,%rax,4),%eax
    348066e1:	41 89 01             	mov    %eax,(%r9)
    348066e4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    348066e9:	41 8d 4a 06          	lea    0x6(%r10),%ecx
    348066ed:	8b 0c 8d 80 3a 81 34 	mov    0x34813a80(,%rcx,4),%ecx
    348066f4:	89 08                	mov    %ecx,(%rax)
    348066f6:	41 8d 42 08          	lea    0x8(%r10),%eax
    348066fa:	89 05 f8 0f 21 00    	mov    %eax,0x210ff8(%rip)        # 34a176f8 <val_ndx>
    34806700:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    34806705:	41 8d 4a 07          	lea    0x7(%r10),%ecx
    34806709:	8b 0c 8d 80 3a 81 34 	mov    0x34813a80(,%rcx,4),%ecx
    34806710:	89 08                	mov    %ecx,(%rax)
    34806712:	c3                   	retq   
    34806713:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480671a:	84 00 00 00 00 00 

0000000034806720 <lusolve>:
    34806720:	41 54                	push   %r12
    34806722:	53                   	push   %rbx
    34806723:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
    3480672a:	49 89 f4             	mov    %rsi,%r12
    3480672d:	48 89 fb             	mov    %rdi,%rbx
    34806730:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    34806735:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    3480673a:	e8 31 00 00 00       	callq  34806770 <ludcmp>
    3480673f:	85 c0                	test   %eax,%eax
    34806741:	0f 84 10 00 00 00    	je     34806757 <lusolve+0x37>
    34806747:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    3480674c:	48 89 df             	mov    %rbx,%rdi
    3480674f:	4c 89 e2             	mov    %r12,%rdx
    34806752:	e8 19 04 00 00       	callq  34806b70 <lubksb>
    34806757:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
    3480675e:	5b                   	pop    %rbx
    3480675f:	41 5c                	pop    %r12
    34806761:	c3                   	retq   
    34806762:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806769:	1f 84 00 00 00 00 00 

0000000034806770 <ludcmp>:
    34806770:	41 54                	push   %r12
    34806772:	53                   	push   %rbx
    34806773:	48 89 74 24 e0       	mov    %rsi,-0x20(%rsp)
    34806778:	48 89 54 24 d8       	mov    %rdx,-0x28(%rsp)
    3480677d:	c7 02 01 00 00 00    	movl   $0x1,(%rdx)
    34806783:	31 c0                	xor    %eax,%eax
    34806785:	48 8b 0d c4 7c b1 00 	mov    0xb17cc4(%rip),%rcx        # 3531e450 <LUtempvv>
    3480678c:	66 0f 28 05 ac d0 00 	movapd 0xd0ac(%rip),%xmm0        # 34813840 <DoEmFloatIteration.jtable+0x920>
    34806793:	00 
    34806794:	0f 57 d2             	xorps  %xmm2,%xmm2
    34806797:	f2 0f 10 0d c1 c7 00 	movsd  0xc7c1(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480679e:	00 
    3480679f:	48 89 fa             	mov    %rdi,%rdx
    348067a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348067a9:	1f 84 00 00 00 00 00 
    348067b0:	31 f6                	xor    %esi,%esi
    348067b2:	66 0f 57 db          	xorpd  %xmm3,%xmm3
    348067b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348067bd:	00 00 00 
    348067c0:	66 0f 28 e3          	movapd %xmm3,%xmm4
    348067c4:	f2 0f 10 1c f2       	movsd  (%rdx,%rsi,8),%xmm3
    348067c9:	66 0f 54 d8          	andpd  %xmm0,%xmm3
    348067cd:	f2 0f 5f dc          	maxsd  %xmm4,%xmm3
    348067d1:	48 ff c6             	inc    %rsi
    348067d4:	48 83 fe 65          	cmp    $0x65,%rsi
    348067d8:	0f 85 e2 ff ff ff    	jne    348067c0 <ludcmp+0x50>
    348067de:	66 0f 2e da          	ucomisd %xmm2,%xmm3
    348067e2:	0f 85 06 00 00 00    	jne    348067ee <ludcmp+0x7e>
    348067e8:	0f 8b 77 03 00 00    	jnp    34806b65 <ludcmp+0x3f5>
    348067ee:	66 0f 28 e1          	movapd %xmm1,%xmm4
    348067f2:	f2 0f 5e e3          	divsd  %xmm3,%xmm4
    348067f6:	f2 0f 11 24 c1       	movsd  %xmm4,(%rcx,%rax,8)
    348067fb:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    34806802:	48 83 f8 64          	cmp    $0x64,%rax
    34806806:	48 8d 40 01          	lea    0x1(%rax),%rax
    3480680a:	0f 8c a0 ff ff ff    	jl     348067b0 <ludcmp+0x40>
    34806810:	48 8b 05 39 7c b1 00 	mov    0xb17c39(%rip),%rax        # 3531e450 <LUtempvv>
    34806817:	48 89 44 24 d0       	mov    %rax,-0x30(%rsp)
    3480681c:	4c 8d a7 28 03 00 00 	lea    0x328(%rdi),%r12
    34806823:	31 c9                	xor    %ecx,%ecx
    34806825:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    3480682c:	0f 57 d2             	xorps  %xmm2,%xmm2
    3480682f:	f2 0f 10 1d b1 cf 00 	movsd  0xcfb1(%rip),%xmm3        # 348137e8 <DoEmFloatIteration.jtable+0x8c8>
    34806836:	00 
    34806837:	48 89 7c 24 c8       	mov    %rdi,-0x38(%rsp)
    3480683c:	49 89 f9             	mov    %rdi,%r9
    3480683f:	45 31 db             	xor    %r11d,%r11d
    34806842:	45 31 c0             	xor    %r8d,%r8d
    34806845:	48 89 7c 24 c0       	mov    %rdi,-0x40(%rsp)
    3480684a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34806850:	48 89 5c 24 f8       	mov    %rbx,-0x8(%rsp)
    34806855:	49 69 c3 28 03 00 00 	imul   $0x328,%r11,%rax
    3480685c:	48 89 44 24 f0       	mov    %rax,-0x10(%rsp)
    34806861:	4d 85 db             	test   %r11,%r11
    34806864:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
    34806869:	0f 84 91 00 00 00    	je     34806900 <ludcmp+0x190>
    3480686f:	0f 8e 72 00 00 00    	jle    348068e7 <ludcmp+0x177>
    34806875:	48 89 f8             	mov    %rdi,%rax
    34806878:	31 d2                	xor    %edx,%edx
    3480687a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34806880:	48 69 f2 28 03 00 00 	imul   $0x328,%rdx,%rsi
    34806887:	48 01 fe             	add    %rdi,%rsi
    3480688a:	4e 8d 14 de          	lea    (%rsi,%r11,8),%r10
    3480688e:	f2 42 0f 10 24 de    	movsd  (%rsi,%r11,8),%xmm4
    34806894:	48 85 d2             	test   %rdx,%rdx
    34806897:	0f 8e 33 00 00 00    	jle    348068d0 <ludcmp+0x160>
    3480689d:	4c 89 cb             	mov    %r9,%rbx
    348068a0:	31 f6                	xor    %esi,%esi
    348068a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348068a9:	1f 84 00 00 00 00 00 
    348068b0:	f2 0f 10 2c f0       	movsd  (%rax,%rsi,8),%xmm5
    348068b5:	f2 0f 59 2b          	mulsd  (%rbx),%xmm5
    348068b9:	f2 0f 5c e5          	subsd  %xmm5,%xmm4
    348068bd:	48 ff c6             	inc    %rsi
    348068c0:	48 81 c3 28 03 00 00 	add    $0x328,%rbx
    348068c7:	48 39 f2             	cmp    %rsi,%rdx
    348068ca:	0f 85 e0 ff ff ff    	jne    348068b0 <ludcmp+0x140>
    348068d0:	f2 41 0f 11 22       	movsd  %xmm4,(%r10)
    348068d5:	48 ff c2             	inc    %rdx
    348068d8:	48 05 28 03 00 00    	add    $0x328,%rax
    348068de:	4c 39 da             	cmp    %r11,%rdx
    348068e1:	0f 85 99 ff ff ff    	jne    34806880 <ludcmp+0x110>
    348068e7:	41 83 fb 64          	cmp    $0x64,%r11d
    348068eb:	4c 89 d8             	mov    %r11,%rax
    348068ee:	0f 8e 0e 00 00 00    	jle    34806902 <ludcmp+0x192>
    348068f4:	48 8b 7c 24 d0       	mov    -0x30(%rsp),%rdi
    348068f9:	e9 cc 00 00 00       	jmpq   348069ca <ludcmp+0x25a>
    348068fe:	66 90                	xchg   %ax,%ax
    34806900:	31 c0                	xor    %eax,%eax
    34806902:	4d 85 db             	test   %r11,%r11
    34806905:	0f 94 c3             	sete   %bl
    34806908:	0f 9e c2             	setle  %dl
    3480690b:	48 98                	cltq   
    3480690d:	08 da                	or     %bl,%dl
    3480690f:	4c 69 e0 28 03 00 00 	imul   $0x328,%rax,%r12
    34806916:	4c 03 64 24 c0       	add    -0x40(%rsp),%r12
    3480691b:	66 0f 57 e4          	xorpd  %xmm4,%xmm4
    3480691f:	48 8b 7c 24 d0       	mov    -0x30(%rsp),%rdi
    34806924:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480692b:	00 00 00 00 00 
    34806930:	48 69 f0 28 03 00 00 	imul   $0x328,%rax,%rsi
    34806937:	48 03 74 24 c0       	add    -0x40(%rsp),%rsi
    3480693c:	4e 8d 14 de          	lea    (%rsi,%r11,8),%r10
    34806940:	f2 42 0f 10 2c de    	movsd  (%rsi,%r11,8),%xmm5
    34806946:	84 d2                	test   %dl,%dl
    34806948:	0f 85 34 00 00 00    	jne    34806982 <ludcmp+0x212>
    3480694e:	31 db                	xor    %ebx,%ebx
    34806950:	4c 89 e6             	mov    %r12,%rsi
    34806953:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480695a:	84 00 00 00 00 00 
    34806960:	f2 0f 10 36          	movsd  (%rsi),%xmm6
    34806964:	f2 41 0f 59 34 19    	mulsd  (%r9,%rbx,1),%xmm6
    3480696a:	f2 0f 5c ee          	subsd  %xmm6,%xmm5
    3480696e:	48 83 c6 08          	add    $0x8,%rsi
    34806972:	48 81 c3 28 03 00 00 	add    $0x328,%rbx
    34806979:	48 39 d9             	cmp    %rbx,%rcx
    3480697c:	0f 85 de ff ff ff    	jne    34806960 <ludcmp+0x1f0>
    34806982:	f2 41 0f 11 2a       	movsd  %xmm5,(%r10)
    34806987:	66 0f 54 e8          	andpd  %xmm0,%xmm5
    3480698b:	f2 0f 59 2c c7       	mulsd  (%rdi,%rax,8),%xmm5
    34806990:	66 0f 2e ec          	ucomisd %xmm4,%xmm5
    34806994:	66 0f 28 f4          	movapd %xmm4,%xmm6
    34806998:	f2 0f c2 f5 06       	cmpnlesd %xmm5,%xmm6
    3480699d:	66 0f 28 fe          	movapd %xmm6,%xmm7
    348069a1:	66 0f 55 fd          	andnpd %xmm5,%xmm7
    348069a5:	66 0f 54 f4          	andpd  %xmm4,%xmm6
    348069a9:	66 0f 56 f7          	orpd   %xmm7,%xmm6
    348069ad:	44 0f 43 c0          	cmovae %eax,%r8d
    348069b1:	49 81 c4 28 03 00 00 	add    $0x328,%r12
    348069b8:	48 83 f8 64          	cmp    $0x64,%rax
    348069bc:	48 8d 40 01          	lea    0x1(%rax),%rax
    348069c0:	66 0f 28 e6          	movapd %xmm6,%xmm4
    348069c4:	0f 8c 66 ff ff ff    	jl     34806930 <ludcmp+0x1c0>
    348069ca:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    348069cf:	48 8b 74 24 f0       	mov    -0x10(%rsp),%rsi
    348069d4:	4c 8d 24 30          	lea    (%rax,%rsi,1),%r12
    348069d8:	44 89 c2             	mov    %r8d,%edx
    348069db:	49 39 d3             	cmp    %rdx,%r11
    348069de:	0f 84 ba 00 00 00    	je     34806a9e <ludcmp+0x32e>
    348069e4:	48 8b 44 24 c0       	mov    -0x40(%rsp),%rax
    348069e9:	48 8d 94 30 28 03 00 	lea    0x328(%rax,%rsi,1),%rdx
    348069f0:	00 
    348069f1:	4d 63 d0             	movslq %r8d,%r10
    348069f4:	49 69 da 28 03 00 00 	imul   $0x328,%r10,%rbx
    348069fb:	48 8d 34 18          	lea    (%rax,%rbx,1),%rsi
    348069ff:	48 39 d6             	cmp    %rdx,%rsi
    34806a02:	0f 83 18 00 00 00    	jae    34806a20 <ludcmp+0x2b0>
    34806a08:	48 8d 94 18 28 03 00 	lea    0x328(%rax,%rbx,1),%rdx
    34806a0f:	00 
    34806a10:	49 39 d4             	cmp    %rdx,%r12
    34806a13:	0f 83 07 00 00 00    	jae    34806a20 <ludcmp+0x2b0>
    34806a19:	31 db                	xor    %ebx,%ebx
    34806a1b:	e9 40 00 00 00       	jmpq   34806a60 <ludcmp+0x2f0>
    34806a20:	31 db                	xor    %ebx,%ebx
    34806a22:	48 8b 44 24 c8       	mov    -0x38(%rsp),%rax
    34806a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34806a2e:	00 00 
    34806a30:	66 0f 10 24 de       	movupd (%rsi,%rbx,8),%xmm4
    34806a35:	66 0f 10 2c d8       	movupd (%rax,%rbx,8),%xmm5
    34806a3a:	66 0f 11 2c de       	movupd %xmm5,(%rsi,%rbx,8)
    34806a3f:	66 0f 11 24 d8       	movupd %xmm4,(%rax,%rbx,8)
    34806a44:	48 83 c3 02          	add    $0x2,%rbx
    34806a48:	48 83 fb 64          	cmp    $0x64,%rbx
    34806a4c:	0f 85 de ff ff ff    	jne    34806a30 <ludcmp+0x2c0>
    34806a52:	bb 64 00 00 00       	mov    $0x64,%ebx
    34806a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34806a5e:	00 00 
    34806a60:	48 8b 14 de          	mov    (%rsi,%rbx,8),%rdx
    34806a64:	48 8b 44 24 c8       	mov    -0x38(%rsp),%rax
    34806a69:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
    34806a6d:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
    34806a71:	48 8b 44 24 c8       	mov    -0x38(%rsp),%rax
    34806a76:	48 89 14 d8          	mov    %rdx,(%rax,%rbx,8)
    34806a7a:	48 ff c3             	inc    %rbx
    34806a7d:	48 83 fb 65          	cmp    $0x65,%rbx
    34806a81:	0f 85 d9 ff ff ff    	jne    34806a60 <ludcmp+0x2f0>
    34806a87:	48 8b 44 24 d8       	mov    -0x28(%rsp),%rax
    34806a8c:	f7 18                	negl   (%rax)
    34806a8e:	4a 8b 04 d7          	mov    (%rdi,%r10,8),%rax
    34806a92:	4a 8b 14 df          	mov    (%rdi,%r11,8),%rdx
    34806a96:	4a 89 14 d7          	mov    %rdx,(%rdi,%r10,8)
    34806a9a:	4a 89 04 df          	mov    %rax,(%rdi,%r11,8)
    34806a9e:	48 8b 44 24 e0       	mov    -0x20(%rsp),%rax
    34806aa3:	46 89 04 98          	mov    %r8d,(%rax,%r11,4)
    34806aa7:	f2 43 0f 10 2c dc    	movsd  (%r12,%r11,8),%xmm5
    34806aad:	66 0f 2e ea          	ucomisd %xmm2,%xmm5
    34806ab1:	0f 85 1b 00 00 00    	jne    34806ad2 <ludcmp+0x362>
    34806ab7:	0f 8a 15 00 00 00    	jp     34806ad2 <ludcmp+0x362>
    34806abd:	4b 8d 04 dc          	lea    (%r12,%r11,8),%rax
    34806ac1:	48 ba 23 42 92 0c a1 	movabs $0x3bc79ca10c924223,%rdx
    34806ac8:	9c c7 3b 
    34806acb:	48 89 10             	mov    %rdx,(%rax)
    34806ace:	66 0f 28 eb          	movapd %xmm3,%xmm5
    34806ad2:	b8 01 00 00 00       	mov    $0x1,%eax
    34806ad7:	49 83 fb 64          	cmp    $0x64,%r11
    34806adb:	48 8b 5c 24 f8       	mov    -0x8(%rsp),%rbx
    34806ae0:	0f 84 81 00 00 00    	je     34806b67 <ludcmp+0x3f7>
    34806ae6:	49 83 fb 63          	cmp    $0x63,%r11
    34806aea:	4c 8b 64 24 e8       	mov    -0x18(%rsp),%r12
    34806aef:	0f 8f 3b 00 00 00    	jg     34806b30 <ludcmp+0x3c0>
    34806af5:	66 0f 28 e1          	movapd %xmm1,%xmm4
    34806af9:	f2 0f 5e e5          	divsd  %xmm5,%xmm4
    34806afd:	4c 89 e2             	mov    %r12,%rdx
    34806b00:	48 89 de             	mov    %rbx,%rsi
    34806b03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806b0a:	84 00 00 00 00 00 
    34806b10:	f2 0f 10 2a          	movsd  (%rdx),%xmm5
    34806b14:	f2 0f 59 ec          	mulsd  %xmm4,%xmm5
    34806b18:	f2 0f 11 2a          	movsd  %xmm5,(%rdx)
    34806b1c:	48 ff c6             	inc    %rsi
    34806b1f:	48 81 c2 28 03 00 00 	add    $0x328,%rdx
    34806b26:	48 83 fe 63          	cmp    $0x63,%rsi
    34806b2a:	0f 8c e0 ff ff ff    	jl     34806b10 <ludcmp+0x3a0>
    34806b30:	49 ff c3             	inc    %r11
    34806b33:	49 83 c1 08          	add    $0x8,%r9
    34806b37:	48 81 c1 28 03 00 00 	add    $0x328,%rcx
    34806b3e:	48 81 44 24 c8 28 03 	addq   $0x328,-0x38(%rsp)
    34806b45:	00 00 
    34806b47:	48 ff c3             	inc    %rbx
    34806b4a:	49 81 c4 30 03 00 00 	add    $0x330,%r12
    34806b51:	49 83 fb 65          	cmp    $0x65,%r11
    34806b55:	48 8b 7c 24 c0       	mov    -0x40(%rsp),%rdi
    34806b5a:	0f 85 f0 fc ff ff    	jne    34806850 <ludcmp+0xe0>
    34806b60:	e9 02 00 00 00       	jmpq   34806b67 <ludcmp+0x3f7>
    34806b65:	31 c0                	xor    %eax,%eax
    34806b67:	5b                   	pop    %rbx
    34806b68:	41 5c                	pop    %r12
    34806b6a:	c3                   	retq   
    34806b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034806b70 <lubksb>:
    34806b70:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    34806b76:	31 c0                	xor    %eax,%eax
    34806b78:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    34806b7c:	49 89 f9             	mov    %rdi,%r9
    34806b7f:	90                   	nop
    34806b80:	4c 63 14 86          	movslq (%rsi,%rax,4),%r10
    34806b84:	f2 42 0f 10 0c d2    	movsd  (%rdx,%r10,8),%xmm1
    34806b8a:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    34806b8e:	4a 89 0c d2          	mov    %rcx,(%rdx,%r10,8)
    34806b92:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    34806b96:	0f 84 34 00 00 00    	je     34806bd0 <lubksb+0x60>
    34806b9c:	49 63 c8             	movslq %r8d,%rcx
    34806b9f:	48 39 c8             	cmp    %rcx,%rax
    34806ba2:	0f 8e 48 00 00 00    	jle    34806bf0 <lubksb+0x80>
    34806ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34806baf:	00 
    34806bb0:	f2 41 0f 10 14 c9    	movsd  (%r9,%rcx,8),%xmm2
    34806bb6:	f2 0f 59 14 ca       	mulsd  (%rdx,%rcx,8),%xmm2
    34806bbb:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    34806bbf:	48 ff c1             	inc    %rcx
    34806bc2:	48 39 c8             	cmp    %rcx,%rax
    34806bc5:	0f 85 e5 ff ff ff    	jne    34806bb0 <lubksb+0x40>
    34806bcb:	e9 20 00 00 00       	jmpq   34806bf0 <lubksb+0x80>
    34806bd0:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    34806bd4:	0f 85 06 00 00 00    	jne    34806be0 <lubksb+0x70>
    34806bda:	0f 8b 08 00 00 00    	jnp    34806be8 <lubksb+0x78>
    34806be0:	41 89 c0             	mov    %eax,%r8d
    34806be3:	e9 08 00 00 00       	jmpq   34806bf0 <lubksb+0x80>
    34806be8:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    34806bee:	66 90                	xchg   %ax,%ax
    34806bf0:	f2 0f 11 0c c2       	movsd  %xmm1,(%rdx,%rax,8)
    34806bf5:	48 ff c0             	inc    %rax
    34806bf8:	49 81 c1 28 03 00 00 	add    $0x328,%r9
    34806bff:	48 83 f8 65          	cmp    $0x65,%rax
    34806c03:	0f 85 77 ff ff ff    	jne    34806b80 <lubksb+0x10>
    34806c09:	4c 8d 87 c8 3e 01 00 	lea    0x13ec8(%rdi),%r8
    34806c10:	b9 64 00 00 00       	mov    $0x64,%ecx
    34806c15:	41 b9 63 00 00 00    	mov    $0x63,%r9d
    34806c1b:	e9 0d 00 00 00       	jmpq   34806c2d <lubksb+0xbd>
    34806c20:	48 ff c9             	dec    %rcx
    34806c23:	49 ff c9             	dec    %r9
    34806c26:	49 81 c0 d0 fc ff ff 	add    $0xfffffffffffffcd0,%r8
    34806c2d:	f2 0f 10 04 ca       	movsd  (%rdx,%rcx,8),%xmm0
    34806c32:	48 83 f9 63          	cmp    $0x63,%rcx
    34806c36:	0f 8f 64 00 00 00    	jg     34806ca0 <lubksb+0x130>
    34806c3c:	4c 89 c0             	mov    %r8,%rax
    34806c3f:	4c 89 ce             	mov    %r9,%rsi
    34806c42:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806c49:	1f 84 00 00 00 00 00 
    34806c50:	f2 0f 10 08          	movsd  (%rax),%xmm1
    34806c54:	f2 0f 59 4c f2 10    	mulsd  0x10(%rdx,%rsi,8),%xmm1
    34806c5a:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    34806c5e:	48 ff c6             	inc    %rsi
    34806c61:	48 83 c0 08          	add    $0x8,%rax
    34806c65:	48 83 fe 63          	cmp    $0x63,%rsi
    34806c69:	0f 8c e1 ff ff ff    	jl     34806c50 <lubksb+0xe0>
    34806c6f:	48 69 c1 28 03 00 00 	imul   $0x328,%rcx,%rax
    34806c76:	48 01 f8             	add    %rdi,%rax
    34806c79:	f2 0f 5e 04 c8       	divsd  (%rax,%rcx,8),%xmm0
    34806c7e:	f2 0f 11 04 ca       	movsd  %xmm0,(%rdx,%rcx,8)
    34806c83:	48 85 c9             	test   %rcx,%rcx
    34806c86:	0f 8f 94 ff ff ff    	jg     34806c20 <lubksb+0xb0>
    34806c8c:	e9 28 00 00 00       	jmpq   34806cb9 <lubksb+0x149>
    34806c91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806c98:	0f 1f 84 00 00 00 00 
    34806c9f:	00 
    34806ca0:	48 69 c1 28 03 00 00 	imul   $0x328,%rcx,%rax
    34806ca7:	48 01 f8             	add    %rdi,%rax
    34806caa:	f2 0f 5e 04 c8       	divsd  (%rax,%rcx,8),%xmm0
    34806caf:	f2 0f 11 04 ca       	movsd  %xmm0,(%rdx,%rcx,8)
    34806cb4:	e9 67 ff ff ff       	jmpq   34806c20 <lubksb+0xb0>
    34806cb9:	c3                   	retq   
    34806cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000034806cc0 <AllocateMemory>:
    34806cc0:	41 54                	push   %r12
    34806cc2:	53                   	push   %rbx
    34806cc3:	50                   	push   %rax
    34806cc4:	49 89 f4             	mov    %rsi,%r12
    34806cc7:	48 63 05 ca 1d b1 00 	movslq 0xb11dca(%rip),%rax        # 35318a98 <global_align>
    34806cce:	48 8d 3c 47          	lea    (%rdi,%rax,2),%rdi
    34806cd2:	e8 f9 38 00 00       	callq  3480a5d0 <malloc>
    34806cd7:	48 89 c3             	mov    %rax,%rbx
    34806cda:	31 c0                	xor    %eax,%eax
    34806cdc:	48 85 db             	test   %rbx,%rbx
    34806cdf:	0f 94 c0             	sete   %al
    34806ce2:	41 89 04 24          	mov    %eax,(%r12)
    34806ce6:	48 63 0d ab 1d b1 00 	movslq 0xb11dab(%rip),%rcx        # 35318a98 <global_align>
    34806ced:	48 85 c9             	test   %rcx,%rcx
    34806cf0:	0f 84 20 00 00 00    	je     34806d16 <AllocateMemory+0x56>
    34806cf6:	4c 89 24 24          	mov    %r12,(%rsp)
    34806cfa:	83 f9 01             	cmp    $0x1,%ecx
    34806cfd:	0f 85 33 00 00 00    	jne    34806d36 <AllocateMemory+0x76>
    34806d03:	89 da                	mov    %ebx,%edx
    34806d05:	83 e2 01             	and    $0x1,%edx
    34806d08:	48 89 d9             	mov    %rbx,%rcx
    34806d0b:	48 ff c1             	inc    %rcx
    34806d0e:	49 89 dc             	mov    %rbx,%r12
    34806d11:	e9 4f 00 00 00       	jmpq   34806d65 <AllocateMemory+0xa5>
    34806d16:	48 89 df             	mov    %rbx,%rdi
    34806d19:	48 89 de             	mov    %rbx,%rsi
    34806d1c:	e8 7f 00 00 00       	callq  34806da0 <AddMemArray>
    34806d21:	85 c0                	test   %eax,%eax
    34806d23:	0f 84 63 00 00 00    	je     34806d8c <AllocateMemory+0xcc>
    34806d29:	41 c7 04 24 02 00 00 	movl   $0x2,(%r12)
    34806d30:	00 
    34806d31:	e9 56 00 00 00       	jmpq   34806d8c <AllocateMemory+0xcc>
    34806d36:	49 89 dc             	mov    %rbx,%r12
    34806d39:	49 ff cc             	dec    %r12
    34806d3c:	0f 1f 40 00          	nopl   0x0(%rax)
    34806d40:	49 ff c4             	inc    %r12
    34806d43:	31 d2                	xor    %edx,%edx
    34806d45:	4c 89 e0             	mov    %r12,%rax
    34806d48:	48 f7 f1             	div    %rcx
    34806d4b:	48 85 d2             	test   %rdx,%rdx
    34806d4e:	0f 85 ec ff ff ff    	jne    34806d40 <AllocateMemory+0x80>
    34806d54:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    34806d57:	48 63 f0             	movslq %eax,%rsi
    34806d5a:	31 d2                	xor    %edx,%edx
    34806d5c:	4c 89 e0             	mov    %r12,%rax
    34806d5f:	48 f7 f6             	div    %rsi
    34806d62:	4c 01 e1             	add    %r12,%rcx
    34806d65:	48 85 d2             	test   %rdx,%rdx
    34806d68:	4c 0f 44 e1          	cmove  %rcx,%r12
    34806d6c:	48 89 df             	mov    %rbx,%rdi
    34806d6f:	4c 89 e6             	mov    %r12,%rsi
    34806d72:	e8 29 00 00 00       	callq  34806da0 <AddMemArray>
    34806d77:	85 c0                	test   %eax,%eax
    34806d79:	0f 84 0a 00 00 00    	je     34806d89 <AllocateMemory+0xc9>
    34806d7f:	48 8b 04 24          	mov    (%rsp),%rax
    34806d83:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    34806d89:	4c 89 e3             	mov    %r12,%rbx
    34806d8c:	48 89 d8             	mov    %rbx,%rax
    34806d8f:	48 83 c4 08          	add    $0x8,%rsp
    34806d93:	5b                   	pop    %rbx
    34806d94:	41 5c                	pop    %r12
    34806d96:	c3                   	retq   
    34806d97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34806d9e:	00 00 

0000000034806da0 <AddMemArray>:
    34806da0:	48 63 0d c5 1c b1 00 	movslq 0xb11cc5(%rip),%rcx        # 35318a6c <mem_array_ents>
    34806da7:	48 83 f9 13          	cmp    $0x13,%rcx
    34806dab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    34806db0:	0f 8f 1b 00 00 00    	jg     34806dd1 <AddMemArray+0x31>
    34806db6:	48 89 3c cd c0 84 31 	mov    %rdi,0x353184c0(,%rcx,8)
    34806dbd:	35 
    34806dbe:	48 89 34 cd 60 85 31 	mov    %rsi,0x35318560(,%rcx,8)
    34806dc5:	35 
    34806dc6:	8d 41 01             	lea    0x1(%rcx),%eax
    34806dc9:	89 05 9d 1c b1 00    	mov    %eax,0xb11c9d(%rip)        # 35318a6c <mem_array_ents>
    34806dcf:	31 c0                	xor    %eax,%eax
    34806dd1:	c3                   	retq   
    34806dd2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806dd9:	1f 84 00 00 00 00 00 

0000000034806de0 <FreeMemory>:
    34806de0:	53                   	push   %rbx
    34806de1:	48 83 ec 10          	sub    $0x10,%rsp
    34806de5:	48 89 f3             	mov    %rsi,%rbx
    34806de8:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    34806ded:	e8 2e 00 00 00       	callq  34806e20 <RemoveMemArray>
    34806df2:	b9 03 00 00 00       	mov    $0x3,%ecx
    34806df7:	85 c0                	test   %eax,%eax
    34806df9:	0f 85 0c 00 00 00    	jne    34806e0b <FreeMemory+0x2b>
    34806dff:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34806e04:	e8 f7 38 00 00       	callq  3480a700 <free>
    34806e09:	31 c9                	xor    %ecx,%ecx
    34806e0b:	89 0b                	mov    %ecx,(%rbx)
    34806e0d:	48 83 c4 10          	add    $0x10,%rsp
    34806e11:	5b                   	pop    %rbx
    34806e12:	c3                   	retq   
    34806e13:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806e1a:	84 00 00 00 00 00 

0000000034806e20 <RemoveMemArray>:
    34806e20:	4c 63 0d 45 1c b1 00 	movslq 0xb11c45(%rip),%r9        # 35318a6c <mem_array_ents>
    34806e27:	4d 85 c9             	test   %r9,%r9
    34806e2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    34806e2f:	0f 8e 38 00 00 00    	jle    34806e6d <RemoveMemArray+0x4d>
    34806e35:	49 b8 00 00 00 00 01 	movabs $0x100000000,%r8
    34806e3c:	00 00 00 
    34806e3f:	31 d2                	xor    %edx,%edx
    34806e41:	31 c9                	xor    %ecx,%ecx
    34806e43:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806e4a:	84 00 00 00 00 00 
    34806e50:	48 39 3c cd 60 85 31 	cmp    %rdi,0x35318560(,%rcx,8)
    34806e57:	35 
    34806e58:	0f 84 10 00 00 00    	je     34806e6e <RemoveMemArray+0x4e>
    34806e5e:	48 ff c1             	inc    %rcx
    34806e61:	4c 01 c2             	add    %r8,%rdx
    34806e64:	4c 39 c9             	cmp    %r9,%rcx
    34806e67:	0f 8c e3 ff ff ff    	jl     34806e50 <RemoveMemArray+0x30>
    34806e6d:	c3                   	retq   
    34806e6e:	48 8b 04 cd c0 84 31 	mov    0x353184c0(,%rcx,8),%rax
    34806e75:	35 
    34806e76:	48 89 06             	mov    %rax,(%rsi)
    34806e79:	8d 41 01             	lea    0x1(%rcx),%eax
    34806e7c:	44 39 c8             	cmp    %r9d,%eax
    34806e7f:	0f 8d 4f 00 00 00    	jge    34806ed4 <RemoveMemArray+0xb4>
    34806e85:	44 8b 0d e0 1b b1 00 	mov    0xb11be0(%rip),%r9d        # 35318a6c <mem_array_ents>
    34806e8c:	48 ff c1             	inc    %rcx
    34806e8f:	49 63 c1             	movslq %r9d,%rax
    34806e92:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806e99:	1f 84 00 00 00 00 00 
    34806ea0:	48 8b 34 cd c0 84 31 	mov    0x353184c0(,%rcx,8),%rsi
    34806ea7:	35 
    34806ea8:	48 89 d7             	mov    %rdx,%rdi
    34806eab:	48 c1 ff 1d          	sar    $0x1d,%rdi
    34806eaf:	48 89 b7 c0 84 31 35 	mov    %rsi,0x353184c0(%rdi)
    34806eb6:	48 8b 34 cd 60 85 31 	mov    0x35318560(,%rcx,8),%rsi
    34806ebd:	35 
    34806ebe:	48 89 b7 60 85 31 35 	mov    %rsi,0x35318560(%rdi)
    34806ec5:	48 ff c1             	inc    %rcx
    34806ec8:	4c 01 c2             	add    %r8,%rdx
    34806ecb:	48 39 c1             	cmp    %rax,%rcx
    34806ece:	0f 8c cc ff ff ff    	jl     34806ea0 <RemoveMemArray+0x80>
    34806ed4:	41 ff c9             	dec    %r9d
    34806ed7:	44 89 0d 8e 1b b1 00 	mov    %r9d,0xb11b8e(%rip)        # 35318a6c <mem_array_ents>
    34806ede:	31 c0                	xor    %eax,%eax
    34806ee0:	c3                   	retq   
    34806ee1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34806ee8:	0f 1f 84 00 00 00 00 
    34806eef:	00 

0000000034806ef0 <MoveMemory>:
    34806ef0:	e9 6b 48 00 00       	jmpq   3480b760 <memmove>
    34806ef5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34806efc:	00 00 00 00 

0000000034806f00 <InitMemArray>:
    34806f00:	c7 05 62 1b b1 00 00 	movl   $0x0,0xb11b62(%rip)        # 35318a6c <mem_array_ents>
    34806f07:	00 00 00 
    34806f0a:	c3                   	retq   
    34806f0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034806f10 <ReportError>:
    34806f10:	41 54                	push   %r12
    34806f12:	53                   	push   %rbx
    34806f13:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    34806f1a:	41 89 f4             	mov    %esi,%r12d
    34806f1d:	48 89 f9             	mov    %rdi,%rcx
    34806f20:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806f23:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    34806f28:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    34806f2d:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    34806f32:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    34806f37:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    34806f3c:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    34806f41:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    34806f46:	0f 29 04 24          	movaps %xmm0,(%rsp)
    34806f4a:	48 89 e3             	mov    %rsp,%rbx
    34806f4d:	be 10 4c 81 34       	mov    $0x34814c10,%esi
    34806f52:	31 c0                	xor    %eax,%eax
    34806f54:	48 89 df             	mov    %rbx,%rdi
    34806f57:	48 89 ca             	mov    %rcx,%rdx
    34806f5a:	e8 21 53 00 00       	callq  3480c280 <sprintf>
    34806f5f:	48 89 df             	mov    %rbx,%rdi
    34806f62:	e8 59 59 00 00       	callq  3480c8c0 <puts>
    34806f67:	0f 57 c0             	xorps  %xmm0,%xmm0
    34806f6a:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    34806f6f:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    34806f74:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    34806f79:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    34806f7e:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    34806f83:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    34806f88:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    34806f8d:	0f 29 04 24          	movaps %xmm0,(%rsp)
    34806f91:	be 2d 4c 81 34       	mov    $0x34814c2d,%esi
    34806f96:	31 c0                	xor    %eax,%eax
    34806f98:	48 89 df             	mov    %rbx,%rdi
    34806f9b:	44 89 e2             	mov    %r12d,%edx
    34806f9e:	e8 dd 52 00 00       	callq  3480c280 <sprintf>
    34806fa3:	48 89 df             	mov    %rbx,%rdi
    34806fa6:	e8 15 59 00 00       	callq  3480c8c0 <puts>
    34806fab:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    34806fb2:	5b                   	pop    %rbx
    34806fb3:	41 5c                	pop    %r12
    34806fb5:	c3                   	retq   
    34806fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34806fbd:	00 00 00 

0000000034806fc0 <ErrorExit>:
    34806fc0:	50                   	push   %rax
    34806fc1:	bf 01 00 00 00       	mov    $0x1,%edi
    34806fc6:	e8 b5 5c 00 00       	callq  3480cc80 <exit>
    34806fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034806fd0 <StartStopwatch>:
    34806fd0:	e9 2b 58 00 00       	jmpq   3480c800 <clock>
    34806fd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34806fdc:	00 00 00 00 

0000000034806fe0 <StopStopwatch>:
    34806fe0:	53                   	push   %rbx
    34806fe1:	48 89 fb             	mov    %rdi,%rbx
    34806fe4:	e8 17 58 00 00       	callq  3480c800 <clock>
    34806fe9:	48 29 d8             	sub    %rbx,%rax
    34806fec:	5b                   	pop    %rbx
    34806fed:	c3                   	retq   
    34806fee:	66 90                	xchg   %ax,%ax

0000000034806ff0 <TicksToSecs>:
    34806ff0:	48 b9 db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rcx
    34806ff7:	de 1b 43 
    34806ffa:	48 89 f8             	mov    %rdi,%rax
    34806ffd:	48 f7 e1             	mul    %rcx
    34807000:	48 c1 ea 12          	shr    $0x12,%rdx
    34807004:	48 89 d0             	mov    %rdx,%rax
    34807007:	c3                   	retq   
    34807008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480700f:	00 

0000000034807010 <TicksToFracSecs>:
    34807010:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    34807015:	66 0f 62 0d d3 c7 00 	punpckldq 0xc7d3(%rip),%xmm1        # 348137f0 <DoEmFloatIteration.jtable+0x8d0>
    3480701c:	00 
    3480701d:	66 0f 5c 0d db c7 00 	subpd  0xc7db(%rip),%xmm1        # 34813800 <DoEmFloatIteration.jtable+0x8e0>
    34807024:	00 
    34807025:	66 0f 70 c1 4e       	pshufd $0x4e,%xmm1,%xmm0
    3480702a:	66 0f 58 c1          	addpd  %xmm1,%xmm0
    3480702e:	f2 0f 5e 05 d2 db 00 	divsd  0xdbd2(%rip),%xmm0        # 34814c08 <val_arr+0x1188>
    34807035:	00 
    34807036:	c3                   	retq   
    34807037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480703e:	00 00 

0000000034807040 <cos>:
    34807040:	48 83 ec 18          	sub    $0x18,%rsp
    34807044:	66 48 0f 7e c0       	movq   %xmm0,%rax
    34807049:	48 c1 e8 20          	shr    $0x20,%rax
    3480704d:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    34807052:	3d fb 21 e9 3f       	cmp    $0x3fe921fb,%eax
    34807057:	0f 87 25 00 00 00    	ja     34807082 <cos+0x42>
    3480705d:	3d 9d a0 46 3e       	cmp    $0x3e46a09d,%eax
    34807062:	0f 87 2e 00 00 00    	ja     34807096 <cos+0x56>
    34807068:	f2 0f 58 05 c8 db 00 	addsd  0xdbc8(%rip),%xmm0        # 34814c38 <val_arr+0x11b8>
    3480706f:	00 
    34807070:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
    34807075:	f2 0f 10 05 e3 be 00 	movsd  0xbee3(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480707c:	00 
    3480707d:	48 83 c4 18          	add    $0x18,%rsp
    34807081:	c3                   	retq   
    34807082:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
    34807087:	0f 82 16 00 00 00    	jb     348070a3 <cos+0x63>
    3480708d:	f2 0f 5c c0          	subsd  %xmm0,%xmm0
    34807091:	48 83 c4 18          	add    $0x18,%rsp
    34807095:	c3                   	retq   
    34807096:	0f 57 c9             	xorps  %xmm1,%xmm1
    34807099:	e8 22 5d 00 00       	callq  3480cdc0 <__cos>
    3480709e:	48 83 c4 18          	add    $0x18,%rsp
    348070a2:	c3                   	retq   
    348070a3:	48 89 e7             	mov    %rsp,%rdi
    348070a6:	e8 e5 5d 00 00       	callq  3480ce90 <__rem_pio2>
    348070ab:	24 03                	and    $0x3,%al
    348070ad:	3c 02                	cmp    $0x2,%al
    348070af:	0f 84 25 00 00 00    	je     348070da <cos+0x9a>
    348070b5:	3c 01                	cmp    $0x1,%al
    348070b7:	0f 84 39 00 00 00    	je     348070f6 <cos+0xb6>
    348070bd:	84 c0                	test   %al,%al
    348070bf:	0f 85 52 00 00 00    	jne    34807117 <cos+0xd7>
    348070c5:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    348070ca:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    348070d0:	e8 eb 5c 00 00       	callq  3480cdc0 <__cos>
    348070d5:	48 83 c4 18          	add    $0x18,%rsp
    348070d9:	c3                   	retq   
    348070da:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    348070df:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    348070e5:	e8 d6 5c 00 00       	callq  3480cdc0 <__cos>
    348070ea:	0f 57 05 2f c7 00 00 	xorps  0xc72f(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    348070f1:	48 83 c4 18          	add    $0x18,%rsp
    348070f5:	c3                   	retq   
    348070f6:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    348070fb:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34807101:	bf 01 00 00 00       	mov    $0x1,%edi
    34807106:	e8 c5 6f 00 00       	callq  3480e0d0 <__sin>
    3480710b:	0f 57 05 0e c7 00 00 	xorps  0xc70e(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    34807112:	48 83 c4 18          	add    $0x18,%rsp
    34807116:	c3                   	retq   
    34807117:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480711c:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    34807122:	bf 01 00 00 00       	mov    $0x1,%edi
    34807127:	e8 a4 6f 00 00       	callq  3480e0d0 <__sin>
    3480712c:	48 83 c4 18          	add    $0x18,%rsp
    34807130:	c3                   	retq   
    34807131:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34807138:	00 00 00 
    3480713b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034807140 <exp>:
    34807140:	66 48 0f 7e c2       	movq   %xmm0,%rdx
    34807145:	48 89 d1             	mov    %rdx,%rcx
    34807148:	48 c1 e9 20          	shr    $0x20,%rcx
    3480714c:	48 89 d0             	mov    %rdx,%rax
    3480714f:	48 c1 e8 3f          	shr    $0x3f,%rax
    34807153:	81 e1 ff ff ff 7f    	and    $0x7fffffff,%ecx
    34807159:	81 f9 2b 23 86 40    	cmp    $0x4086232b,%ecx
    3480715f:	0f 82 3b 00 00 00    	jb     348071a0 <exp+0x60>
    34807165:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
    3480716c:	ff ff 7f 
    3480716f:	48 21 ca             	and    %rcx,%rdx
    34807172:	48 b9 00 00 00 00 00 	movabs $0x7ff0000000000000,%rcx
    34807179:	00 f0 7f 
    3480717c:	48 39 ca             	cmp    %rcx,%rdx
    3480717f:	0f 87 76 01 00 00    	ja     348072fb <exp+0x1bb>
    34807185:	66 0f 2e 05 bb da 00 	ucomisd 0xdabb(%rip),%xmm0        # 34814c48 <val_arr+0x11c8>
    3480718c:	00 
    3480718d:	0f 86 4c 00 00 00    	jbe    348071df <exp+0x9f>
    34807193:	f2 0f 59 05 a5 da 00 	mulsd  0xdaa5(%rip),%xmm0        # 34814c40 <val_arr+0x11c0>
    3480719a:	00 
    3480719b:	e9 5b 01 00 00       	jmpq   348072fb <exp+0x1bb>
    348071a0:	81 f9 43 2e d6 3f    	cmp    $0x3fd62e43,%ecx
    348071a6:	0f 82 18 00 00 00    	jb     348071c4 <exp+0x84>
    348071ac:	81 f9 b2 a2 f0 3f    	cmp    $0x3ff0a2b2,%ecx
    348071b2:	0f 83 65 00 00 00    	jae    3480721d <exp+0xdd>
    348071b8:	89 c7                	mov    %eax,%edi
    348071ba:	83 f7 01             	xor    $0x1,%edi
    348071bd:	29 c7                	sub    %eax,%edi
    348071bf:	e9 75 00 00 00       	jmpq   34807239 <exp+0xf9>
    348071c4:	81 f9 00 00 30 3e    	cmp    $0x3e300000,%ecx
    348071ca:	0f 86 11 01 00 00    	jbe    348072e1 <exp+0x1a1>
    348071d0:	31 ff                	xor    %edi,%edi
    348071d2:	66 0f 57 d2          	xorpd  %xmm2,%xmm2
    348071d6:	66 0f 28 c8          	movapd %xmm0,%xmm1
    348071da:	e9 81 00 00 00       	jmpq   34807260 <exp+0x120>
    348071df:	f2 0f 10 0d 69 da 00 	movsd  0xda69(%rip),%xmm1        # 34814c50 <val_arr+0x11d0>
    348071e6:	00 
    348071e7:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    348071eb:	0f 86 2c 00 00 00    	jbe    3480721d <exp+0xdd>
    348071f1:	f2 0f 10 0d 5f da 00 	movsd  0xda5f(%rip),%xmm1        # 34814c58 <val_arr+0x11d8>
    348071f8:	00 
    348071f9:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    348071fd:	f2 0f 5a c9          	cvtsd2ss %xmm1,%xmm1
    34807201:	f3 0f 11 4c 24 f4    	movss  %xmm1,-0xc(%rsp)
    34807207:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480720b:	f2 0f 10 15 4d da 00 	movsd  0xda4d(%rip),%xmm2        # 34814c60 <val_arr+0x11e0>
    34807212:	00 
    34807213:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
    34807217:	0f 87 e2 00 00 00    	ja     348072ff <exp+0x1bf>
    3480721d:	f2 0f 10 0d 43 da 00 	movsd  0xda43(%rip),%xmm1        # 34814c68 <val_arr+0x11e8>
    34807224:	00 
    34807225:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    34807229:	48 8d 0d 80 da 00 00 	lea    0xda80(%rip),%rcx        # 34814cb0 <half>
    34807230:	f2 0f 58 0c c1       	addsd  (%rcx,%rax,8),%xmm1
    34807235:	f2 0f 2c f9          	cvttsd2si %xmm1,%edi
    34807239:	0f 57 d2             	xorps  %xmm2,%xmm2
    3480723c:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
    34807240:	f2 0f 10 0d 28 da 00 	movsd  0xda28(%rip),%xmm1        # 34814c70 <val_arr+0x11f0>
    34807247:	00 
    34807248:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    3480724c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    34807250:	f2 0f 59 15 20 da 00 	mulsd  0xda20(%rip),%xmm2        # 34814c78 <val_arr+0x11f8>
    34807257:	00 
    34807258:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480725c:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    34807260:	66 0f 28 d9          	movapd %xmm1,%xmm3
    34807264:	f2 0f 59 db          	mulsd  %xmm3,%xmm3
    34807268:	f2 0f 10 25 10 da 00 	movsd  0xda10(%rip),%xmm4        # 34814c80 <val_arr+0x1200>
    3480726f:	00 
    34807270:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    34807274:	f2 0f 58 25 0c da 00 	addsd  0xda0c(%rip),%xmm4        # 34814c88 <val_arr+0x1208>
    3480727b:	00 
    3480727c:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    34807280:	f2 0f 58 25 08 da 00 	addsd  0xda08(%rip),%xmm4        # 34814c90 <val_arr+0x1210>
    34807287:	00 
    34807288:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    3480728c:	f2 0f 58 25 04 da 00 	addsd  0xda04(%rip),%xmm4        # 34814c98 <val_arr+0x1218>
    34807293:	00 
    34807294:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    34807298:	f2 0f 58 25 00 da 00 	addsd  0xda00(%rip),%xmm4        # 34814ca0 <val_arr+0x1220>
    3480729f:	00 
    348072a0:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    348072a4:	66 0f 28 d9          	movapd %xmm1,%xmm3
    348072a8:	f2 0f 5c dc          	subsd  %xmm4,%xmm3
    348072ac:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    348072b0:	f2 0f 10 25 e8 c4 00 	movsd  0xc4e8(%rip),%xmm4        # 348137a0 <DoEmFloatIteration.jtable+0x880>
    348072b7:	00 
    348072b8:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    348072bc:	f2 0f 5e cc          	divsd  %xmm4,%xmm1
    348072c0:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    348072c4:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    348072c8:	f2 0f 58 0d 90 bc 00 	addsd  0xbc90(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    348072cf:	00 
    348072d0:	85 ff                	test   %edi,%edi
    348072d2:	0f 84 27 00 00 00    	je     348072ff <exp+0x1bf>
    348072d8:	66 0f 28 c1          	movapd %xmm1,%xmm0
    348072dc:	e9 df 4d 00 00       	jmpq   3480c0c0 <scalbn>
    348072e1:	f2 0f 10 0d 57 d9 00 	movsd  0xd957(%rip),%xmm1        # 34814c40 <val_arr+0x11c0>
    348072e8:	00 
    348072e9:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    348072ed:	f2 0f 11 4c 24 f8    	movsd  %xmm1,-0x8(%rsp)
    348072f3:	f2 0f 58 05 65 bc 00 	addsd  0xbc65(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    348072fa:	00 
    348072fb:	66 0f 28 c8          	movapd %xmm0,%xmm1
    348072ff:	66 0f 28 c1          	movapd %xmm1,%xmm0
    34807303:	c3                   	retq   
    34807304:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480730b:	00 00 00 
    3480730e:	66 90                	xchg   %ax,%ax

0000000034807310 <morecore>:
    34807310:	50                   	push   %rax
    34807311:	48 8d 3d 08 da 00 00 	lea    0xda08(%rip),%rdi        # 34814d20 <half+0x70>
    34807318:	31 c0                	xor    %eax,%eax
    3480731a:	e8 a1 55 00 00       	callq  3480c8c0 <puts>
    3480731f:	31 c0                	xor    %eax,%eax
    34807321:	59                   	pop    %rcx
    34807322:	c3                   	retq   
    34807323:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480732a:	84 00 00 00 00 00 

0000000034807330 <create_mspace>:
    34807330:	50                   	push   %rax
    34807331:	48 83 3d c7 03 21 00 	cmpq   $0x0,0x2103c7(%rip)        # 34a17700 <mparams>
    34807338:	00 
    34807339:	0f 85 55 00 00 00    	jne    34807394 <create_mspace+0x64>
    3480733f:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34807344:	e8 f7 52 00 00       	callq  3480c640 <sysconf>
    34807349:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3480734d:	48 85 c1             	test   %rax,%rcx
    34807350:	0f 85 42 00 00 00    	jne    34807398 <create_mspace+0x68>
    34807356:	48 89 05 ab 03 21 00 	mov    %rax,0x2103ab(%rip)        # 34a17708 <mparams+0x8>
    3480735d:	0f 28 05 5c d9 00 00 	movaps 0xd95c(%rip),%xmm0        # 34814cc0 <half+0x10>
    34807364:	0f 11 05 a5 03 21 00 	movups %xmm0,0x2103a5(%rip)        # 34a17710 <mparams+0x10>
    3480736b:	48 c7 05 aa 03 21 00 	movq   $0x200000,0x2103aa(%rip)        # 34a17720 <mparams+0x20>
    34807372:	00 00 20 00 
    34807376:	c7 05 a8 03 21 00 04 	movl   $0x4,0x2103a8(%rip)        # 34a17728 <mparams+0x28>
    3480737d:	00 00 00 
    34807380:	48 89 e0             	mov    %rsp,%rax
    34807383:	48 83 c8 08          	or     $0x8,%rax
    34807387:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    3480738d:	48 89 05 6c 03 21 00 	mov    %rax,0x21036c(%rip)        # 34a17700 <mparams>
    34807394:	31 c0                	xor    %eax,%eax
    34807396:	59                   	pop    %rcx
    34807397:	c3                   	retq   
    34807398:	bf 01 00 00 00       	mov    $0x1,%edi
    3480739d:	e8 de 58 00 00       	callq  3480cc80 <exit>
    348073a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348073a9:	1f 84 00 00 00 00 00 

00000000348073b0 <mspace_malloc_init_pan>:
    348073b0:	48 8d 46 17          	lea    0x17(%rsi),%rax
    348073b4:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    348073b8:	48 83 fe 17          	cmp    $0x17,%rsi
    348073bc:	b9 20 00 00 00       	mov    $0x20,%ecx
    348073c1:	48 0f 43 c8          	cmovae %rax,%rcx
    348073c5:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    348073c9:	48 8b 47 28          	mov    0x28(%rdi),%rax
    348073cd:	48 29 ca             	sub    %rcx,%rdx
    348073d0:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    348073d4:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    348073d8:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    348073dc:	48 83 ca 01          	or     $0x1,%rdx
    348073e0:	48 89 54 08 08       	mov    %rdx,0x8(%rax,%rcx,1)
    348073e5:	48 83 c9 03          	or     $0x3,%rcx
    348073e9:	48 89 48 08          	mov    %rcx,0x8(%rax)
    348073ed:	48 83 c0 10          	add    $0x10,%rax
    348073f1:	c3                   	retq   
    348073f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348073f9:	1f 84 00 00 00 00 00 

0000000034807400 <mspace_init_pan>:
    34807400:	41 54                	push   %r12
    34807402:	53                   	push   %rbx
    34807403:	48 83 ec 28          	sub    $0x28,%rsp
    34807407:	49 89 fc             	mov    %rdi,%r12
    3480740a:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    3480740f:	4d 8b 5c 24 28       	mov    0x28(%r12),%r11
    34807414:	44 89 d9             	mov    %r11d,%ecx
    34807417:	81 e1 ff 0f 00 00    	and    $0xfff,%ecx
    3480741d:	ba f0 0f 00 00       	mov    $0xff0,%edx
    34807422:	48 29 ca             	sub    %rcx,%rdx
    34807425:	bf 07 10 00 00       	mov    $0x1007,%edi
    3480742a:	29 cf                	sub    %ecx,%edi
    3480742c:	81 e7 f0 1f 00 00    	and    $0x1ff0,%edi
    34807432:	48 83 fa 17          	cmp    $0x17,%rdx
    34807436:	b9 20 00 00 00       	mov    $0x20,%ecx
    3480743b:	48 0f 43 cf          	cmovae %rdi,%rcx
    3480743f:	48 29 c8             	sub    %rcx,%rax
    34807442:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    34807447:	4d 8d 14 0b          	lea    (%r11,%rcx,1),%r10
    3480744b:	4d 89 54 24 28       	mov    %r10,0x28(%r12)
    34807450:	48 89 c2             	mov    %rax,%rdx
    34807453:	48 83 ca 01          	or     $0x1,%rdx
    34807457:	49 89 54 0b 08       	mov    %rdx,0x8(%r11,%rcx,1)
    3480745c:	48 83 c9 03          	or     $0x3,%rcx
    34807460:	49 89 4b 08          	mov    %rcx,0x8(%r11)
    34807464:	49 83 c3 10          	add    $0x10,%r11
    34807468:	48 39 f0             	cmp    %rsi,%rax
    3480746b:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    34807470:	0f 86 90 00 00 00    	jbe    34807506 <mspace_init_pan+0x106>
    34807476:	48 8d 4e d0          	lea    -0x30(%rsi),%rcx
    3480747a:	48 8d 7e e7          	lea    -0x19(%rsi),%rdi
    3480747e:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    34807482:	48 83 f9 17          	cmp    $0x17,%rcx
    34807486:	ba 20 00 00 00       	mov    $0x20,%edx
    3480748b:	48 0f 43 d7          	cmovae %rdi,%rdx
    3480748f:	49 89 d0             	mov    %rdx,%r8
    34807492:	49 83 c8 03          	or     $0x3,%r8
    34807496:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    3480749c:	49 29 d1             	sub    %rdx,%r9
    3480749f:	31 db                	xor    %ebx,%ebx
    348074a1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348074a8:	0f 1f 84 00 00 00 00 
    348074af:	00 
    348074b0:	ff c3                	inc    %ebx
    348074b2:	49 8d 7c 01 d0       	lea    -0x30(%r9,%rax,1),%rdi
    348074b7:	48 8d 40 e0          	lea    -0x20(%rax),%rax
    348074bb:	49 c7 42 08 23 00 00 	movq   $0x23,0x8(%r10)
    348074c2:	00 
    348074c3:	48 29 d0             	sub    %rdx,%rax
    348074c6:	49 8d 4c 12 20       	lea    0x20(%r10,%rdx,1),%rcx
    348074cb:	48 83 cf 01          	or     $0x1,%rdi
    348074cf:	49 89 7c 12 28       	mov    %rdi,0x28(%r10,%rdx,1)
    348074d4:	4d 89 42 28          	mov    %r8,0x28(%r10)
    348074d8:	48 39 f0             	cmp    %rsi,%rax
    348074db:	49 89 ca             	mov    %rcx,%r10
    348074de:	0f 87 cc ff ff ff    	ja     348074b0 <mspace_init_pan+0xb0>
    348074e4:	49 89 4c 24 28       	mov    %rcx,0x28(%r12)
    348074e9:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    348074ee:	be 10 00 00 00       	mov    $0x10,%esi
    348074f3:	48 29 d6             	sub    %rdx,%rsi
    348074f6:	48 01 ce             	add    %rcx,%rsi
    348074f9:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    348074fe:	49 89 ca             	mov    %rcx,%r10
    34807501:	e9 07 00 00 00       	jmpq   3480750d <mspace_init_pan+0x10d>
    34807506:	31 db                	xor    %ebx,%ebx
    34807508:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    3480750d:	48 83 c0 e0          	add    $0xffffffffffffffe0,%rax
    34807511:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    34807516:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    3480751a:	49 89 4c 24 28       	mov    %rcx,0x28(%r12)
    3480751f:	48 83 c8 01          	or     $0x1,%rax
    34807523:	49 89 42 28          	mov    %rax,0x28(%r10)
    34807527:	49 c7 42 08 23 00 00 	movq   $0x23,0x8(%r10)
    3480752e:	00 
    3480752f:	4c 89 e7             	mov    %r12,%rdi
    34807532:	4c 89 de             	mov    %r11,%rsi
    34807535:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    3480753a:	e8 a1 00 00 00       	callq  348075e0 <mspace_free>
    3480753f:	85 db                	test   %ebx,%ebx
    34807541:	0f 8e 6d 00 00 00    	jle    348075b4 <mspace_init_pan+0x1b4>
    34807547:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3480754c:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    34807553:	8d 4b ff             	lea    -0x1(%rbx),%ecx
    34807556:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3480755b:	48 0f af c8          	imul   %rax,%rcx
    3480755f:	48 01 d1             	add    %rdx,%rcx
    34807562:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    34807567:	48 81 c2 30 10 00 00 	add    $0x1030,%rdx
    3480756e:	48 89 d6             	mov    %rdx,%rsi
    34807571:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
    34807576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480757d:	00 00 00 
    34807580:	4c 89 e7             	mov    %r12,%rdi
    34807583:	49 89 f4             	mov    %rsi,%r12
    34807586:	e8 55 00 00 00       	callq  348075e0 <mspace_free>
    3480758b:	4c 89 e6             	mov    %r12,%rsi
    3480758e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    34807593:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    34807598:	48 01 c6             	add    %rax,%rsi
    3480759b:	ff cb                	dec    %ebx
    3480759d:	0f 85 dd ff ff ff    	jne    34807580 <mspace_init_pan+0x180>
    348075a3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    348075a8:	48 81 c1 30 10 00 00 	add    $0x1030,%rcx
    348075af:	e9 00 00 00 00       	jmpq   348075b4 <mspace_init_pan+0x1b4>
    348075b4:	48 8d 1d c5 94 b1 00 	lea    0xb194c5(%rip),%rbx        # 35320a80 <buf>
    348075bb:	48 8d 35 77 d7 00 00 	lea    0xd777(%rip),%rsi        # 34814d39 <half+0x89>
    348075c2:	31 c0                	xor    %eax,%eax
    348075c4:	48 89 df             	mov    %rbx,%rdi
    348075c7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    348075cc:	e8 af 4c 00 00       	callq  3480c280 <sprintf>
    348075d1:	48 89 df             	mov    %rbx,%rdi
    348075d4:	48 83 c4 28          	add    $0x28,%rsp
    348075d8:	5b                   	pop    %rbx
    348075d9:	41 5c                	pop    %r12
    348075db:	e9 e0 52 00 00       	jmpq   3480c8c0 <puts>

00000000348075e0 <mspace_free>:
    348075e0:	41 54                	push   %r12
    348075e2:	53                   	push   %rbx
    348075e3:	50                   	push   %rax
    348075e4:	49 89 fc             	mov    %rdi,%r12
    348075e7:	48 85 f6             	test   %rsi,%rsi
    348075ea:	0f 84 c4 07 00 00    	je     34807db4 <mspace_free+0x7d4>
    348075f0:	4c 8d 56 f0          	lea    -0x10(%rsi),%r10
    348075f4:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
    348075f9:	49 39 fa             	cmp    %rdi,%r10
    348075fc:	0f 82 da 07 00 00    	jb     34807ddc <mspace_free+0x7fc>
    34807602:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
    34807606:	89 c8                	mov    %ecx,%eax
    34807608:	83 e0 03             	and    $0x3,%eax
    3480760b:	48 83 f8 01          	cmp    $0x1,%rax
    3480760f:	0f 84 c7 07 00 00    	je     34807ddc <mspace_free+0x7fc>
    34807615:	48 89 ce             	mov    %rcx,%rsi
    34807618:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    3480761c:	4d 8d 04 32          	lea    (%r10,%rsi,1),%r8
    34807620:	f6 c1 01             	test   $0x1,%cl
    34807623:	0f 85 4c 02 00 00    	jne    34807875 <mspace_free+0x295>
    34807629:	48 85 c0             	test   %rax,%rax
    3480762c:	0f 84 82 07 00 00    	je     34807db4 <mspace_free+0x7d4>
    34807632:	49 8b 0a             	mov    (%r10),%rcx
    34807635:	49 29 ca             	sub    %rcx,%r10
    34807638:	49 39 fa             	cmp    %rdi,%r10
    3480763b:	0f 82 9b 07 00 00    	jb     34807ddc <mspace_free+0x7fc>
    34807641:	48 01 ce             	add    %rcx,%rsi
    34807644:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    34807649:	0f 84 7e 00 00 00    	je     348076cd <mspace_free+0xed>
    3480764f:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    34807656:	0f 87 96 00 00 00    	ja     348076f2 <mspace_free+0x112>
    3480765c:	49 8b 42 10          	mov    0x10(%r10),%rax
    34807660:	4d 8b 4a 18          	mov    0x18(%r10),%r9
    34807664:	48 ba f8 ff ff ff 03 	movabs $0x3fffffff8,%rdx
    3480766b:	00 00 00 
    3480766e:	48 21 ca             	and    %rcx,%rdx
    34807671:	49 8d 54 54 48       	lea    0x48(%r12,%rdx,2),%rdx
    34807676:	48 39 d0             	cmp    %rdx,%rax
    34807679:	0f 84 13 00 00 00    	je     34807692 <mspace_free+0xb2>
    3480767f:	48 39 c7             	cmp    %rax,%rdi
    34807682:	0f 87 54 07 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807688:	4c 39 50 18          	cmp    %r10,0x18(%rax)
    3480768c:	0f 85 4a 07 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807692:	49 39 c1             	cmp    %rax,%r9
    34807695:	0f 84 9f 00 00 00    	je     3480773a <mspace_free+0x15a>
    3480769b:	49 39 d1             	cmp    %rdx,%r9
    3480769e:	0f 84 13 00 00 00    	je     348076b7 <mspace_free+0xd7>
    348076a4:	4c 39 cf             	cmp    %r9,%rdi
    348076a7:	0f 87 2f 07 00 00    	ja     34807ddc <mspace_free+0x7fc>
    348076ad:	4d 39 51 10          	cmp    %r10,0x10(%r9)
    348076b1:	0f 85 25 07 00 00    	jne    34807ddc <mspace_free+0x7fc>
    348076b7:	4c 89 48 18          	mov    %r9,0x18(%rax)
    348076bb:	49 89 41 10          	mov    %rax,0x10(%r9)
    348076bf:	4d 39 c2             	cmp    %r8,%r10
    348076c2:	0f 82 b6 01 00 00    	jb     3480787e <mspace_free+0x29e>
    348076c8:	e9 0f 07 00 00       	jmpq   34807ddc <mspace_free+0x7fc>
    348076cd:	49 8b 40 08          	mov    0x8(%r8),%rax
    348076d1:	89 c1                	mov    %eax,%ecx
    348076d3:	83 e1 03             	and    $0x3,%ecx
    348076d6:	48 83 f9 03          	cmp    $0x3,%rcx
    348076da:	0f 85 95 01 00 00    	jne    34807875 <mspace_free+0x295>
    348076e0:	49 89 74 24 08       	mov    %rsi,0x8(%r12)
    348076e5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    348076e9:	49 89 40 08          	mov    %rax,0x8(%r8)
    348076ed:	e9 9a 03 00 00       	jmpq   34807a8c <mspace_free+0x4ac>
    348076f2:	49 8b 5a 18          	mov    0x18(%r10),%rbx
    348076f6:	4d 8b 4a 30          	mov    0x30(%r10),%r9
    348076fa:	4c 39 d3             	cmp    %r10,%rbx
    348076fd:	0f 84 54 00 00 00    	je     34807757 <mspace_free+0x177>
    34807703:	49 8b 42 10          	mov    0x10(%r10),%rax
    34807707:	48 39 c7             	cmp    %rax,%rdi
    3480770a:	0f 87 cc 06 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807710:	4c 39 50 18          	cmp    %r10,0x18(%rax)
    34807714:	0f 85 c2 06 00 00    	jne    34807ddc <mspace_free+0x7fc>
    3480771a:	4c 39 53 10          	cmp    %r10,0x10(%rbx)
    3480771e:	0f 85 b8 06 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807724:	48 89 58 18          	mov    %rbx,0x18(%rax)
    34807728:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3480772c:	4d 85 c9             	test   %r9,%r9
    3480772f:	0f 85 8c 00 00 00    	jne    348077c1 <mspace_free+0x1e1>
    34807735:	e9 3b 01 00 00       	jmpq   34807875 <mspace_free+0x295>
    3480773a:	48 c1 e9 03          	shr    $0x3,%rcx
    3480773e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    34807743:	d3 c0                	rol    %cl,%eax
    34807745:	41 21 04 24          	and    %eax,(%r12)
    34807749:	4d 39 c2             	cmp    %r8,%r10
    3480774c:	0f 82 2c 01 00 00    	jb     3480787e <mspace_free+0x29e>
    34807752:	e9 85 06 00 00       	jmpq   34807ddc <mspace_free+0x7fc>
    34807757:	49 8b 42 28          	mov    0x28(%r10),%rax
    3480775b:	48 85 c0             	test   %rax,%rax
    3480775e:	0f 84 09 00 00 00    	je     3480776d <mspace_free+0x18d>
    34807764:	49 8d 4a 28          	lea    0x28(%r10),%rcx
    34807768:	e9 13 00 00 00       	jmpq   34807780 <mspace_free+0x1a0>
    3480776d:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    34807771:	48 8b 01             	mov    (%rcx),%rax
    34807774:	48 85 c0             	test   %rax,%rax
    34807777:	0f 84 3f 06 00 00    	je     34807dbc <mspace_free+0x7dc>
    3480777d:	0f 1f 00             	nopl   (%rax)
    34807780:	48 89 c3             	mov    %rax,%rbx
    34807783:	48 89 ca             	mov    %rcx,%rdx
    34807786:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    3480778a:	48 8b 43 28          	mov    0x28(%rbx),%rax
    3480778e:	48 85 c0             	test   %rax,%rax
    34807791:	0f 85 e9 ff ff ff    	jne    34807780 <mspace_free+0x1a0>
    34807797:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    3480779b:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480779f:	48 85 c0             	test   %rax,%rax
    348077a2:	0f 85 d8 ff ff ff    	jne    34807780 <mspace_free+0x1a0>
    348077a8:	48 39 d7             	cmp    %rdx,%rdi
    348077ab:	0f 87 2b 06 00 00    	ja     34807ddc <mspace_free+0x7fc>
    348077b1:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    348077b8:	4d 85 c9             	test   %r9,%r9
    348077bb:	0f 84 b4 00 00 00    	je     34807875 <mspace_free+0x295>
    348077c1:	41 8b 4a 38          	mov    0x38(%r10),%ecx
    348077c5:	4d 39 94 cc 58 02 00 	cmp    %r10,0x258(%r12,%rcx,8)
    348077cc:	00 
    348077cd:	0f 84 27 00 00 00    	je     348077fa <mspace_free+0x21a>
    348077d3:	4d 39 4c 24 18       	cmp    %r9,0x18(%r12)
    348077d8:	0f 87 fe 05 00 00    	ja     34807ddc <mspace_free+0x7fc>
    348077de:	31 c0                	xor    %eax,%eax
    348077e0:	4d 39 51 20          	cmp    %r10,0x20(%r9)
    348077e4:	0f 95 c0             	setne  %al
    348077e7:	49 89 5c c1 20       	mov    %rbx,0x20(%r9,%rax,8)
    348077ec:	48 85 db             	test   %rbx,%rbx
    348077ef:	0f 85 16 00 00 00    	jne    3480780b <mspace_free+0x22b>
    348077f5:	e9 7b 00 00 00       	jmpq   34807875 <mspace_free+0x295>
    348077fa:	49 89 9c cc 58 02 00 	mov    %rbx,0x258(%r12,%rcx,8)
    34807801:	00 
    34807802:	48 85 db             	test   %rbx,%rbx
    34807805:	0f 84 5e 00 00 00    	je     34807869 <mspace_free+0x289>
    3480780b:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    34807810:	48 39 d8             	cmp    %rbx,%rax
    34807813:	0f 87 c3 05 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807819:	4c 89 4b 30          	mov    %r9,0x30(%rbx)
    3480781d:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    34807821:	48 85 c9             	test   %rcx,%rcx
    34807824:	0f 84 11 00 00 00    	je     3480783b <mspace_free+0x25b>
    3480782a:	48 39 c8             	cmp    %rcx,%rax
    3480782d:	0f 87 a9 05 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807833:	48 89 4b 20          	mov    %rcx,0x20(%rbx)
    34807837:	48 89 59 30          	mov    %rbx,0x30(%rcx)
    3480783b:	49 8b 42 28          	mov    0x28(%r10),%rax
    3480783f:	48 85 c0             	test   %rax,%rax
    34807842:	0f 84 2d 00 00 00    	je     34807875 <mspace_free+0x295>
    34807848:	49 39 44 24 18       	cmp    %rax,0x18(%r12)
    3480784d:	0f 87 89 05 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807853:	48 89 43 28          	mov    %rax,0x28(%rbx)
    34807857:	48 89 58 30          	mov    %rbx,0x30(%rax)
    3480785b:	4d 39 c2             	cmp    %r8,%r10
    3480785e:	0f 82 1a 00 00 00    	jb     3480787e <mspace_free+0x29e>
    34807864:	e9 73 05 00 00       	jmpq   34807ddc <mspace_free+0x7fc>
    34807869:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480786e:	d3 c0                	rol    %cl,%eax
    34807870:	41 21 44 24 04       	and    %eax,0x4(%r12)
    34807875:	4d 39 c2             	cmp    %r8,%r10
    34807878:	0f 83 5e 05 00 00    	jae    34807ddc <mspace_free+0x7fc>
    3480787e:	49 8b 78 08          	mov    0x8(%r8),%rdi
    34807882:	40 f6 c7 01          	test   $0x1,%dil
    34807886:	0f 84 50 05 00 00    	je     34807ddc <mspace_free+0x7fc>
    3480788c:	40 f6 c7 02          	test   $0x2,%dil
    34807890:	0f 85 8f 00 00 00    	jne    34807925 <mspace_free+0x345>
    34807896:	4d 39 44 24 28       	cmp    %r8,0x28(%r12)
    3480789b:	0f 84 1f 01 00 00    	je     348079c0 <mspace_free+0x3e0>
    348078a1:	4d 39 44 24 20       	cmp    %r8,0x20(%r12)
    348078a6:	0f 84 d1 01 00 00    	je     34807a7d <mspace_free+0x49d>
    348078ac:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    348078b3:	0f 87 54 02 00 00    	ja     34807b0d <mspace_free+0x52d>
    348078b9:	49 8b 40 10          	mov    0x10(%r8),%rax
    348078bd:	49 8b 48 18          	mov    0x18(%r8),%rcx
    348078c1:	48 ba f8 ff ff ff 03 	movabs $0x3fffffff8,%rdx
    348078c8:	00 00 00 
    348078cb:	48 21 fa             	and    %rdi,%rdx
    348078ce:	49 8d 54 54 48       	lea    0x48(%r12,%rdx,2),%rdx
    348078d3:	48 39 d0             	cmp    %rdx,%rax
    348078d6:	0f 84 15 00 00 00    	je     348078f1 <mspace_free+0x311>
    348078dc:	49 39 44 24 18       	cmp    %rax,0x18(%r12)
    348078e1:	0f 87 f5 04 00 00    	ja     34807ddc <mspace_free+0x7fc>
    348078e7:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    348078eb:	0f 85 eb 04 00 00    	jne    34807ddc <mspace_free+0x7fc>
    348078f1:	48 39 c1             	cmp    %rax,%rcx
    348078f4:	0f 84 66 03 00 00    	je     34807c60 <mspace_free+0x680>
    348078fa:	48 39 d1             	cmp    %rdx,%rcx
    348078fd:	0f 84 15 00 00 00    	je     34807918 <mspace_free+0x338>
    34807903:	49 39 4c 24 18       	cmp    %rcx,0x18(%r12)
    34807908:	0f 87 ce 04 00 00    	ja     34807ddc <mspace_free+0x7fc>
    3480790e:	4c 39 41 10          	cmp    %r8,0x10(%rcx)
    34807912:	0f 85 c4 04 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807918:	48 89 48 18          	mov    %rcx,0x18(%rax)
    3480791c:	48 89 41 10          	mov    %rax,0x10(%rcx)
    34807920:	e9 69 04 00 00       	jmpq   34807d8e <mspace_free+0x7ae>
    34807925:	48 83 e7 fe          	and    $0xfffffffffffffffe,%rdi
    34807929:	49 89 78 08          	mov    %rdi,0x8(%r8)
    3480792d:	48 89 f0             	mov    %rsi,%rax
    34807930:	48 83 c8 01          	or     $0x1,%rax
    34807934:	49 89 42 08          	mov    %rax,0x8(%r10)
    34807938:	49 89 34 32          	mov    %rsi,(%r10,%rsi,1)
    3480793c:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    34807943:	0f 87 41 00 00 00    	ja     3480798a <mspace_free+0x3aa>
    34807949:	48 89 f1             	mov    %rsi,%rcx
    3480794c:	48 c1 e9 03          	shr    $0x3,%rcx
    34807950:	48 b8 f8 ff ff ff 03 	movabs $0x3fffffff8,%rax
    34807957:	00 00 00 
    3480795a:	48 21 f0             	and    %rsi,%rax
    3480795d:	49 8d 44 44 48       	lea    0x48(%r12,%rax,2),%rax
    34807962:	41 8b 14 24          	mov    (%r12),%edx
    34807966:	be 01 00 00 00       	mov    $0x1,%esi
    3480796b:	d3 e6                	shl    %cl,%esi
    3480796d:	0f a3 ca             	bt     %ecx,%edx
    34807970:	0f 83 2a 01 00 00    	jae    34807aa0 <mspace_free+0x4c0>
    34807976:	48 8b 48 10          	mov    0x10(%rax),%rcx
    3480797a:	49 39 4c 24 18       	cmp    %rcx,0x18(%r12)
    3480797f:	0f 86 24 01 00 00    	jbe    34807aa9 <mspace_free+0x4c9>
    34807985:	e9 52 04 00 00       	jmpq   34807ddc <mspace_free+0x7fc>
    3480798a:	48 89 f0             	mov    %rsi,%rax
    3480798d:	48 c1 e8 08          	shr    $0x8,%rax
    34807991:	85 c0                	test   %eax,%eax
    34807993:	0f 84 25 01 00 00    	je     34807abe <mspace_free+0x4de>
    34807999:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    3480799e:	3d ff ff 00 00       	cmp    $0xffff,%eax
    348079a3:	0f 87 17 01 00 00    	ja     34807ac0 <mspace_free+0x4e0>
    348079a9:	0f bd c0             	bsr    %eax,%eax
    348079ac:	8d 48 07             	lea    0x7(%rax),%ecx
    348079af:	48 89 f2             	mov    %rsi,%rdx
    348079b2:	48 d3 ea             	shr    %cl,%rdx
    348079b5:	83 e2 01             	and    $0x1,%edx
    348079b8:	8d 0c 42             	lea    (%rdx,%rax,2),%ecx
    348079bb:	e9 00 01 00 00       	jmpq   34807ac0 <mspace_free+0x4e0>
    348079c0:	49 03 74 24 10       	add    0x10(%r12),%rsi
    348079c5:	49 89 74 24 10       	mov    %rsi,0x10(%r12)
    348079ca:	4d 89 54 24 28       	mov    %r10,0x28(%r12)
    348079cf:	48 89 f0             	mov    %rsi,%rax
    348079d2:	48 83 c8 01          	or     $0x1,%rax
    348079d6:	49 89 42 08          	mov    %rax,0x8(%r10)
    348079da:	4d 3b 54 24 20       	cmp    0x20(%r12),%r10
    348079df:	0f 84 59 02 00 00    	je     34807c3e <mspace_free+0x65e>
    348079e5:	49 3b 74 24 30       	cmp    0x30(%r12),%rsi
    348079ea:	0f 86 c4 03 00 00    	jbe    34807db4 <mspace_free+0x7d4>
    348079f0:	48 83 3d 08 fd 20 00 	cmpq   $0x0,0x20fd08(%rip)        # 34a17700 <mparams>
    348079f7:	00 
    348079f8:	0f 85 61 00 00 00    	jne    34807a5f <mspace_free+0x47f>
    348079fe:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34807a03:	e8 38 4c 00 00       	callq  3480c640 <sysconf>
    34807a08:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34807a0c:	48 85 c1             	test   %rax,%rcx
    34807a0f:	0f 85 c7 03 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807a15:	48 89 05 ec fc 20 00 	mov    %rax,0x20fcec(%rip)        # 34a17708 <mparams+0x8>
    34807a1c:	0f 28 05 9d d2 00 00 	movaps 0xd29d(%rip),%xmm0        # 34814cc0 <half+0x10>
    34807a23:	0f 11 05 e6 fc 20 00 	movups %xmm0,0x20fce6(%rip)        # 34a17710 <mparams+0x10>
    34807a2a:	48 c7 05 eb fc 20 00 	movq   $0x200000,0x20fceb(%rip)        # 34a17720 <mparams+0x20>
    34807a31:	00 00 20 00 
    34807a35:	c7 05 e9 fc 20 00 04 	movl   $0x4,0x20fce9(%rip)        # 34a17728 <mparams+0x28>
    34807a3c:	00 00 00 
    34807a3f:	48 89 e0             	mov    %rsp,%rax
    34807a42:	48 83 c8 08          	or     $0x8,%rax
    34807a46:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    34807a4c:	48 89 05 ad fc 20 00 	mov    %rax,0x20fcad(%rip)        # 34a17700 <mparams>
    34807a53:	49 83 7c 24 28 00    	cmpq   $0x0,0x28(%r12)
    34807a59:	0f 84 55 03 00 00    	je     34807db4 <mspace_free+0x7d4>
    34807a5f:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    34807a64:	49 3b 44 24 30       	cmp    0x30(%r12),%rax
    34807a69:	0f 86 45 03 00 00    	jbe    34807db4 <mspace_free+0x7d4>
    34807a6f:	49 c7 44 24 30 ff ff 	movq   $0xffffffffffffffff,0x30(%r12)
    34807a76:	ff ff 
    34807a78:	e9 37 03 00 00       	jmpq   34807db4 <mspace_free+0x7d4>
    34807a7d:	49 03 74 24 08       	add    0x8(%r12),%rsi
    34807a82:	49 89 74 24 08       	mov    %rsi,0x8(%r12)
    34807a87:	4d 89 54 24 20       	mov    %r10,0x20(%r12)
    34807a8c:	48 89 f0             	mov    %rsi,%rax
    34807a8f:	48 83 c8 01          	or     $0x1,%rax
    34807a93:	49 89 42 08          	mov    %rax,0x8(%r10)
    34807a97:	49 89 34 32          	mov    %rsi,(%r10,%rsi,1)
    34807a9b:	e9 14 03 00 00       	jmpq   34807db4 <mspace_free+0x7d4>
    34807aa0:	09 f2                	or     %esi,%edx
    34807aa2:	41 89 14 24          	mov    %edx,(%r12)
    34807aa6:	48 89 c1             	mov    %rax,%rcx
    34807aa9:	4c 89 50 10          	mov    %r10,0x10(%rax)
    34807aad:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    34807ab1:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    34807ab5:	49 89 42 18          	mov    %rax,0x18(%r10)
    34807ab9:	e9 f6 02 00 00       	jmpq   34807db4 <mspace_free+0x7d4>
    34807abe:	31 c9                	xor    %ecx,%ecx
    34807ac0:	89 c8                	mov    %ecx,%eax
    34807ac2:	49 8d 84 c4 58 02 00 	lea    0x258(%r12,%rax,8),%rax
    34807ac9:	00 
    34807aca:	41 89 4a 38          	mov    %ecx,0x38(%r10)
    34807ace:	0f 57 c0             	xorps  %xmm0,%xmm0
    34807ad1:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    34807ad6:	41 8b 54 24 04       	mov    0x4(%r12),%edx
    34807adb:	bf 01 00 00 00       	mov    $0x1,%edi
    34807ae0:	d3 e7                	shl    %cl,%edi
    34807ae2:	0f a3 ca             	bt     %ecx,%edx
    34807ae5:	0f 83 13 00 00 00    	jae    34807afe <mspace_free+0x51e>
    34807aeb:	48 8b 38             	mov    (%rax),%rdi
    34807aee:	83 f9 1f             	cmp    $0x1f,%ecx
    34807af1:	0f 85 60 00 00 00    	jne    34807b57 <mspace_free+0x577>
    34807af7:	31 c0                	xor    %eax,%eax
    34807af9:	e9 66 00 00 00       	jmpq   34807b64 <mspace_free+0x584>
    34807afe:	09 fa                	or     %edi,%edx
    34807b00:	41 89 54 24 04       	mov    %edx,0x4(%r12)
    34807b05:	4c 89 10             	mov    %r10,(%rax)
    34807b08:	e9 a2 00 00 00       	jmpq   34807baf <mspace_free+0x5cf>
    34807b0d:	49 8b 58 18          	mov    0x18(%r8),%rbx
    34807b11:	4d 8b 48 30          	mov    0x30(%r8),%r9
    34807b15:	4c 39 c3             	cmp    %r8,%rbx
    34807b18:	0f 84 59 01 00 00    	je     34807c77 <mspace_free+0x697>
    34807b1e:	49 8b 40 10          	mov    0x10(%r8),%rax
    34807b22:	49 39 44 24 18       	cmp    %rax,0x18(%r12)
    34807b27:	0f 87 af 02 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807b2d:	4c 39 40 18          	cmp    %r8,0x18(%rax)
    34807b31:	0f 85 a5 02 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807b37:	4c 39 43 10          	cmp    %r8,0x10(%rbx)
    34807b3b:	0f 85 9b 02 00 00    	jne    34807ddc <mspace_free+0x7fc>
    34807b41:	48 89 58 18          	mov    %rbx,0x18(%rax)
    34807b45:	48 89 43 10          	mov    %rax,0x10(%rbx)
    34807b49:	4d 85 c9             	test   %r9,%r9
    34807b4c:	0f 85 91 01 00 00    	jne    34807ce3 <mspace_free+0x703>
    34807b52:	e9 37 02 00 00       	jmpq   34807d8e <mspace_free+0x7ae>
    34807b57:	d1 e9                	shr    %ecx
    34807b59:	83 c1 06             	add    $0x6,%ecx
    34807b5c:	b8 3f 00 00 00       	mov    $0x3f,%eax
    34807b61:	48 29 c8             	sub    %rcx,%rax
    34807b64:	48 89 f3             	mov    %rsi,%rbx
    34807b67:	89 c1                	mov    %eax,%ecx
    34807b69:	48 d3 e3             	shl    %cl,%rbx
    34807b6c:	0f 1f 40 00          	nopl   0x0(%rax)
    34807b70:	48 89 f8             	mov    %rdi,%rax
    34807b73:	48 8b 48 08          	mov    0x8(%rax),%rcx
    34807b77:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    34807b7b:	48 39 f1             	cmp    %rsi,%rcx
    34807b7e:	0f 84 47 00 00 00    	je     34807bcb <mspace_free+0x5eb>
    34807b84:	48 89 d9             	mov    %rbx,%rcx
    34807b87:	48 c1 e9 3f          	shr    $0x3f,%rcx
    34807b8b:	48 01 db             	add    %rbx,%rbx
    34807b8e:	48 8b 7c c8 20       	mov    0x20(%rax,%rcx,8),%rdi
    34807b93:	48 85 ff             	test   %rdi,%rdi
    34807b96:	0f 85 d4 ff ff ff    	jne    34807b70 <mspace_free+0x590>
    34807b9c:	48 8d 4c c8 20       	lea    0x20(%rax,%rcx,8),%rcx
    34807ba1:	49 39 4c 24 18       	cmp    %rcx,0x18(%r12)
    34807ba6:	0f 87 30 02 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807bac:	4c 89 11             	mov    %r10,(%rcx)
    34807baf:	49 89 42 30          	mov    %rax,0x30(%r10)
    34807bb3:	4d 89 52 18          	mov    %r10,0x18(%r10)
    34807bb7:	4d 89 52 10          	mov    %r10,0x10(%r10)
    34807bbb:	49 ff 4c 24 38       	decq   0x38(%r12)
    34807bc0:	0f 85 ee 01 00 00    	jne    34807db4 <mspace_free+0x7d4>
    34807bc6:	e9 3e 00 00 00       	jmpq   34807c09 <mspace_free+0x629>
    34807bcb:	48 8b 48 10          	mov    0x10(%rax),%rcx
    34807bcf:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
    34807bd4:	48 39 ca             	cmp    %rcx,%rdx
    34807bd7:	0f 87 ff 01 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807bdd:	48 39 c2             	cmp    %rax,%rdx
    34807be0:	0f 87 f6 01 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807be6:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    34807bea:	4c 89 50 10          	mov    %r10,0x10(%rax)
    34807bee:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    34807bf2:	49 89 42 18          	mov    %rax,0x18(%r10)
    34807bf6:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    34807bfd:	00 
    34807bfe:	49 ff 4c 24 38       	decq   0x38(%r12)
    34807c03:	0f 85 ab 01 00 00    	jne    34807db4 <mspace_free+0x7d4>
    34807c09:	49 8d 84 24 88 03 00 	lea    0x388(%r12),%rax
    34807c10:	00 
    34807c11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34807c18:	0f 1f 84 00 00 00 00 
    34807c1f:	00 
    34807c20:	48 8b 00             	mov    (%rax),%rax
    34807c23:	48 85 c0             	test   %rax,%rax
    34807c26:	48 8d 40 10          	lea    0x10(%rax),%rax
    34807c2a:	0f 85 f0 ff ff ff    	jne    34807c20 <mspace_free+0x640>
    34807c30:	49 c7 44 24 38 ff ff 	movq   $0xffffffffffffffff,0x38(%r12)
    34807c37:	ff ff 
    34807c39:	e9 76 01 00 00       	jmpq   34807db4 <mspace_free+0x7d4>
    34807c3e:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    34807c45:	00 00 
    34807c47:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    34807c4e:	00 00 
    34807c50:	49 3b 74 24 30       	cmp    0x30(%r12),%rsi
    34807c55:	0f 87 95 fd ff ff    	ja     348079f0 <mspace_free+0x410>
    34807c5b:	e9 54 01 00 00       	jmpq   34807db4 <mspace_free+0x7d4>
    34807c60:	48 89 f9             	mov    %rdi,%rcx
    34807c63:	48 c1 e9 03          	shr    $0x3,%rcx
    34807c67:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    34807c6c:	d3 c0                	rol    %cl,%eax
    34807c6e:	41 21 04 24          	and    %eax,(%r12)
    34807c72:	e9 17 01 00 00       	jmpq   34807d8e <mspace_free+0x7ae>
    34807c77:	49 8b 40 28          	mov    0x28(%r8),%rax
    34807c7b:	48 85 c0             	test   %rax,%rax
    34807c7e:	0f 84 09 00 00 00    	je     34807c8d <mspace_free+0x6ad>
    34807c84:	49 8d 48 28          	lea    0x28(%r8),%rcx
    34807c88:	e9 13 00 00 00       	jmpq   34807ca0 <mspace_free+0x6c0>
    34807c8d:	49 8d 48 20          	lea    0x20(%r8),%rcx
    34807c91:	48 8b 01             	mov    (%rcx),%rax
    34807c94:	48 85 c0             	test   %rax,%rax
    34807c97:	0f 84 2f 01 00 00    	je     34807dcc <mspace_free+0x7ec>
    34807c9d:	0f 1f 00             	nopl   (%rax)
    34807ca0:	48 89 c3             	mov    %rax,%rbx
    34807ca3:	48 89 ca             	mov    %rcx,%rdx
    34807ca6:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    34807caa:	48 8b 43 28          	mov    0x28(%rbx),%rax
    34807cae:	48 85 c0             	test   %rax,%rax
    34807cb1:	0f 85 e9 ff ff ff    	jne    34807ca0 <mspace_free+0x6c0>
    34807cb7:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    34807cbb:	48 8b 43 20          	mov    0x20(%rbx),%rax
    34807cbf:	48 85 c0             	test   %rax,%rax
    34807cc2:	0f 85 d8 ff ff ff    	jne    34807ca0 <mspace_free+0x6c0>
    34807cc8:	49 39 54 24 18       	cmp    %rdx,0x18(%r12)
    34807ccd:	0f 87 09 01 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807cd3:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    34807cda:	4d 85 c9             	test   %r9,%r9
    34807cdd:	0f 84 ab 00 00 00    	je     34807d8e <mspace_free+0x7ae>
    34807ce3:	41 8b 48 38          	mov    0x38(%r8),%ecx
    34807ce7:	4d 39 84 cc 58 02 00 	cmp    %r8,0x258(%r12,%rcx,8)
    34807cee:	00 
    34807cef:	0f 84 27 00 00 00    	je     34807d1c <mspace_free+0x73c>
    34807cf5:	4d 39 4c 24 18       	cmp    %r9,0x18(%r12)
    34807cfa:	0f 87 dc 00 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807d00:	31 c0                	xor    %eax,%eax
    34807d02:	4d 39 41 20          	cmp    %r8,0x20(%r9)
    34807d06:	0f 95 c0             	setne  %al
    34807d09:	49 89 5c c1 20       	mov    %rbx,0x20(%r9,%rax,8)
    34807d0e:	48 85 db             	test   %rbx,%rbx
    34807d11:	0f 85 16 00 00 00    	jne    34807d2d <mspace_free+0x74d>
    34807d17:	e9 72 00 00 00       	jmpq   34807d8e <mspace_free+0x7ae>
    34807d1c:	49 89 9c cc 58 02 00 	mov    %rbx,0x258(%r12,%rcx,8)
    34807d23:	00 
    34807d24:	48 85 db             	test   %rbx,%rbx
    34807d27:	0f 84 55 00 00 00    	je     34807d82 <mspace_free+0x7a2>
    34807d2d:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    34807d32:	48 39 d8             	cmp    %rbx,%rax
    34807d35:	0f 87 a1 00 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807d3b:	4c 89 4b 30          	mov    %r9,0x30(%rbx)
    34807d3f:	49 8b 48 20          	mov    0x20(%r8),%rcx
    34807d43:	48 85 c9             	test   %rcx,%rcx
    34807d46:	0f 84 11 00 00 00    	je     34807d5d <mspace_free+0x77d>
    34807d4c:	48 39 c8             	cmp    %rcx,%rax
    34807d4f:	0f 87 87 00 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807d55:	48 89 4b 20          	mov    %rcx,0x20(%rbx)
    34807d59:	48 89 59 30          	mov    %rbx,0x30(%rcx)
    34807d5d:	49 8b 40 28          	mov    0x28(%r8),%rax
    34807d61:	48 85 c0             	test   %rax,%rax
    34807d64:	0f 84 24 00 00 00    	je     34807d8e <mspace_free+0x7ae>
    34807d6a:	49 39 44 24 18       	cmp    %rax,0x18(%r12)
    34807d6f:	0f 87 67 00 00 00    	ja     34807ddc <mspace_free+0x7fc>
    34807d75:	48 89 43 28          	mov    %rax,0x28(%rbx)
    34807d79:	48 89 58 30          	mov    %rbx,0x30(%rax)
    34807d7d:	e9 0c 00 00 00       	jmpq   34807d8e <mspace_free+0x7ae>
    34807d82:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    34807d87:	d3 c0                	rol    %cl,%eax
    34807d89:	41 21 44 24 04       	and    %eax,0x4(%r12)
    34807d8e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    34807d92:	48 01 fe             	add    %rdi,%rsi
    34807d95:	48 89 f0             	mov    %rsi,%rax
    34807d98:	48 83 c8 01          	or     $0x1,%rax
    34807d9c:	49 89 42 08          	mov    %rax,0x8(%r10)
    34807da0:	49 89 34 32          	mov    %rsi,(%r10,%rsi,1)
    34807da4:	4d 3b 54 24 20       	cmp    0x20(%r12),%r10
    34807da9:	0f 85 8d fb ff ff    	jne    3480793c <mspace_free+0x35c>
    34807daf:	49 89 74 24 08       	mov    %rsi,0x8(%r12)
    34807db4:	48 83 c4 08          	add    $0x8,%rsp
    34807db8:	5b                   	pop    %rbx
    34807db9:	41 5c                	pop    %r12
    34807dbb:	c3                   	retq   
    34807dbc:	31 db                	xor    %ebx,%ebx
    34807dbe:	4d 85 c9             	test   %r9,%r9
    34807dc1:	0f 85 fa f9 ff ff    	jne    348077c1 <mspace_free+0x1e1>
    34807dc7:	e9 a9 fa ff ff       	jmpq   34807875 <mspace_free+0x295>
    34807dcc:	31 db                	xor    %ebx,%ebx
    34807dce:	4d 85 c9             	test   %r9,%r9
    34807dd1:	0f 85 0c ff ff ff    	jne    34807ce3 <mspace_free+0x703>
    34807dd7:	e9 b2 ff ff ff       	jmpq   34807d8e <mspace_free+0x7ae>
    34807ddc:	bf 01 00 00 00       	mov    $0x1,%edi
    34807de1:	e8 9a 4e 00 00       	callq  3480cc80 <exit>
    34807de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34807ded:	00 00 00 

0000000034807df0 <create_mspace_with_base>:
    34807df0:	41 54                	push   %r12
    34807df2:	53                   	push   %rbx
    34807df3:	48 83 ec 28          	sub    $0x28,%rsp
    34807df7:	49 89 f4             	mov    %rsi,%r12
    34807dfa:	48 89 fb             	mov    %rdi,%rbx
    34807dfd:	48 8b 0d fc f8 20 00 	mov    0x20f8fc(%rip),%rcx        # 34a17700 <mparams>
    34807e04:	48 85 c9             	test   %rcx,%rcx
    34807e07:	0f 84 12 00 00 00    	je     34807e1f <create_mspace_with_base+0x2f>
    34807e0d:	49 81 fc 01 04 00 00 	cmp    $0x401,%r12
    34807e14:	0f 82 8c 04 00 00    	jb     348082a6 <create_mspace_with_base+0x4b6>
    34807e1a:	e9 65 00 00 00       	jmpq   34807e84 <create_mspace_with_base+0x94>
    34807e1f:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34807e24:	e8 17 48 00 00       	callq  3480c640 <sysconf>
    34807e29:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34807e2d:	48 85 c1             	test   %rax,%rcx
    34807e30:	0f 85 7a 04 00 00    	jne    348082b0 <create_mspace_with_base+0x4c0>
    34807e36:	48 89 05 cb f8 20 00 	mov    %rax,0x20f8cb(%rip)        # 34a17708 <mparams+0x8>
    34807e3d:	0f 28 05 7c ce 00 00 	movaps 0xce7c(%rip),%xmm0        # 34814cc0 <half+0x10>
    34807e44:	0f 11 05 c5 f8 20 00 	movups %xmm0,0x20f8c5(%rip)        # 34a17710 <mparams+0x10>
    34807e4b:	48 c7 05 ca f8 20 00 	movq   $0x200000,0x20f8ca(%rip)        # 34a17720 <mparams+0x20>
    34807e52:	00 00 20 00 
    34807e56:	c7 05 c8 f8 20 00 04 	movl   $0x4,0x20f8c8(%rip)        # 34a17728 <mparams+0x28>
    34807e5d:	00 00 00 
    34807e60:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    34807e65:	48 83 c9 08          	or     $0x8,%rcx
    34807e69:	48 81 f1 50 55 55 55 	xor    $0x55555550,%rcx
    34807e70:	48 89 0d 89 f8 20 00 	mov    %rcx,0x20f889(%rip)        # 34a17700 <mparams>
    34807e77:	49 81 fc 01 04 00 00 	cmp    $0x401,%r12
    34807e7e:	0f 82 22 04 00 00    	jb     348082a6 <create_mspace_with_base+0x4b6>
    34807e84:	48 c7 c0 00 fc ff ff 	mov    $0xfffffffffffffc00,%rax
    34807e8b:	48 2b 05 76 f8 20 00 	sub    0x20f876(%rip),%rax        # 34a17708 <mparams+0x8>
    34807e92:	4c 39 e0             	cmp    %r12,%rax
    34807e95:	0f 86 0b 04 00 00    	jbe    348082a6 <create_mspace_with_base+0x4b6>
    34807e9b:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    34807ea0:	4c 8d 63 10          	lea    0x10(%rbx),%r12
    34807ea4:	44 89 e0             	mov    %r12d,%eax
    34807ea7:	83 e0 0f             	and    $0xf,%eax
    34807eaa:	41 f7 dc             	neg    %r12d
    34807ead:	41 83 e4 0f          	and    $0xf,%r12d
    34807eb1:	48 85 c0             	test   %rax,%rax
    34807eb4:	4c 0f 44 e0          	cmove  %rax,%r12
    34807eb8:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    34807ebc:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    34807ec1:	4a 8d 7c 23 10       	lea    0x10(%rbx,%r12,1),%rdi
    34807ec6:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    34807ecb:	31 f6                	xor    %esi,%esi
    34807ecd:	ba b0 03 00 00       	mov    $0x3b0,%edx
    34807ed2:	48 89 0c 24          	mov    %rcx,(%rsp)
    34807ed6:	e8 b2 38 00 00       	callq  3480b78d <memset>
    34807edb:	4a c7 44 23 08 b3 03 	movq   $0x3b3,0x8(%rbx,%r12,1)
    34807ee2:	00 00 
    34807ee4:	4a 89 5c 23 28       	mov    %rbx,0x28(%rbx,%r12,1)
    34807ee9:	4a 89 9c 23 88 03 00 	mov    %rbx,0x388(%rbx,%r12,1)
    34807ef0:	00 
    34807ef1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    34807ef6:	4a 89 84 23 70 03 00 	mov    %rax,0x370(%rbx,%r12,1)
    34807efd:	00 
    34807efe:	4a 89 84 23 68 03 00 	mov    %rax,0x368(%rbx,%r12,1)
    34807f05:	00 
    34807f06:	4a 89 84 23 90 03 00 	mov    %rax,0x390(%rbx,%r12,1)
    34807f0d:	00 
    34807f0e:	48 89 c7             	mov    %rax,%rdi
    34807f11:	48 8b 04 24          	mov    (%rsp),%rax
    34807f15:	4a 89 44 23 50       	mov    %rax,0x50(%rbx,%r12,1)
    34807f1a:	4a c7 44 23 48 ff ff 	movq   $0xffffffffffffffff,0x48(%rbx,%r12,1)
    34807f21:	ff ff 
    34807f23:	8b 05 ff f7 20 00    	mov    0x20f7ff(%rip),%eax        # 34a17728 <mparams+0x28>
    34807f29:	83 c8 04             	or     $0x4,%eax
    34807f2c:	0f 57 c0             	xorps  %xmm0,%xmm0
    34807f2f:	42 0f 11 84 23 a8 03 	movups %xmm0,0x3a8(%rbx,%r12,1)
    34807f36:	00 00 
    34807f38:	42 89 84 23 80 03 00 	mov    %eax,0x380(%rbx,%r12,1)
    34807f3f:	00 
    34807f40:	4a 8d 44 23 58       	lea    0x58(%rbx,%r12,1),%rax
    34807f45:	4a 89 44 23 70       	mov    %rax,0x70(%rbx,%r12,1)
    34807f4a:	4a 8d 4c 23 68       	lea    0x68(%rbx,%r12,1),%rcx
    34807f4f:	4a 89 44 23 68       	mov    %rax,0x68(%rbx,%r12,1)
    34807f54:	4a 89 8c 23 80 00 00 	mov    %rcx,0x80(%rbx,%r12,1)
    34807f5b:	00 
    34807f5c:	4a 8d 44 23 78       	lea    0x78(%rbx,%r12,1),%rax
    34807f61:	4a 89 4c 23 78       	mov    %rcx,0x78(%rbx,%r12,1)
    34807f66:	4a 89 84 23 90 00 00 	mov    %rax,0x90(%rbx,%r12,1)
    34807f6d:	00 
    34807f6e:	4a 8d 8c 23 88 00 00 	lea    0x88(%rbx,%r12,1),%rcx
    34807f75:	00 
    34807f76:	4a 89 84 23 88 00 00 	mov    %rax,0x88(%rbx,%r12,1)
    34807f7d:	00 
    34807f7e:	4a 89 8c 23 a0 00 00 	mov    %rcx,0xa0(%rbx,%r12,1)
    34807f85:	00 
    34807f86:	4a 8d 84 23 98 00 00 	lea    0x98(%rbx,%r12,1),%rax
    34807f8d:	00 
    34807f8e:	4a 89 8c 23 98 00 00 	mov    %rcx,0x98(%rbx,%r12,1)
    34807f95:	00 
    34807f96:	4a 89 84 23 b0 00 00 	mov    %rax,0xb0(%rbx,%r12,1)
    34807f9d:	00 
    34807f9e:	4a 8d 8c 23 a8 00 00 	lea    0xa8(%rbx,%r12,1),%rcx
    34807fa5:	00 
    34807fa6:	4a 89 84 23 a8 00 00 	mov    %rax,0xa8(%rbx,%r12,1)
    34807fad:	00 
    34807fae:	4a 89 8c 23 c0 00 00 	mov    %rcx,0xc0(%rbx,%r12,1)
    34807fb5:	00 
    34807fb6:	4a 8d 84 23 b8 00 00 	lea    0xb8(%rbx,%r12,1),%rax
    34807fbd:	00 
    34807fbe:	4a 89 8c 23 b8 00 00 	mov    %rcx,0xb8(%rbx,%r12,1)
    34807fc5:	00 
    34807fc6:	4a 89 84 23 d0 00 00 	mov    %rax,0xd0(%rbx,%r12,1)
    34807fcd:	00 
    34807fce:	4a 8d 8c 23 c8 00 00 	lea    0xc8(%rbx,%r12,1),%rcx
    34807fd5:	00 
    34807fd6:	4a 89 84 23 c8 00 00 	mov    %rax,0xc8(%rbx,%r12,1)
    34807fdd:	00 
    34807fde:	4a 89 8c 23 e0 00 00 	mov    %rcx,0xe0(%rbx,%r12,1)
    34807fe5:	00 
    34807fe6:	4a 8d 84 23 d8 00 00 	lea    0xd8(%rbx,%r12,1),%rax
    34807fed:	00 
    34807fee:	4a 89 8c 23 d8 00 00 	mov    %rcx,0xd8(%rbx,%r12,1)
    34807ff5:	00 
    34807ff6:	4a 89 84 23 f0 00 00 	mov    %rax,0xf0(%rbx,%r12,1)
    34807ffd:	00 
    34807ffe:	4a 8d 8c 23 e8 00 00 	lea    0xe8(%rbx,%r12,1),%rcx
    34808005:	00 
    34808006:	4a 89 84 23 e8 00 00 	mov    %rax,0xe8(%rbx,%r12,1)
    3480800d:	00 
    3480800e:	4a 89 8c 23 00 01 00 	mov    %rcx,0x100(%rbx,%r12,1)
    34808015:	00 
    34808016:	4a 8d 84 23 f8 00 00 	lea    0xf8(%rbx,%r12,1),%rax
    3480801d:	00 
    3480801e:	4a 89 8c 23 f8 00 00 	mov    %rcx,0xf8(%rbx,%r12,1)
    34808025:	00 
    34808026:	4a 89 84 23 10 01 00 	mov    %rax,0x110(%rbx,%r12,1)
    3480802d:	00 
    3480802e:	4a 8d 8c 23 08 01 00 	lea    0x108(%rbx,%r12,1),%rcx
    34808035:	00 
    34808036:	4a 89 84 23 08 01 00 	mov    %rax,0x108(%rbx,%r12,1)
    3480803d:	00 
    3480803e:	4a 89 8c 23 20 01 00 	mov    %rcx,0x120(%rbx,%r12,1)
    34808045:	00 
    34808046:	4a 8d 84 23 18 01 00 	lea    0x118(%rbx,%r12,1),%rax
    3480804d:	00 
    3480804e:	4a 89 8c 23 18 01 00 	mov    %rcx,0x118(%rbx,%r12,1)
    34808055:	00 
    34808056:	4a 89 84 23 30 01 00 	mov    %rax,0x130(%rbx,%r12,1)
    3480805d:	00 
    3480805e:	4a 8d 8c 23 28 01 00 	lea    0x128(%rbx,%r12,1),%rcx
    34808065:	00 
    34808066:	4a 89 84 23 28 01 00 	mov    %rax,0x128(%rbx,%r12,1)
    3480806d:	00 
    3480806e:	4a 89 8c 23 40 01 00 	mov    %rcx,0x140(%rbx,%r12,1)
    34808075:	00 
    34808076:	4a 8d 84 23 38 01 00 	lea    0x138(%rbx,%r12,1),%rax
    3480807d:	00 
    3480807e:	4a 89 8c 23 38 01 00 	mov    %rcx,0x138(%rbx,%r12,1)
    34808085:	00 
    34808086:	4a 89 84 23 50 01 00 	mov    %rax,0x150(%rbx,%r12,1)
    3480808d:	00 
    3480808e:	4a 8d 8c 23 48 01 00 	lea    0x148(%rbx,%r12,1),%rcx
    34808095:	00 
    34808096:	4a 89 84 23 48 01 00 	mov    %rax,0x148(%rbx,%r12,1)
    3480809d:	00 
    3480809e:	4a 89 8c 23 60 01 00 	mov    %rcx,0x160(%rbx,%r12,1)
    348080a5:	00 
    348080a6:	4a 8d 84 23 58 01 00 	lea    0x158(%rbx,%r12,1),%rax
    348080ad:	00 
    348080ae:	4a 89 8c 23 58 01 00 	mov    %rcx,0x158(%rbx,%r12,1)
    348080b5:	00 
    348080b6:	4a 89 84 23 70 01 00 	mov    %rax,0x170(%rbx,%r12,1)
    348080bd:	00 
    348080be:	4a 8d 8c 23 68 01 00 	lea    0x168(%rbx,%r12,1),%rcx
    348080c5:	00 
    348080c6:	4a 89 84 23 68 01 00 	mov    %rax,0x168(%rbx,%r12,1)
    348080cd:	00 
    348080ce:	4a 89 8c 23 80 01 00 	mov    %rcx,0x180(%rbx,%r12,1)
    348080d5:	00 
    348080d6:	4a 8d 84 23 78 01 00 	lea    0x178(%rbx,%r12,1),%rax
    348080dd:	00 
    348080de:	4a 89 8c 23 78 01 00 	mov    %rcx,0x178(%rbx,%r12,1)
    348080e5:	00 
    348080e6:	4a 89 84 23 90 01 00 	mov    %rax,0x190(%rbx,%r12,1)
    348080ed:	00 
    348080ee:	4a 8d 8c 23 88 01 00 	lea    0x188(%rbx,%r12,1),%rcx
    348080f5:	00 
    348080f6:	4a 89 84 23 88 01 00 	mov    %rax,0x188(%rbx,%r12,1)
    348080fd:	00 
    348080fe:	4a 89 8c 23 a0 01 00 	mov    %rcx,0x1a0(%rbx,%r12,1)
    34808105:	00 
    34808106:	4a 8d 84 23 98 01 00 	lea    0x198(%rbx,%r12,1),%rax
    3480810d:	00 
    3480810e:	4a 89 8c 23 98 01 00 	mov    %rcx,0x198(%rbx,%r12,1)
    34808115:	00 
    34808116:	4a 89 84 23 b0 01 00 	mov    %rax,0x1b0(%rbx,%r12,1)
    3480811d:	00 
    3480811e:	4a 8d 8c 23 a8 01 00 	lea    0x1a8(%rbx,%r12,1),%rcx
    34808125:	00 
    34808126:	4a 89 84 23 a8 01 00 	mov    %rax,0x1a8(%rbx,%r12,1)
    3480812d:	00 
    3480812e:	4a 89 8c 23 c0 01 00 	mov    %rcx,0x1c0(%rbx,%r12,1)
    34808135:	00 
    34808136:	4a 8d 84 23 b8 01 00 	lea    0x1b8(%rbx,%r12,1),%rax
    3480813d:	00 
    3480813e:	4a 89 8c 23 b8 01 00 	mov    %rcx,0x1b8(%rbx,%r12,1)
    34808145:	00 
    34808146:	4a 89 84 23 d0 01 00 	mov    %rax,0x1d0(%rbx,%r12,1)
    3480814d:	00 
    3480814e:	4a 8d 8c 23 c8 01 00 	lea    0x1c8(%rbx,%r12,1),%rcx
    34808155:	00 
    34808156:	4a 89 84 23 c8 01 00 	mov    %rax,0x1c8(%rbx,%r12,1)
    3480815d:	00 
    3480815e:	4a 89 8c 23 e0 01 00 	mov    %rcx,0x1e0(%rbx,%r12,1)
    34808165:	00 
    34808166:	4a 8d 84 23 d8 01 00 	lea    0x1d8(%rbx,%r12,1),%rax
    3480816d:	00 
    3480816e:	4a 89 8c 23 d8 01 00 	mov    %rcx,0x1d8(%rbx,%r12,1)
    34808175:	00 
    34808176:	4a 89 84 23 f0 01 00 	mov    %rax,0x1f0(%rbx,%r12,1)
    3480817d:	00 
    3480817e:	4a 8d 8c 23 e8 01 00 	lea    0x1e8(%rbx,%r12,1),%rcx
    34808185:	00 
    34808186:	4a 89 84 23 e8 01 00 	mov    %rax,0x1e8(%rbx,%r12,1)
    3480818d:	00 
    3480818e:	4a 89 8c 23 00 02 00 	mov    %rcx,0x200(%rbx,%r12,1)
    34808195:	00 
    34808196:	4a 8d 84 23 f8 01 00 	lea    0x1f8(%rbx,%r12,1),%rax
    3480819d:	00 
    3480819e:	4a 89 8c 23 f8 01 00 	mov    %rcx,0x1f8(%rbx,%r12,1)
    348081a5:	00 
    348081a6:	4a 89 84 23 10 02 00 	mov    %rax,0x210(%rbx,%r12,1)
    348081ad:	00 
    348081ae:	4a 8d 8c 23 08 02 00 	lea    0x208(%rbx,%r12,1),%rcx
    348081b5:	00 
    348081b6:	4a 89 84 23 08 02 00 	mov    %rax,0x208(%rbx,%r12,1)
    348081bd:	00 
    348081be:	4a 89 8c 23 20 02 00 	mov    %rcx,0x220(%rbx,%r12,1)
    348081c5:	00 
    348081c6:	4a 8d 84 23 18 02 00 	lea    0x218(%rbx,%r12,1),%rax
    348081cd:	00 
    348081ce:	4a 89 8c 23 18 02 00 	mov    %rcx,0x218(%rbx,%r12,1)
    348081d5:	00 
    348081d6:	4a 89 84 23 30 02 00 	mov    %rax,0x230(%rbx,%r12,1)
    348081dd:	00 
    348081de:	4a 8d 8c 23 28 02 00 	lea    0x228(%rbx,%r12,1),%rcx
    348081e5:	00 
    348081e6:	4a 89 84 23 28 02 00 	mov    %rax,0x228(%rbx,%r12,1)
    348081ed:	00 
    348081ee:	4a 89 8c 23 40 02 00 	mov    %rcx,0x240(%rbx,%r12,1)
    348081f5:	00 
    348081f6:	4a 8d 84 23 38 02 00 	lea    0x238(%rbx,%r12,1),%rax
    348081fd:	00 
    348081fe:	4a 89 8c 23 38 02 00 	mov    %rcx,0x238(%rbx,%r12,1)
    34808205:	00 
    34808206:	4a 89 84 23 50 02 00 	mov    %rax,0x250(%rbx,%r12,1)
    3480820d:	00 
    3480820e:	4a 8d 8c 23 48 02 00 	lea    0x248(%rbx,%r12,1),%rcx
    34808215:	00 
    34808216:	4a 89 84 23 48 02 00 	mov    %rax,0x248(%rbx,%r12,1)
    3480821d:	00 
    3480821e:	4a 89 8c 23 60 02 00 	mov    %rcx,0x260(%rbx,%r12,1)
    34808225:	00 
    34808226:	4a 89 8c 23 58 02 00 	mov    %rcx,0x258(%rbx,%r12,1)
    3480822d:	00 
    3480822e:	4a 8b 44 23 08       	mov    0x8(%rbx,%r12,1),%rax
    34808233:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    34808237:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3480823c:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    34808240:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
    34808244:	48 29 ca             	sub    %rcx,%rdx
    34808247:	48 83 c2 b0          	add    $0xffffffffffffffb0,%rdx
    3480824b:	48 8d 44 30 10       	lea    0x10(%rax,%rsi,1),%rax
    34808250:	89 c6                	mov    %eax,%esi
    34808252:	83 e6 0f             	and    $0xf,%esi
    34808255:	f7 d8                	neg    %eax
    34808257:	83 e0 0f             	and    $0xf,%eax
    3480825a:	48 85 f6             	test   %rsi,%rsi
    3480825d:	48 0f 44 c6          	cmove  %rsi,%rax
    34808261:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
    34808265:	48 29 c2             	sub    %rax,%rdx
    34808268:	4a 89 74 23 38       	mov    %rsi,0x38(%rbx,%r12,1)
    3480826d:	4a 89 54 23 20       	mov    %rdx,0x20(%rbx,%r12,1)
    34808272:	48 83 ca 01          	or     $0x1,%rdx
    34808276:	48 89 54 08 08       	mov    %rdx,0x8(%rax,%rcx,1)
    3480827b:	48 c7 44 3b b8 50 00 	movq   $0x50,-0x48(%rbx,%rdi,1)
    34808282:	00 00 
    34808284:	48 8b 05 95 f4 20 00 	mov    0x20f495(%rip),%rax        # 34a17720 <mparams+0x20>
    3480828b:	4a 89 44 23 40       	mov    %rax,0x40(%rbx,%r12,1)
    34808290:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    34808295:	42 c7 84 23 a0 03 00 	movl   $0x8,0x3a0(%rbx,%r12,1)
    3480829c:	00 08 00 00 00 
    348082a1:	e9 02 00 00 00       	jmpq   348082a8 <create_mspace_with_base+0x4b8>
    348082a6:	31 c0                	xor    %eax,%eax
    348082a8:	48 83 c4 28          	add    $0x28,%rsp
    348082ac:	5b                   	pop    %rbx
    348082ad:	41 5c                	pop    %r12
    348082af:	c3                   	retq   
    348082b0:	bf 01 00 00 00       	mov    $0x1,%edi
    348082b5:	e8 c6 49 00 00       	callq  3480cc80 <exit>
    348082ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000348082c0 <mspace_track_large_chunks>:
    348082c0:	b8 01 00 00 00       	mov    $0x1,%eax
    348082c5:	c3                   	retq   
    348082c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348082cd:	00 00 00 

00000000348082d0 <destroy_mspace>:
    348082d0:	48 81 c7 78 03 00 00 	add    $0x378,%rdi
    348082d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348082de:	00 00 
    348082e0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    348082e4:	48 85 ff             	test   %rdi,%rdi
    348082e7:	0f 85 f3 ff ff ff    	jne    348082e0 <destroy_mspace+0x10>
    348082ed:	31 c0                	xor    %eax,%eax
    348082ef:	c3                   	retq   

00000000348082f0 <mspace_malloc>:
    348082f0:	41 54                	push   %r12
    348082f2:	53                   	push   %rbx
    348082f3:	48 83 ec 28          	sub    $0x28,%rsp
    348082f7:	48 89 fb             	mov    %rdi,%rbx
    348082fa:	48 81 fe e8 00 00 00 	cmp    $0xe8,%rsi
    34808301:	0f 87 70 00 00 00    	ja     34808377 <mspace_malloc+0x87>
    34808307:	48 8d 46 17          	lea    0x17(%rsi),%rax
    3480830b:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    3480830f:	48 83 fe 17          	cmp    $0x17,%rsi
    34808313:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    34808319:	4c 0f 43 e0          	cmovae %rax,%r12
    3480831d:	4c 89 e1             	mov    %r12,%rcx
    34808320:	48 c1 e9 03          	shr    $0x3,%rcx
    34808324:	44 8b 1b             	mov    (%rbx),%r11d
    34808327:	44 89 d8             	mov    %r11d,%eax
    3480832a:	d3 e8                	shr    %cl,%eax
    3480832c:	a8 03                	test   $0x3,%al
    3480832e:	0f 84 a7 00 00 00    	je     348083db <mspace_malloc+0xeb>
    34808334:	83 e0 01             	and    $0x1,%eax
    34808337:	09 c8                	or     %ecx,%eax
    34808339:	83 f0 01             	xor    $0x1,%eax
    3480833c:	8d 34 00             	lea    (%rax,%rax,1),%esi
    3480833f:	48 8d 4c f3 48       	lea    0x48(%rbx,%rsi,8),%rcx
    34808344:	48 8b 74 f3 58       	mov    0x58(%rbx,%rsi,8),%rsi
    34808349:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    3480834d:	48 39 cf             	cmp    %rcx,%rdi
    34808350:	0f 84 ef 00 00 00    	je     34808445 <mspace_malloc+0x155>
    34808356:	48 39 7b 18          	cmp    %rdi,0x18(%rbx)
    3480835a:	0f 87 56 0b 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808360:	48 39 77 18          	cmp    %rsi,0x18(%rdi)
    34808364:	0f 85 4c 0b 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    3480836a:	48 89 4f 18          	mov    %rcx,0x18(%rdi)
    3480836e:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    34808372:	e9 dd 00 00 00       	jmpq   34808454 <mspace_malloc+0x164>
    34808377:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    3480837e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    34808385:	0f 87 86 06 00 00    	ja     34808a11 <mspace_malloc+0x721>
    3480838b:	48 83 c6 17          	add    $0x17,%rsi
    3480838f:	49 89 f4             	mov    %rsi,%r12
    34808392:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    34808396:	8b 43 04             	mov    0x4(%rbx),%eax
    34808399:	85 c0                	test   %eax,%eax
    3480839b:	0f 84 70 06 00 00    	je     34808a11 <mspace_malloc+0x721>
    348083a1:	89 44 24 10          	mov    %eax,0x10(%rsp)
    348083a5:	48 c1 ee 08          	shr    $0x8,%rsi
    348083a9:	85 f6                	test   %esi,%esi
    348083ab:	0f 84 bc 00 00 00    	je     3480846d <mspace_malloc+0x17d>
    348083b1:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    348083b7:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    348083bd:	0f 87 ad 00 00 00    	ja     34808470 <mspace_malloc+0x180>
    348083c3:	0f bd c6             	bsr    %esi,%eax
    348083c6:	8d 48 07             	lea    0x7(%rax),%ecx
    348083c9:	4c 89 e2             	mov    %r12,%rdx
    348083cc:	48 d3 ea             	shr    %cl,%rdx
    348083cf:	83 e2 01             	and    $0x1,%edx
    348083d2:	44 8d 0c 42          	lea    (%rdx,%rax,2),%r9d
    348083d6:	e9 95 00 00 00       	jmpq   34808470 <mspace_malloc+0x180>
    348083db:	4c 8b 53 08          	mov    0x8(%rbx),%r10
    348083df:	4d 39 d4             	cmp    %r10,%r12
    348083e2:	0f 86 29 06 00 00    	jbe    34808a11 <mspace_malloc+0x721>
    348083e8:	85 c0                	test   %eax,%eax
    348083ea:	0f 84 80 01 00 00    	je     34808570 <mspace_malloc+0x280>
    348083f0:	d3 e0                	shl    %cl,%eax
    348083f2:	be 02 00 00 00       	mov    $0x2,%esi
    348083f7:	d3 e6                	shl    %cl,%esi
    348083f9:	89 f1                	mov    %esi,%ecx
    348083fb:	f7 d9                	neg    %ecx
    348083fd:	09 f1                	or     %esi,%ecx
    348083ff:	21 c1                	and    %eax,%ecx
    34808401:	89 c8                	mov    %ecx,%eax
    34808403:	f7 d8                	neg    %eax
    34808405:	21 c8                	and    %ecx,%eax
    34808407:	0f bc c8             	bsf    %eax,%ecx
    3480840a:	8d 34 09             	lea    (%rcx,%rcx,1),%esi
    3480840d:	48 8d 44 f3 48       	lea    0x48(%rbx,%rsi,8),%rax
    34808412:	48 8b 74 f3 58       	mov    0x58(%rbx,%rsi,8),%rsi
    34808417:	48 8b 7e 10          	mov    0x10(%rsi),%rdi
    3480841b:	48 39 c7             	cmp    %rax,%rdi
    3480841e:	0f 84 47 02 00 00    	je     3480866b <mspace_malloc+0x37b>
    34808424:	48 39 7b 18          	cmp    %rdi,0x18(%rbx)
    34808428:	0f 87 88 0a 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    3480842e:	48 39 77 18          	cmp    %rsi,0x18(%rdi)
    34808432:	0f 85 7e 0a 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    34808438:	48 89 47 18          	mov    %rax,0x18(%rdi)
    3480843c:	48 89 78 10          	mov    %rdi,0x10(%rax)
    34808440:	e9 33 02 00 00       	jmpq   34808678 <mspace_malloc+0x388>
    34808445:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    3480844a:	89 c1                	mov    %eax,%ecx
    3480844c:	d3 c7                	rol    %cl,%edi
    3480844e:	41 21 fb             	and    %edi,%r11d
    34808451:	44 89 1b             	mov    %r11d,(%rbx)
    34808454:	c1 e0 03             	shl    $0x3,%eax
    34808457:	48 8d 48 03          	lea    0x3(%rax),%rcx
    3480845b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    3480845f:	80 4c 06 08 01       	orb    $0x1,0x8(%rsi,%rax,1)
    34808464:	48 8d 46 10          	lea    0x10(%rsi),%rax
    34808468:	e9 08 07 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    3480846d:	45 31 c9             	xor    %r9d,%r9d
    34808470:	4d 89 e2             	mov    %r12,%r10
    34808473:	49 f7 da             	neg    %r10
    34808476:	44 89 c8             	mov    %r9d,%eax
    34808479:	48 8b 94 c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdx
    34808480:	00 
    34808481:	49 89 d8             	mov    %rbx,%r8
    34808484:	48 85 d2             	test   %rdx,%rdx
    34808487:	0f 84 11 00 00 00    	je     3480849e <mspace_malloc+0x1ae>
    3480848d:	41 83 f9 1f          	cmp    $0x1f,%r9d
    34808491:	0f 85 10 00 00 00    	jne    348084a7 <mspace_malloc+0x1b7>
    34808497:	31 c9                	xor    %ecx,%ecx
    34808499:	e9 19 00 00 00       	jmpq   348084b7 <mspace_malloc+0x1c7>
    3480849e:	31 ff                	xor    %edi,%edi
    348084a0:	31 c0                	xor    %eax,%eax
    348084a2:	e9 7f 00 00 00       	jmpq   34808526 <mspace_malloc+0x236>
    348084a7:	44 89 c8             	mov    %r9d,%eax
    348084aa:	d1 e8                	shr    %eax
    348084ac:	83 c0 06             	add    $0x6,%eax
    348084af:	b9 3f 00 00 00       	mov    $0x3f,%ecx
    348084b4:	48 29 c1             	sub    %rax,%rcx
    348084b7:	4d 89 e3             	mov    %r12,%r11
    348084ba:	49 d3 e3             	shl    %cl,%r11
    348084bd:	31 ff                	xor    %edi,%edi
    348084bf:	31 c0                	xor    %eax,%eax
    348084c1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348084c8:	0f 1f 84 00 00 00 00 
    348084cf:	00 
    348084d0:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    348084d4:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    348084d8:	4c 29 e1             	sub    %r12,%rcx
    348084db:	4c 39 d1             	cmp    %r10,%rcx
    348084de:	0f 83 0f 00 00 00    	jae    348084f3 <mspace_malloc+0x203>
    348084e4:	48 85 c9             	test   %rcx,%rcx
    348084e7:	49 89 ca             	mov    %rcx,%r10
    348084ea:	48 89 d0             	mov    %rdx,%rax
    348084ed:	0f 84 67 01 00 00    	je     3480865a <mspace_malloc+0x36a>
    348084f3:	48 8b 72 28          	mov    0x28(%rdx),%rsi
    348084f7:	4c 89 db             	mov    %r11,%rbx
    348084fa:	48 c1 eb 3f          	shr    $0x3f,%rbx
    348084fe:	48 8b 54 da 20       	mov    0x20(%rdx,%rbx,8),%rdx
    34808503:	48 39 d6             	cmp    %rdx,%rsi
    34808506:	48 89 f1             	mov    %rsi,%rcx
    34808509:	48 0f 44 cf          	cmove  %rdi,%rcx
    3480850d:	48 85 f6             	test   %rsi,%rsi
    34808510:	48 0f 45 f9          	cmovne %rcx,%rdi
    34808514:	48 85 d2             	test   %rdx,%rdx
    34808517:	0f 95 c1             	setne  %cl
    3480851a:	49 d3 e3             	shl    %cl,%r11
    3480851d:	48 85 d2             	test   %rdx,%rdx
    34808520:	0f 85 aa ff ff ff    	jne    348084d0 <mspace_malloc+0x1e0>
    34808526:	48 89 f9             	mov    %rdi,%rcx
    34808529:	48 09 c1             	or     %rax,%rcx
    3480852c:	4c 89 c3             	mov    %r8,%rbx
    3480852f:	0f 85 53 04 00 00    	jne    34808988 <mspace_malloc+0x698>
    34808535:	ba 02 00 00 00       	mov    $0x2,%edx
    3480853a:	44 89 c9             	mov    %r9d,%ecx
    3480853d:	d3 e2                	shl    %cl,%edx
    3480853f:	89 d0                	mov    %edx,%eax
    34808541:	f7 d8                	neg    %eax
    34808543:	09 d0                	or     %edx,%eax
    34808545:	23 44 24 10          	and    0x10(%rsp),%eax
    34808549:	0f 84 c2 04 00 00    	je     34808a11 <mspace_malloc+0x721>
    3480854f:	89 c1                	mov    %eax,%ecx
    34808551:	f7 d9                	neg    %ecx
    34808553:	21 c1                	and    %eax,%ecx
    34808555:	0f bc c1             	bsf    %ecx,%eax
    34808558:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    3480855f:	00 
    34808560:	31 c0                	xor    %eax,%eax
    34808562:	48 85 ff             	test   %rdi,%rdi
    34808565:	0f 85 f8 03 00 00    	jne    34808963 <mspace_malloc+0x673>
    3480856b:	e9 21 04 00 00       	jmpq   34808991 <mspace_malloc+0x6a1>
    34808570:	44 8b 4b 04          	mov    0x4(%rbx),%r9d
    34808574:	45 85 c9             	test   %r9d,%r9d
    34808577:	0f 84 94 04 00 00    	je     34808a11 <mspace_malloc+0x721>
    3480857d:	44 89 c8             	mov    %r9d,%eax
    34808580:	f7 d8                	neg    %eax
    34808582:	44 21 c8             	and    %r9d,%eax
    34808585:	0f bc c0             	bsf    %eax,%eax
    34808588:	48 8b 84 c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rax
    3480858f:	00 
    34808590:	48 8b 78 08          	mov    0x8(%rax),%rdi
    34808594:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    34808598:	4c 29 e7             	sub    %r12,%rdi
    3480859b:	31 c9                	xor    %ecx,%ecx
    3480859d:	48 83 78 20 00       	cmpq   $0x0,0x20(%rax)
    348085a2:	0f 94 c1             	sete   %cl
    348085a5:	48 8b 4c c8 20       	mov    0x20(%rax,%rcx,8),%rcx
    348085aa:	48 85 c9             	test   %rcx,%rcx
    348085ad:	0f 84 3b 00 00 00    	je     348085ee <mspace_malloc+0x2fe>
    348085b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348085ba:	84 00 00 00 00 00 
    348085c0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    348085c4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    348085c8:	4c 29 e2             	sub    %r12,%rdx
    348085cb:	48 39 fa             	cmp    %rdi,%rdx
    348085ce:	48 0f 42 fa          	cmovb  %rdx,%rdi
    348085d2:	48 0f 42 c1          	cmovb  %rcx,%rax
    348085d6:	31 d2                	xor    %edx,%edx
    348085d8:	48 83 79 20 00       	cmpq   $0x0,0x20(%rcx)
    348085dd:	0f 94 c2             	sete   %dl
    348085e0:	48 8b 4c d1 20       	mov    0x20(%rcx,%rdx,8),%rcx
    348085e5:	48 85 c9             	test   %rcx,%rcx
    348085e8:	0f 85 d2 ff ff ff    	jne    348085c0 <mspace_malloc+0x2d0>
    348085ee:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    348085f2:	48 39 c1             	cmp    %rax,%rcx
    348085f5:	0f 87 bb 08 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    348085fb:	4a 8d 14 20          	lea    (%rax,%r12,1),%rdx
    348085ff:	48 39 c2             	cmp    %rax,%rdx
    34808602:	0f 86 ae 08 00 00    	jbe    34808eb6 <mspace_malloc+0xbc6>
    34808608:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    3480860d:	48 8b 70 18          	mov    0x18(%rax),%rsi
    34808611:	4c 8b 40 30          	mov    0x30(%rax),%r8
    34808615:	48 39 c6             	cmp    %rax,%rsi
    34808618:	0f 84 fd 00 00 00    	je     3480871b <mspace_malloc+0x42b>
    3480861e:	48 8b 58 10          	mov    0x10(%rax),%rbx
    34808622:	48 39 d9             	cmp    %rbx,%rcx
    34808625:	0f 87 8b 08 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    3480862b:	48 39 43 18          	cmp    %rax,0x18(%rbx)
    3480862f:	0f 85 81 08 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    34808635:	48 39 46 10          	cmp    %rax,0x10(%rsi)
    34808639:	0f 85 77 08 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    3480863f:	48 89 73 18          	mov    %rsi,0x18(%rbx)
    34808643:	48 89 5e 10          	mov    %rbx,0x10(%rsi)
    34808647:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480864c:	4d 85 c0             	test   %r8,%r8
    3480864f:	0f 85 8b 01 00 00    	jne    348087e0 <mspace_malloc+0x4f0>
    34808655:	e9 3e 02 00 00       	jmpq   34808898 <mspace_malloc+0x5a8>
    3480865a:	45 31 d2             	xor    %r10d,%r10d
    3480865d:	48 89 d7             	mov    %rdx,%rdi
    34808660:	48 89 d0             	mov    %rdx,%rax
    34808663:	4c 89 c3             	mov    %r8,%rbx
    34808666:	e9 f8 02 00 00       	jmpq   34808963 <mspace_malloc+0x673>
    3480866b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    34808670:	d3 c0                	rol    %cl,%eax
    34808672:	41 21 c3             	and    %eax,%r11d
    34808675:	44 89 1b             	mov    %r11d,(%rbx)
    34808678:	48 8d 46 10          	lea    0x10(%rsi),%rax
    3480867c:	89 c9                	mov    %ecx,%ecx
    3480867e:	48 c1 e1 03          	shl    $0x3,%rcx
    34808682:	48 89 ca             	mov    %rcx,%rdx
    34808685:	4c 29 e2             	sub    %r12,%rdx
    34808688:	48 83 fa 1f          	cmp    $0x1f,%rdx
    3480868c:	0f 87 15 00 00 00    	ja     348086a7 <mspace_malloc+0x3b7>
    34808692:	48 89 ca             	mov    %rcx,%rdx
    34808695:	48 83 ca 03          	or     $0x3,%rdx
    34808699:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    3480869d:	80 4c 0e 08 01       	orb    $0x1,0x8(%rsi,%rcx,1)
    348086a2:	e9 ce 04 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    348086a7:	48 89 df             	mov    %rbx,%rdi
    348086aa:	4c 89 e3             	mov    %r12,%rbx
    348086ad:	48 83 cb 03          	or     $0x3,%rbx
    348086b1:	48 89 5e 08          	mov    %rbx,0x8(%rsi)
    348086b5:	48 89 fb             	mov    %rdi,%rbx
    348086b8:	48 89 d7             	mov    %rdx,%rdi
    348086bb:	48 83 cf 01          	or     $0x1,%rdi
    348086bf:	4a 89 7c 26 08       	mov    %rdi,0x8(%rsi,%r12,1)
    348086c4:	48 89 14 0e          	mov    %rdx,(%rsi,%rcx,1)
    348086c8:	4d 85 d2             	test   %r10,%r10
    348086cb:	0f 84 86 00 00 00    	je     34808757 <mspace_malloc+0x467>
    348086d1:	4c 8d 43 48          	lea    0x48(%rbx),%r8
    348086d5:	4c 8b 4b 20          	mov    0x20(%rbx),%r9
    348086d9:	4c 89 d1             	mov    %r10,%rcx
    348086dc:	48 c1 e9 03          	shr    $0x3,%rcx
    348086e0:	48 89 df             	mov    %rbx,%rdi
    348086e3:	48 bb f8 ff ff ff 03 	movabs $0x3fffffff8,%rbx
    348086ea:	00 00 00 
    348086ed:	4c 21 d3             	and    %r10,%rbx
    348086f0:	4d 8d 04 58          	lea    (%r8,%rbx,2),%r8
    348086f4:	bb 01 00 00 00       	mov    $0x1,%ebx
    348086f9:	d3 e3                	shl    %cl,%ebx
    348086fb:	41 0f a3 cb          	bt     %ecx,%r11d
    348086ff:	0f 83 36 00 00 00    	jae    3480873b <mspace_malloc+0x44b>
    34808705:	49 8b 48 10          	mov    0x10(%r8),%rcx
    34808709:	48 39 4f 18          	cmp    %rcx,0x18(%rdi)
    3480870d:	48 89 fb             	mov    %rdi,%rbx
    34808710:	0f 86 31 00 00 00    	jbe    34808747 <mspace_malloc+0x457>
    34808716:	e9 9b 07 00 00       	jmpq   34808eb6 <mspace_malloc+0xbc6>
    3480871b:	48 8b 58 28          	mov    0x28(%rax),%rbx
    3480871f:	48 85 db             	test   %rbx,%rbx
    34808722:	0f 84 3f 00 00 00    	je     34808767 <mspace_malloc+0x477>
    34808728:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    3480872d:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    34808732:	4c 8d 40 28          	lea    0x28(%rax),%r8
    34808736:	e9 55 00 00 00       	jmpq   34808790 <mspace_malloc+0x4a0>
    3480873b:	41 09 db             	or     %ebx,%r11d
    3480873e:	44 89 1f             	mov    %r11d,(%rdi)
    34808741:	4c 89 c1             	mov    %r8,%rcx
    34808744:	48 89 fb             	mov    %rdi,%rbx
    34808747:	4d 89 48 10          	mov    %r9,0x10(%r8)
    3480874b:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    3480874f:	49 89 49 10          	mov    %rcx,0x10(%r9)
    34808753:	4d 89 41 18          	mov    %r8,0x18(%r9)
    34808757:	4c 01 e6             	add    %r12,%rsi
    3480875a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    3480875e:	48 89 73 20          	mov    %rsi,0x20(%rbx)
    34808762:	e9 0e 04 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    34808767:	48 8b 58 20          	mov    0x20(%rax),%rbx
    3480876b:	48 85 db             	test   %rbx,%rbx
    3480876e:	0f 84 e8 01 00 00    	je     3480895c <mspace_malloc+0x66c>
    34808774:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    34808779:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    3480877e:	4c 8d 40 20          	lea    0x20(%rax),%r8
    34808782:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34808789:	1f 84 00 00 00 00 00 
    34808790:	48 89 de             	mov    %rbx,%rsi
    34808793:	4d 89 c2             	mov    %r8,%r10
    34808796:	4c 8d 46 28          	lea    0x28(%rsi),%r8
    3480879a:	48 8b 5e 28          	mov    0x28(%rsi),%rbx
    3480879e:	48 85 db             	test   %rbx,%rbx
    348087a1:	0f 85 e9 ff ff ff    	jne    34808790 <mspace_malloc+0x4a0>
    348087a7:	4c 8d 46 20          	lea    0x20(%rsi),%r8
    348087ab:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
    348087af:	48 85 db             	test   %rbx,%rbx
    348087b2:	0f 85 d8 ff ff ff    	jne    34808790 <mspace_malloc+0x4a0>
    348087b8:	4c 39 d1             	cmp    %r10,%rcx
    348087bb:	0f 87 f5 06 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    348087c1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    348087c8:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    348087cd:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    348087d2:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    348087d7:	4d 85 c0             	test   %r8,%r8
    348087da:	0f 84 b8 00 00 00    	je     34808898 <mspace_malloc+0x5a8>
    348087e0:	8b 48 38             	mov    0x38(%rax),%ecx
    348087e3:	48 3b 84 cb 58 02 00 	cmp    0x258(%rbx,%rcx,8),%rax
    348087ea:	00 
    348087eb:	0f 84 26 00 00 00    	je     34808817 <mspace_malloc+0x527>
    348087f1:	4c 39 43 18          	cmp    %r8,0x18(%rbx)
    348087f5:	0f 87 bb 06 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    348087fb:	31 c9                	xor    %ecx,%ecx
    348087fd:	49 39 40 20          	cmp    %rax,0x20(%r8)
    34808801:	0f 95 c1             	setne  %cl
    34808804:	49 89 74 c8 20       	mov    %rsi,0x20(%r8,%rcx,8)
    34808809:	48 85 f6             	test   %rsi,%rsi
    3480880c:	0f 85 16 00 00 00    	jne    34808828 <mspace_malloc+0x538>
    34808812:	e9 81 00 00 00       	jmpq   34808898 <mspace_malloc+0x5a8>
    34808817:	48 89 b4 cb 58 02 00 	mov    %rsi,0x258(%rbx,%rcx,8)
    3480881e:	00 
    3480881f:	48 85 f6             	test   %rsi,%rsi
    34808822:	0f 84 62 00 00 00    	je     3480888a <mspace_malloc+0x59a>
    34808828:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    3480882c:	48 39 f1             	cmp    %rsi,%rcx
    3480882f:	0f 87 81 06 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808835:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    34808839:	48 8b 58 20          	mov    0x20(%rax),%rbx
    3480883d:	48 85 db             	test   %rbx,%rbx
    34808840:	0f 84 11 00 00 00    	je     34808857 <mspace_malloc+0x567>
    34808846:	48 39 d9             	cmp    %rbx,%rcx
    34808849:	0f 87 67 06 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    3480884f:	48 89 5e 20          	mov    %rbx,0x20(%rsi)
    34808853:	48 89 73 30          	mov    %rsi,0x30(%rbx)
    34808857:	48 8b 48 28          	mov    0x28(%rax),%rcx
    3480885b:	48 85 c9             	test   %rcx,%rcx
    3480885e:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34808863:	0f 84 2f 00 00 00    	je     34808898 <mspace_malloc+0x5a8>
    34808869:	48 39 4b 18          	cmp    %rcx,0x18(%rbx)
    3480886d:	0f 87 43 06 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808873:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    34808877:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    3480887b:	48 83 ff 1f          	cmp    $0x1f,%rdi
    3480887f:	0f 86 1d 00 00 00    	jbe    348088a2 <mspace_malloc+0x5b2>
    34808885:	e9 34 00 00 00       	jmpq   348088be <mspace_malloc+0x5ce>
    3480888a:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    3480888f:	d3 c6                	rol    %cl,%esi
    34808891:	41 21 f1             	and    %esi,%r9d
    34808894:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
    34808898:	48 83 ff 1f          	cmp    $0x1f,%rdi
    3480889c:	0f 87 1c 00 00 00    	ja     348088be <mspace_malloc+0x5ce>
    348088a2:	4c 01 e7             	add    %r12,%rdi
    348088a5:	48 89 f9             	mov    %rdi,%rcx
    348088a8:	48 83 c9 03          	or     $0x3,%rcx
    348088ac:	48 89 48 08          	mov    %rcx,0x8(%rax)
    348088b0:	80 4c 38 08 01       	orb    $0x1,0x8(%rax,%rdi,1)
    348088b5:	48 83 c0 10          	add    $0x10,%rax
    348088b9:	e9 b7 02 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    348088be:	4c 89 e1             	mov    %r12,%rcx
    348088c1:	48 83 c9 03          	or     $0x3,%rcx
    348088c5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    348088c9:	48 89 f9             	mov    %rdi,%rcx
    348088cc:	48 83 c9 01          	or     $0x1,%rcx
    348088d0:	4a 89 4c 20 08       	mov    %rcx,0x8(%rax,%r12,1)
    348088d5:	48 89 3c 3a          	mov    %rdi,(%rdx,%rdi,1)
    348088d9:	4d 85 d2             	test   %r10,%r10
    348088dc:	0f 84 69 00 00 00    	je     3480894b <mspace_malloc+0x65b>
    348088e2:	49 89 d1             	mov    %rdx,%r9
    348088e5:	48 8b 73 20          	mov    0x20(%rbx),%rsi
    348088e9:	4c 89 d1             	mov    %r10,%rcx
    348088ec:	48 c1 e9 03          	shr    $0x3,%rcx
    348088f0:	48 ba f8 ff ff ff 03 	movabs $0x3fffffff8,%rdx
    348088f7:	00 00 00 
    348088fa:	4c 21 d2             	and    %r10,%rdx
    348088fd:	4c 8d 44 53 48       	lea    0x48(%rbx,%rdx,2),%r8
    34808902:	48 89 da             	mov    %rbx,%rdx
    34808905:	bb 01 00 00 00       	mov    $0x1,%ebx
    3480890a:	d3 e3                	shl    %cl,%ebx
    3480890c:	41 0f a3 cb          	bt     %ecx,%r11d
    34808910:	0f 83 16 00 00 00    	jae    3480892c <mspace_malloc+0x63c>
    34808916:	49 8b 48 10          	mov    0x10(%r8),%rcx
    3480891a:	48 39 4a 18          	cmp    %rcx,0x18(%rdx)
    3480891e:	48 89 d3             	mov    %rdx,%rbx
    34808921:	0f 86 11 00 00 00    	jbe    34808938 <mspace_malloc+0x648>
    34808927:	e9 8a 05 00 00       	jmpq   34808eb6 <mspace_malloc+0xbc6>
    3480892c:	41 09 db             	or     %ebx,%r11d
    3480892f:	44 89 1a             	mov    %r11d,(%rdx)
    34808932:	4c 89 c1             	mov    %r8,%rcx
    34808935:	48 89 d3             	mov    %rdx,%rbx
    34808938:	49 89 70 10          	mov    %rsi,0x10(%r8)
    3480893c:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    34808940:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    34808944:	4c 89 46 18          	mov    %r8,0x18(%rsi)
    34808948:	4c 89 ca             	mov    %r9,%rdx
    3480894b:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    3480894f:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    34808953:	48 83 c0 10          	add    $0x10,%rax
    34808957:	e9 19 02 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    3480895c:	31 f6                	xor    %esi,%esi
    3480895e:	e9 e4 fc ff ff       	jmpq   34808647 <mspace_malloc+0x357>
    34808963:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    34808967:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    3480896b:	4c 29 e1             	sub    %r12,%rcx
    3480896e:	4c 39 d1             	cmp    %r10,%rcx
    34808971:	4c 0f 42 d1          	cmovb  %rcx,%r10
    34808975:	48 0f 42 c7          	cmovb  %rdi,%rax
    34808979:	31 c9                	xor    %ecx,%ecx
    3480897b:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    34808980:	0f 94 c1             	sete   %cl
    34808983:	48 8b 7c cf 20       	mov    0x20(%rdi,%rcx,8),%rdi
    34808988:	48 85 ff             	test   %rdi,%rdi
    3480898b:	0f 85 d2 ff ff ff    	jne    34808963 <mspace_malloc+0x673>
    34808991:	48 85 c0             	test   %rax,%rax
    34808994:	0f 84 77 00 00 00    	je     34808a11 <mspace_malloc+0x721>
    3480899a:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    3480899e:	4c 29 e1             	sub    %r12,%rcx
    348089a1:	49 39 ca             	cmp    %rcx,%r10
    348089a4:	0f 83 67 00 00 00    	jae    34808a11 <mspace_malloc+0x721>
    348089aa:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    348089af:	4c 8b 5b 18          	mov    0x18(%rbx),%r11
    348089b3:	49 39 c3             	cmp    %rax,%r11
    348089b6:	0f 87 fa 04 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    348089bc:	4e 8d 0c 20          	lea    (%rax,%r12,1),%r9
    348089c0:	49 39 c1             	cmp    %rax,%r9
    348089c3:	0f 86 ed 04 00 00    	jbe    34808eb6 <mspace_malloc+0xbc6>
    348089c9:	48 8b 58 18          	mov    0x18(%rax),%rbx
    348089cd:	48 8b 70 30          	mov    0x30(%rax),%rsi
    348089d1:	48 39 c3             	cmp    %rax,%rbx
    348089d4:	0f 84 a3 01 00 00    	je     34808b7d <mspace_malloc+0x88d>
    348089da:	48 8b 48 10          	mov    0x10(%rax),%rcx
    348089de:	49 39 cb             	cmp    %rcx,%r11
    348089e1:	0f 87 cf 04 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    348089e7:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    348089eb:	0f 85 c5 04 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    348089f1:	48 39 43 10          	cmp    %rax,0x10(%rbx)
    348089f5:	0f 85 bb 04 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    348089fb:	48 89 59 18          	mov    %rbx,0x18(%rcx)
    348089ff:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    34808a03:	48 85 f6             	test   %rsi,%rsi
    34808a06:	0f 85 e5 01 00 00    	jne    34808bf1 <mspace_malloc+0x901>
    34808a0c:	e9 85 02 00 00       	jmpq   34808c96 <mspace_malloc+0x9a6>
    34808a11:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    34808a15:	48 89 ca             	mov    %rcx,%rdx
    34808a18:	4c 29 e2             	sub    %r12,%rdx
    34808a1b:	0f 83 2b 00 00 00    	jae    34808a4c <mspace_malloc+0x75c>
    34808a21:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    34808a25:	4c 29 e1             	sub    %r12,%rcx
    34808a28:	0f 86 59 00 00 00    	jbe    34808a87 <mspace_malloc+0x797>
    34808a2e:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    34808a32:	48 8b 43 28          	mov    0x28(%rbx),%rax
    34808a36:	4a 8d 14 20          	lea    (%rax,%r12,1),%rdx
    34808a3a:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    34808a3e:	48 83 c9 01          	or     $0x1,%rcx
    34808a42:	4a 89 4c 20 08       	mov    %rcx,0x8(%rax,%r12,1)
    34808a47:	e9 2a 00 00 00       	jmpq   34808a76 <mspace_malloc+0x786>
    34808a4c:	48 8b 43 20          	mov    0x20(%rbx),%rax
    34808a50:	48 83 fa 20          	cmp    $0x20,%rdx
    34808a54:	0f 82 47 00 00 00    	jb     34808aa1 <mspace_malloc+0x7b1>
    34808a5a:	4a 8d 34 20          	lea    (%rax,%r12,1),%rsi
    34808a5e:	48 89 73 20          	mov    %rsi,0x20(%rbx)
    34808a62:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    34808a66:	48 89 d6             	mov    %rdx,%rsi
    34808a69:	48 83 ce 01          	or     $0x1,%rsi
    34808a6d:	4a 89 74 20 08       	mov    %rsi,0x8(%rax,%r12,1)
    34808a72:	48 89 14 08          	mov    %rdx,(%rax,%rcx,1)
    34808a76:	49 83 cc 03          	or     $0x3,%r12
    34808a7a:	4c 89 60 08          	mov    %r12,0x8(%rax)
    34808a7e:	48 83 c0 10          	add    $0x10,%rax
    34808a82:	e9 ee 00 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    34808a87:	48 83 3d 71 ec 20 00 	cmpq   $0x0,0x20ec71(%rip)        # 34a17700 <mparams>
    34808a8e:	00 
    34808a8f:	0f 84 35 00 00 00    	je     34808aca <mspace_malloc+0x7da>
    34808a95:	48 8b 0d 74 ec 20 00 	mov    0x20ec74(%rip),%rcx        # 34a17710 <mparams+0x10>
    34808a9c:	e9 85 00 00 00       	jmpq   34808b26 <mspace_malloc+0x836>
    34808aa1:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    34808aa8:	00 
    34808aa9:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    34808ab0:	00 
    34808ab1:	48 89 ca             	mov    %rcx,%rdx
    34808ab4:	48 83 ca 03          	or     $0x3,%rdx
    34808ab8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    34808abc:	80 4c 08 08 01       	orb    $0x1,0x8(%rax,%rcx,1)
    34808ac1:	48 83 c0 10          	add    $0x10,%rax
    34808ac5:	e9 ab 00 00 00       	jmpq   34808b75 <mspace_malloc+0x885>
    34808aca:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34808acf:	e8 6c 3b 00 00       	callq  3480c640 <sysconf>
    34808ad4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34808ad8:	48 85 c1             	test   %rax,%rcx
    34808adb:	0f 85 d5 03 00 00    	jne    34808eb6 <mspace_malloc+0xbc6>
    34808ae1:	48 89 05 20 ec 20 00 	mov    %rax,0x20ec20(%rip)        # 34a17708 <mparams+0x8>
    34808ae8:	0f 28 05 d1 c1 00 00 	movaps 0xc1d1(%rip),%xmm0        # 34814cc0 <half+0x10>
    34808aef:	0f 11 05 1a ec 20 00 	movups %xmm0,0x20ec1a(%rip)        # 34a17710 <mparams+0x10>
    34808af6:	48 c7 05 1f ec 20 00 	movq   $0x200000,0x20ec1f(%rip)        # 34a17720 <mparams+0x20>
    34808afd:	00 00 20 00 
    34808b01:	c7 05 1d ec 20 00 04 	movl   $0x4,0x20ec1d(%rip)        # 34a17728 <mparams+0x28>
    34808b08:	00 00 00 
    34808b0b:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    34808b10:	48 83 c8 08          	or     $0x8,%rax
    34808b14:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    34808b1a:	48 89 05 df eb 20 00 	mov    %rax,0x20ebdf(%rip)        # 34a17700 <mparams>
    34808b21:	b9 00 00 01 00       	mov    $0x10000,%ecx
    34808b26:	49 8d 44 0c 5f       	lea    0x5f(%r12,%rcx,1),%rax
    34808b2b:	48 f7 d9             	neg    %rcx
    34808b2e:	48 21 c1             	and    %rax,%rcx
    34808b31:	4c 39 e1             	cmp    %r12,%rcx
    34808b34:	0f 86 39 00 00 00    	jbe    34808b73 <mspace_malloc+0x883>
    34808b3a:	48 8b 93 68 03 00 00 	mov    0x368(%rbx),%rdx
    34808b41:	48 85 d2             	test   %rdx,%rdx
    34808b44:	0f 84 1e 00 00 00    	je     34808b68 <mspace_malloc+0x878>
    34808b4a:	48 8b b3 58 03 00 00 	mov    0x358(%rbx),%rsi
    34808b51:	48 01 f1             	add    %rsi,%rcx
    34808b54:	31 c0                	xor    %eax,%eax
    34808b56:	48 39 f1             	cmp    %rsi,%rcx
    34808b59:	0f 86 16 00 00 00    	jbe    34808b75 <mspace_malloc+0x885>
    34808b5f:	48 39 d1             	cmp    %rdx,%rcx
    34808b62:	0f 87 0d 00 00 00    	ja     34808b75 <mspace_malloc+0x885>
    34808b68:	e8 f3 42 00 00       	callq  3480ce60 <__errno_location>
    34808b6d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    34808b73:	31 c0                	xor    %eax,%eax
    34808b75:	48 83 c4 28          	add    $0x28,%rsp
    34808b79:	5b                   	pop    %rbx
    34808b7a:	41 5c                	pop    %r12
    34808b7c:	c3                   	retq   
    34808b7d:	48 8b 50 28          	mov    0x28(%rax),%rdx
    34808b81:	48 85 d2             	test   %rdx,%rdx
    34808b84:	0f 84 09 00 00 00    	je     34808b93 <mspace_malloc+0x8a3>
    34808b8a:	48 8d 78 28          	lea    0x28(%rax),%rdi
    34808b8e:	e9 1d 00 00 00       	jmpq   34808bb0 <mspace_malloc+0x8c0>
    34808b93:	48 8b 50 20          	mov    0x20(%rax),%rdx
    34808b97:	48 85 d2             	test   %rdx,%rdx
    34808b9a:	0f 84 06 03 00 00    	je     34808ea6 <mspace_malloc+0xbb6>
    34808ba0:	48 8d 78 20          	lea    0x20(%rax),%rdi
    34808ba4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34808bab:	00 00 00 00 00 
    34808bb0:	48 89 d3             	mov    %rdx,%rbx
    34808bb3:	48 89 f9             	mov    %rdi,%rcx
    34808bb6:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    34808bba:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    34808bbe:	48 85 d2             	test   %rdx,%rdx
    34808bc1:	0f 85 e9 ff ff ff    	jne    34808bb0 <mspace_malloc+0x8c0>
    34808bc7:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    34808bcb:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    34808bcf:	48 85 d2             	test   %rdx,%rdx
    34808bd2:	0f 85 d8 ff ff ff    	jne    34808bb0 <mspace_malloc+0x8c0>
    34808bd8:	49 39 cb             	cmp    %rcx,%r11
    34808bdb:	0f 87 d5 02 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808be1:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    34808be8:	48 85 f6             	test   %rsi,%rsi
    34808beb:	0f 84 a5 00 00 00    	je     34808c96 <mspace_malloc+0x9a6>
    34808bf1:	8b 48 38             	mov    0x38(%rax),%ecx
    34808bf4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    34808bf9:	48 3b 84 ca 58 02 00 	cmp    0x258(%rdx,%rcx,8),%rax
    34808c00:	00 
    34808c01:	0f 84 26 00 00 00    	je     34808c2d <mspace_malloc+0x93d>
    34808c07:	48 39 72 18          	cmp    %rsi,0x18(%rdx)
    34808c0b:	0f 87 a5 02 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808c11:	31 c9                	xor    %ecx,%ecx
    34808c13:	48 39 46 20          	cmp    %rax,0x20(%rsi)
    34808c17:	0f 95 c1             	setne  %cl
    34808c1a:	48 89 5c ce 20       	mov    %rbx,0x20(%rsi,%rcx,8)
    34808c1f:	48 85 db             	test   %rbx,%rbx
    34808c22:	0f 85 16 00 00 00    	jne    34808c3e <mspace_malloc+0x94e>
    34808c28:	e9 69 00 00 00       	jmpq   34808c96 <mspace_malloc+0x9a6>
    34808c2d:	48 89 9c ca 58 02 00 	mov    %rbx,0x258(%rdx,%rcx,8)
    34808c34:	00 
    34808c35:	48 85 db             	test   %rbx,%rbx
    34808c38:	0f 84 84 00 00 00    	je     34808cc2 <mspace_malloc+0x9d2>
    34808c3e:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    34808c43:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    34808c47:	48 39 d9             	cmp    %rbx,%rcx
    34808c4a:	0f 87 66 02 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808c50:	48 89 73 30          	mov    %rsi,0x30(%rbx)
    34808c54:	48 8b 50 20          	mov    0x20(%rax),%rdx
    34808c58:	48 85 d2             	test   %rdx,%rdx
    34808c5b:	0f 84 11 00 00 00    	je     34808c72 <mspace_malloc+0x982>
    34808c61:	48 39 d1             	cmp    %rdx,%rcx
    34808c64:	0f 87 4c 02 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808c6a:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    34808c6e:	48 89 5a 30          	mov    %rbx,0x30(%rdx)
    34808c72:	48 8b 48 28          	mov    0x28(%rax),%rcx
    34808c76:	48 85 c9             	test   %rcx,%rcx
    34808c79:	0f 84 17 00 00 00    	je     34808c96 <mspace_malloc+0x9a6>
    34808c7f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    34808c84:	48 39 4a 18          	cmp    %rcx,0x18(%rdx)
    34808c88:	0f 87 28 02 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808c8e:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
    34808c92:	48 89 59 30          	mov    %rbx,0x30(%rcx)
    34808c96:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34808c9b:	49 83 fa 1f          	cmp    $0x1f,%r10
    34808c9f:	0f 87 40 00 00 00    	ja     34808ce5 <mspace_malloc+0x9f5>
    34808ca5:	4d 01 e2             	add    %r12,%r10
    34808ca8:	4c 89 d1             	mov    %r10,%rcx
    34808cab:	48 83 c9 03          	or     $0x3,%rcx
    34808caf:	48 89 48 08          	mov    %rcx,0x8(%rax)
    34808cb3:	42 80 4c 10 08 01    	orb    $0x1,0x8(%rax,%r10,1)
    34808cb9:	48 83 c0 10          	add    $0x10,%rax
    34808cbd:	e9 b3 fe ff ff       	jmpq   34808b75 <mspace_malloc+0x885>
    34808cc2:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    34808cc7:	d3 c2                	rol    %cl,%edx
    34808cc9:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
    34808ccd:	21 d1                	and    %edx,%ecx
    34808ccf:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    34808cd4:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    34808cd8:	89 4b 04             	mov    %ecx,0x4(%rbx)
    34808cdb:	49 83 fa 1f          	cmp    $0x1f,%r10
    34808cdf:	0f 86 c0 ff ff ff    	jbe    34808ca5 <mspace_malloc+0x9b5>
    34808ce5:	4c 89 e1             	mov    %r12,%rcx
    34808ce8:	48 83 c9 03          	or     $0x3,%rcx
    34808cec:	48 89 48 08          	mov    %rcx,0x8(%rax)
    34808cf0:	4c 89 d1             	mov    %r10,%rcx
    34808cf3:	48 83 c9 01          	or     $0x1,%rcx
    34808cf7:	4a 89 4c 20 08       	mov    %rcx,0x8(%rax,%r12,1)
    34808cfc:	4f 89 14 11          	mov    %r10,(%r9,%r10,1)
    34808d00:	49 81 fa ff 00 00 00 	cmp    $0xff,%r10
    34808d07:	0f 87 42 00 00 00    	ja     34808d4f <mspace_malloc+0xa5f>
    34808d0d:	4c 89 d1             	mov    %r10,%rcx
    34808d10:	48 c1 e9 03          	shr    $0x3,%rcx
    34808d14:	48 ba f8 ff ff ff 03 	movabs $0x3fffffff8,%rdx
    34808d1b:	00 00 00 
    34808d1e:	4c 21 d2             	and    %r10,%rdx
    34808d21:	48 8d 54 53 48       	lea    0x48(%rbx,%rdx,2),%rdx
    34808d26:	8b 33                	mov    (%rbx),%esi
    34808d28:	bf 01 00 00 00       	mov    $0x1,%edi
    34808d2d:	d3 e7                	shl    %cl,%edi
    34808d2f:	0f a3 ce             	bt     %ecx,%esi
    34808d32:	0f 83 4e 00 00 00    	jae    34808d86 <mspace_malloc+0xa96>
    34808d38:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    34808d3c:	48 39 4b 18          	cmp    %rcx,0x18(%rbx)
    34808d40:	0f 87 70 01 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808d46:	48 8d 72 10          	lea    0x10(%rdx),%rsi
    34808d4a:	e9 42 00 00 00       	jmpq   34808d91 <mspace_malloc+0xaa1>
    34808d4f:	4c 89 d2             	mov    %r10,%rdx
    34808d52:	48 c1 ea 08          	shr    $0x8,%rdx
    34808d56:	85 d2                	test   %edx,%edx
    34808d58:	0f 84 4b 00 00 00    	je     34808da9 <mspace_malloc+0xab9>
    34808d5e:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    34808d63:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    34808d69:	0f 87 3c 00 00 00    	ja     34808dab <mspace_malloc+0xabb>
    34808d6f:	0f bd d2             	bsr    %edx,%edx
    34808d72:	8d 4a 07             	lea    0x7(%rdx),%ecx
    34808d75:	4c 89 d6             	mov    %r10,%rsi
    34808d78:	48 d3 ee             	shr    %cl,%rsi
    34808d7b:	83 e6 01             	and    $0x1,%esi
    34808d7e:	8d 0c 56             	lea    (%rsi,%rdx,2),%ecx
    34808d81:	e9 25 00 00 00       	jmpq   34808dab <mspace_malloc+0xabb>
    34808d86:	09 fe                	or     %edi,%esi
    34808d88:	89 33                	mov    %esi,(%rbx)
    34808d8a:	48 8d 72 10          	lea    0x10(%rdx),%rsi
    34808d8e:	48 89 d1             	mov    %rdx,%rcx
    34808d91:	4c 89 0e             	mov    %r9,(%rsi)
    34808d94:	4c 89 49 18          	mov    %r9,0x18(%rcx)
    34808d98:	49 89 49 10          	mov    %rcx,0x10(%r9)
    34808d9c:	49 89 51 18          	mov    %rdx,0x18(%r9)
    34808da0:	48 83 c0 10          	add    $0x10,%rax
    34808da4:	e9 cc fd ff ff       	jmpq   34808b75 <mspace_malloc+0x885>
    34808da9:	31 c9                	xor    %ecx,%ecx
    34808dab:	89 ca                	mov    %ecx,%edx
    34808dad:	48 8d 94 d3 58 02 00 	lea    0x258(%rbx,%rdx,8),%rdx
    34808db4:	00 
    34808db5:	41 89 49 38          	mov    %ecx,0x38(%r9)
    34808db9:	0f 57 c0             	xorps  %xmm0,%xmm0
    34808dbc:	41 0f 11 41 20       	movups %xmm0,0x20(%r9)
    34808dc1:	bf 01 00 00 00       	mov    $0x1,%edi
    34808dc6:	d3 e7                	shl    %cl,%edi
    34808dc8:	8b 74 24 10          	mov    0x10(%rsp),%esi
    34808dcc:	0f a3 ce             	bt     %ecx,%esi
    34808dcf:	0f 83 13 00 00 00    	jae    34808de8 <mspace_malloc+0xaf8>
    34808dd5:	48 8b 12             	mov    (%rdx),%rdx
    34808dd8:	83 f9 1f             	cmp    $0x1f,%ecx
    34808ddb:	0f 85 18 00 00 00    	jne    34808df9 <mspace_malloc+0xb09>
    34808de1:	31 ff                	xor    %edi,%edi
    34808de3:	e9 1e 00 00 00       	jmpq   34808e06 <mspace_malloc+0xb16>
    34808de8:	09 fe                	or     %edi,%esi
    34808dea:	89 73 04             	mov    %esi,0x4(%rbx)
    34808ded:	4c 89 0a             	mov    %r9,(%rdx)
    34808df0:	49 89 51 30          	mov    %rdx,0x30(%r9)
    34808df4:	e9 5c 00 00 00       	jmpq   34808e55 <mspace_malloc+0xb65>
    34808df9:	d1 e9                	shr    %ecx
    34808dfb:	83 c1 06             	add    $0x6,%ecx
    34808dfe:	bf 3f 00 00 00       	mov    $0x3f,%edi
    34808e03:	48 29 cf             	sub    %rcx,%rdi
    34808e06:	4c 89 d3             	mov    %r10,%rbx
    34808e09:	89 f9                	mov    %edi,%ecx
    34808e0b:	48 d3 e3             	shl    %cl,%rbx
    34808e0e:	48 89 d1             	mov    %rdx,%rcx
    34808e11:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    34808e15:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    34808e19:	4c 39 d2             	cmp    %r10,%rdx
    34808e1c:	0f 84 44 00 00 00    	je     34808e66 <mspace_malloc+0xb76>
    34808e22:	48 89 df             	mov    %rbx,%rdi
    34808e25:	48 c1 ef 3f          	shr    $0x3f,%rdi
    34808e29:	48 01 db             	add    %rbx,%rbx
    34808e2c:	48 8b 54 f9 20       	mov    0x20(%rcx,%rdi,8),%rdx
    34808e31:	48 85 d2             	test   %rdx,%rdx
    34808e34:	0f 85 d4 ff ff ff    	jne    34808e0e <mspace_malloc+0xb1e>
    34808e3a:	48 8d 54 f9 20       	lea    0x20(%rcx,%rdi,8),%rdx
    34808e3f:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34808e44:	48 39 56 18          	cmp    %rdx,0x18(%rsi)
    34808e48:	0f 87 68 00 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808e4e:	4c 89 0a             	mov    %r9,(%rdx)
    34808e51:	49 89 49 30          	mov    %rcx,0x30(%r9)
    34808e55:	4d 89 49 18          	mov    %r9,0x18(%r9)
    34808e59:	4d 89 49 10          	mov    %r9,0x10(%r9)
    34808e5d:	48 83 c0 10          	add    $0x10,%rax
    34808e61:	e9 0f fd ff ff       	jmpq   34808b75 <mspace_malloc+0x885>
    34808e66:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    34808e6a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    34808e6f:	48 8b 76 18          	mov    0x18(%rsi),%rsi
    34808e73:	48 39 d6             	cmp    %rdx,%rsi
    34808e76:	0f 87 3a 00 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808e7c:	48 39 ce             	cmp    %rcx,%rsi
    34808e7f:	0f 87 31 00 00 00    	ja     34808eb6 <mspace_malloc+0xbc6>
    34808e85:	4c 89 4a 18          	mov    %r9,0x18(%rdx)
    34808e89:	4c 89 49 10          	mov    %r9,0x10(%rcx)
    34808e8d:	49 89 51 10          	mov    %rdx,0x10(%r9)
    34808e91:	49 89 49 18          	mov    %rcx,0x18(%r9)
    34808e95:	49 c7 41 30 00 00 00 	movq   $0x0,0x30(%r9)
    34808e9c:	00 
    34808e9d:	48 83 c0 10          	add    $0x10,%rax
    34808ea1:	e9 cf fc ff ff       	jmpq   34808b75 <mspace_malloc+0x885>
    34808ea6:	31 db                	xor    %ebx,%ebx
    34808ea8:	48 85 f6             	test   %rsi,%rsi
    34808eab:	0f 85 40 fd ff ff    	jne    34808bf1 <mspace_malloc+0x901>
    34808eb1:	e9 e0 fd ff ff       	jmpq   34808c96 <mspace_malloc+0x9a6>
    34808eb6:	bf 01 00 00 00       	mov    $0x1,%edi
    34808ebb:	e8 c0 3d 00 00       	callq  3480cc80 <exit>

0000000034808ec0 <mspace_calloc>:
    34808ec0:	41 54                	push   %r12
    34808ec2:	53                   	push   %rbx
    34808ec3:	50                   	push   %rax
    34808ec4:	48 89 d1             	mov    %rdx,%rcx
    34808ec7:	48 85 f6             	test   %rsi,%rsi
    34808eca:	0f 84 34 00 00 00    	je     34808f04 <mspace_calloc+0x44>
    34808ed0:	49 89 cc             	mov    %rcx,%r12
    34808ed3:	4c 0f af e6          	imul   %rsi,%r12
    34808ed7:	48 89 c8             	mov    %rcx,%rax
    34808eda:	48 09 f0             	or     %rsi,%rax
    34808edd:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
    34808ee3:	0f 82 1e 00 00 00    	jb     34808f07 <mspace_calloc+0x47>
    34808ee9:	31 d2                	xor    %edx,%edx
    34808eeb:	4c 89 e0             	mov    %r12,%rax
    34808eee:	48 f7 f6             	div    %rsi
    34808ef1:	48 39 c8             	cmp    %rcx,%rax
    34808ef4:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    34808efb:	4c 0f 45 e0          	cmovne %rax,%r12
    34808eff:	e9 03 00 00 00       	jmpq   34808f07 <mspace_calloc+0x47>
    34808f04:	45 31 e4             	xor    %r12d,%r12d
    34808f07:	4c 89 e6             	mov    %r12,%rsi
    34808f0a:	e8 e1 f3 ff ff       	callq  348082f0 <mspace_malloc>
    34808f0f:	48 89 c3             	mov    %rax,%rbx
    34808f12:	48 85 db             	test   %rbx,%rbx
    34808f15:	0f 84 17 00 00 00    	je     34808f32 <mspace_calloc+0x72>
    34808f1b:	f6 43 f8 03          	testb  $0x3,-0x8(%rbx)
    34808f1f:	0f 84 0d 00 00 00    	je     34808f32 <mspace_calloc+0x72>
    34808f25:	31 f6                	xor    %esi,%esi
    34808f27:	48 89 df             	mov    %rbx,%rdi
    34808f2a:	4c 89 e2             	mov    %r12,%rdx
    34808f2d:	e8 5b 28 00 00       	callq  3480b78d <memset>
    34808f32:	48 89 d8             	mov    %rbx,%rax
    34808f35:	48 83 c4 08          	add    $0x8,%rsp
    34808f39:	5b                   	pop    %rbx
    34808f3a:	41 5c                	pop    %r12
    34808f3c:	c3                   	retq   
    34808f3d:	0f 1f 00             	nopl   (%rax)

0000000034808f40 <mspace_realloc_pan>:
    34808f40:	41 54                	push   %r12
    34808f42:	53                   	push   %rbx
    34808f43:	50                   	push   %rax
    34808f44:	49 89 cc             	mov    %rcx,%r12
    34808f47:	48 89 fb             	mov    %rdi,%rbx
    34808f4a:	48 39 f3             	cmp    %rsi,%rbx
    34808f4d:	0f 84 66 00 00 00    	je     34808fb9 <mspace_realloc_pan+0x79>
    34808f53:	48 89 14 24          	mov    %rdx,(%rsp)
    34808f57:	48 89 f7             	mov    %rsi,%rdi
    34808f5a:	4c 89 e6             	mov    %r12,%rsi
    34808f5d:	e8 8e f3 ff ff       	callq  348082f0 <mspace_malloc>
    34808f62:	48 85 c0             	test   %rax,%rax
    34808f65:	0f 84 46 00 00 00    	je     34808fb1 <mspace_realloc_pan+0x71>
    34808f6b:	48 8b 14 24          	mov    (%rsp),%rdx
    34808f6f:	48 8b 4a f8          	mov    -0x8(%rdx),%rcx
    34808f73:	49 89 d0             	mov    %rdx,%r8
    34808f76:	48 89 ca             	mov    %rcx,%rdx
    34808f79:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    34808f7d:	31 f6                	xor    %esi,%esi
    34808f7f:	f6 c1 03             	test   $0x3,%cl
    34808f82:	40 0f 94 c6          	sete   %sil
    34808f86:	48 8d 0c f5 08 00 00 	lea    0x8(,%rsi,8),%rcx
    34808f8d:	00 
    34808f8e:	48 29 ca             	sub    %rcx,%rdx
    34808f91:	4c 39 e2             	cmp    %r12,%rdx
    34808f94:	49 0f 43 d4          	cmovae %r12,%rdx
    34808f98:	48 89 c7             	mov    %rax,%rdi
    34808f9b:	4d 89 c4             	mov    %r8,%r12
    34808f9e:	4c 89 e6             	mov    %r12,%rsi
    34808fa1:	e8 7a 27 00 00       	callq  3480b720 <memcpy>
    34808fa6:	48 89 df             	mov    %rbx,%rdi
    34808fa9:	4c 89 e6             	mov    %r12,%rsi
    34808fac:	e8 2f e6 ff ff       	callq  348075e0 <mspace_free>
    34808fb1:	48 83 c4 08          	add    $0x8,%rsp
    34808fb5:	5b                   	pop    %rbx
    34808fb6:	41 5c                	pop    %r12
    34808fb8:	c3                   	retq   
    34808fb9:	48 89 df             	mov    %rbx,%rdi
    34808fbc:	48 89 d6             	mov    %rdx,%rsi
    34808fbf:	4c 89 e2             	mov    %r12,%rdx
    34808fc2:	48 83 c4 08          	add    $0x8,%rsp
    34808fc6:	5b                   	pop    %rbx
    34808fc7:	41 5c                	pop    %r12
    34808fc9:	e9 02 00 00 00       	jmpq   34808fd0 <mspace_realloc>
    34808fce:	66 90                	xchg   %ax,%ax

0000000034808fd0 <mspace_realloc>:
    34808fd0:	41 54                	push   %r12
    34808fd2:	53                   	push   %rbx
    34808fd3:	48 83 ec 18          	sub    $0x18,%rsp
    34808fd7:	49 89 d4             	mov    %rdx,%r12
    34808fda:	48 89 f3             	mov    %rsi,%rbx
    34808fdd:	48 85 db             	test   %rbx,%rbx
    34808fe0:	0f 84 1c 00 00 00    	je     34809002 <mspace_realloc+0x32>
    34808fe6:	49 83 fc 80          	cmp    $0xffffffffffffff80,%r12
    34808fea:	0f 82 21 00 00 00    	jb     34809011 <mspace_realloc+0x41>
    34808ff0:	e8 6b 3e 00 00       	callq  3480ce60 <__errno_location>
    34808ff5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    34808ffb:	31 db                	xor    %ebx,%ebx
    34808ffd:	e9 ad 00 00 00       	jmpq   348090af <mspace_realloc+0xdf>
    34809002:	4c 89 e6             	mov    %r12,%rsi
    34809005:	48 83 c4 18          	add    $0x18,%rsp
    34809009:	5b                   	pop    %rbx
    3480900a:	41 5c                	pop    %r12
    3480900c:	e9 df f2 ff ff       	jmpq   348082f0 <mspace_malloc>
    34809011:	49 8d 44 24 17       	lea    0x17(%r12),%rax
    34809016:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    3480901a:	49 83 fc 17          	cmp    $0x17,%r12
    3480901e:	ba 20 00 00 00       	mov    $0x20,%edx
    34809023:	48 0f 43 d0          	cmovae %rax,%rdx
    34809027:	48 8d 73 f0          	lea    -0x10(%rbx),%rsi
    3480902b:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34809030:	e8 8b 00 00 00       	callq  348090c0 <try_realloc_chunk>
    34809035:	48 89 d9             	mov    %rbx,%rcx
    34809038:	48 89 c3             	mov    %rax,%rbx
    3480903b:	48 85 db             	test   %rbx,%rbx
    3480903e:	0f 84 09 00 00 00    	je     3480904d <mspace_realloc+0x7d>
    34809044:	48 83 c3 10          	add    $0x10,%rbx
    34809048:	e9 62 00 00 00       	jmpq   348090af <mspace_realloc+0xdf>
    3480904d:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34809052:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34809057:	4c 89 e6             	mov    %r12,%rsi
    3480905a:	e8 91 f2 ff ff       	callq  348082f0 <mspace_malloc>
    3480905f:	48 89 c3             	mov    %rax,%rbx
    34809062:	48 85 db             	test   %rbx,%rbx
    34809065:	0f 84 90 ff ff ff    	je     34808ffb <mspace_realloc+0x2b>
    3480906b:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34809070:	48 8b 41 f8          	mov    -0x8(%rcx),%rax
    34809074:	48 89 ce             	mov    %rcx,%rsi
    34809077:	48 89 c2             	mov    %rax,%rdx
    3480907a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    3480907e:	31 c9                	xor    %ecx,%ecx
    34809080:	a8 03                	test   $0x3,%al
    34809082:	0f 94 c1             	sete   %cl
    34809085:	48 8d 04 cd 08 00 00 	lea    0x8(,%rcx,8),%rax
    3480908c:	00 
    3480908d:	48 29 c2             	sub    %rax,%rdx
    34809090:	4c 39 e2             	cmp    %r12,%rdx
    34809093:	49 0f 43 d4          	cmovae %r12,%rdx
    34809097:	48 89 df             	mov    %rbx,%rdi
    3480909a:	49 89 f4             	mov    %rsi,%r12
    3480909d:	e8 7e 26 00 00       	callq  3480b720 <memcpy>
    348090a2:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    348090a7:	4c 89 e6             	mov    %r12,%rsi
    348090aa:	e8 31 e5 ff ff       	callq  348075e0 <mspace_free>
    348090af:	48 89 d8             	mov    %rbx,%rax
    348090b2:	48 83 c4 18          	add    $0x18,%rsp
    348090b6:	5b                   	pop    %rbx
    348090b7:	41 5c                	pop    %r12
    348090b9:	c3                   	retq   
    348090ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000348090c0 <try_realloc_chunk>:
    348090c0:	41 54                	push   %r12
    348090c2:	53                   	push   %rbx
    348090c3:	48 83 ec 18          	sub    $0x18,%rsp
    348090c7:	48 89 f3             	mov    %rsi,%rbx
    348090ca:	4c 8b 43 08          	mov    0x8(%rbx),%r8
    348090ce:	44 89 c0             	mov    %r8d,%eax
    348090d1:	83 e0 03             	and    $0x3,%eax
    348090d4:	48 83 f8 01          	cmp    $0x1,%rax
    348090d8:	0f 84 f8 03 00 00    	je     348094d6 <try_realloc_chunk+0x416>
    348090de:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    348090e2:	49 39 dc             	cmp    %rbx,%r12
    348090e5:	0f 87 eb 03 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    348090eb:	4c 89 c6             	mov    %r8,%rsi
    348090ee:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    348090f2:	4c 8d 14 33          	lea    (%rbx,%rsi,1),%r10
    348090f6:	49 39 da             	cmp    %rbx,%r10
    348090f9:	0f 86 d7 03 00 00    	jbe    348094d6 <try_realloc_chunk+0x416>
    348090ff:	49 8b 4a 08          	mov    0x8(%r10),%rcx
    34809103:	f6 c1 01             	test   $0x1,%cl
    34809106:	0f 84 ca 03 00 00    	je     348094d6 <try_realloc_chunk+0x416>
    3480910c:	48 85 c0             	test   %rax,%rax
    3480910f:	0f 84 b9 00 00 00    	je     348091ce <try_realloc_chunk+0x10e>
    34809115:	48 89 f0             	mov    %rsi,%rax
    34809118:	48 29 d0             	sub    %rdx,%rax
    3480911b:	0f 83 e2 00 00 00    	jae    34809203 <try_realloc_chunk+0x143>
    34809121:	4c 39 57 28          	cmp    %r10,0x28(%rdi)
    34809125:	0f 84 13 01 00 00    	je     3480923e <try_realloc_chunk+0x17e>
    3480912b:	4c 39 57 20          	cmp    %r10,0x20(%rdi)
    3480912f:	0f 84 42 01 00 00    	je     34809277 <try_realloc_chunk+0x1b7>
    34809135:	f6 c1 02             	test   $0x2,%cl
    34809138:	0f 85 49 01 00 00    	jne    34809287 <try_realloc_chunk+0x1c7>
    3480913e:	49 89 cb             	mov    %rcx,%r11
    34809141:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
    34809145:	49 01 f3             	add    %rsi,%r11
    34809148:	4d 89 d9             	mov    %r11,%r9
    3480914b:	49 29 d1             	sub    %rdx,%r9
    3480914e:	0f 82 33 01 00 00    	jb     34809287 <try_realloc_chunk+0x1c7>
    34809154:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    3480915b:	0f 87 90 01 00 00    	ja     348092f1 <try_realloc_chunk+0x231>
    34809161:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    34809166:	49 8b 42 10          	mov    0x10(%r10),%rax
    3480916a:	4d 8b 4a 18          	mov    0x18(%r10),%r9
    3480916e:	48 be f8 ff ff ff 03 	movabs $0x3fffffff8,%rsi
    34809175:	00 00 00 
    34809178:	48 21 ce             	and    %rcx,%rsi
    3480917b:	48 8d 74 77 48       	lea    0x48(%rdi,%rsi,2),%rsi
    34809180:	48 39 f0             	cmp    %rsi,%rax
    34809183:	0f 84 13 00 00 00    	je     3480919c <try_realloc_chunk+0xdc>
    34809189:	49 39 c4             	cmp    %rax,%r12
    3480918c:	0f 87 44 03 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    34809192:	4c 39 50 18          	cmp    %r10,0x18(%rax)
    34809196:	0f 85 3a 03 00 00    	jne    348094d6 <try_realloc_chunk+0x416>
    3480919c:	49 39 c1             	cmp    %rax,%r9
    3480919f:	0f 84 90 01 00 00    	je     34809335 <try_realloc_chunk+0x275>
    348091a5:	49 39 f1             	cmp    %rsi,%r9
    348091a8:	0f 84 13 00 00 00    	je     348091c1 <try_realloc_chunk+0x101>
    348091ae:	4d 39 cc             	cmp    %r9,%r12
    348091b1:	0f 87 1f 03 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    348091b7:	4d 39 51 10          	cmp    %r10,0x10(%r9)
    348091bb:	0f 85 15 03 00 00    	jne    348094d6 <try_realloc_chunk+0x416>
    348091c1:	4c 89 48 18          	mov    %r9,0x18(%rax)
    348091c5:	49 89 41 10          	mov    %rax,0x10(%r9)
    348091c9:	e9 74 01 00 00       	jmpq   34809342 <try_realloc_chunk+0x282>
    348091ce:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    348091d5:	0f 82 ac 00 00 00    	jb     34809287 <try_realloc_chunk+0x1c7>
    348091db:	48 8d 42 08          	lea    0x8(%rdx),%rax
    348091df:	48 39 c6             	cmp    %rax,%rsi
    348091e2:	0f 82 9f 00 00 00    	jb     34809287 <try_realloc_chunk+0x1c7>
    348091e8:	48 29 d6             	sub    %rdx,%rsi
    348091eb:	48 8b 05 1e e5 20 00 	mov    0x20e51e(%rip),%rax        # 34a17710 <mparams+0x10>
    348091f2:	48 01 c0             	add    %rax,%rax
    348091f5:	48 39 c6             	cmp    %rax,%rsi
    348091f8:	0f 87 89 00 00 00    	ja     34809287 <try_realloc_chunk+0x1c7>
    348091fe:	e9 86 00 00 00       	jmpq   34809289 <try_realloc_chunk+0x1c9>
    34809203:	48 83 f8 20          	cmp    $0x20,%rax
    34809207:	0f 82 7c 00 00 00    	jb     34809289 <try_realloc_chunk+0x1c9>
    3480920d:	48 8d 34 13          	lea    (%rbx,%rdx,1),%rsi
    34809211:	41 83 e0 01          	and    $0x1,%r8d
    34809215:	49 09 d0             	or     %rdx,%r8
    34809218:	49 83 c8 02          	or     $0x2,%r8
    3480921c:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    34809220:	48 89 c1             	mov    %rax,%rcx
    34809223:	48 83 c9 03          	or     $0x3,%rcx
    34809227:	48 89 4c 13 08       	mov    %rcx,0x8(%rbx,%rdx,1)
    3480922c:	41 80 4a 08 01       	orb    $0x1,0x8(%r10)
    34809231:	48 89 c2             	mov    %rax,%rdx
    34809234:	e8 17 1e 00 00       	callq  3480b050 <dispose_chunk>
    34809239:	e9 4b 00 00 00       	jmpq   34809289 <try_realloc_chunk+0x1c9>
    3480923e:	48 03 77 10          	add    0x10(%rdi),%rsi
    34809242:	48 29 d6             	sub    %rdx,%rsi
    34809245:	0f 86 3c 00 00 00    	jbe    34809287 <try_realloc_chunk+0x1c7>
    3480924b:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    3480924f:	41 83 e0 01          	and    $0x1,%r8d
    34809253:	49 09 d0             	or     %rdx,%r8
    34809256:	49 83 c8 02          	or     $0x2,%r8
    3480925a:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    3480925e:	48 89 f1             	mov    %rsi,%rcx
    34809261:	48 83 c9 01          	or     $0x1,%rcx
    34809265:	48 89 4c 13 08       	mov    %rcx,0x8(%rbx,%rdx,1)
    3480926a:	48 89 47 28          	mov    %rax,0x28(%rdi)
    3480926e:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    34809272:	e9 12 00 00 00       	jmpq   34809289 <try_realloc_chunk+0x1c9>
    34809277:	48 03 77 08          	add    0x8(%rdi),%rsi
    3480927b:	48 89 f1             	mov    %rsi,%rcx
    3480927e:	48 29 d1             	sub    %rdx,%rcx
    34809281:	0f 83 0d 00 00 00    	jae    34809294 <try_realloc_chunk+0x1d4>
    34809287:	31 db                	xor    %ebx,%ebx
    34809289:	48 89 d8             	mov    %rbx,%rax
    3480928c:	48 83 c4 18          	add    $0x18,%rsp
    34809290:	5b                   	pop    %rbx
    34809291:	41 5c                	pop    %r12
    34809293:	c3                   	retq   
    34809294:	48 83 f9 20          	cmp    $0x20,%rcx
    34809298:	0f 82 2d 00 00 00    	jb     348092cb <try_realloc_chunk+0x20b>
    3480929e:	4c 8d 0c 13          	lea    (%rbx,%rdx,1),%r9
    348092a2:	41 83 e0 01          	and    $0x1,%r8d
    348092a6:	49 09 d0             	or     %rdx,%r8
    348092a9:	49 83 c8 02          	or     $0x2,%r8
    348092ad:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    348092b1:	48 89 c8             	mov    %rcx,%rax
    348092b4:	48 83 c8 01          	or     $0x1,%rax
    348092b8:	48 89 44 13 08       	mov    %rax,0x8(%rbx,%rdx,1)
    348092bd:	48 89 0c 33          	mov    %rcx,(%rbx,%rsi,1)
    348092c1:	80 64 33 08 fe       	andb   $0xfe,0x8(%rbx,%rsi,1)
    348092c6:	e9 19 00 00 00       	jmpq   348092e4 <try_realloc_chunk+0x224>
    348092cb:	41 83 e0 01          	and    $0x1,%r8d
    348092cf:	49 09 f0             	or     %rsi,%r8
    348092d2:	49 83 c8 02          	or     $0x2,%r8
    348092d6:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    348092da:	80 4c 33 08 01       	orb    $0x1,0x8(%rbx,%rsi,1)
    348092df:	31 c9                	xor    %ecx,%ecx
    348092e1:	45 31 c9             	xor    %r9d,%r9d
    348092e4:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    348092e8:	4c 89 4f 20          	mov    %r9,0x20(%rdi)
    348092ec:	e9 98 ff ff ff       	jmpq   34809289 <try_realloc_chunk+0x1c9>
    348092f1:	49 8b 72 18          	mov    0x18(%r10),%rsi
    348092f5:	49 8b 42 30          	mov    0x30(%r10),%rax
    348092f9:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348092fe:	4c 39 d6             	cmp    %r10,%rsi
    34809301:	0f 84 77 00 00 00    	je     3480937e <try_realloc_chunk+0x2be>
    34809307:	49 8b 42 10          	mov    0x10(%r10),%rax
    3480930b:	49 39 c4             	cmp    %rax,%r12
    3480930e:	0f 87 c2 01 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    34809314:	4c 39 50 18          	cmp    %r10,0x18(%rax)
    34809318:	0f 85 b8 01 00 00    	jne    348094d6 <try_realloc_chunk+0x416>
    3480931e:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    34809322:	0f 85 ae 01 00 00    	jne    348094d6 <try_realloc_chunk+0x416>
    34809328:	48 89 70 18          	mov    %rsi,0x18(%rax)
    3480932c:	48 89 46 10          	mov    %rax,0x10(%rsi)
    34809330:	e9 b8 00 00 00       	jmpq   348093ed <try_realloc_chunk+0x32d>
    34809335:	48 c1 e9 03          	shr    $0x3,%rcx
    34809339:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480933e:	d3 c0                	rol    %cl,%eax
    34809340:	21 07                	and    %eax,(%rdi)
    34809342:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    34809347:	49 83 f9 1f          	cmp    $0x1f,%r9
    3480934b:	0f 86 64 01 00 00    	jbe    348094b5 <try_realloc_chunk+0x3f5>
    34809351:	48 8d 34 13          	lea    (%rbx,%rdx,1),%rsi
    34809355:	41 83 e0 01          	and    $0x1,%r8d
    34809359:	49 09 d0             	or     %rdx,%r8
    3480935c:	49 83 c8 02          	or     $0x2,%r8
    34809360:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    34809364:	4c 89 c8             	mov    %r9,%rax
    34809367:	48 83 c8 03          	or     $0x3,%rax
    3480936b:	48 89 44 13 08       	mov    %rax,0x8(%rbx,%rdx,1)
    34809370:	42 80 4c 1b 08 01    	orb    $0x1,0x8(%rbx,%r11,1)
    34809376:	4c 89 ca             	mov    %r9,%rdx
    34809379:	e9 b6 fe ff ff       	jmpq   34809234 <try_realloc_chunk+0x174>
    3480937e:	49 8b 42 28          	mov    0x28(%r10),%rax
    34809382:	48 85 c0             	test   %rax,%rax
    34809385:	0f 84 09 00 00 00    	je     34809394 <try_realloc_chunk+0x2d4>
    3480938b:	49 8d 4a 28          	lea    0x28(%r10),%rcx
    3480938f:	e9 10 00 00 00       	jmpq   348093a4 <try_realloc_chunk+0x2e4>
    34809394:	49 8d 4a 20          	lea    0x20(%r10),%rcx
    34809398:	48 8b 01             	mov    (%rcx),%rax
    3480939b:	48 85 c0             	test   %rax,%rax
    3480939e:	0f 84 2b 01 00 00    	je     348094cf <try_realloc_chunk+0x40f>
    348093a4:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    348093a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    348093b0:	48 89 c6             	mov    %rax,%rsi
    348093b3:	49 89 c9             	mov    %rcx,%r9
    348093b6:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    348093ba:	48 8b 46 28          	mov    0x28(%rsi),%rax
    348093be:	48 85 c0             	test   %rax,%rax
    348093c1:	0f 85 e9 ff ff ff    	jne    348093b0 <try_realloc_chunk+0x2f0>
    348093c7:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    348093cb:	48 8b 46 20          	mov    0x20(%rsi),%rax
    348093cf:	48 85 c0             	test   %rax,%rax
    348093d2:	0f 85 d8 ff ff ff    	jne    348093b0 <try_realloc_chunk+0x2f0>
    348093d8:	4d 39 cc             	cmp    %r9,%r12
    348093db:	0f 87 f5 00 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    348093e1:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    348093e8:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    348093ed:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    348093f2:	48 85 c0             	test   %rax,%rax
    348093f5:	0f 84 b0 00 00 00    	je     348094ab <try_realloc_chunk+0x3eb>
    348093fb:	41 8b 4a 38          	mov    0x38(%r10),%ecx
    348093ff:	4c 39 94 cf 58 02 00 	cmp    %r10,0x258(%rdi,%rcx,8)
    34809406:	00 
    34809407:	0f 84 26 00 00 00    	je     34809433 <try_realloc_chunk+0x373>
    3480940d:	48 39 47 18          	cmp    %rax,0x18(%rdi)
    34809411:	0f 87 bf 00 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    34809417:	31 c9                	xor    %ecx,%ecx
    34809419:	4c 39 50 20          	cmp    %r10,0x20(%rax)
    3480941d:	0f 95 c1             	setne  %cl
    34809420:	48 89 74 c8 20       	mov    %rsi,0x20(%rax,%rcx,8)
    34809425:	48 85 f6             	test   %rsi,%rsi
    34809428:	0f 85 16 00 00 00    	jne    34809444 <try_realloc_chunk+0x384>
    3480942e:	e9 78 00 00 00       	jmpq   348094ab <try_realloc_chunk+0x3eb>
    34809433:	48 89 b4 cf 58 02 00 	mov    %rsi,0x258(%rdi,%rcx,8)
    3480943a:	00 
    3480943b:	48 85 f6             	test   %rsi,%rsi
    3480943e:	0f 84 5d 00 00 00    	je     348094a1 <try_realloc_chunk+0x3e1>
    34809444:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    34809448:	49 39 f4             	cmp    %rsi,%r12
    3480944b:	0f 87 85 00 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    34809451:	48 89 46 30          	mov    %rax,0x30(%rsi)
    34809455:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    34809459:	48 85 c9             	test   %rcx,%rcx
    3480945c:	0f 84 11 00 00 00    	je     34809473 <try_realloc_chunk+0x3b3>
    34809462:	49 39 cc             	cmp    %rcx,%r12
    34809465:	0f 87 6b 00 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    3480946b:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    3480946f:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    34809473:	49 8b 42 28          	mov    0x28(%r10),%rax
    34809477:	48 85 c0             	test   %rax,%rax
    3480947a:	0f 84 2b 00 00 00    	je     348094ab <try_realloc_chunk+0x3eb>
    34809480:	48 39 47 18          	cmp    %rax,0x18(%rdi)
    34809484:	0f 87 4c 00 00 00    	ja     348094d6 <try_realloc_chunk+0x416>
    3480948a:	48 89 46 28          	mov    %rax,0x28(%rsi)
    3480948e:	48 89 70 30          	mov    %rsi,0x30(%rax)
    34809492:	49 83 f9 1f          	cmp    $0x1f,%r9
    34809496:	0f 86 19 00 00 00    	jbe    348094b5 <try_realloc_chunk+0x3f5>
    3480949c:	e9 b0 fe ff ff       	jmpq   34809351 <try_realloc_chunk+0x291>
    348094a1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    348094a6:	d3 c0                	rol    %cl,%eax
    348094a8:	21 47 04             	and    %eax,0x4(%rdi)
    348094ab:	49 83 f9 1f          	cmp    $0x1f,%r9
    348094af:	0f 87 9c fe ff ff    	ja     34809351 <try_realloc_chunk+0x291>
    348094b5:	41 83 e0 01          	and    $0x1,%r8d
    348094b9:	4d 09 d8             	or     %r11,%r8
    348094bc:	49 83 c8 02          	or     $0x2,%r8
    348094c0:	4c 89 43 08          	mov    %r8,0x8(%rbx)
    348094c4:	42 80 4c 1b 08 01    	orb    $0x1,0x8(%rbx,%r11,1)
    348094ca:	e9 ba fd ff ff       	jmpq   34809289 <try_realloc_chunk+0x1c9>
    348094cf:	31 f6                	xor    %esi,%esi
    348094d1:	e9 17 ff ff ff       	jmpq   348093ed <try_realloc_chunk+0x32d>
    348094d6:	bf 01 00 00 00       	mov    $0x1,%edi
    348094db:	e8 a0 37 00 00       	callq  3480cc80 <exit>

00000000348094e0 <mspace_realloc_in_place>:
    348094e0:	41 54                	push   %r12
    348094e2:	53                   	push   %rbx
    348094e3:	50                   	push   %rax
    348094e4:	48 89 f3             	mov    %rsi,%rbx
    348094e7:	48 85 db             	test   %rbx,%rbx
    348094ea:	0f 84 15 00 00 00    	je     34809505 <mspace_realloc_in_place+0x25>
    348094f0:	48 83 fa 80          	cmp    $0xffffffffffffff80,%rdx
    348094f4:	0f 82 12 00 00 00    	jb     3480950c <mspace_realloc_in_place+0x2c>
    348094fa:	e8 61 39 00 00       	callq  3480ce60 <__errno_location>
    348094ff:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    34809505:	31 c0                	xor    %eax,%eax
    34809507:	e9 2d 00 00 00       	jmpq   34809539 <mspace_realloc_in_place+0x59>
    3480950c:	48 8d 42 17          	lea    0x17(%rdx),%rax
    34809510:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    34809514:	48 83 fa 17          	cmp    $0x17,%rdx
    34809518:	ba 20 00 00 00       	mov    $0x20,%edx
    3480951d:	48 0f 43 d0          	cmovae %rax,%rdx
    34809521:	4c 8d 63 f0          	lea    -0x10(%rbx),%r12
    34809525:	4c 89 e6             	mov    %r12,%rsi
    34809528:	e8 93 fb ff ff       	callq  348090c0 <try_realloc_chunk>
    3480952d:	48 89 c1             	mov    %rax,%rcx
    34809530:	31 c0                	xor    %eax,%eax
    34809532:	4c 39 e1             	cmp    %r12,%rcx
    34809535:	48 0f 44 c3          	cmove  %rbx,%rax
    34809539:	48 83 c4 08          	add    $0x8,%rsp
    3480953d:	5b                   	pop    %rbx
    3480953e:	41 5c                	pop    %r12
    34809540:	c3                   	retq   
    34809541:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34809548:	0f 1f 84 00 00 00 00 
    3480954f:	00 

0000000034809550 <mspace_memalign>:
    34809550:	41 54                	push   %r12
    34809552:	53                   	push   %rbx
    34809553:	50                   	push   %rax
    34809554:	49 89 fc             	mov    %rdi,%r12
    34809557:	48 83 fe 10          	cmp    $0x10,%rsi
    3480955b:	0f 87 12 00 00 00    	ja     34809573 <mspace_memalign+0x23>
    34809561:	4c 89 e7             	mov    %r12,%rdi
    34809564:	48 89 d6             	mov    %rdx,%rsi
    34809567:	48 83 c4 08          	add    $0x8,%rsp
    3480956b:	5b                   	pop    %rbx
    3480956c:	41 5c                	pop    %r12
    3480956e:	e9 7d ed ff ff       	jmpq   348082f0 <mspace_malloc>
    34809573:	48 83 fe 20          	cmp    $0x20,%rsi
    34809577:	b8 20 00 00 00       	mov    $0x20,%eax
    3480957c:	48 0f 47 c6          	cmova  %rsi,%rax
    34809580:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34809584:	48 85 c1             	test   %rax,%rcx
    34809587:	0f 84 28 00 00 00    	je     348095b5 <mspace_memalign+0x65>
    3480958d:	b9 20 00 00 00       	mov    $0x20,%ecx
    34809592:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34809599:	1f 84 00 00 00 00 00 
    348095a0:	48 89 cb             	mov    %rcx,%rbx
    348095a3:	48 8d 0c 1b          	lea    (%rbx,%rbx,1),%rcx
    348095a7:	48 39 c3             	cmp    %rax,%rbx
    348095aa:	0f 82 f0 ff ff ff    	jb     348095a0 <mspace_memalign+0x50>
    348095b0:	e9 03 00 00 00       	jmpq   348095b8 <mspace_memalign+0x68>
    348095b5:	48 89 c3             	mov    %rax,%rbx
    348095b8:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
    348095bf:	48 29 d8             	sub    %rbx,%rax
    348095c2:	48 39 d0             	cmp    %rdx,%rax
    348095c5:	0f 86 bd 00 00 00    	jbe    34809688 <mspace_memalign+0x138>
    348095cb:	48 8d 42 17          	lea    0x17(%rdx),%rax
    348095cf:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    348095d3:	48 83 fa 17          	cmp    $0x17,%rdx
    348095d7:	b9 20 00 00 00       	mov    $0x20,%ecx
    348095dc:	48 0f 43 c8          	cmovae %rax,%rcx
    348095e0:	48 89 0c 24          	mov    %rcx,(%rsp)
    348095e4:	48 8d 74 19 18       	lea    0x18(%rcx,%rbx,1),%rsi
    348095e9:	4c 89 e7             	mov    %r12,%rdi
    348095ec:	e8 ff ec ff ff       	callq  348082f0 <mspace_malloc>
    348095f1:	48 85 c0             	test   %rax,%rax
    348095f4:	0f 84 a2 00 00 00    	je     3480969c <mspace_memalign+0x14c>
    348095fa:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    348095fe:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
    34809602:	48 85 c1             	test   %rax,%rcx
    34809605:	0f 84 98 00 00 00    	je     348096a3 <mspace_memalign+0x153>
    3480960b:	48 8d 4c 18 ff       	lea    -0x1(%rax,%rbx,1),%rcx
    34809610:	48 89 da             	mov    %rbx,%rdx
    34809613:	48 f7 da             	neg    %rdx
    34809616:	48 21 ca             	and    %rcx,%rdx
    34809619:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    3480961d:	48 89 cf             	mov    %rcx,%rdi
    34809620:	48 29 f7             	sub    %rsi,%rdi
    34809623:	48 83 ff 1f          	cmp    $0x1f,%rdi
    34809627:	48 8d 5c 1a f0       	lea    -0x10(%rdx,%rbx,1),%rbx
    3480962c:	48 0f 47 d9          	cmova  %rcx,%rbx
    34809630:	48 89 da             	mov    %rbx,%rdx
    34809633:	48 29 f2             	sub    %rsi,%rdx
    34809636:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    3480963a:	48 89 f9             	mov    %rdi,%rcx
    3480963d:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    34809641:	48 29 d1             	sub    %rdx,%rcx
    34809644:	40 f6 c7 03          	test   $0x3,%dil
    34809648:	0f 84 5d 00 00 00    	je     348096ab <mspace_memalign+0x15b>
    3480964e:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    34809652:	83 e7 01             	and    $0x1,%edi
    34809655:	48 09 cf             	or     %rcx,%rdi
    34809658:	48 83 cf 02          	or     $0x2,%rdi
    3480965c:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    34809660:	80 4c 0b 08 01       	orb    $0x1,0x8(%rbx,%rcx,1)
    34809665:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    34809669:	83 e1 01             	and    $0x1,%ecx
    3480966c:	48 09 d1             	or     %rdx,%rcx
    3480966f:	48 83 c9 02          	or     $0x2,%rcx
    34809673:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
    34809677:	80 4b 08 01          	orb    $0x1,0x8(%rbx)
    3480967b:	4c 89 e7             	mov    %r12,%rdi
    3480967e:	e8 cd 19 00 00       	callq  3480b050 <dispose_chunk>
    34809683:	e9 2d 00 00 00       	jmpq   348096b5 <mspace_memalign+0x165>
    34809688:	4d 85 e4             	test   %r12,%r12
    3480968b:	0f 84 0b 00 00 00    	je     3480969c <mspace_memalign+0x14c>
    34809691:	e8 ca 37 00 00       	callq  3480ce60 <__errno_location>
    34809696:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    3480969c:	31 db                	xor    %ebx,%ebx
    3480969e:	e9 76 00 00 00       	jmpq   34809719 <mspace_memalign+0x1c9>
    348096a3:	48 89 f3             	mov    %rsi,%rbx
    348096a6:	e9 0d 00 00 00       	jmpq   348096b8 <mspace_memalign+0x168>
    348096ab:	48 03 16             	add    (%rsi),%rdx
    348096ae:	48 89 13             	mov    %rdx,(%rbx)
    348096b1:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    348096b5:	48 89 de             	mov    %rbx,%rsi
    348096b8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    348096bc:	f6 c1 03             	test   $0x3,%cl
    348096bf:	0f 84 50 00 00 00    	je     34809715 <mspace_memalign+0x1c5>
    348096c5:	48 89 cf             	mov    %rcx,%rdi
    348096c8:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    348096cc:	48 8b 04 24          	mov    (%rsp),%rax
    348096d0:	48 8d 40 20          	lea    0x20(%rax),%rax
    348096d4:	48 39 c7             	cmp    %rax,%rdi
    348096d7:	0f 86 38 00 00 00    	jbe    34809715 <mspace_memalign+0x1c5>
    348096dd:	48 89 fa             	mov    %rdi,%rdx
    348096e0:	48 8b 04 24          	mov    (%rsp),%rax
    348096e4:	48 29 c2             	sub    %rax,%rdx
    348096e7:	4c 8d 04 03          	lea    (%rbx,%rax,1),%r8
    348096eb:	83 e1 01             	and    $0x1,%ecx
    348096ee:	48 09 c1             	or     %rax,%rcx
    348096f1:	48 83 c9 02          	or     $0x2,%rcx
    348096f5:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    348096f9:	48 89 d1             	mov    %rdx,%rcx
    348096fc:	48 83 c9 03          	or     $0x3,%rcx
    34809700:	48 89 4c 03 08       	mov    %rcx,0x8(%rbx,%rax,1)
    34809705:	80 4c 3b 08 01       	orb    $0x1,0x8(%rbx,%rdi,1)
    3480970a:	4c 89 e7             	mov    %r12,%rdi
    3480970d:	4c 89 c6             	mov    %r8,%rsi
    34809710:	e8 3b 19 00 00       	callq  3480b050 <dispose_chunk>
    34809715:	48 83 c3 10          	add    $0x10,%rbx
    34809719:	48 89 d8             	mov    %rbx,%rax
    3480971c:	48 83 c4 08          	add    $0x8,%rsp
    34809720:	5b                   	pop    %rbx
    34809721:	41 5c                	pop    %r12
    34809723:	c3                   	retq   
    34809724:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480972b:	00 00 00 00 00 

0000000034809730 <mspace_independent_calloc>:
    34809730:	50                   	push   %rax
    34809731:	48 89 c8             	mov    %rcx,%rax
    34809734:	48 89 14 24          	mov    %rdx,(%rsp)
    34809738:	48 89 e2             	mov    %rsp,%rdx
    3480973b:	b9 03 00 00 00       	mov    $0x3,%ecx
    34809740:	49 89 c0             	mov    %rax,%r8
    34809743:	e8 08 00 00 00       	callq  34809750 <ialloc>
    34809748:	59                   	pop    %rcx
    34809749:	c3                   	retq   
    3480974a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000034809750 <ialloc>:
    34809750:	41 54                	push   %r12
    34809752:	53                   	push   %rbx
    34809753:	48 83 ec 38          	sub    $0x38,%rsp
    34809757:	4c 89 c0             	mov    %r8,%rax
    3480975a:	48 83 3d 9e df 20 00 	cmpq   $0x0,0x20df9e(%rip)        # 34a17700 <mparams>
    34809761:	00 
    34809762:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    34809767:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    3480976b:	0f 84 1a 00 00 00    	je     3480978b <ialloc+0x3b>
    34809771:	48 85 c0             	test   %rax,%rax
    34809774:	0f 84 90 00 00 00    	je     3480980a <ialloc+0xba>
    3480977a:	48 85 f6             	test   %rsi,%rsi
    3480977d:	0f 84 c1 05 00 00    	je     34809d44 <ialloc+0x5f4>
    34809783:	45 31 d2             	xor    %r10d,%r10d
    34809786:	e9 ac 00 00 00       	jmpq   34809837 <ialloc+0xe7>
    3480978b:	48 89 3c 24          	mov    %rdi,(%rsp)
    3480978f:	49 89 d4             	mov    %rdx,%r12
    34809792:	48 89 c3             	mov    %rax,%rbx
    34809795:	bf 1e 00 00 00       	mov    $0x1e,%edi
    3480979a:	e8 a1 2e 00 00       	callq  3480c640 <sysconf>
    3480979f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    348097a3:	48 85 c1             	test   %rax,%rcx
    348097a6:	0f 85 b8 05 00 00    	jne    34809d64 <ialloc+0x614>
    348097ac:	48 89 05 55 df 20 00 	mov    %rax,0x20df55(%rip)        # 34a17708 <mparams+0x8>
    348097b3:	66 0f 6f 05 05 b5 00 	movdqa 0xb505(%rip),%xmm0        # 34814cc0 <half+0x10>
    348097ba:	00 
    348097bb:	f3 0f 7f 05 4d df 20 	movdqu %xmm0,0x20df4d(%rip)        # 34a17710 <mparams+0x10>
    348097c2:	00 
    348097c3:	48 c7 05 52 df 20 00 	movq   $0x200000,0x20df52(%rip)        # 34a17720 <mparams+0x20>
    348097ca:	00 00 20 00 
    348097ce:	c7 05 50 df 20 00 04 	movl   $0x4,0x20df50(%rip)        # 34a17728 <mparams+0x28>
    348097d5:	00 00 00 
    348097d8:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    348097dd:	48 83 c8 08          	or     $0x8,%rax
    348097e1:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    348097e7:	48 89 05 12 df 20 00 	mov    %rax,0x20df12(%rip)        # 34a17700 <mparams>
    348097ee:	48 89 d8             	mov    %rbx,%rax
    348097f1:	4c 89 e2             	mov    %r12,%rdx
    348097f4:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    348097f9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    348097fd:	48 8b 3c 24          	mov    (%rsp),%rdi
    34809801:	48 85 c0             	test   %rax,%rax
    34809804:	0f 85 70 ff ff ff    	jne    3480977a <ialloc+0x2a>
    3480980a:	48 85 f6             	test   %rsi,%rsi
    3480980d:	0f 84 3c 04 00 00    	je     34809c4f <ialloc+0x4ff>
    34809813:	48 8d 04 f5 00 00 00 	lea    0x0(,%rsi,8),%rax
    3480981a:	00 
    3480981b:	48 8d 1c f5 17 00 00 	lea    0x17(,%rsi,8),%rbx
    34809822:	00 
    34809823:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    34809827:	48 83 f8 17          	cmp    $0x17,%rax
    3480982b:	41 ba 20 00 00 00    	mov    $0x20,%r10d
    34809831:	4c 0f 43 d3          	cmovae %rbx,%r10
    34809835:	31 c0                	xor    %eax,%eax
    34809837:	f6 c1 01             	test   $0x1,%cl
    3480983a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3480983f:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    34809844:	0f 85 c9 02 00 00    	jne    34809b13 <ialloc+0x3c3>
    3480984a:	48 83 fe 03          	cmp    $0x3,%rsi
    3480984e:	0f 86 e5 02 00 00    	jbe    34809b39 <ialloc+0x3e9>
    34809854:	49 89 f1             	mov    %rsi,%r9
    34809857:	49 83 e1 fc          	and    $0xfffffffffffffffc,%r9
    3480985b:	0f 84 d8 02 00 00    	je     34809b39 <ialloc+0x3e9>
    34809861:	49 8d 59 fc          	lea    -0x4(%r9),%rbx
    34809865:	48 c1 eb 02          	shr    $0x2,%rbx
    34809869:	44 8d 43 01          	lea    0x1(%rbx),%r8d
    3480986d:	41 83 e0 01          	and    $0x1,%r8d
    34809871:	48 85 db             	test   %rbx,%rbx
    34809874:	0f 84 d2 04 00 00    	je     34809d4c <ialloc+0x5fc>
    3480987a:	49 8d 48 ff          	lea    -0x1(%r8),%rcx
    3480987e:	48 29 d9             	sub    %rbx,%rcx
    34809881:	66 0f ef c0          	pxor   %xmm0,%xmm0
    34809885:	31 db                	xor    %ebx,%ebx
    34809887:	66 44 0f 6f 05 40 b4 	movdqa 0xb440(%rip),%xmm8        # 34814cd0 <half+0x20>
    3480988e:	00 00 
    34809890:	66 44 0f 6f 25 47 b4 	movdqa 0xb447(%rip),%xmm12        # 34814ce0 <half+0x30>
    34809897:	00 00 
    34809899:	66 44 0f 6f 0d 4e b4 	movdqa 0xb44e(%rip),%xmm9        # 34814cf0 <half+0x40>
    348098a0:	00 00 
    348098a2:	66 44 0f 6f 15 55 b4 	movdqa 0xb455(%rip),%xmm10        # 34814d00 <half+0x50>
    348098a9:	00 00 
    348098ab:	66 44 0f 6f 1d 5c b4 	movdqa 0xb45c(%rip),%xmm11        # 34814d10 <half+0x60>
    348098b2:	00 00 
    348098b4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    348098b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348098bf:	00 
    348098c0:	f3 0f 6f 2c da       	movdqu (%rdx,%rbx,8),%xmm5
    348098c5:	f3 0f 6f 74 da 10    	movdqu 0x10(%rdx,%rbx,8),%xmm6
    348098cb:	f3 44 0f 6f 74 da 20 	movdqu 0x20(%rdx,%rbx,8),%xmm14
    348098d2:	f3 44 0f 6f 6c da 30 	movdqu 0x30(%rdx,%rbx,8),%xmm13
    348098d9:	66 0f 6f e5          	movdqa %xmm5,%xmm4
    348098dd:	66 41 0f ef e0       	pxor   %xmm8,%xmm4
    348098e2:	66 41 0f 6f dc       	movdqa %xmm12,%xmm3
    348098e7:	66 0f 66 dc          	pcmpgtd %xmm4,%xmm3
    348098eb:	66 0f 70 fb a0       	pshufd $0xa0,%xmm3,%xmm7
    348098f0:	66 41 0f 76 e4       	pcmpeqd %xmm12,%xmm4
    348098f5:	66 0f 70 e4 f5       	pshufd $0xf5,%xmm4,%xmm4
    348098fa:	66 0f db e7          	pand   %xmm7,%xmm4
    348098fe:	66 0f 70 db f5       	pshufd $0xf5,%xmm3,%xmm3
    34809903:	66 0f eb dc          	por    %xmm4,%xmm3
    34809907:	66 0f 6f e6          	movdqa %xmm6,%xmm4
    3480990b:	66 41 0f ef e0       	pxor   %xmm8,%xmm4
    34809910:	66 41 0f 6f fc       	movdqa %xmm12,%xmm7
    34809915:	66 0f 66 fc          	pcmpgtd %xmm4,%xmm7
    34809919:	66 0f 70 d7 a0       	pshufd $0xa0,%xmm7,%xmm2
    3480991e:	66 41 0f 76 e4       	pcmpeqd %xmm12,%xmm4
    34809923:	66 0f 70 e4 f5       	pshufd $0xf5,%xmm4,%xmm4
    34809928:	66 0f db e2          	pand   %xmm2,%xmm4
    3480992c:	66 0f 70 d7 f5       	pshufd $0xf5,%xmm7,%xmm2
    34809931:	66 0f eb d4          	por    %xmm4,%xmm2
    34809935:	66 41 0f d4 e9       	paddq  %xmm9,%xmm5
    3480993a:	66 41 0f d4 f1       	paddq  %xmm9,%xmm6
    3480993f:	66 0f 6f e3          	movdqa %xmm3,%xmm4
    34809943:	66 0f df e5          	pandn  %xmm5,%xmm4
    34809947:	66 0f 6f ea          	movdqa %xmm2,%xmm5
    3480994b:	66 0f df ee          	pandn  %xmm6,%xmm5
    3480994f:	66 41 0f db db       	pand   %xmm11,%xmm3
    34809954:	66 41 0f db e2       	pand   %xmm10,%xmm4
    34809959:	66 0f eb e3          	por    %xmm3,%xmm4
    3480995d:	66 41 0f db d3       	pand   %xmm11,%xmm2
    34809962:	66 41 0f db ea       	pand   %xmm10,%xmm5
    34809967:	66 0f eb ea          	por    %xmm2,%xmm5
    3480996b:	66 0f d4 e0          	paddq  %xmm0,%xmm4
    3480996f:	66 0f d4 e9          	paddq  %xmm1,%xmm5
    34809973:	66 41 0f 6f c6       	movdqa %xmm14,%xmm0
    34809978:	66 41 0f ef c0       	pxor   %xmm8,%xmm0
    3480997d:	66 41 0f 6f cc       	movdqa %xmm12,%xmm1
    34809982:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
    34809986:	66 0f 70 d1 a0       	pshufd $0xa0,%xmm1,%xmm2
    3480998b:	66 41 0f 76 c4       	pcmpeqd %xmm12,%xmm0
    34809990:	66 0f 70 c0 f5       	pshufd $0xf5,%xmm0,%xmm0
    34809995:	66 0f db c2          	pand   %xmm2,%xmm0
    34809999:	66 0f 70 d1 f5       	pshufd $0xf5,%xmm1,%xmm2
    3480999e:	66 0f eb d0          	por    %xmm0,%xmm2
    348099a2:	66 41 0f 6f c5       	movdqa %xmm13,%xmm0
    348099a7:	66 41 0f ef c0       	pxor   %xmm8,%xmm0
    348099ac:	66 41 0f 6f cc       	movdqa %xmm12,%xmm1
    348099b1:	66 0f 66 c8          	pcmpgtd %xmm0,%xmm1
    348099b5:	66 0f 70 d9 a0       	pshufd $0xa0,%xmm1,%xmm3
    348099ba:	66 41 0f 76 c4       	pcmpeqd %xmm12,%xmm0
    348099bf:	66 0f 70 c0 f5       	pshufd $0xf5,%xmm0,%xmm0
    348099c4:	66 0f db c3          	pand   %xmm3,%xmm0
    348099c8:	66 0f 70 d9 f5       	pshufd $0xf5,%xmm1,%xmm3
    348099cd:	66 0f eb d8          	por    %xmm0,%xmm3
    348099d1:	66 45 0f d4 f1       	paddq  %xmm9,%xmm14
    348099d6:	66 45 0f d4 e9       	paddq  %xmm9,%xmm13
    348099db:	66 0f 6f c2          	movdqa %xmm2,%xmm0
    348099df:	66 41 0f df c6       	pandn  %xmm14,%xmm0
    348099e4:	66 0f 6f cb          	movdqa %xmm3,%xmm1
    348099e8:	66 41 0f df cd       	pandn  %xmm13,%xmm1
    348099ed:	66 41 0f db d3       	pand   %xmm11,%xmm2
    348099f2:	66 41 0f db c2       	pand   %xmm10,%xmm0
    348099f7:	66 0f eb c2          	por    %xmm2,%xmm0
    348099fb:	66 41 0f db db       	pand   %xmm11,%xmm3
    34809a00:	66 41 0f db ca       	pand   %xmm10,%xmm1
    34809a05:	66 0f eb cb          	por    %xmm3,%xmm1
    34809a09:	66 0f d4 c4          	paddq  %xmm4,%xmm0
    34809a0d:	66 0f d4 cd          	paddq  %xmm5,%xmm1
    34809a11:	48 83 c3 08          	add    $0x8,%rbx
    34809a15:	48 83 c1 02          	add    $0x2,%rcx
    34809a19:	0f 85 a1 fe ff ff    	jne    348098c0 <ialloc+0x170>
    34809a1f:	4d 85 c0             	test   %r8,%r8
    34809a22:	0f 84 c5 00 00 00    	je     34809aed <ialloc+0x39d>
    34809a28:	f3 0f 6f 14 da       	movdqu (%rdx,%rbx,8),%xmm2
    34809a2d:	f3 0f 6f 6c da 10    	movdqu 0x10(%rdx,%rbx,8),%xmm5
    34809a33:	66 0f 6f 1d 95 b2 00 	movdqa 0xb295(%rip),%xmm3        # 34814cd0 <half+0x20>
    34809a3a:	00 
    34809a3b:	66 0f 6f f5          	movdqa %xmm5,%xmm6
    34809a3f:	66 0f ef f3          	pxor   %xmm3,%xmm6
    34809a43:	66 44 0f 6f 05 94 b2 	movdqa 0xb294(%rip),%xmm8        # 34814ce0 <half+0x30>
    34809a4a:	00 00 
    34809a4c:	66 41 0f 6f f8       	movdqa %xmm8,%xmm7
    34809a51:	66 0f 66 fe          	pcmpgtd %xmm6,%xmm7
    34809a55:	66 0f 70 e7 a0       	pshufd $0xa0,%xmm7,%xmm4
    34809a5a:	66 41 0f 76 f0       	pcmpeqd %xmm8,%xmm6
    34809a5f:	66 0f 70 f6 f5       	pshufd $0xf5,%xmm6,%xmm6
    34809a64:	66 0f db f4          	pand   %xmm4,%xmm6
    34809a68:	66 0f 70 e7 f5       	pshufd $0xf5,%xmm7,%xmm4
    34809a6d:	66 0f eb e6          	por    %xmm6,%xmm4
    34809a71:	66 0f 6f 35 77 b2 00 	movdqa 0xb277(%rip),%xmm6        # 34814cf0 <half+0x40>
    34809a78:	00 
    34809a79:	66 0f d4 ee          	paddq  %xmm6,%xmm5
    34809a7d:	66 0f 6f fc          	movdqa %xmm4,%xmm7
    34809a81:	66 0f df fd          	pandn  %xmm5,%xmm7
    34809a85:	66 44 0f 6f 0d 72 b2 	movdqa 0xb272(%rip),%xmm9        # 34814d00 <half+0x50>
    34809a8c:	00 00 
    34809a8e:	66 0f 6f 2d 7a b2 00 	movdqa 0xb27a(%rip),%xmm5        # 34814d10 <half+0x60>
    34809a95:	00 
    34809a96:	66 0f db e5          	pand   %xmm5,%xmm4
    34809a9a:	66 41 0f db f9       	pand   %xmm9,%xmm7
    34809a9f:	66 0f eb fc          	por    %xmm4,%xmm7
    34809aa3:	66 0f d4 cf          	paddq  %xmm7,%xmm1
    34809aa7:	66 0f ef da          	pxor   %xmm2,%xmm3
    34809aab:	66 41 0f 6f e0       	movdqa %xmm8,%xmm4
    34809ab0:	66 0f 66 e3          	pcmpgtd %xmm3,%xmm4
    34809ab4:	66 0f 70 fc a0       	pshufd $0xa0,%xmm4,%xmm7
    34809ab9:	66 41 0f 76 d8       	pcmpeqd %xmm8,%xmm3
    34809abe:	66 0f 70 db f5       	pshufd $0xf5,%xmm3,%xmm3
    34809ac3:	66 0f db df          	pand   %xmm7,%xmm3
    34809ac7:	66 0f 70 e4 f5       	pshufd $0xf5,%xmm4,%xmm4
    34809acc:	66 0f eb e3          	por    %xmm3,%xmm4
    34809ad0:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    34809ad4:	66 0f 6f dc          	movdqa %xmm4,%xmm3
    34809ad8:	66 0f df da          	pandn  %xmm2,%xmm3
    34809adc:	66 0f db e5          	pand   %xmm5,%xmm4
    34809ae0:	66 41 0f db d9       	pand   %xmm9,%xmm3
    34809ae5:	66 0f eb dc          	por    %xmm4,%xmm3
    34809ae9:	66 0f d4 c3          	paddq  %xmm3,%xmm0
    34809aed:	66 0f d4 c1          	paddq  %xmm1,%xmm0
    34809af1:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    34809af6:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    34809afa:	66 49 0f 7e cc       	movq   %xmm1,%r12
    34809aff:	49 39 f1             	cmp    %rsi,%r9
    34809b02:	0f 85 37 00 00 00    	jne    34809b3f <ialloc+0x3ef>
    34809b08:	31 c0                	xor    %eax,%eax
    34809b0a:	48 89 04 24          	mov    %rax,(%rsp)
    34809b0e:	e9 70 00 00 00       	jmpq   34809b83 <ialloc+0x433>
    34809b13:	48 8b 02             	mov    (%rdx),%rax
    34809b16:	48 8d 48 17          	lea    0x17(%rax),%rcx
    34809b1a:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    34809b1e:	48 83 f8 17          	cmp    $0x17,%rax
    34809b22:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    34809b28:	4c 0f 43 e1          	cmovae %rcx,%r12
    34809b2c:	4c 89 24 24          	mov    %r12,(%rsp)
    34809b30:	4c 0f af e6          	imul   %rsi,%r12
    34809b34:	e9 4a 00 00 00       	jmpq   34809b83 <ialloc+0x433>
    34809b39:	45 31 c9             	xor    %r9d,%r9d
    34809b3c:	45 31 e4             	xor    %r12d,%r12d
    34809b3f:	4a 8d 0c ca          	lea    (%rdx,%r9,8),%rcx
    34809b43:	48 89 f0             	mov    %rsi,%rax
    34809b46:	4c 29 c8             	sub    %r9,%rax
    34809b49:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    34809b4f:	31 f6                	xor    %esi,%esi
    34809b51:	48 89 34 24          	mov    %rsi,(%rsp)
    34809b55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34809b5c:	00 00 00 00 
    34809b60:	48 8b 31             	mov    (%rcx),%rsi
    34809b63:	48 8d 5e 17          	lea    0x17(%rsi),%rbx
    34809b67:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    34809b6b:	48 83 fe 17          	cmp    $0x17,%rsi
    34809b6f:	49 0f 42 d8          	cmovb  %r8,%rbx
    34809b73:	49 01 dc             	add    %rbx,%r12
    34809b76:	48 83 c1 08          	add    $0x8,%rcx
    34809b7a:	48 ff c8             	dec    %rax
    34809b7d:	0f 85 dd ff ff ff    	jne    34809b60 <ialloc+0x410>
    34809b83:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    34809b88:	4b 8d 74 22 f8       	lea    -0x8(%r10,%r12,1),%rsi
    34809b8d:	e8 5e e7 ff ff       	callq  348082f0 <mspace_malloc>
    34809b92:	48 89 c3             	mov    %rax,%rbx
    34809b95:	48 85 db             	test   %rbx,%rbx
    34809b98:	0f 84 5f 00 00 00    	je     34809bfd <ialloc+0x4ad>
    34809b9e:	48 89 df             	mov    %rbx,%rdi
    34809ba1:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    34809ba5:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    34809ba9:	f6 44 24 08 02       	testb  $0x2,0x8(%rsp)
    34809bae:	0f 84 2f 00 00 00    	je     34809be3 <ialloc+0x493>
    34809bb4:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx
    34809bbb:	48 2b 54 24 10       	sub    0x10(%rsp),%rdx
    34809bc0:	48 01 ca             	add    %rcx,%rdx
    34809bc3:	31 f6                	xor    %esi,%esi
    34809bc5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34809bca:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34809bcf:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34809bd4:	e8 b4 1b 00 00       	callq  3480b78d <memset>
    34809bd9:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    34809bde:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34809be3:	48 83 c3 f0          	add    $0xfffffffffffffff0,%rbx
    34809be7:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    34809bec:	48 85 c0             	test   %rax,%rax
    34809bef:	0f 84 0f 00 00 00    	je     34809c04 <ialloc+0x4b4>
    34809bf5:	49 89 cc             	mov    %rcx,%r12
    34809bf8:	e9 18 00 00 00       	jmpq   34809c15 <ialloc+0x4c5>
    34809bfd:	31 c0                	xor    %eax,%eax
    34809bff:	e9 40 01 00 00       	jmpq   34809d44 <ialloc+0x5f4>
    34809c04:	4c 29 e1             	sub    %r12,%rcx
    34809c07:	4a 8d 44 23 10       	lea    0x10(%rbx,%r12,1),%rax
    34809c0c:	48 83 c9 03          	or     $0x3,%rcx
    34809c10:	4a 89 4c 23 08       	mov    %rcx,0x8(%rbx,%r12,1)
    34809c15:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
    34809c1a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    34809c1f:	48 89 38             	mov    %rdi,(%rax)
    34809c22:	49 89 ca             	mov    %rcx,%r10
    34809c25:	49 ff ca             	dec    %r10
    34809c28:	0f 84 0e 01 00 00    	je     34809d3c <ialloc+0x5ec>
    34809c2e:	45 89 d1             	mov    %r10d,%r9d
    34809c31:	41 83 e1 01          	and    $0x1,%r9d
    34809c35:	48 83 f9 02          	cmp    $0x2,%rcx
    34809c39:	0f 85 1c 00 00 00    	jne    34809c5b <ialloc+0x50b>
    34809c3f:	31 d2                	xor    %edx,%edx
    34809c41:	4d 85 c9             	test   %r9,%r9
    34809c44:	0f 85 b1 00 00 00    	jne    34809cfb <ialloc+0x5ab>
    34809c4a:	e9 ed 00 00 00       	jmpq   34809d3c <ialloc+0x5ec>
    34809c4f:	31 f6                	xor    %esi,%esi
    34809c51:	e8 9a e6 ff ff       	callq  348082f0 <mspace_malloc>
    34809c56:	e9 e9 00 00 00       	jmpq   34809d44 <ialloc+0x5f4>
    34809c5b:	4d 29 ca             	sub    %r9,%r10
    34809c5e:	31 d2                	xor    %edx,%edx
    34809c60:	4c 8b 04 24          	mov    (%rsp),%r8
    34809c64:	4d 85 c0             	test   %r8,%r8
    34809c67:	4c 89 c6             	mov    %r8,%rsi
    34809c6a:	0f 85 19 00 00 00    	jne    34809c89 <ialloc+0x539>
    34809c70:	49 8b 3c d3          	mov    (%r11,%rdx,8),%rdi
    34809c74:	48 8d 77 17          	lea    0x17(%rdi),%rsi
    34809c78:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
    34809c7c:	48 83 ff 17          	cmp    $0x17,%rdi
    34809c80:	b9 20 00 00 00       	mov    $0x20,%ecx
    34809c85:	48 0f 42 f1          	cmovb  %rcx,%rsi
    34809c89:	49 29 f4             	sub    %rsi,%r12
    34809c8c:	48 89 f1             	mov    %rsi,%rcx
    34809c8f:	48 83 c9 03          	or     $0x3,%rcx
    34809c93:	48 8d 3c 33          	lea    (%rbx,%rsi,1),%rdi
    34809c97:	4d 85 c0             	test   %r8,%r8
    34809c9a:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    34809c9e:	48 8d 4c 33 10       	lea    0x10(%rbx,%rsi,1),%rcx
    34809ca3:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)
    34809ca8:	0f 85 1b 00 00 00    	jne    34809cc9 <ialloc+0x579>
    34809cae:	49 8b 74 d3 08       	mov    0x8(%r11,%rdx,8),%rsi
    34809cb3:	48 8d 4e 17          	lea    0x17(%rsi),%rcx
    34809cb7:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    34809cbb:	48 83 fe 17          	cmp    $0x17,%rsi
    34809cbf:	41 b8 20 00 00 00    	mov    $0x20,%r8d
    34809cc5:	4c 0f 43 c1          	cmovae %rcx,%r8
    34809cc9:	4d 29 c4             	sub    %r8,%r12
    34809ccc:	4c 89 c1             	mov    %r8,%rcx
    34809ccf:	48 83 c9 03          	or     $0x3,%rcx
    34809cd3:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    34809cd7:	4a 8d 1c 07          	lea    (%rdi,%r8,1),%rbx
    34809cdb:	4a 8d 4c 07 10       	lea    0x10(%rdi,%r8,1),%rcx
    34809ce0:	48 89 4c d0 10       	mov    %rcx,0x10(%rax,%rdx,8)
    34809ce5:	48 83 c2 02          	add    $0x2,%rdx
    34809ce9:	49 39 d2             	cmp    %rdx,%r10
    34809cec:	0f 85 6e ff ff ff    	jne    34809c60 <ialloc+0x510>
    34809cf2:	4d 85 c9             	test   %r9,%r9
    34809cf5:	0f 84 41 00 00 00    	je     34809d3c <ialloc+0x5ec>
    34809cfb:	48 8b 3c 24          	mov    (%rsp),%rdi
    34809cff:	48 85 ff             	test   %rdi,%rdi
    34809d02:	0f 85 19 00 00 00    	jne    34809d21 <ialloc+0x5d1>
    34809d08:	49 8b 0c d3          	mov    (%r11,%rdx,8),%rcx
    34809d0c:	48 8d 71 17          	lea    0x17(%rcx),%rsi
    34809d10:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
    34809d14:	48 83 f9 17          	cmp    $0x17,%rcx
    34809d18:	bf 20 00 00 00       	mov    $0x20,%edi
    34809d1d:	48 0f 43 fe          	cmovae %rsi,%rdi
    34809d21:	48 89 f9             	mov    %rdi,%rcx
    34809d24:	48 83 c9 03          	or     $0x3,%rcx
    34809d28:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    34809d2c:	48 8d 4c 3b 10       	lea    0x10(%rbx,%rdi,1),%rcx
    34809d31:	48 01 fb             	add    %rdi,%rbx
    34809d34:	48 89 4c d0 08       	mov    %rcx,0x8(%rax,%rdx,8)
    34809d39:	49 29 fc             	sub    %rdi,%r12
    34809d3c:	49 83 cc 03          	or     $0x3,%r12
    34809d40:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    34809d44:	48 83 c4 38          	add    $0x38,%rsp
    34809d48:	5b                   	pop    %rbx
    34809d49:	41 5c                	pop    %r12
    34809d4b:	c3                   	retq   
    34809d4c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    34809d50:	31 db                	xor    %ebx,%ebx
    34809d52:	66 0f ef c9          	pxor   %xmm1,%xmm1
    34809d56:	4d 85 c0             	test   %r8,%r8
    34809d59:	0f 85 c9 fc ff ff    	jne    34809a28 <ialloc+0x2d8>
    34809d5f:	e9 89 fd ff ff       	jmpq   34809aed <ialloc+0x39d>
    34809d64:	bf 01 00 00 00       	mov    $0x1,%edi
    34809d69:	e8 12 2f 00 00       	callq  3480cc80 <exit>
    34809d6e:	66 90                	xchg   %ax,%ax

0000000034809d70 <mspace_independent_comalloc>:
    34809d70:	48 89 c8             	mov    %rcx,%rax
    34809d73:	31 c9                	xor    %ecx,%ecx
    34809d75:	49 89 c0             	mov    %rax,%r8
    34809d78:	e9 d3 f9 ff ff       	jmpq   34809750 <ialloc>
    34809d7d:	0f 1f 00             	nopl   (%rax)

0000000034809d80 <mspace_bulk_free>:
    34809d80:	41 54                	push   %r12
    34809d82:	53                   	push   %rbx
    34809d83:	48 83 ec 18          	sub    $0x18,%rsp
    34809d87:	48 89 f3             	mov    %rsi,%rbx
    34809d8a:	48 85 d2             	test   %rdx,%rdx
    34809d8d:	0f 84 cb 00 00 00    	je     34809e5e <mspace_bulk_free+0xde>
    34809d93:	4c 8d 24 d3          	lea    (%rbx,%rdx,8),%r12
    34809d97:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    34809d9c:	0f 1f 40 00          	nopl   0x0(%rax)
    34809da0:	4c 8b 03             	mov    (%rbx),%r8
    34809da3:	4d 85 c0             	test   %r8,%r8
    34809da6:	0f 84 74 00 00 00    	je     34809e20 <mspace_bulk_free+0xa0>
    34809dac:	49 8b 48 f8          	mov    -0x8(%r8),%rcx
    34809db0:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    34809db7:	89 ca                	mov    %ecx,%edx
    34809db9:	83 e2 03             	and    $0x3,%edx
    34809dbc:	48 83 fa 01          	cmp    $0x1,%rdx
    34809dc0:	0f 84 3c 01 00 00    	je     34809f02 <mspace_bulk_free+0x182>
    34809dc6:	49 8d 70 f0          	lea    -0x10(%r8),%rsi
    34809dca:	48 3b 77 18          	cmp    0x18(%rdi),%rsi
    34809dce:	0f 82 2e 01 00 00    	jb     34809f02 <mspace_bulk_free+0x182>
    34809dd4:	48 89 ca             	mov    %rcx,%rdx
    34809dd7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    34809ddb:	48 83 c3 08          	add    $0x8,%rbx
    34809ddf:	4c 39 e3             	cmp    %r12,%rbx
    34809de2:	0f 84 11 00 00 00    	je     34809df9 <mspace_bulk_free+0x79>
    34809de8:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
    34809dec:	48 83 c0 10          	add    $0x10,%rax
    34809df0:	48 39 03             	cmp    %rax,(%rbx)
    34809df3:	0f 84 39 00 00 00    	je     34809e32 <mspace_bulk_free+0xb2>
    34809df9:	e8 52 12 00 00       	callq  3480b050 <dispose_chunk>
    34809dfe:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    34809e03:	4c 39 e3             	cmp    %r12,%rbx
    34809e06:	0f 85 94 ff ff ff    	jne    34809da0 <mspace_bulk_free+0x20>
    34809e0c:	e9 4d 00 00 00       	jmpq   34809e5e <mspace_bulk_free+0xde>
    34809e11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34809e18:	0f 1f 84 00 00 00 00 
    34809e1f:	00 
    34809e20:	48 83 c3 08          	add    $0x8,%rbx
    34809e24:	4c 39 e3             	cmp    %r12,%rbx
    34809e27:	0f 85 73 ff ff ff    	jne    34809da0 <mspace_bulk_free+0x20>
    34809e2d:	e9 2c 00 00 00       	jmpq   34809e5e <mspace_bulk_free+0xde>
    34809e32:	49 8b 74 10 f8       	mov    -0x8(%r8,%rdx,1),%rsi
    34809e37:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    34809e3b:	48 01 d6             	add    %rdx,%rsi
    34809e3e:	83 e1 01             	and    $0x1,%ecx
    34809e41:	48 09 f1             	or     %rsi,%rcx
    34809e44:	48 83 c9 02          	or     $0x2,%rcx
    34809e48:	49 89 48 f8          	mov    %rcx,-0x8(%r8)
    34809e4c:	41 80 4c 30 f8 01    	orb    $0x1,-0x8(%r8,%rsi,1)
    34809e52:	4c 89 03             	mov    %r8,(%rbx)
    34809e55:	4c 39 e3             	cmp    %r12,%rbx
    34809e58:	0f 85 42 ff ff ff    	jne    34809da0 <mspace_bulk_free+0x20>
    34809e5e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    34809e62:	48 3b 47 30          	cmp    0x30(%rdi),%rax
    34809e66:	0f 86 8c 00 00 00    	jbe    34809ef8 <mspace_bulk_free+0x178>
    34809e6c:	48 83 3d 8c d8 20 00 	cmpq   $0x0,0x20d88c(%rip)        # 34a17700 <mparams>
    34809e73:	00 
    34809e74:	0f 85 5d 00 00 00    	jne    34809ed7 <mspace_bulk_free+0x157>
    34809e7a:	48 89 fb             	mov    %rdi,%rbx
    34809e7d:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34809e82:	e8 b9 27 00 00       	callq  3480c640 <sysconf>
    34809e87:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34809e8b:	48 85 c1             	test   %rax,%rcx
    34809e8e:	0f 85 6e 00 00 00    	jne    34809f02 <mspace_bulk_free+0x182>
    34809e94:	48 89 05 6d d8 20 00 	mov    %rax,0x20d86d(%rip)        # 34a17708 <mparams+0x8>
    34809e9b:	0f 28 05 1e ae 00 00 	movaps 0xae1e(%rip),%xmm0        # 34814cc0 <half+0x10>
    34809ea2:	0f 11 05 67 d8 20 00 	movups %xmm0,0x20d867(%rip)        # 34a17710 <mparams+0x10>
    34809ea9:	48 c7 05 6c d8 20 00 	movq   $0x200000,0x20d86c(%rip)        # 34a17720 <mparams+0x20>
    34809eb0:	00 00 20 00 
    34809eb4:	c7 05 6a d8 20 00 04 	movl   $0x4,0x20d86a(%rip)        # 34a17728 <mparams+0x28>
    34809ebb:	00 00 00 
    34809ebe:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    34809ec3:	48 83 c8 08          	or     $0x8,%rax
    34809ec7:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    34809ecd:	48 89 05 2c d8 20 00 	mov    %rax,0x20d82c(%rip)        # 34a17700 <mparams>
    34809ed4:	48 89 df             	mov    %rbx,%rdi
    34809ed7:	48 83 7f 28 00       	cmpq   $0x0,0x28(%rdi)
    34809edc:	0f 84 16 00 00 00    	je     34809ef8 <mspace_bulk_free+0x178>
    34809ee2:	48 8b 47 10          	mov    0x10(%rdi),%rax
    34809ee6:	48 3b 47 30          	cmp    0x30(%rdi),%rax
    34809eea:	0f 86 08 00 00 00    	jbe    34809ef8 <mspace_bulk_free+0x178>
    34809ef0:	48 c7 47 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rdi)
    34809ef7:	ff 
    34809ef8:	31 c0                	xor    %eax,%eax
    34809efa:	48 83 c4 18          	add    $0x18,%rsp
    34809efe:	5b                   	pop    %rbx
    34809eff:	41 5c                	pop    %r12
    34809f01:	c3                   	retq   
    34809f02:	bf 01 00 00 00       	mov    $0x1,%edi
    34809f07:	e8 74 2d 00 00       	callq  3480cc80 <exit>
    34809f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034809f10 <mspace_trim>:
    34809f10:	41 54                	push   %r12
    34809f12:	53                   	push   %rbx
    34809f13:	50                   	push   %rax
    34809f14:	48 89 f3             	mov    %rsi,%rbx
    34809f17:	49 89 fc             	mov    %rdi,%r12
    34809f1a:	48 83 3d de d7 20 00 	cmpq   $0x0,0x20d7de(%rip)        # 34a17700 <mparams>
    34809f21:	00 
    34809f22:	0f 84 37 00 00 00    	je     34809f5f <mspace_trim+0x4f>
    34809f28:	48 81 fb 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbx
    34809f2f:	0f 87 8c 00 00 00    	ja     34809fc1 <mspace_trim+0xb1>
    34809f35:	49 83 7c 24 28 00    	cmpq   $0x0,0x28(%r12)
    34809f3b:	0f 84 80 00 00 00    	je     34809fc1 <mspace_trim+0xb1>
    34809f41:	49 8b 44 24 10       	mov    0x10(%r12),%rax
    34809f46:	49 3b 44 24 30       	cmp    0x30(%r12),%rax
    34809f4b:	0f 86 70 00 00 00    	jbe    34809fc1 <mspace_trim+0xb1>
    34809f51:	49 c7 44 24 30 ff ff 	movq   $0xffffffffffffffff,0x30(%r12)
    34809f58:	ff ff 
    34809f5a:	e9 62 00 00 00       	jmpq   34809fc1 <mspace_trim+0xb1>
    34809f5f:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34809f64:	e8 d7 26 00 00       	callq  3480c640 <sysconf>
    34809f69:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    34809f6d:	48 85 c1             	test   %rax,%rcx
    34809f70:	0f 85 55 00 00 00    	jne    34809fcb <mspace_trim+0xbb>
    34809f76:	48 89 05 8b d7 20 00 	mov    %rax,0x20d78b(%rip)        # 34a17708 <mparams+0x8>
    34809f7d:	0f 28 05 3c ad 00 00 	movaps 0xad3c(%rip),%xmm0        # 34814cc0 <half+0x10>
    34809f84:	0f 11 05 85 d7 20 00 	movups %xmm0,0x20d785(%rip)        # 34a17710 <mparams+0x10>
    34809f8b:	48 c7 05 8a d7 20 00 	movq   $0x200000,0x20d78a(%rip)        # 34a17720 <mparams+0x20>
    34809f92:	00 00 20 00 
    34809f96:	c7 05 88 d7 20 00 04 	movl   $0x4,0x20d788(%rip)        # 34a17728 <mparams+0x28>
    34809f9d:	00 00 00 
    34809fa0:	48 89 e0             	mov    %rsp,%rax
    34809fa3:	48 83 c8 08          	or     $0x8,%rax
    34809fa7:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    34809fad:	48 89 05 4c d7 20 00 	mov    %rax,0x20d74c(%rip)        # 34a17700 <mparams>
    34809fb4:	48 81 fb 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbx
    34809fbb:	0f 86 74 ff ff ff    	jbe    34809f35 <mspace_trim+0x25>
    34809fc1:	31 c0                	xor    %eax,%eax
    34809fc3:	48 83 c4 08          	add    $0x8,%rsp
    34809fc7:	5b                   	pop    %rbx
    34809fc8:	41 5c                	pop    %r12
    34809fca:	c3                   	retq   
    34809fcb:	bf 01 00 00 00       	mov    $0x1,%edi
    34809fd0:	e8 ab 2c 00 00       	callq  3480cc80 <exit>
    34809fd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34809fdc:	00 00 00 00 

0000000034809fe0 <mspace_malloc_stats>:
    34809fe0:	41 54                	push   %r12
    34809fe2:	53                   	push   %rbx
    34809fe3:	48 83 ec 18          	sub    $0x18,%rsp
    34809fe7:	49 89 fc             	mov    %rdi,%r12
    34809fea:	48 83 3d 0e d7 20 00 	cmpq   $0x0,0x20d70e(%rip)        # 34a17700 <mparams>
    34809ff1:	00 
    34809ff2:	0f 85 57 00 00 00    	jne    3480a04f <mspace_malloc_stats+0x6f>
    34809ff8:	bf 1e 00 00 00       	mov    $0x1e,%edi
    34809ffd:	e8 3e 26 00 00       	callq  3480c640 <sysconf>
    3480a002:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3480a006:	48 85 c1             	test   %rax,%rcx
    3480a009:	0f 85 6a 01 00 00    	jne    3480a179 <mspace_malloc_stats+0x199>
    3480a00f:	48 89 05 f2 d6 20 00 	mov    %rax,0x20d6f2(%rip)        # 34a17708 <mparams+0x8>
    3480a016:	0f 28 05 a3 ac 00 00 	movaps 0xaca3(%rip),%xmm0        # 34814cc0 <half+0x10>
    3480a01d:	0f 11 05 ec d6 20 00 	movups %xmm0,0x20d6ec(%rip)        # 34a17710 <mparams+0x10>
    3480a024:	48 c7 05 f1 d6 20 00 	movq   $0x200000,0x20d6f1(%rip)        # 34a17720 <mparams+0x20>
    3480a02b:	00 00 20 00 
    3480a02f:	c7 05 ef d6 20 00 04 	movl   $0x4,0x20d6ef(%rip)        # 34a17728 <mparams+0x28>
    3480a036:	00 00 00 
    3480a039:	48 8d 44 24 10       	lea    0x10(%rsp),%rax
    3480a03e:	48 83 c8 08          	or     $0x8,%rax
    3480a042:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    3480a048:	48 89 05 b1 d6 20 00 	mov    %rax,0x20d6b1(%rip)        # 34a17700 <mparams>
    3480a04f:	4d 8b 4c 24 28       	mov    0x28(%r12),%r9
    3480a054:	4d 85 c9             	test   %r9,%r9
    3480a057:	0f 84 af 00 00 00    	je     3480a10c <mspace_malloc_stats+0x12c>
    3480a05d:	4d 8b 9c 24 58 03 00 	mov    0x358(%r12),%r11
    3480a064:	00 
    3480a065:	49 8b 94 24 60 03 00 	mov    0x360(%r12),%rdx
    3480a06c:	00 
    3480a06d:	49 8d 5b b0          	lea    -0x50(%r11),%rbx
    3480a071:	49 2b 5c 24 10       	sub    0x10(%r12),%rbx
    3480a076:	4d 8d 84 24 78 03 00 	lea    0x378(%r12),%r8
    3480a07d:	00 
    3480a07e:	66 90                	xchg   %ax,%ax
    3480a080:	4d 8b 10             	mov    (%r8),%r10
    3480a083:	49 8d 7a 10          	lea    0x10(%r10),%rdi
    3480a087:	89 f8                	mov    %edi,%eax
    3480a089:	83 e0 0f             	and    $0xf,%eax
    3480a08c:	f7 df                	neg    %edi
    3480a08e:	83 e7 0f             	and    $0xf,%edi
    3480a091:	48 85 c0             	test   %rax,%rax
    3480a094:	48 0f 44 f8          	cmove  %rax,%rdi
    3480a098:	4c 01 d7             	add    %r10,%rdi
    3480a09b:	49 8b 48 08          	mov    0x8(%r8),%rcx
    3480a09f:	4c 01 d1             	add    %r10,%rcx
    3480a0a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a0a9:	1f 84 00 00 00 00 00 
    3480a0b0:	48 39 cf             	cmp    %rcx,%rdi
    3480a0b3:	0f 83 3c 00 00 00    	jae    3480a0f5 <mspace_malloc_stats+0x115>
    3480a0b9:	49 39 f9             	cmp    %rdi,%r9
    3480a0bc:	0f 84 33 00 00 00    	je     3480a0f5 <mspace_malloc_stats+0x115>
    3480a0c2:	48 8b 47 08          	mov    0x8(%rdi),%rax
    3480a0c6:	48 83 f8 0b          	cmp    $0xb,%rax
    3480a0ca:	0f 84 25 00 00 00    	je     3480a0f5 <mspace_malloc_stats+0x115>
    3480a0d0:	89 c6                	mov    %eax,%esi
    3480a0d2:	83 e6 03             	and    $0x3,%esi
    3480a0d5:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    3480a0d9:	48 83 fe 01          	cmp    $0x1,%rsi
    3480a0dd:	be 00 00 00 00       	mov    $0x0,%esi
    3480a0e2:	48 0f 44 f0          	cmove  %rax,%rsi
    3480a0e6:	48 29 f3             	sub    %rsi,%rbx
    3480a0e9:	48 01 c7             	add    %rax,%rdi
    3480a0ec:	4c 39 d7             	cmp    %r10,%rdi
    3480a0ef:	0f 83 bb ff ff ff    	jae    3480a0b0 <mspace_malloc_stats+0xd0>
    3480a0f5:	4d 8b 40 10          	mov    0x10(%r8),%r8
    3480a0f9:	4d 85 c0             	test   %r8,%r8
    3480a0fc:	0f 85 7e ff ff ff    	jne    3480a080 <mspace_malloc_stats+0xa0>
    3480a102:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    3480a107:	e9 0b 00 00 00       	jmpq   3480a117 <mspace_malloc_stats+0x137>
    3480a10c:	31 d2                	xor    %edx,%edx
    3480a10e:	31 c0                	xor    %eax,%eax
    3480a110:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3480a115:	31 db                	xor    %ebx,%ebx
    3480a117:	4c 8d 25 62 69 b1 00 	lea    0xb16962(%rip),%r12        # 35320a80 <buf>
    3480a11e:	48 8d 35 46 ac 00 00 	lea    0xac46(%rip),%rsi        # 34814d6b <half+0xbb>
    3480a125:	31 c0                	xor    %eax,%eax
    3480a127:	4c 89 e7             	mov    %r12,%rdi
    3480a12a:	e8 51 21 00 00       	callq  3480c280 <sprintf>
    3480a12f:	4c 89 e7             	mov    %r12,%rdi
    3480a132:	e8 89 27 00 00       	callq  3480c8c0 <puts>
    3480a137:	48 8d 35 47 ac 00 00 	lea    0xac47(%rip),%rsi        # 34814d85 <half+0xd5>
    3480a13e:	31 c0                	xor    %eax,%eax
    3480a140:	4c 89 e7             	mov    %r12,%rdi
    3480a143:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3480a148:	e8 33 21 00 00       	callq  3480c280 <sprintf>
    3480a14d:	4c 89 e7             	mov    %r12,%rdi
    3480a150:	e8 6b 27 00 00       	callq  3480c8c0 <puts>
    3480a155:	48 8d 35 43 ac 00 00 	lea    0xac43(%rip),%rsi        # 34814d9f <half+0xef>
    3480a15c:	31 c0                	xor    %eax,%eax
    3480a15e:	4c 89 e7             	mov    %r12,%rdi
    3480a161:	48 89 da             	mov    %rbx,%rdx
    3480a164:	e8 17 21 00 00       	callq  3480c280 <sprintf>
    3480a169:	4c 89 e7             	mov    %r12,%rdi
    3480a16c:	e8 4f 27 00 00       	callq  3480c8c0 <puts>
    3480a171:	48 83 c4 18          	add    $0x18,%rsp
    3480a175:	5b                   	pop    %rbx
    3480a176:	41 5c                	pop    %r12
    3480a178:	c3                   	retq   
    3480a179:	bf 01 00 00 00       	mov    $0x1,%edi
    3480a17e:	e8 fd 2a 00 00       	callq  3480cc80 <exit>
    3480a183:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a18a:	84 00 00 00 00 00 

000000003480a190 <mspace_footprint>:
    3480a190:	48 8b 87 58 03 00 00 	mov    0x358(%rdi),%rax
    3480a197:	c3                   	retq   
    3480a198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480a19f:	00 

000000003480a1a0 <mspace_max_footprint>:
    3480a1a0:	48 8b 87 60 03 00 00 	mov    0x360(%rdi),%rax
    3480a1a7:	c3                   	retq   
    3480a1a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480a1af:	00 

000000003480a1b0 <mspace_footprint_limit>:
    3480a1b0:	48 8b 8f 68 03 00 00 	mov    0x368(%rdi),%rcx
    3480a1b7:	48 83 f9 01          	cmp    $0x1,%rcx
    3480a1bb:	48 19 c0             	sbb    %rax,%rax
    3480a1be:	48 09 c8             	or     %rcx,%rax
    3480a1c1:	c3                   	retq   
    3480a1c2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a1c9:	1f 84 00 00 00 00 00 

000000003480a1d0 <mspace_set_footprint_limit>:
    3480a1d0:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    3480a1d4:	0f 84 1a 00 00 00    	je     3480a1f4 <mspace_set_footprint_limit+0x24>
    3480a1da:	48 8b 05 2f d5 20 00 	mov    0x20d52f(%rip),%rax        # 34a17710 <mparams+0x10>
    3480a1e1:	48 8d 4c 06 ff       	lea    -0x1(%rsi,%rax,1),%rcx
    3480a1e6:	48 f7 d8             	neg    %rax
    3480a1e9:	48 21 c8             	and    %rcx,%rax
    3480a1ec:	48 89 87 68 03 00 00 	mov    %rax,0x368(%rdi)
    3480a1f3:	c3                   	retq   
    3480a1f4:	31 c0                	xor    %eax,%eax
    3480a1f6:	48 89 87 68 03 00 00 	mov    %rax,0x368(%rdi)
    3480a1fd:	c3                   	retq   
    3480a1fe:	66 90                	xchg   %ax,%ax

000000003480a200 <mspace_mallinfo>:
    3480a200:	41 54                	push   %r12
    3480a202:	53                   	push   %rbx
    3480a203:	48 83 ec 38          	sub    $0x38,%rsp
    3480a207:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480a20a:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    3480a20f:	48 83 3d e9 d4 20 00 	cmpq   $0x0,0x20d4e9(%rip)        # 34a17700 <mparams>
    3480a216:	00 
    3480a217:	0f 85 63 00 00 00    	jne    3480a280 <mspace_mallinfo+0x80>
    3480a21d:	49 89 f4             	mov    %rsi,%r12
    3480a220:	48 89 fb             	mov    %rdi,%rbx
    3480a223:	bf 1e 00 00 00       	mov    $0x1e,%edi
    3480a228:	e8 13 24 00 00       	callq  3480c640 <sysconf>
    3480a22d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3480a231:	48 85 c1             	test   %rax,%rcx
    3480a234:	0f 85 88 01 00 00    	jne    3480a3c2 <mspace_mallinfo+0x1c2>
    3480a23a:	48 89 05 c7 d4 20 00 	mov    %rax,0x20d4c7(%rip)        # 34a17708 <mparams+0x8>
    3480a241:	0f 28 05 78 aa 00 00 	movaps 0xaa78(%rip),%xmm0        # 34814cc0 <half+0x10>
    3480a248:	0f 11 05 c1 d4 20 00 	movups %xmm0,0x20d4c1(%rip)        # 34a17710 <mparams+0x10>
    3480a24f:	48 c7 05 c6 d4 20 00 	movq   $0x200000,0x20d4c6(%rip)        # 34a17720 <mparams+0x20>
    3480a256:	00 00 20 00 
    3480a25a:	c7 05 c4 d4 20 00 04 	movl   $0x4,0x20d4c4(%rip)        # 34a17728 <mparams+0x28>
    3480a261:	00 00 00 
    3480a264:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
    3480a269:	48 83 c8 08          	or     $0x8,%rax
    3480a26d:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    3480a273:	48 89 05 86 d4 20 00 	mov    %rax,0x20d486(%rip)        # 34a17700 <mparams>
    3480a27a:	48 89 df             	mov    %rbx,%rdi
    3480a27d:	4c 89 e6             	mov    %r12,%rsi
    3480a280:	4c 8b 56 28          	mov    0x28(%rsi),%r10
    3480a284:	4d 85 d2             	test   %r10,%r10
    3480a287:	0f 84 ee 00 00 00    	je     3480a37b <mspace_mallinfo+0x17b>
    3480a28d:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    3480a292:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3480a296:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3480a29b:	48 8d 50 50          	lea    0x50(%rax),%rdx
    3480a29f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    3480a2a4:	4c 8d 8e 78 03 00 00 	lea    0x378(%rsi),%r9
    3480a2ab:	be 01 00 00 00       	mov    $0x1,%esi
    3480a2b0:	48 89 d1             	mov    %rdx,%rcx
    3480a2b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a2ba:	84 00 00 00 00 00 
    3480a2c0:	4d 8b 19             	mov    (%r9),%r11
    3480a2c3:	49 8d 43 10          	lea    0x10(%r11),%rax
    3480a2c7:	89 c7                	mov    %eax,%edi
    3480a2c9:	83 e7 0f             	and    $0xf,%edi
    3480a2cc:	f7 d8                	neg    %eax
    3480a2ce:	83 e0 0f             	and    $0xf,%eax
    3480a2d1:	48 85 ff             	test   %rdi,%rdi
    3480a2d4:	48 0f 44 c7          	cmove  %rdi,%rax
    3480a2d8:	4c 01 d8             	add    %r11,%rax
    3480a2db:	49 8b 79 08          	mov    0x8(%r9),%rdi
    3480a2df:	4c 01 df             	add    %r11,%rdi
    3480a2e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a2e9:	1f 84 00 00 00 00 00 
    3480a2f0:	48 39 f8             	cmp    %rdi,%rax
    3480a2f3:	0f 83 4a 00 00 00    	jae    3480a343 <mspace_mallinfo+0x143>
    3480a2f9:	49 39 c2             	cmp    %rax,%r10
    3480a2fc:	0f 84 41 00 00 00    	je     3480a343 <mspace_mallinfo+0x143>
    3480a302:	48 8b 58 08          	mov    0x8(%rax),%rbx
    3480a306:	48 83 fb 0b          	cmp    $0xb,%rbx
    3480a30a:	0f 84 33 00 00 00    	je     3480a343 <mspace_mallinfo+0x143>
    3480a310:	49 89 d8             	mov    %rbx,%r8
    3480a313:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    3480a317:	4c 01 c2             	add    %r8,%rdx
    3480a31a:	83 e3 03             	and    $0x3,%ebx
    3480a31d:	45 31 e4             	xor    %r12d,%r12d
    3480a320:	48 83 fb 01          	cmp    $0x1,%rbx
    3480a324:	41 0f 94 c4          	sete   %r12b
    3480a328:	bb 00 00 00 00       	mov    $0x0,%ebx
    3480a32d:	49 0f 44 d8          	cmove  %r8,%rbx
    3480a331:	4c 01 e6             	add    %r12,%rsi
    3480a334:	48 01 d9             	add    %rbx,%rcx
    3480a337:	4c 01 c0             	add    %r8,%rax
    3480a33a:	4c 39 d8             	cmp    %r11,%rax
    3480a33d:	0f 83 ad ff ff ff    	jae    3480a2f0 <mspace_mallinfo+0xf0>
    3480a343:	4d 8b 49 10          	mov    0x10(%r9),%r9
    3480a347:	4d 85 c9             	test   %r9,%r9
    3480a34a:	0f 85 70 ff ff ff    	jne    3480a2c0 <mspace_mallinfo+0xc0>
    3480a350:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480a355:	48 8b 87 58 03 00 00 	mov    0x358(%rdi),%rax
    3480a35c:	4c 8b 87 60 03 00 00 	mov    0x360(%rdi),%r8
    3480a363:	48 89 c3             	mov    %rax,%rbx
    3480a366:	48 29 d3             	sub    %rdx,%rbx
    3480a369:	48 29 c8             	sub    %rcx,%rax
    3480a36c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    3480a371:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    3480a376:	e9 10 00 00 00       	jmpq   3480a38b <mspace_mallinfo+0x18b>
    3480a37b:	31 c0                	xor    %eax,%eax
    3480a37d:	31 c9                	xor    %ecx,%ecx
    3480a37f:	45 31 c0             	xor    %r8d,%r8d
    3480a382:	31 db                	xor    %ebx,%ebx
    3480a384:	31 f6                	xor    %esi,%esi
    3480a386:	31 d2                	xor    %edx,%edx
    3480a388:	45 31 c9             	xor    %r9d,%r9d
    3480a38b:	48 89 17             	mov    %rdx,(%rdi)
    3480a38e:	48 89 77 08          	mov    %rsi,0x8(%rdi)
    3480a392:	0f 28 44 24 20       	movaps 0x20(%rsp),%xmm0
    3480a397:	0f 11 47 10          	movups %xmm0,0x10(%rdi)
    3480a39b:	48 89 5f 20          	mov    %rbx,0x20(%rdi)
    3480a39f:	4c 89 47 28          	mov    %r8,0x28(%rdi)
    3480a3a3:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
    3480a3aa:	00 
    3480a3ab:	48 89 47 38          	mov    %rax,0x38(%rdi)
    3480a3af:	48 89 4f 40          	mov    %rcx,0x40(%rdi)
    3480a3b3:	4c 89 4f 48          	mov    %r9,0x48(%rdi)
    3480a3b7:	48 89 f8             	mov    %rdi,%rax
    3480a3ba:	48 83 c4 38          	add    $0x38,%rsp
    3480a3be:	5b                   	pop    %rbx
    3480a3bf:	41 5c                	pop    %r12
    3480a3c1:	c3                   	retq   
    3480a3c2:	bf 01 00 00 00       	mov    $0x1,%edi
    3480a3c7:	e8 b4 28 00 00       	callq  3480cc80 <exit>
    3480a3cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000003480a3d0 <mspace_usable_size>:
    3480a3d0:	48 85 ff             	test   %rdi,%rdi
    3480a3d3:	0f 84 16 00 00 00    	je     3480a3ef <mspace_usable_size+0x1f>
    3480a3d9:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    3480a3dd:	89 c1                	mov    %eax,%ecx
    3480a3df:	83 e1 03             	and    $0x3,%ecx
    3480a3e2:	48 83 f9 01          	cmp    $0x1,%rcx
    3480a3e6:	0f 85 06 00 00 00    	jne    3480a3f2 <mspace_usable_size+0x22>
    3480a3ec:	31 c0                	xor    %eax,%eax
    3480a3ee:	c3                   	retq   
    3480a3ef:	31 c0                	xor    %eax,%eax
    3480a3f1:	c3                   	retq   
    3480a3f2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    3480a3f6:	31 d2                	xor    %edx,%edx
    3480a3f8:	48 85 c9             	test   %rcx,%rcx
    3480a3fb:	0f 94 c2             	sete   %dl
    3480a3fe:	48 8d 0c d5 08 00 00 	lea    0x8(,%rdx,8),%rcx
    3480a405:	00 
    3480a406:	48 29 c8             	sub    %rcx,%rax
    3480a409:	c3                   	retq   
    3480a40a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000003480a410 <mspace_mallopt>:
    3480a410:	41 54                	push   %r12
    3480a412:	53                   	push   %rbx
    3480a413:	50                   	push   %rax
    3480a414:	41 89 f4             	mov    %esi,%r12d
    3480a417:	89 fb                	mov    %edi,%ebx
    3480a419:	48 83 3d df d2 20 00 	cmpq   $0x0,0x20d2df(%rip)        # 34a17700 <mparams>
    3480a420:	00 
    3480a421:	0f 85 55 00 00 00    	jne    3480a47c <mspace_mallopt+0x6c>
    3480a427:	bf 1e 00 00 00       	mov    $0x1e,%edi
    3480a42c:	e8 0f 22 00 00       	callq  3480c640 <sysconf>
    3480a431:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3480a435:	48 85 c1             	test   %rax,%rcx
    3480a438:	0f 85 a4 00 00 00    	jne    3480a4e2 <mspace_mallopt+0xd2>
    3480a43e:	48 89 05 c3 d2 20 00 	mov    %rax,0x20d2c3(%rip)        # 34a17708 <mparams+0x8>
    3480a445:	0f 28 05 74 a8 00 00 	movaps 0xa874(%rip),%xmm0        # 34814cc0 <half+0x10>
    3480a44c:	0f 11 05 bd d2 20 00 	movups %xmm0,0x20d2bd(%rip)        # 34a17710 <mparams+0x10>
    3480a453:	48 c7 05 c2 d2 20 00 	movq   $0x200000,0x20d2c2(%rip)        # 34a17720 <mparams+0x20>
    3480a45a:	00 00 20 00 
    3480a45e:	c7 05 c0 d2 20 00 04 	movl   $0x4,0x20d2c0(%rip)        # 34a17728 <mparams+0x28>
    3480a465:	00 00 00 
    3480a468:	48 89 e0             	mov    %rsp,%rax
    3480a46b:	48 83 c8 08          	or     $0x8,%rax
    3480a46f:	48 35 50 55 55 55    	xor    $0x55555550,%rax
    3480a475:	48 89 05 84 d2 20 00 	mov    %rax,0x20d284(%rip)        # 34a17700 <mparams>
    3480a47c:	49 63 cc             	movslq %r12d,%rcx
    3480a47f:	83 fb fd             	cmp    $0xfffffffd,%ebx
    3480a482:	0f 84 20 00 00 00    	je     3480a4a8 <mspace_mallopt+0x98>
    3480a488:	31 c0                	xor    %eax,%eax
    3480a48a:	83 fb fe             	cmp    $0xfffffffe,%ebx
    3480a48d:	0f 84 29 00 00 00    	je     3480a4bc <mspace_mallopt+0xac>
    3480a493:	83 fb ff             	cmp    $0xffffffff,%ebx
    3480a496:	0f 85 18 00 00 00    	jne    3480a4b4 <mspace_mallopt+0xa4>
    3480a49c:	48 89 0d 7d d2 20 00 	mov    %rcx,0x20d27d(%rip)        # 34a17720 <mparams+0x20>
    3480a4a3:	e9 07 00 00 00       	jmpq   3480a4af <mspace_mallopt+0x9f>
    3480a4a8:	48 89 0d 69 d2 20 00 	mov    %rcx,0x20d269(%rip)        # 34a17718 <mparams+0x18>
    3480a4af:	b8 01 00 00 00       	mov    $0x1,%eax
    3480a4b4:	48 83 c4 08          	add    $0x8,%rsp
    3480a4b8:	5b                   	pop    %rbx
    3480a4b9:	41 5c                	pop    %r12
    3480a4bb:	c3                   	retq   
    3480a4bc:	48 39 0d 45 d2 20 00 	cmp    %rcx,0x20d245(%rip)        # 34a17708 <mparams+0x8>
    3480a4c3:	0f 87 eb ff ff ff    	ja     3480a4b4 <mspace_mallopt+0xa4>
    3480a4c9:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
    3480a4cd:	48 85 ca             	test   %rcx,%rdx
    3480a4d0:	0f 85 de ff ff ff    	jne    3480a4b4 <mspace_mallopt+0xa4>
    3480a4d6:	48 89 0d 33 d2 20 00 	mov    %rcx,0x20d233(%rip)        # 34a17710 <mparams+0x10>
    3480a4dd:	e9 cd ff ff ff       	jmpq   3480a4af <mspace_mallopt+0x9f>
    3480a4e2:	bf 01 00 00 00       	mov    $0x1,%edi
    3480a4e7:	e8 94 27 00 00       	callq  3480cc80 <exit>
    3480a4ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000003480a4f0 <_malloc_init>:
    3480a4f0:	41 54                	push   %r12
    3480a4f2:	53                   	push   %rbx
    3480a4f3:	50                   	push   %rax
    3480a4f4:	4c 8d 25 b5 e2 20 00 	lea    0x20e2b5(%rip),%r12        # 34a187b0 <_heap_chk0+0x1000>
    3480a4fb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a502:	48 8d 1d a7 d2 50 00 	lea    0x50d2a7(%rip),%rbx        # 34d177b0 <_heap_chk1>
    3480a509:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a510:	4c 29 e3             	sub    %r12,%rbx
    3480a513:	4c 89 e7             	mov    %r12,%rdi
    3480a516:	48 89 de             	mov    %rbx,%rsi
    3480a519:	e8 d2 d8 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a51e:	48 89 05 4b d2 20 00 	mov    %rax,0x20d24b(%rip)        # 34a17770 <_ms>
    3480a525:	4c 89 25 04 d2 20 00 	mov    %r12,0x20d204(%rip)        # 34a17730 <heap_start>
    3480a52c:	48 89 1d 1d d2 20 00 	mov    %rbx,0x20d21d(%rip)        # 34a17750 <heap_size>
    3480a533:	be 00 10 00 00       	mov    $0x1000,%esi
    3480a538:	48 89 c7             	mov    %rax,%rdi
    3480a53b:	e8 c0 ce ff ff       	callq  34807400 <mspace_init_pan>
    3480a540:	4c 8d 25 69 e2 50 00 	lea    0x50e269(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480a547:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a54e:	48 8d 1d 5b d2 80 00 	lea    0x80d25b(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a555:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a55c:	4c 29 e3             	sub    %r12,%rbx
    3480a55f:	4c 89 e7             	mov    %r12,%rdi
    3480a562:	48 89 de             	mov    %rbx,%rsi
    3480a565:	e8 86 d8 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a56a:	48 89 05 07 d2 20 00 	mov    %rax,0x20d207(%rip)        # 34a17778 <_ms_8k>
    3480a571:	4c 89 25 c0 d1 20 00 	mov    %r12,0x20d1c0(%rip)        # 34a17738 <heap_start+0x8>
    3480a578:	48 89 1d d9 d1 20 00 	mov    %rbx,0x20d1d9(%rip)        # 34a17758 <heap_size+0x8>
    3480a57f:	be 00 20 00 00       	mov    $0x2000,%esi
    3480a584:	48 89 c7             	mov    %rax,%rdi
    3480a587:	e8 74 ce ff ff       	callq  34807400 <mspace_init_pan>
    3480a58c:	48 8d 1d 1d d2 80 00 	lea    0x80d21d(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a593:	be 00 00 30 00       	mov    $0x300000,%esi
    3480a598:	48 89 df             	mov    %rbx,%rdi
    3480a59b:	e8 50 d8 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a5a0:	48 89 05 d9 d1 20 00 	mov    %rax,0x20d1d9(%rip)        # 34a17780 <_ms_large>
    3480a5a7:	48 89 1d 92 d1 20 00 	mov    %rbx,0x20d192(%rip)        # 34a17740 <heap_start+0x10>
    3480a5ae:	48 c7 05 a7 d1 20 00 	movq   $0x300000,0x20d1a7(%rip)        # 34a17760 <heap_size+0x10>
    3480a5b5:	00 00 30 00 
    3480a5b9:	48 83 c4 08          	add    $0x8,%rsp
    3480a5bd:	5b                   	pop    %rbx
    3480a5be:	41 5c                	pop    %r12
    3480a5c0:	c3                   	retq   
    3480a5c1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480a5c8:	0f 1f 84 00 00 00 00 
    3480a5cf:	00 

000000003480a5d0 <malloc>:
    3480a5d0:	48 89 fa             	mov    %rdi,%rdx
    3480a5d3:	48 83 3d 95 d1 20 00 	cmpq   $0x0,0x20d195(%rip)        # 34a17770 <_ms>
    3480a5da:	00 
    3480a5db:	0f 85 d8 00 00 00    	jne    3480a6b9 <malloc+0xe9>
    3480a5e1:	41 54                	push   %r12
    3480a5e3:	53                   	push   %rbx
    3480a5e4:	50                   	push   %rax
    3480a5e5:	48 8d 1d c4 e1 20 00 	lea    0x20e1c4(%rip),%rbx        # 34a187b0 <_heap_chk0+0x1000>
    3480a5ec:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a5f3:	4c 8d 25 b6 d1 50 00 	lea    0x50d1b6(%rip),%r12        # 34d177b0 <_heap_chk1>
    3480a5fa:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a601:	49 29 dc             	sub    %rbx,%r12
    3480a604:	48 89 df             	mov    %rbx,%rdi
    3480a607:	4c 89 e6             	mov    %r12,%rsi
    3480a60a:	48 89 14 24          	mov    %rdx,(%rsp)
    3480a60e:	e8 dd d7 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a613:	48 89 05 56 d1 20 00 	mov    %rax,0x20d156(%rip)        # 34a17770 <_ms>
    3480a61a:	48 89 1d 0f d1 20 00 	mov    %rbx,0x20d10f(%rip)        # 34a17730 <heap_start>
    3480a621:	4c 89 25 28 d1 20 00 	mov    %r12,0x20d128(%rip)        # 34a17750 <heap_size>
    3480a628:	be 00 10 00 00       	mov    $0x1000,%esi
    3480a62d:	48 89 c7             	mov    %rax,%rdi
    3480a630:	e8 cb cd ff ff       	callq  34807400 <mspace_init_pan>
    3480a635:	4c 8d 25 74 e1 50 00 	lea    0x50e174(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480a63c:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a643:	48 8d 1d 66 d1 80 00 	lea    0x80d166(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a64a:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a651:	4c 29 e3             	sub    %r12,%rbx
    3480a654:	4c 89 e7             	mov    %r12,%rdi
    3480a657:	48 89 de             	mov    %rbx,%rsi
    3480a65a:	e8 91 d7 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a65f:	48 89 05 12 d1 20 00 	mov    %rax,0x20d112(%rip)        # 34a17778 <_ms_8k>
    3480a666:	4c 89 25 cb d0 20 00 	mov    %r12,0x20d0cb(%rip)        # 34a17738 <heap_start+0x8>
    3480a66d:	48 89 1d e4 d0 20 00 	mov    %rbx,0x20d0e4(%rip)        # 34a17758 <heap_size+0x8>
    3480a674:	be 00 20 00 00       	mov    $0x2000,%esi
    3480a679:	48 89 c7             	mov    %rax,%rdi
    3480a67c:	e8 7f cd ff ff       	callq  34807400 <mspace_init_pan>
    3480a681:	48 8d 1d 28 d1 80 00 	lea    0x80d128(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a688:	be 00 00 30 00       	mov    $0x300000,%esi
    3480a68d:	48 89 df             	mov    %rbx,%rdi
    3480a690:	e8 5b d7 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a695:	48 8b 14 24          	mov    (%rsp),%rdx
    3480a699:	48 89 05 e0 d0 20 00 	mov    %rax,0x20d0e0(%rip)        # 34a17780 <_ms_large>
    3480a6a0:	48 89 1d 99 d0 20 00 	mov    %rbx,0x20d099(%rip)        # 34a17740 <heap_start+0x10>
    3480a6a7:	48 c7 05 ae d0 20 00 	movq   $0x300000,0x20d0ae(%rip)        # 34a17760 <heap_size+0x10>
    3480a6ae:	00 00 30 00 
    3480a6b2:	48 83 c4 08          	add    $0x8,%rsp
    3480a6b6:	5b                   	pop    %rbx
    3480a6b7:	41 5c                	pop    %r12
    3480a6b9:	48 81 fa d0 1f 00 00 	cmp    $0x1fd0,%rdx
    3480a6c0:	48 8d 05 b1 d0 20 00 	lea    0x20d0b1(%rip),%rax        # 34a17778 <_ms_8k>
    3480a6c7:	48 8d 0d b2 d0 20 00 	lea    0x20d0b2(%rip),%rcx        # 34a17780 <_ms_large>
    3480a6ce:	48 0f 42 c8          	cmovb  %rax,%rcx
    3480a6d2:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    3480a6d9:	48 8d 05 90 d0 20 00 	lea    0x20d090(%rip),%rax        # 34a17770 <_ms>
    3480a6e0:	48 0f 43 c1          	cmovae %rcx,%rax
    3480a6e4:	48 8b 38             	mov    (%rax),%rdi
    3480a6e7:	48 89 3d 9a d0 20 00 	mov    %rdi,0x20d09a(%rip)        # 34a17788 <malloc.ms>
    3480a6ee:	48 89 d6             	mov    %rdx,%rsi
    3480a6f1:	e9 fa db ff ff       	jmpq   348082f0 <mspace_malloc>
    3480a6f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480a6fd:	00 00 00 

000000003480a700 <free>:
    3480a700:	48 89 fa             	mov    %rdi,%rdx
    3480a703:	48 83 3d 65 d0 20 00 	cmpq   $0x0,0x20d065(%rip)        # 34a17770 <_ms>
    3480a70a:	00 
    3480a70b:	0f 85 d8 00 00 00    	jne    3480a7e9 <free+0xe9>
    3480a711:	41 54                	push   %r12
    3480a713:	53                   	push   %rbx
    3480a714:	50                   	push   %rax
    3480a715:	48 8d 1d 94 e0 20 00 	lea    0x20e094(%rip),%rbx        # 34a187b0 <_heap_chk0+0x1000>
    3480a71c:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a723:	4c 8d 25 86 d0 50 00 	lea    0x50d086(%rip),%r12        # 34d177b0 <_heap_chk1>
    3480a72a:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a731:	49 29 dc             	sub    %rbx,%r12
    3480a734:	48 89 df             	mov    %rbx,%rdi
    3480a737:	4c 89 e6             	mov    %r12,%rsi
    3480a73a:	48 89 14 24          	mov    %rdx,(%rsp)
    3480a73e:	e8 ad d6 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a743:	48 89 05 26 d0 20 00 	mov    %rax,0x20d026(%rip)        # 34a17770 <_ms>
    3480a74a:	48 89 1d df cf 20 00 	mov    %rbx,0x20cfdf(%rip)        # 34a17730 <heap_start>
    3480a751:	4c 89 25 f8 cf 20 00 	mov    %r12,0x20cff8(%rip)        # 34a17750 <heap_size>
    3480a758:	be 00 10 00 00       	mov    $0x1000,%esi
    3480a75d:	48 89 c7             	mov    %rax,%rdi
    3480a760:	e8 9b cc ff ff       	callq  34807400 <mspace_init_pan>
    3480a765:	4c 8d 25 44 e0 50 00 	lea    0x50e044(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480a76c:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a773:	48 8d 1d 36 d0 80 00 	lea    0x80d036(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a77a:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a781:	4c 29 e3             	sub    %r12,%rbx
    3480a784:	4c 89 e7             	mov    %r12,%rdi
    3480a787:	48 89 de             	mov    %rbx,%rsi
    3480a78a:	e8 61 d6 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a78f:	48 89 05 e2 cf 20 00 	mov    %rax,0x20cfe2(%rip)        # 34a17778 <_ms_8k>
    3480a796:	4c 89 25 9b cf 20 00 	mov    %r12,0x20cf9b(%rip)        # 34a17738 <heap_start+0x8>
    3480a79d:	48 89 1d b4 cf 20 00 	mov    %rbx,0x20cfb4(%rip)        # 34a17758 <heap_size+0x8>
    3480a7a4:	be 00 20 00 00       	mov    $0x2000,%esi
    3480a7a9:	48 89 c7             	mov    %rax,%rdi
    3480a7ac:	e8 4f cc ff ff       	callq  34807400 <mspace_init_pan>
    3480a7b1:	48 8d 1d f8 cf 80 00 	lea    0x80cff8(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a7b8:	be 00 00 30 00       	mov    $0x300000,%esi
    3480a7bd:	48 89 df             	mov    %rbx,%rdi
    3480a7c0:	e8 2b d6 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a7c5:	48 8b 14 24          	mov    (%rsp),%rdx
    3480a7c9:	48 89 05 b0 cf 20 00 	mov    %rax,0x20cfb0(%rip)        # 34a17780 <_ms_large>
    3480a7d0:	48 89 1d 69 cf 20 00 	mov    %rbx,0x20cf69(%rip)        # 34a17740 <heap_start+0x10>
    3480a7d7:	48 c7 05 7e cf 20 00 	movq   $0x300000,0x20cf7e(%rip)        # 34a17760 <heap_size+0x10>
    3480a7de:	00 00 30 00 
    3480a7e2:	48 83 c4 08          	add    $0x8,%rsp
    3480a7e6:	5b                   	pop    %rbx
    3480a7e7:	41 5c                	pop    %r12
    3480a7e9:	48 8d 05 c0 cf 20 00 	lea    0x20cfc0(%rip),%rax        # 34a177b0 <_heap_chk0>
    3480a7f0:	48 39 c2             	cmp    %rax,%rdx
    3480a7f3:	0f 82 1c 00 00 00    	jb     3480a815 <free+0x115>
    3480a7f9:	48 8d 05 b0 cf 50 00 	lea    0x50cfb0(%rip),%rax        # 34d177b0 <_heap_chk1>
    3480a800:	48 39 c2             	cmp    %rax,%rdx
    3480a803:	0f 83 0c 00 00 00    	jae    3480a815 <free+0x115>
    3480a809:	48 8d 05 60 cf 20 00 	lea    0x20cf60(%rip),%rax        # 34a17770 <_ms>
    3480a810:	e9 38 00 00 00       	jmpq   3480a84d <free+0x14d>
    3480a815:	48 8d 05 94 cf 50 00 	lea    0x50cf94(%rip),%rax        # 34d177b0 <_heap_chk1>
    3480a81c:	48 39 c2             	cmp    %rax,%rdx
    3480a81f:	0f 83 0c 00 00 00    	jae    3480a831 <free+0x131>
    3480a825:	48 8d 05 54 cf 20 00 	lea    0x20cf54(%rip),%rax        # 34a17780 <_ms_large>
    3480a82c:	e9 1c 00 00 00       	jmpq   3480a84d <free+0x14d>
    3480a831:	48 8d 05 78 cf 80 00 	lea    0x80cf78(%rip),%rax        # 350177b0 <_heap_chk2>
    3480a838:	48 39 c2             	cmp    %rax,%rdx
    3480a83b:	48 8d 0d 36 cf 20 00 	lea    0x20cf36(%rip),%rcx        # 34a17778 <_ms_8k>
    3480a842:	48 8d 05 37 cf 20 00 	lea    0x20cf37(%rip),%rax        # 34a17780 <_ms_large>
    3480a849:	48 0f 42 c1          	cmovb  %rcx,%rax
    3480a84d:	48 8b 38             	mov    (%rax),%rdi
    3480a850:	48 89 3d 39 cf 20 00 	mov    %rdi,0x20cf39(%rip)        # 34a17790 <free.ms>
    3480a857:	48 89 d6             	mov    %rdx,%rsi
    3480a85a:	e9 81 cd ff ff       	jmpq   348075e0 <mspace_free>
    3480a85f:	90                   	nop

000000003480a860 <calloc>:
    3480a860:	41 54                	push   %r12
    3480a862:	53                   	push   %rbx
    3480a863:	48 83 ec 18          	sub    $0x18,%rsp
    3480a867:	48 89 f9             	mov    %rdi,%rcx
    3480a86a:	49 89 f4             	mov    %rsi,%r12
    3480a86d:	4c 0f af e1          	imul   %rcx,%r12
    3480a871:	48 83 3d f7 ce 20 00 	cmpq   $0x0,0x20cef7(%rip)        # 34a17770 <_ms>
    3480a878:	00 
    3480a879:	0f 84 19 00 00 00    	je     3480a898 <calloc+0x38>
    3480a87f:	49 81 fc 00 01 00 00 	cmp    $0x100,%r12
    3480a886:	0f 83 fa 00 00 00    	jae    3480a986 <calloc+0x126>
    3480a88c:	48 8d 05 dd ce 20 00 	lea    0x20cedd(%rip),%rax        # 34a17770 <_ms>
    3480a893:	e9 40 01 00 00       	jmpq   3480a9d8 <calloc+0x178>
    3480a898:	48 8d 1d 11 df 20 00 	lea    0x20df11(%rip),%rbx        # 34a187b0 <_heap_chk0+0x1000>
    3480a89f:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a8a6:	4c 89 64 24 10       	mov    %r12,0x10(%rsp)
    3480a8ab:	4c 8d 25 fe ce 50 00 	lea    0x50cefe(%rip),%r12        # 34d177b0 <_heap_chk1>
    3480a8b2:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a8b9:	49 29 dc             	sub    %rbx,%r12
    3480a8bc:	48 89 df             	mov    %rbx,%rdi
    3480a8bf:	48 89 34 24          	mov    %rsi,(%rsp)
    3480a8c3:	4c 89 e6             	mov    %r12,%rsi
    3480a8c6:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3480a8cb:	e8 20 d5 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a8d0:	48 89 05 99 ce 20 00 	mov    %rax,0x20ce99(%rip)        # 34a17770 <_ms>
    3480a8d7:	48 89 1d 52 ce 20 00 	mov    %rbx,0x20ce52(%rip)        # 34a17730 <heap_start>
    3480a8de:	4c 89 25 6b ce 20 00 	mov    %r12,0x20ce6b(%rip)        # 34a17750 <heap_size>
    3480a8e5:	be 00 10 00 00       	mov    $0x1000,%esi
    3480a8ea:	48 89 c7             	mov    %rax,%rdi
    3480a8ed:	e8 0e cb ff ff       	callq  34807400 <mspace_init_pan>
    3480a8f2:	4c 8d 25 b7 de 50 00 	lea    0x50deb7(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480a8f9:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480a900:	48 8d 1d a9 ce 80 00 	lea    0x80cea9(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a907:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480a90e:	4c 29 e3             	sub    %r12,%rbx
    3480a911:	4c 89 e7             	mov    %r12,%rdi
    3480a914:	48 89 de             	mov    %rbx,%rsi
    3480a917:	e8 d4 d4 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a91c:	48 89 05 55 ce 20 00 	mov    %rax,0x20ce55(%rip)        # 34a17778 <_ms_8k>
    3480a923:	4c 89 25 0e ce 20 00 	mov    %r12,0x20ce0e(%rip)        # 34a17738 <heap_start+0x8>
    3480a92a:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
    3480a92f:	48 89 1d 22 ce 20 00 	mov    %rbx,0x20ce22(%rip)        # 34a17758 <heap_size+0x8>
    3480a936:	be 00 20 00 00       	mov    $0x2000,%esi
    3480a93b:	48 89 c7             	mov    %rax,%rdi
    3480a93e:	e8 bd ca ff ff       	callq  34807400 <mspace_init_pan>
    3480a943:	48 8d 1d 66 ce 80 00 	lea    0x80ce66(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480a94a:	be 00 00 30 00       	mov    $0x300000,%esi
    3480a94f:	48 89 df             	mov    %rbx,%rdi
    3480a952:	e8 99 d4 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480a957:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480a95c:	48 8b 34 24          	mov    (%rsp),%rsi
    3480a960:	48 89 05 19 ce 20 00 	mov    %rax,0x20ce19(%rip)        # 34a17780 <_ms_large>
    3480a967:	48 89 1d d2 cd 20 00 	mov    %rbx,0x20cdd2(%rip)        # 34a17740 <heap_start+0x10>
    3480a96e:	48 c7 05 e7 cd 20 00 	movq   $0x300000,0x20cde7(%rip)        # 34a17760 <heap_size+0x10>
    3480a975:	00 00 30 00 
    3480a979:	49 81 fc 00 01 00 00 	cmp    $0x100,%r12
    3480a980:	0f 82 06 ff ff ff    	jb     3480a88c <calloc+0x2c>
    3480a986:	49 81 fc d0 1f 00 00 	cmp    $0x1fd0,%r12
    3480a98d:	0f 83 0c 00 00 00    	jae    3480a99f <calloc+0x13f>
    3480a993:	48 8d 05 de cd 20 00 	lea    0x20cdde(%rip),%rax        # 34a17778 <_ms_8k>
    3480a99a:	e9 39 00 00 00       	jmpq   3480a9d8 <calloc+0x178>
    3480a99f:	48 8d 3d da 60 b1 00 	lea    0xb160da(%rip),%rdi        # 35320a80 <buf>
    3480a9a6:	48 89 34 24          	mov    %rsi,(%rsp)
    3480a9aa:	48 8d 35 92 a3 00 00 	lea    0xa392(%rip),%rsi        # 34814d43 <half+0x93>
    3480a9b1:	31 c0                	xor    %eax,%eax
    3480a9b3:	4c 89 e2             	mov    %r12,%rdx
    3480a9b6:	48 89 cb             	mov    %rcx,%rbx
    3480a9b9:	e8 c2 18 00 00       	callq  3480c280 <sprintf>
    3480a9be:	48 8d 3d bb 60 b1 00 	lea    0xb160bb(%rip),%rdi        # 35320a80 <buf>
    3480a9c5:	e8 f6 1e 00 00       	callq  3480c8c0 <puts>
    3480a9ca:	48 89 d9             	mov    %rbx,%rcx
    3480a9cd:	48 8b 34 24          	mov    (%rsp),%rsi
    3480a9d1:	48 8d 05 a8 cd 20 00 	lea    0x20cda8(%rip),%rax        # 34a17780 <_ms_large>
    3480a9d8:	48 8b 38             	mov    (%rax),%rdi
    3480a9db:	48 89 3d b6 cd 20 00 	mov    %rdi,0x20cdb6(%rip)        # 34a17798 <calloc.ms>
    3480a9e2:	48 85 c9             	test   %rcx,%rcx
    3480a9e5:	0f 84 2d 00 00 00    	je     3480aa18 <calloc+0x1b8>
    3480a9eb:	48 89 f0             	mov    %rsi,%rax
    3480a9ee:	48 09 c8             	or     %rcx,%rax
    3480a9f1:	48 3d 00 00 01 00    	cmp    $0x10000,%rax
    3480a9f7:	0f 82 1e 00 00 00    	jb     3480aa1b <calloc+0x1bb>
    3480a9fd:	31 d2                	xor    %edx,%edx
    3480a9ff:	4c 89 e0             	mov    %r12,%rax
    3480aa02:	48 f7 f1             	div    %rcx
    3480aa05:	48 39 f0             	cmp    %rsi,%rax
    3480aa08:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3480aa0f:	4c 0f 45 e0          	cmovne %rax,%r12
    3480aa13:	e9 03 00 00 00       	jmpq   3480aa1b <calloc+0x1bb>
    3480aa18:	45 31 e4             	xor    %r12d,%r12d
    3480aa1b:	4c 89 e6             	mov    %r12,%rsi
    3480aa1e:	e8 cd d8 ff ff       	callq  348082f0 <mspace_malloc>
    3480aa23:	48 89 c3             	mov    %rax,%rbx
    3480aa26:	48 85 db             	test   %rbx,%rbx
    3480aa29:	0f 84 17 00 00 00    	je     3480aa46 <calloc+0x1e6>
    3480aa2f:	f6 43 f8 03          	testb  $0x3,-0x8(%rbx)
    3480aa33:	0f 84 0d 00 00 00    	je     3480aa46 <calloc+0x1e6>
    3480aa39:	31 f6                	xor    %esi,%esi
    3480aa3b:	48 89 df             	mov    %rbx,%rdi
    3480aa3e:	4c 89 e2             	mov    %r12,%rdx
    3480aa41:	e8 47 0d 00 00       	callq  3480b78d <memset>
    3480aa46:	48 89 d8             	mov    %rbx,%rax
    3480aa49:	48 83 c4 18          	add    $0x18,%rsp
    3480aa4d:	5b                   	pop    %rbx
    3480aa4e:	41 5c                	pop    %r12
    3480aa50:	c3                   	retq   
    3480aa51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480aa58:	0f 1f 84 00 00 00 00 
    3480aa5f:	00 

000000003480aa60 <realloc>:
    3480aa60:	41 54                	push   %r12
    3480aa62:	53                   	push   %rbx
    3480aa63:	48 83 ec 18          	sub    $0x18,%rsp
    3480aa67:	48 89 f2             	mov    %rsi,%rdx
    3480aa6a:	48 89 f9             	mov    %rdi,%rcx
    3480aa6d:	48 83 3d fb cc 20 00 	cmpq   $0x0,0x20ccfb(%rip)        # 34a17770 <_ms>
    3480aa74:	00 
    3480aa75:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    3480aa7a:	0f 85 d4 00 00 00    	jne    3480ab54 <realloc+0xf4>
    3480aa80:	4c 8d 25 29 dd 20 00 	lea    0x20dd29(%rip),%r12        # 34a187b0 <_heap_chk0+0x1000>
    3480aa87:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480aa8e:	48 8d 1d 1b cd 50 00 	lea    0x50cd1b(%rip),%rbx        # 34d177b0 <_heap_chk1>
    3480aa95:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480aa9c:	4c 29 e3             	sub    %r12,%rbx
    3480aa9f:	4c 89 e7             	mov    %r12,%rdi
    3480aaa2:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3480aaa7:	48 89 de             	mov    %rbx,%rsi
    3480aaaa:	e8 41 d3 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480aaaf:	48 89 05 ba cc 20 00 	mov    %rax,0x20ccba(%rip)        # 34a17770 <_ms>
    3480aab6:	4c 89 25 73 cc 20 00 	mov    %r12,0x20cc73(%rip)        # 34a17730 <heap_start>
    3480aabd:	48 89 1d 8c cc 20 00 	mov    %rbx,0x20cc8c(%rip)        # 34a17750 <heap_size>
    3480aac4:	be 00 10 00 00       	mov    $0x1000,%esi
    3480aac9:	48 89 c7             	mov    %rax,%rdi
    3480aacc:	e8 2f c9 ff ff       	callq  34807400 <mspace_init_pan>
    3480aad1:	4c 8d 25 d8 dc 50 00 	lea    0x50dcd8(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480aad8:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480aadf:	48 8d 1d ca cc 80 00 	lea    0x80ccca(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480aae6:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480aaed:	4c 29 e3             	sub    %r12,%rbx
    3480aaf0:	4c 89 e7             	mov    %r12,%rdi
    3480aaf3:	48 89 de             	mov    %rbx,%rsi
    3480aaf6:	e8 f5 d2 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480aafb:	48 89 05 76 cc 20 00 	mov    %rax,0x20cc76(%rip)        # 34a17778 <_ms_8k>
    3480ab02:	4c 89 25 2f cc 20 00 	mov    %r12,0x20cc2f(%rip)        # 34a17738 <heap_start+0x8>
    3480ab09:	48 89 1d 48 cc 20 00 	mov    %rbx,0x20cc48(%rip)        # 34a17758 <heap_size+0x8>
    3480ab10:	be 00 20 00 00       	mov    $0x2000,%esi
    3480ab15:	48 89 c7             	mov    %rax,%rdi
    3480ab18:	e8 e3 c8 ff ff       	callq  34807400 <mspace_init_pan>
    3480ab1d:	48 8d 1d 8c cc 80 00 	lea    0x80cc8c(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480ab24:	be 00 00 30 00       	mov    $0x300000,%esi
    3480ab29:	48 89 df             	mov    %rbx,%rdi
    3480ab2c:	e8 bf d2 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ab31:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    3480ab36:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480ab3b:	48 89 05 3e cc 20 00 	mov    %rax,0x20cc3e(%rip)        # 34a17780 <_ms_large>
    3480ab42:	48 89 1d f7 cb 20 00 	mov    %rbx,0x20cbf7(%rip)        # 34a17740 <heap_start+0x10>
    3480ab49:	48 c7 05 0c cc 20 00 	movq   $0x300000,0x20cc0c(%rip)        # 34a17760 <heap_size+0x10>
    3480ab50:	00 00 30 00 
    3480ab54:	48 8d 1d 15 cc 20 00 	lea    0x20cc15(%rip),%rbx        # 34a17770 <_ms>
    3480ab5b:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    3480ab62:	48 89 d8             	mov    %rbx,%rax
    3480ab65:	0f 82 51 00 00 00    	jb     3480abbc <realloc+0x15c>
    3480ab6b:	48 81 fa d0 1f 00 00 	cmp    $0x1fd0,%rdx
    3480ab72:	0f 83 0c 00 00 00    	jae    3480ab84 <realloc+0x124>
    3480ab78:	48 8d 05 f9 cb 20 00 	lea    0x20cbf9(%rip),%rax        # 34a17778 <_ms_8k>
    3480ab7f:	e9 38 00 00 00       	jmpq   3480abbc <realloc+0x15c>
    3480ab84:	48 8d 3d f5 5e b1 00 	lea    0xb15ef5(%rip),%rdi        # 35320a80 <buf>
    3480ab8b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3480ab90:	48 8d 35 ac a1 00 00 	lea    0xa1ac(%rip),%rsi        # 34814d43 <half+0x93>
    3480ab97:	31 c0                	xor    %eax,%eax
    3480ab99:	49 89 d4             	mov    %rdx,%r12
    3480ab9c:	e8 df 16 00 00       	callq  3480c280 <sprintf>
    3480aba1:	48 8d 3d d8 5e b1 00 	lea    0xb15ed8(%rip),%rdi        # 35320a80 <buf>
    3480aba8:	e8 13 1d 00 00       	callq  3480c8c0 <puts>
    3480abad:	4c 89 e2             	mov    %r12,%rdx
    3480abb0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480abb5:	48 8d 05 c4 cb 20 00 	lea    0x20cbc4(%rip),%rax        # 34a17780 <_ms_large>
    3480abbc:	48 8b 38             	mov    (%rax),%rdi
    3480abbf:	48 89 3d e2 cb 20 00 	mov    %rdi,0x20cbe2(%rip)        # 34a177a8 <realloc.new_ms>
    3480abc6:	48 8d 05 e3 cb 20 00 	lea    0x20cbe3(%rip),%rax        # 34a177b0 <_heap_chk0>
    3480abcd:	48 39 c1             	cmp    %rax,%rcx
    3480abd0:	0f 82 10 00 00 00    	jb     3480abe6 <realloc+0x186>
    3480abd6:	48 8d 05 d3 cb 50 00 	lea    0x50cbd3(%rip),%rax        # 34d177b0 <_heap_chk1>
    3480abdd:	48 39 c1             	cmp    %rax,%rcx
    3480abe0:	0f 82 38 00 00 00    	jb     3480ac1e <realloc+0x1be>
    3480abe6:	48 8d 05 c3 cb 50 00 	lea    0x50cbc3(%rip),%rax        # 34d177b0 <_heap_chk1>
    3480abed:	48 39 c1             	cmp    %rax,%rcx
    3480abf0:	0f 83 0c 00 00 00    	jae    3480ac02 <realloc+0x1a2>
    3480abf6:	48 8d 1d 83 cb 20 00 	lea    0x20cb83(%rip),%rbx        # 34a17780 <_ms_large>
    3480abfd:	e9 1c 00 00 00       	jmpq   3480ac1e <realloc+0x1be>
    3480ac02:	48 8d 05 a7 cb 80 00 	lea    0x80cba7(%rip),%rax        # 350177b0 <_heap_chk2>
    3480ac09:	48 39 c1             	cmp    %rax,%rcx
    3480ac0c:	48 8d 05 65 cb 20 00 	lea    0x20cb65(%rip),%rax        # 34a17778 <_ms_8k>
    3480ac13:	48 8d 1d 66 cb 20 00 	lea    0x20cb66(%rip),%rbx        # 34a17780 <_ms_large>
    3480ac1a:	48 0f 42 d8          	cmovb  %rax,%rbx
    3480ac1e:	4c 8b 23             	mov    (%rbx),%r12
    3480ac21:	4c 89 25 78 cb 20 00 	mov    %r12,0x20cb78(%rip)        # 34a177a0 <realloc.ms>
    3480ac28:	49 39 fc             	cmp    %rdi,%r12
    3480ac2b:	0f 84 5d 00 00 00    	je     3480ac8e <realloc+0x22e>
    3480ac31:	48 89 cb             	mov    %rcx,%rbx
    3480ac34:	48 89 d6             	mov    %rdx,%rsi
    3480ac37:	e8 b4 d6 ff ff       	callq  348082f0 <mspace_malloc>
    3480ac3c:	48 85 c0             	test   %rax,%rax
    3480ac3f:	0f 84 41 00 00 00    	je     3480ac86 <realloc+0x226>
    3480ac45:	48 8b 4b f8          	mov    -0x8(%rbx),%rcx
    3480ac49:	48 89 ca             	mov    %rcx,%rdx
    3480ac4c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    3480ac50:	31 f6                	xor    %esi,%esi
    3480ac52:	f6 c1 03             	test   $0x3,%cl
    3480ac55:	40 0f 94 c6          	sete   %sil
    3480ac59:	48 8d 0c f5 08 00 00 	lea    0x8(,%rsi,8),%rcx
    3480ac60:	00 
    3480ac61:	48 29 ca             	sub    %rcx,%rdx
    3480ac64:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    3480ac69:	48 39 ca             	cmp    %rcx,%rdx
    3480ac6c:	48 0f 43 d1          	cmovae %rcx,%rdx
    3480ac70:	48 89 c7             	mov    %rax,%rdi
    3480ac73:	48 89 de             	mov    %rbx,%rsi
    3480ac76:	e8 a5 0a 00 00       	callq  3480b720 <memcpy>
    3480ac7b:	4c 89 e7             	mov    %r12,%rdi
    3480ac7e:	48 89 de             	mov    %rbx,%rsi
    3480ac81:	e8 5a c9 ff ff       	callq  348075e0 <mspace_free>
    3480ac86:	48 83 c4 18          	add    $0x18,%rsp
    3480ac8a:	5b                   	pop    %rbx
    3480ac8b:	41 5c                	pop    %r12
    3480ac8d:	c3                   	retq   
    3480ac8e:	48 89 ce             	mov    %rcx,%rsi
    3480ac91:	48 83 c4 18          	add    $0x18,%rsp
    3480ac95:	5b                   	pop    %rbx
    3480ac96:	41 5c                	pop    %r12
    3480ac98:	e9 33 e3 ff ff       	jmpq   34808fd0 <mspace_realloc>
    3480ac9d:	0f 1f 00             	nopl   (%rax)

000000003480aca0 <memalign>:
    3480aca0:	41 54                	push   %r12
    3480aca2:	53                   	push   %rbx
    3480aca3:	48 83 ec 18          	sub    $0x18,%rsp
    3480aca7:	48 89 f3             	mov    %rsi,%rbx
    3480acaa:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    3480acaf:	4c 8d 25 ca 5d b1 00 	lea    0xb15dca(%rip),%r12        # 35320a80 <buf>
    3480acb6:	48 8d 35 a0 a0 00 00 	lea    0xa0a0(%rip),%rsi        # 34814d5d <half+0xad>
    3480acbd:	31 c0                	xor    %eax,%eax
    3480acbf:	4c 89 e7             	mov    %r12,%rdi
    3480acc2:	48 89 da             	mov    %rbx,%rdx
    3480acc5:	e8 b6 15 00 00       	callq  3480c280 <sprintf>
    3480acca:	4c 89 e7             	mov    %r12,%rdi
    3480accd:	e8 ee 1b 00 00       	callq  3480c8c0 <puts>
    3480acd2:	48 8b 3d 97 ca 20 00 	mov    0x20ca97(%rip),%rdi        # 34a17770 <_ms>
    3480acd9:	48 85 ff             	test   %rdi,%rdi
    3480acdc:	0f 85 d6 00 00 00    	jne    3480adb8 <memalign+0x118>
    3480ace2:	4c 8d 25 c7 da 20 00 	lea    0x20dac7(%rip),%r12        # 34a187b0 <_heap_chk0+0x1000>
    3480ace9:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480acf0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    3480acf5:	48 8d 1d b4 ca 50 00 	lea    0x50cab4(%rip),%rbx        # 34d177b0 <_heap_chk1>
    3480acfc:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480ad03:	4c 29 e3             	sub    %r12,%rbx
    3480ad06:	4c 89 e7             	mov    %r12,%rdi
    3480ad09:	48 89 de             	mov    %rbx,%rsi
    3480ad0c:	e8 df d0 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ad11:	48 89 05 58 ca 20 00 	mov    %rax,0x20ca58(%rip)        # 34a17770 <_ms>
    3480ad18:	4c 89 25 11 ca 20 00 	mov    %r12,0x20ca11(%rip)        # 34a17730 <heap_start>
    3480ad1f:	48 89 1d 2a ca 20 00 	mov    %rbx,0x20ca2a(%rip)        # 34a17750 <heap_size>
    3480ad26:	be 00 10 00 00       	mov    $0x1000,%esi
    3480ad2b:	48 89 c7             	mov    %rax,%rdi
    3480ad2e:	e8 cd c6 ff ff       	callq  34807400 <mspace_init_pan>
    3480ad33:	4c 8d 25 76 da 50 00 	lea    0x50da76(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480ad3a:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480ad41:	48 8d 1d 68 ca 80 00 	lea    0x80ca68(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480ad48:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480ad4f:	4c 29 e3             	sub    %r12,%rbx
    3480ad52:	4c 89 e7             	mov    %r12,%rdi
    3480ad55:	48 89 de             	mov    %rbx,%rsi
    3480ad58:	e8 93 d0 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ad5d:	48 89 05 14 ca 20 00 	mov    %rax,0x20ca14(%rip)        # 34a17778 <_ms_8k>
    3480ad64:	4c 89 25 cd c9 20 00 	mov    %r12,0x20c9cd(%rip)        # 34a17738 <heap_start+0x8>
    3480ad6b:	48 89 1d e6 c9 20 00 	mov    %rbx,0x20c9e6(%rip)        # 34a17758 <heap_size+0x8>
    3480ad72:	be 00 20 00 00       	mov    $0x2000,%esi
    3480ad77:	48 89 c7             	mov    %rax,%rdi
    3480ad7a:	e8 81 c6 ff ff       	callq  34807400 <mspace_init_pan>
    3480ad7f:	48 8d 1d 2a ca 80 00 	lea    0x80ca2a(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480ad86:	be 00 00 30 00       	mov    $0x300000,%esi
    3480ad8b:	48 89 df             	mov    %rbx,%rdi
    3480ad8e:	e8 5d d0 ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ad93:	48 89 05 e6 c9 20 00 	mov    %rax,0x20c9e6(%rip)        # 34a17780 <_ms_large>
    3480ad9a:	48 89 1d 9f c9 20 00 	mov    %rbx,0x20c99f(%rip)        # 34a17740 <heap_start+0x10>
    3480ada1:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    3480ada6:	48 c7 05 af c9 20 00 	movq   $0x300000,0x20c9af(%rip)        # 34a17760 <heap_size+0x10>
    3480adad:	00 00 30 00 
    3480adb1:	48 8b 3d b8 c9 20 00 	mov    0x20c9b8(%rip),%rdi        # 34a17770 <_ms>
    3480adb8:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3480adbd:	48 89 da             	mov    %rbx,%rdx
    3480adc0:	48 83 c4 18          	add    $0x18,%rsp
    3480adc4:	5b                   	pop    %rbx
    3480adc5:	41 5c                	pop    %r12
    3480adc7:	e9 84 e7 ff ff       	jmpq   34809550 <mspace_memalign>
    3480adcc:	0f 1f 40 00          	nopl   0x0(%rax)

000000003480add0 <malloc_usable_size>:
    3480add0:	48 83 3d 98 c9 20 00 	cmpq   $0x0,0x20c998(%rip)        # 34a17770 <_ms>
    3480add7:	00 
    3480add8:	0f 84 1f 00 00 00    	je     3480adfd <malloc_usable_size+0x2d>
    3480adde:	48 85 ff             	test   %rdi,%rdi
    3480ade1:	0f 84 f7 00 00 00    	je     3480aede <malloc_usable_size+0x10e>
    3480ade7:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    3480adeb:	89 c1                	mov    %eax,%ecx
    3480aded:	83 e1 03             	and    $0x3,%ecx
    3480adf0:	48 83 f9 01          	cmp    $0x1,%rcx
    3480adf4:	0f 85 e7 00 00 00    	jne    3480aee1 <malloc_usable_size+0x111>
    3480adfa:	31 c0                	xor    %eax,%eax
    3480adfc:	c3                   	retq   
    3480adfd:	41 54                	push   %r12
    3480adff:	53                   	push   %rbx
    3480ae00:	50                   	push   %rax
    3480ae01:	48 8d 1d a8 d9 20 00 	lea    0x20d9a8(%rip),%rbx        # 34a187b0 <_heap_chk0+0x1000>
    3480ae08:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480ae0f:	4c 8d 25 9a c9 50 00 	lea    0x50c99a(%rip),%r12        # 34d177b0 <_heap_chk1>
    3480ae16:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480ae1d:	49 29 dc             	sub    %rbx,%r12
    3480ae20:	48 89 3c 24          	mov    %rdi,(%rsp)
    3480ae24:	48 89 df             	mov    %rbx,%rdi
    3480ae27:	4c 89 e6             	mov    %r12,%rsi
    3480ae2a:	e8 c1 cf ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ae2f:	48 89 05 3a c9 20 00 	mov    %rax,0x20c93a(%rip)        # 34a17770 <_ms>
    3480ae36:	48 89 1d f3 c8 20 00 	mov    %rbx,0x20c8f3(%rip)        # 34a17730 <heap_start>
    3480ae3d:	4c 89 25 0c c9 20 00 	mov    %r12,0x20c90c(%rip)        # 34a17750 <heap_size>
    3480ae44:	be 00 10 00 00       	mov    $0x1000,%esi
    3480ae49:	48 89 c7             	mov    %rax,%rdi
    3480ae4c:	e8 af c5 ff ff       	callq  34807400 <mspace_init_pan>
    3480ae51:	4c 8d 25 58 d9 50 00 	lea    0x50d958(%rip),%r12        # 34d187b0 <_heap_chk1+0x1000>
    3480ae58:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    3480ae5f:	48 8d 1d 4a c9 80 00 	lea    0x80c94a(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480ae66:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480ae6d:	4c 29 e3             	sub    %r12,%rbx
    3480ae70:	4c 89 e7             	mov    %r12,%rdi
    3480ae73:	48 89 de             	mov    %rbx,%rsi
    3480ae76:	e8 75 cf ff ff       	callq  34807df0 <create_mspace_with_base>
    3480ae7b:	48 89 05 f6 c8 20 00 	mov    %rax,0x20c8f6(%rip)        # 34a17778 <_ms_8k>
    3480ae82:	4c 89 25 af c8 20 00 	mov    %r12,0x20c8af(%rip)        # 34a17738 <heap_start+0x8>
    3480ae89:	48 89 1d c8 c8 20 00 	mov    %rbx,0x20c8c8(%rip)        # 34a17758 <heap_size+0x8>
    3480ae90:	be 00 20 00 00       	mov    $0x2000,%esi
    3480ae95:	48 89 c7             	mov    %rax,%rdi
    3480ae98:	e8 63 c5 ff ff       	callq  34807400 <mspace_init_pan>
    3480ae9d:	48 8d 1d 0c c9 80 00 	lea    0x80c90c(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480aea4:	be 00 00 30 00       	mov    $0x300000,%esi
    3480aea9:	48 89 df             	mov    %rbx,%rdi
    3480aeac:	e8 3f cf ff ff       	callq  34807df0 <create_mspace_with_base>
    3480aeb1:	48 8b 3c 24          	mov    (%rsp),%rdi
    3480aeb5:	48 89 05 c4 c8 20 00 	mov    %rax,0x20c8c4(%rip)        # 34a17780 <_ms_large>
    3480aebc:	48 89 1d 7d c8 20 00 	mov    %rbx,0x20c87d(%rip)        # 34a17740 <heap_start+0x10>
    3480aec3:	48 c7 05 92 c8 20 00 	movq   $0x300000,0x20c892(%rip)        # 34a17760 <heap_size+0x10>
    3480aeca:	00 00 30 00 
    3480aece:	48 83 c4 08          	add    $0x8,%rsp
    3480aed2:	5b                   	pop    %rbx
    3480aed3:	41 5c                	pop    %r12
    3480aed5:	48 85 ff             	test   %rdi,%rdi
    3480aed8:	0f 85 09 ff ff ff    	jne    3480ade7 <malloc_usable_size+0x17>
    3480aede:	31 c0                	xor    %eax,%eax
    3480aee0:	c3                   	retq   
    3480aee1:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    3480aee5:	31 d2                	xor    %edx,%edx
    3480aee7:	48 85 c9             	test   %rcx,%rcx
    3480aeea:	0f 94 c2             	sete   %dl
    3480aeed:	48 8d 0c d5 08 00 00 	lea    0x8(,%rdx,8),%rcx
    3480aef4:	00 
    3480aef5:	48 29 c8             	sub    %rcx,%rax
    3480aef8:	c3                   	retq   
    3480aef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480af00 <posix_memalign>:
    3480af00:	41 54                	push   %r12
    3480af02:	53                   	push   %rbx
    3480af03:	48 83 ec 18          	sub    $0x18,%rsp
    3480af07:	49 89 f4             	mov    %rsi,%r12
    3480af0a:	48 89 fb             	mov    %rdi,%rbx
    3480af0d:	b8 16 00 00 00       	mov    $0x16,%eax
    3480af12:	49 83 fc 08          	cmp    $0x8,%r12
    3480af16:	0f 82 23 01 00 00    	jb     3480b03f <posix_memalign+0x13f>
    3480af1c:	48 85 db             	test   %rbx,%rbx
    3480af1f:	0f 84 15 01 00 00    	je     3480b03a <posix_memalign+0x13a>
    3480af25:	48 8b 3d 44 c8 20 00 	mov    0x20c844(%rip),%rdi        # 34a17770 <_ms>
    3480af2c:	48 85 ff             	test   %rdi,%rdi
    3480af2f:	0f 85 ea 00 00 00    	jne    3480b01f <posix_memalign+0x11f>
    3480af35:	48 8d 3d 74 d8 20 00 	lea    0x20d874(%rip),%rdi        # 34a187b0 <_heap_chk0+0x1000>
    3480af3c:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    3480af43:	48 89 3c 24          	mov    %rdi,(%rsp)
    3480af47:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    3480af4c:	48 8d 1d 5d c8 50 00 	lea    0x50c85d(%rip),%rbx        # 34d177b0 <_heap_chk1>
    3480af53:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480af5a:	48 29 fb             	sub    %rdi,%rbx
    3480af5d:	48 89 de             	mov    %rbx,%rsi
    3480af60:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3480af65:	e8 86 ce ff ff       	callq  34807df0 <create_mspace_with_base>
    3480af6a:	48 89 05 ff c7 20 00 	mov    %rax,0x20c7ff(%rip)        # 34a17770 <_ms>
    3480af71:	48 8b 0c 24          	mov    (%rsp),%rcx
    3480af75:	48 89 0d b4 c7 20 00 	mov    %rcx,0x20c7b4(%rip)        # 34a17730 <heap_start>
    3480af7c:	48 89 1d cd c7 20 00 	mov    %rbx,0x20c7cd(%rip)        # 34a17750 <heap_size>
    3480af83:	be 00 10 00 00       	mov    $0x1000,%esi
    3480af88:	48 89 c7             	mov    %rax,%rdi
    3480af8b:	e8 70 c4 ff ff       	callq  34807400 <mspace_init_pan>
    3480af90:	48 8d 3d 19 d8 50 00 	lea    0x50d819(%rip),%rdi        # 34d187b0 <_heap_chk1+0x1000>
    3480af97:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    3480af9e:	48 89 3c 24          	mov    %rdi,(%rsp)
    3480afa2:	48 8d 1d 07 c8 80 00 	lea    0x80c807(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480afa9:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    3480afb0:	48 29 fb             	sub    %rdi,%rbx
    3480afb3:	48 89 de             	mov    %rbx,%rsi
    3480afb6:	e8 35 ce ff ff       	callq  34807df0 <create_mspace_with_base>
    3480afbb:	48 89 05 b6 c7 20 00 	mov    %rax,0x20c7b6(%rip)        # 34a17778 <_ms_8k>
    3480afc2:	48 8b 0c 24          	mov    (%rsp),%rcx
    3480afc6:	48 89 0d 6b c7 20 00 	mov    %rcx,0x20c76b(%rip)        # 34a17738 <heap_start+0x8>
    3480afcd:	48 89 1d 84 c7 20 00 	mov    %rbx,0x20c784(%rip)        # 34a17758 <heap_size+0x8>
    3480afd4:	be 00 20 00 00       	mov    $0x2000,%esi
    3480afd9:	48 89 c7             	mov    %rax,%rdi
    3480afdc:	e8 1f c4 ff ff       	callq  34807400 <mspace_init_pan>
    3480afe1:	48 8d 1d c8 c7 80 00 	lea    0x80c7c8(%rip),%rbx        # 350177b0 <_heap_chk2>
    3480afe8:	be 00 00 30 00       	mov    $0x300000,%esi
    3480afed:	48 89 df             	mov    %rbx,%rdi
    3480aff0:	e8 fb cd ff ff       	callq  34807df0 <create_mspace_with_base>
    3480aff5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3480affa:	48 89 05 7f c7 20 00 	mov    %rax,0x20c77f(%rip)        # 34a17780 <_ms_large>
    3480b001:	48 89 1d 38 c7 20 00 	mov    %rbx,0x20c738(%rip)        # 34a17740 <heap_start+0x10>
    3480b008:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    3480b00d:	48 c7 05 48 c7 20 00 	movq   $0x300000,0x20c748(%rip)        # 34a17760 <heap_size+0x10>
    3480b014:	00 00 30 00 
    3480b018:	48 8b 3d 51 c7 20 00 	mov    0x20c751(%rip),%rdi        # 34a17770 <_ms>
    3480b01f:	4c 89 e6             	mov    %r12,%rsi
    3480b022:	e8 29 e5 ff ff       	callq  34809550 <mspace_memalign>
    3480b027:	48 89 c1             	mov    %rax,%rcx
    3480b02a:	48 89 0b             	mov    %rcx,(%rbx)
    3480b02d:	31 c0                	xor    %eax,%eax
    3480b02f:	48 85 c9             	test   %rcx,%rcx
    3480b032:	0f 94 c0             	sete   %al
    3480b035:	e9 05 00 00 00       	jmpq   3480b03f <posix_memalign+0x13f>
    3480b03a:	b8 01 00 00 00       	mov    $0x1,%eax
    3480b03f:	48 83 c4 18          	add    $0x18,%rsp
    3480b043:	5b                   	pop    %rbx
    3480b044:	41 5c                	pop    %r12
    3480b046:	c3                   	retq   
    3480b047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480b04e:	00 00 

000000003480b050 <dispose_chunk>:
    3480b050:	41 54                	push   %r12
    3480b052:	53                   	push   %rbx
    3480b053:	50                   	push   %rax
    3480b054:	4c 8d 0c 16          	lea    (%rsi,%rdx,1),%r9
    3480b058:	48 8b 46 08          	mov    0x8(%rsi),%rax
    3480b05c:	a8 01                	test   $0x1,%al
    3480b05e:	0f 85 a1 00 00 00    	jne    3480b105 <dispose_chunk+0xb5>
    3480b064:	a8 03                	test   $0x3,%al
    3480b066:	0f 84 76 06 00 00    	je     3480b6e2 <dispose_chunk+0x692>
    3480b06c:	48 8b 0e             	mov    (%rsi),%rcx
    3480b06f:	48 29 ce             	sub    %rcx,%rsi
    3480b072:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    3480b076:	4c 39 de             	cmp    %r11,%rsi
    3480b079:	0f 82 8c 06 00 00    	jb     3480b70b <dispose_chunk+0x6bb>
    3480b07f:	48 01 ca             	add    %rcx,%rdx
    3480b082:	4c 8d 47 18          	lea    0x18(%rdi),%r8
    3480b086:	48 39 77 20          	cmp    %rsi,0x20(%rdi)
    3480b08a:	0f 84 e6 01 00 00    	je     3480b276 <dispose_chunk+0x226>
    3480b090:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    3480b097:	0f 87 0b 02 00 00    	ja     3480b2a8 <dispose_chunk+0x258>
    3480b09d:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3480b0a1:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    3480b0a5:	48 bb f8 ff ff ff 03 	movabs $0x3fffffff8,%rbx
    3480b0ac:	00 00 00 
    3480b0af:	48 21 cb             	and    %rcx,%rbx
    3480b0b2:	48 8d 5c 5f 48       	lea    0x48(%rdi,%rbx,2),%rbx
    3480b0b7:	48 39 d8             	cmp    %rbx,%rax
    3480b0ba:	0f 84 13 00 00 00    	je     3480b0d3 <dispose_chunk+0x83>
    3480b0c0:	49 39 c3             	cmp    %rax,%r11
    3480b0c3:	0f 87 42 06 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b0c9:	48 39 70 18          	cmp    %rsi,0x18(%rax)
    3480b0cd:	0f 85 38 06 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b0d3:	49 39 c2             	cmp    %rax,%r10
    3480b0d6:	0f 84 88 03 00 00    	je     3480b464 <dispose_chunk+0x414>
    3480b0dc:	49 39 da             	cmp    %rbx,%r10
    3480b0df:	0f 84 13 00 00 00    	je     3480b0f8 <dispose_chunk+0xa8>
    3480b0e5:	4d 39 d3             	cmp    %r10,%r11
    3480b0e8:	0f 87 1d 06 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b0ee:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    3480b0f2:	0f 85 13 06 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b0f8:	4c 89 50 18          	mov    %r10,0x18(%rax)
    3480b0fc:	49 89 42 10          	mov    %rax,0x10(%r10)
    3480b100:	e9 04 00 00 00       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b105:	4c 8d 47 18          	lea    0x18(%rdi),%r8
    3480b109:	49 8b 08             	mov    (%r8),%rcx
    3480b10c:	49 39 c9             	cmp    %rcx,%r9
    3480b10f:	0f 82 f6 05 00 00    	jb     3480b70b <dispose_chunk+0x6bb>
    3480b115:	4d 8b 51 08          	mov    0x8(%r9),%r10
    3480b119:	41 f6 c2 02          	test   $0x2,%r10b
    3480b11d:	0f 85 89 00 00 00    	jne    3480b1ac <dispose_chunk+0x15c>
    3480b123:	4c 39 4f 28          	cmp    %r9,0x28(%rdi)
    3480b127:	0f 84 16 01 00 00    	je     3480b243 <dispose_chunk+0x1f3>
    3480b12d:	4c 39 4f 20          	cmp    %r9,0x20(%rdi)
    3480b131:	0f 84 b9 01 00 00    	je     3480b2f0 <dispose_chunk+0x2a0>
    3480b137:	49 81 fa ff 00 00 00 	cmp    $0xff,%r10
    3480b13e:	0f 87 35 02 00 00    	ja     3480b379 <dispose_chunk+0x329>
    3480b144:	49 8b 41 10          	mov    0x10(%r9),%rax
    3480b148:	4d 8b 59 18          	mov    0x18(%r9),%r11
    3480b14c:	48 bb f8 ff ff ff 03 	movabs $0x3fffffff8,%rbx
    3480b153:	00 00 00 
    3480b156:	4c 21 d3             	and    %r10,%rbx
    3480b159:	48 8d 5c 5f 48       	lea    0x48(%rdi,%rbx,2),%rbx
    3480b15e:	48 39 d8             	cmp    %rbx,%rax
    3480b161:	0f 84 13 00 00 00    	je     3480b17a <dispose_chunk+0x12a>
    3480b167:	48 39 c1             	cmp    %rax,%rcx
    3480b16a:	0f 87 9b 05 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b170:	4c 39 48 18          	cmp    %r9,0x18(%rax)
    3480b174:	0f 85 91 05 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b17a:	49 39 c3             	cmp    %rax,%r11
    3480b17d:	0f 84 1f 03 00 00    	je     3480b4a2 <dispose_chunk+0x452>
    3480b183:	49 39 db             	cmp    %rbx,%r11
    3480b186:	0f 84 13 00 00 00    	je     3480b19f <dispose_chunk+0x14f>
    3480b18c:	4c 39 d9             	cmp    %r11,%rcx
    3480b18f:	0f 87 76 05 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b195:	4d 39 4b 10          	cmp    %r9,0x10(%r11)
    3480b199:	0f 85 6c 05 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b19f:	4c 89 58 18          	mov    %r11,0x18(%rax)
    3480b1a3:	49 89 43 10          	mov    %rax,0x10(%r11)
    3480b1a7:	e9 12 05 00 00       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b1ac:	49 83 e2 fe          	and    $0xfffffffffffffffe,%r10
    3480b1b0:	4d 89 51 08          	mov    %r10,0x8(%r9)
    3480b1b4:	48 89 d0             	mov    %rdx,%rax
    3480b1b7:	48 83 c8 01          	or     $0x1,%rax
    3480b1bb:	48 89 46 08          	mov    %rax,0x8(%rsi)
    3480b1bf:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    3480b1c3:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    3480b1ca:	0f 87 3d 00 00 00    	ja     3480b20d <dispose_chunk+0x1bd>
    3480b1d0:	48 89 d1             	mov    %rdx,%rcx
    3480b1d3:	48 c1 e9 03          	shr    $0x3,%rcx
    3480b1d7:	48 b8 f8 ff ff ff 03 	movabs $0x3fffffff8,%rax
    3480b1de:	00 00 00 
    3480b1e1:	48 21 d0             	and    %rdx,%rax
    3480b1e4:	48 8d 44 47 48       	lea    0x48(%rdi,%rax,2),%rax
    3480b1e9:	8b 17                	mov    (%rdi),%edx
    3480b1eb:	bb 01 00 00 00       	mov    $0x1,%ebx
    3480b1f0:	d3 e3                	shl    %cl,%ebx
    3480b1f2:	0f a3 ca             	bt     %ecx,%edx
    3480b1f5:	0f 83 15 01 00 00    	jae    3480b310 <dispose_chunk+0x2c0>
    3480b1fb:	48 8b 48 10          	mov    0x10(%rax),%rcx
    3480b1ff:	49 39 08             	cmp    %rcx,(%r8)
    3480b202:	0f 86 0f 01 00 00    	jbe    3480b317 <dispose_chunk+0x2c7>
    3480b208:	e9 fe 04 00 00       	jmpq   3480b70b <dispose_chunk+0x6bb>
    3480b20d:	48 89 d0             	mov    %rdx,%rax
    3480b210:	48 c1 e8 08          	shr    $0x8,%rax
    3480b214:	85 c0                	test   %eax,%eax
    3480b216:	0f 84 10 01 00 00    	je     3480b32c <dispose_chunk+0x2dc>
    3480b21c:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    3480b221:	3d ff ff 00 00       	cmp    $0xffff,%eax
    3480b226:	0f 87 02 01 00 00    	ja     3480b32e <dispose_chunk+0x2de>
    3480b22c:	0f bd c0             	bsr    %eax,%eax
    3480b22f:	8d 48 07             	lea    0x7(%rax),%ecx
    3480b232:	48 89 d3             	mov    %rdx,%rbx
    3480b235:	48 d3 eb             	shr    %cl,%rbx
    3480b238:	83 e3 01             	and    $0x1,%ebx
    3480b23b:	8d 0c 43             	lea    (%rbx,%rax,2),%ecx
    3480b23e:	e9 eb 00 00 00       	jmpq   3480b32e <dispose_chunk+0x2de>
    3480b243:	48 03 57 10          	add    0x10(%rdi),%rdx
    3480b247:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    3480b24b:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    3480b24f:	48 83 ca 01          	or     $0x1,%rdx
    3480b253:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    3480b257:	48 3b 77 20          	cmp    0x20(%rdi),%rsi
    3480b25b:	0f 85 81 04 00 00    	jne    3480b6e2 <dispose_chunk+0x692>
    3480b261:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    3480b268:	00 
    3480b269:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    3480b270:	00 
    3480b271:	e9 6c 04 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b276:	49 8b 41 08          	mov    0x8(%r9),%rax
    3480b27a:	89 c1                	mov    %eax,%ecx
    3480b27c:	83 e1 03             	and    $0x3,%ecx
    3480b27f:	48 83 f9 03          	cmp    $0x3,%rcx
    3480b283:	0f 85 80 fe ff ff    	jne    3480b109 <dispose_chunk+0xb9>
    3480b289:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    3480b28d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    3480b291:	49 89 41 08          	mov    %rax,0x8(%r9)
    3480b295:	48 89 d0             	mov    %rdx,%rax
    3480b298:	48 83 c8 01          	or     $0x1,%rax
    3480b29c:	48 89 46 08          	mov    %rax,0x8(%rsi)
    3480b2a0:	49 89 11             	mov    %rdx,(%r9)
    3480b2a3:	e9 3a 04 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b2a8:	48 8b 46 18          	mov    0x18(%rsi),%rax
    3480b2ac:	4c 8b 56 30          	mov    0x30(%rsi),%r10
    3480b2b0:	48 39 f0             	cmp    %rsi,%rax
    3480b2b3:	0f 84 bd 01 00 00    	je     3480b476 <dispose_chunk+0x426>
    3480b2b9:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    3480b2bd:	49 39 cb             	cmp    %rcx,%r11
    3480b2c0:	0f 87 45 04 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b2c6:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    3480b2ca:	0f 85 3b 04 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b2d0:	48 39 70 10          	cmp    %rsi,0x10(%rax)
    3480b2d4:	0f 85 31 04 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b2da:	48 89 41 18          	mov    %rax,0x18(%rcx)
    3480b2de:	48 89 48 10          	mov    %rcx,0x10(%rax)
    3480b2e2:	4d 85 d2             	test   %r10,%r10
    3480b2e5:	0f 85 27 02 00 00    	jne    3480b512 <dispose_chunk+0x4c2>
    3480b2eb:	e9 19 fe ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b2f0:	48 03 57 08          	add    0x8(%rdi),%rdx
    3480b2f4:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    3480b2f8:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    3480b2fc:	48 89 d0             	mov    %rdx,%rax
    3480b2ff:	48 83 c8 01          	or     $0x1,%rax
    3480b303:	48 89 46 08          	mov    %rax,0x8(%rsi)
    3480b307:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    3480b30b:	e9 d2 03 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b310:	09 da                	or     %ebx,%edx
    3480b312:	89 17                	mov    %edx,(%rdi)
    3480b314:	48 89 c1             	mov    %rax,%rcx
    3480b317:	48 89 70 10          	mov    %rsi,0x10(%rax)
    3480b31b:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    3480b31f:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    3480b323:	48 89 46 18          	mov    %rax,0x18(%rsi)
    3480b327:	e9 b6 03 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b32c:	31 c9                	xor    %ecx,%ecx
    3480b32e:	89 c8                	mov    %ecx,%eax
    3480b330:	4c 8d 8c c7 58 02 00 	lea    0x258(%rdi,%rax,8),%r9
    3480b337:	00 
    3480b338:	89 4e 38             	mov    %ecx,0x38(%rsi)
    3480b33b:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480b33e:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    3480b342:	8b 5f 04             	mov    0x4(%rdi),%ebx
    3480b345:	b8 01 00 00 00       	mov    $0x1,%eax
    3480b34a:	d3 e0                	shl    %cl,%eax
    3480b34c:	0f a3 cb             	bt     %ecx,%ebx
    3480b34f:	0f 83 13 00 00 00    	jae    3480b368 <dispose_chunk+0x318>
    3480b355:	49 8b 39             	mov    (%r9),%rdi
    3480b358:	83 f9 1f             	cmp    $0x1f,%ecx
    3480b35b:	0f 85 62 00 00 00    	jne    3480b3c3 <dispose_chunk+0x373>
    3480b361:	31 c0                	xor    %eax,%eax
    3480b363:	e9 68 00 00 00       	jmpq   3480b3d0 <dispose_chunk+0x380>
    3480b368:	09 c3                	or     %eax,%ebx
    3480b36a:	89 5f 04             	mov    %ebx,0x4(%rdi)
    3480b36d:	49 89 31             	mov    %rsi,(%r9)
    3480b370:	4c 89 4e 30          	mov    %r9,0x30(%rsi)
    3480b374:	e9 a8 00 00 00       	jmpq   3480b421 <dispose_chunk+0x3d1>
    3480b379:	4d 8b 61 18          	mov    0x18(%r9),%r12
    3480b37d:	4d 8b 59 30          	mov    0x30(%r9),%r11
    3480b381:	4d 39 cc             	cmp    %r9,%r12
    3480b384:	0f 84 02 01 00 00    	je     3480b48c <dispose_chunk+0x43c>
    3480b38a:	49 8b 41 10          	mov    0x10(%r9),%rax
    3480b38e:	48 39 c1             	cmp    %rax,%rcx
    3480b391:	0f 87 74 03 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b397:	4c 39 48 18          	cmp    %r9,0x18(%rax)
    3480b39b:	0f 85 6a 03 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b3a1:	4d 39 4c 24 10       	cmp    %r9,0x10(%r12)
    3480b3a6:	0f 85 5f 03 00 00    	jne    3480b70b <dispose_chunk+0x6bb>
    3480b3ac:	4c 89 60 18          	mov    %r12,0x18(%rax)
    3480b3b0:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    3480b3b5:	4d 85 db             	test   %r11,%r11
    3480b3b8:	0f 85 4b 02 00 00    	jne    3480b609 <dispose_chunk+0x5b9>
    3480b3be:	e9 fb 02 00 00       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b3c3:	d1 e9                	shr    %ecx
    3480b3c5:	83 c1 06             	add    $0x6,%ecx
    3480b3c8:	b8 3f 00 00 00       	mov    $0x3f,%eax
    3480b3cd:	48 29 c8             	sub    %rcx,%rax
    3480b3d0:	48 89 d3             	mov    %rdx,%rbx
    3480b3d3:	89 c1                	mov    %eax,%ecx
    3480b3d5:	48 d3 e3             	shl    %cl,%rbx
    3480b3d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480b3df:	00 
    3480b3e0:	48 89 f8             	mov    %rdi,%rax
    3480b3e3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3480b3e7:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    3480b3eb:	48 39 d1             	cmp    %rdx,%rcx
    3480b3ee:	0f 84 3a 00 00 00    	je     3480b42e <dispose_chunk+0x3de>
    3480b3f4:	48 89 d9             	mov    %rbx,%rcx
    3480b3f7:	48 c1 e9 3f          	shr    $0x3f,%rcx
    3480b3fb:	48 01 db             	add    %rbx,%rbx
    3480b3fe:	48 8b 7c c8 20       	mov    0x20(%rax,%rcx,8),%rdi
    3480b403:	48 85 ff             	test   %rdi,%rdi
    3480b406:	0f 85 d4 ff ff ff    	jne    3480b3e0 <dispose_chunk+0x390>
    3480b40c:	48 8d 4c c8 20       	lea    0x20(%rax,%rcx,8),%rcx
    3480b411:	49 39 08             	cmp    %rcx,(%r8)
    3480b414:	0f 87 f1 02 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b41a:	48 89 31             	mov    %rsi,(%rcx)
    3480b41d:	48 89 46 30          	mov    %rax,0x30(%rsi)
    3480b421:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    3480b425:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    3480b429:	e9 b4 02 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b42e:	48 8b 48 10          	mov    0x10(%rax),%rcx
    3480b432:	49 8b 10             	mov    (%r8),%rdx
    3480b435:	48 39 ca             	cmp    %rcx,%rdx
    3480b438:	0f 87 cd 02 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b43e:	48 39 c2             	cmp    %rax,%rdx
    3480b441:	0f 87 c4 02 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b447:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    3480b44b:	48 89 70 10          	mov    %rsi,0x10(%rax)
    3480b44f:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    3480b453:	48 89 46 18          	mov    %rax,0x18(%rsi)
    3480b457:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    3480b45e:	00 
    3480b45f:	e9 7e 02 00 00       	jmpq   3480b6e2 <dispose_chunk+0x692>
    3480b464:	48 c1 e9 03          	shr    $0x3,%rcx
    3480b468:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480b46d:	d3 c0                	rol    %cl,%eax
    3480b46f:	21 07                	and    %eax,(%rdi)
    3480b471:	e9 93 fc ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b476:	48 8b 5e 28          	mov    0x28(%rsi),%rbx
    3480b47a:	48 85 db             	test   %rbx,%rbx
    3480b47d:	0f 84 34 00 00 00    	je     3480b4b7 <dispose_chunk+0x467>
    3480b483:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
    3480b487:	e9 44 00 00 00       	jmpq   3480b4d0 <dispose_chunk+0x480>
    3480b48c:	49 8b 41 28          	mov    0x28(%r9),%rax
    3480b490:	48 85 c0             	test   %rax,%rax
    3480b493:	0f 84 11 01 00 00    	je     3480b5aa <dispose_chunk+0x55a>
    3480b499:	49 8d 59 28          	lea    0x28(%r9),%rbx
    3480b49d:	e9 18 01 00 00       	jmpq   3480b5ba <dispose_chunk+0x56a>
    3480b4a2:	4c 89 d1             	mov    %r10,%rcx
    3480b4a5:	48 c1 e9 03          	shr    $0x3,%rcx
    3480b4a9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480b4ae:	d3 c0                	rol    %cl,%eax
    3480b4b0:	21 07                	and    %eax,(%rdi)
    3480b4b2:	e9 07 02 00 00       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b4b7:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
    3480b4bb:	48 8b 19             	mov    (%rcx),%rbx
    3480b4be:	48 85 db             	test   %rbx,%rbx
    3480b4c1:	0f 84 23 02 00 00    	je     3480b6ea <dispose_chunk+0x69a>
    3480b4c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480b4ce:	00 00 
    3480b4d0:	48 89 d8             	mov    %rbx,%rax
    3480b4d3:	49 89 cc             	mov    %rcx,%r12
    3480b4d6:	48 8d 48 28          	lea    0x28(%rax),%rcx
    3480b4da:	48 8b 58 28          	mov    0x28(%rax),%rbx
    3480b4de:	48 85 db             	test   %rbx,%rbx
    3480b4e1:	0f 85 e9 ff ff ff    	jne    3480b4d0 <dispose_chunk+0x480>
    3480b4e7:	48 8d 48 20          	lea    0x20(%rax),%rcx
    3480b4eb:	48 8b 58 20          	mov    0x20(%rax),%rbx
    3480b4ef:	48 85 db             	test   %rbx,%rbx
    3480b4f2:	0f 85 d8 ff ff ff    	jne    3480b4d0 <dispose_chunk+0x480>
    3480b4f8:	4d 39 e3             	cmp    %r12,%r11
    3480b4fb:	0f 87 0a 02 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b501:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    3480b508:	00 
    3480b509:	4d 85 d2             	test   %r10,%r10
    3480b50c:	0f 84 f7 fb ff ff    	je     3480b109 <dispose_chunk+0xb9>
    3480b512:	8b 4e 38             	mov    0x38(%rsi),%ecx
    3480b515:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    3480b51c:	00 
    3480b51d:	0f 84 25 00 00 00    	je     3480b548 <dispose_chunk+0x4f8>
    3480b523:	4d 39 10             	cmp    %r10,(%r8)
    3480b526:	0f 87 df 01 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b52c:	31 c9                	xor    %ecx,%ecx
    3480b52e:	49 39 72 20          	cmp    %rsi,0x20(%r10)
    3480b532:	0f 95 c1             	setne  %cl
    3480b535:	49 89 44 ca 20       	mov    %rax,0x20(%r10,%rcx,8)
    3480b53a:	48 85 c0             	test   %rax,%rax
    3480b53d:	0f 85 16 00 00 00    	jne    3480b559 <dispose_chunk+0x509>
    3480b543:	e9 c1 fb ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b548:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    3480b54f:	00 
    3480b550:	48 85 c0             	test   %rax,%rax
    3480b553:	0f 84 4c 01 00 00    	je     3480b6a5 <dispose_chunk+0x655>
    3480b559:	49 8b 08             	mov    (%r8),%rcx
    3480b55c:	48 39 c1             	cmp    %rax,%rcx
    3480b55f:	0f 87 a6 01 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b565:	4c 89 50 30          	mov    %r10,0x30(%rax)
    3480b569:	48 8b 5e 20          	mov    0x20(%rsi),%rbx
    3480b56d:	48 85 db             	test   %rbx,%rbx
    3480b570:	0f 84 11 00 00 00    	je     3480b587 <dispose_chunk+0x537>
    3480b576:	48 39 d9             	cmp    %rbx,%rcx
    3480b579:	0f 87 8c 01 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b57f:	48 89 58 20          	mov    %rbx,0x20(%rax)
    3480b583:	48 89 43 30          	mov    %rax,0x30(%rbx)
    3480b587:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    3480b58b:	48 85 c9             	test   %rcx,%rcx
    3480b58e:	0f 84 75 fb ff ff    	je     3480b109 <dispose_chunk+0xb9>
    3480b594:	49 39 08             	cmp    %rcx,(%r8)
    3480b597:	0f 87 6e 01 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b59d:	48 89 48 28          	mov    %rcx,0x28(%rax)
    3480b5a1:	48 89 41 30          	mov    %rax,0x30(%rcx)
    3480b5a5:	e9 5f fb ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b5aa:	49 8d 59 20          	lea    0x20(%r9),%rbx
    3480b5ae:	48 8b 03             	mov    (%rbx),%rax
    3480b5b1:	48 85 c0             	test   %rax,%rax
    3480b5b4:	0f 84 40 01 00 00    	je     3480b6fa <dispose_chunk+0x6aa>
    3480b5ba:	4c 89 1c 24          	mov    %r11,(%rsp)
    3480b5be:	66 90                	xchg   %ax,%ax
    3480b5c0:	49 89 c4             	mov    %rax,%r12
    3480b5c3:	49 89 db             	mov    %rbx,%r11
    3480b5c6:	49 8d 5c 24 28       	lea    0x28(%r12),%rbx
    3480b5cb:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    3480b5d0:	48 85 c0             	test   %rax,%rax
    3480b5d3:	0f 85 e7 ff ff ff    	jne    3480b5c0 <dispose_chunk+0x570>
    3480b5d9:	49 8d 5c 24 20       	lea    0x20(%r12),%rbx
    3480b5de:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    3480b5e3:	48 85 c0             	test   %rax,%rax
    3480b5e6:	0f 85 d4 ff ff ff    	jne    3480b5c0 <dispose_chunk+0x570>
    3480b5ec:	4c 39 d9             	cmp    %r11,%rcx
    3480b5ef:	0f 87 16 01 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b5f5:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    3480b5fc:	4c 8b 1c 24          	mov    (%rsp),%r11
    3480b600:	4d 85 db             	test   %r11,%r11
    3480b603:	0f 84 b5 00 00 00    	je     3480b6be <dispose_chunk+0x66e>
    3480b609:	41 8b 49 38          	mov    0x38(%r9),%ecx
    3480b60d:	4c 39 8c cf 58 02 00 	cmp    %r9,0x258(%rdi,%rcx,8)
    3480b614:	00 
    3480b615:	0f 84 25 00 00 00    	je     3480b640 <dispose_chunk+0x5f0>
    3480b61b:	4d 39 18             	cmp    %r11,(%r8)
    3480b61e:	0f 87 e7 00 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b624:	31 c0                	xor    %eax,%eax
    3480b626:	4d 39 4b 20          	cmp    %r9,0x20(%r11)
    3480b62a:	0f 95 c0             	setne  %al
    3480b62d:	4d 89 64 c3 20       	mov    %r12,0x20(%r11,%rax,8)
    3480b632:	4d 85 e4             	test   %r12,%r12
    3480b635:	0f 85 16 00 00 00    	jne    3480b651 <dispose_chunk+0x601>
    3480b63b:	e9 7e 00 00 00       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b640:	4c 89 a4 cf 58 02 00 	mov    %r12,0x258(%rdi,%rcx,8)
    3480b647:	00 
    3480b648:	4d 85 e4             	test   %r12,%r12
    3480b64b:	0f 84 63 00 00 00    	je     3480b6b4 <dispose_chunk+0x664>
    3480b651:	49 8b 00             	mov    (%r8),%rax
    3480b654:	4c 39 e0             	cmp    %r12,%rax
    3480b657:	0f 87 ae 00 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b65d:	4d 89 5c 24 30       	mov    %r11,0x30(%r12)
    3480b662:	49 8b 49 20          	mov    0x20(%r9),%rcx
    3480b666:	48 85 c9             	test   %rcx,%rcx
    3480b669:	0f 84 12 00 00 00    	je     3480b681 <dispose_chunk+0x631>
    3480b66f:	48 39 c8             	cmp    %rcx,%rax
    3480b672:	0f 87 93 00 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b678:	49 89 4c 24 20       	mov    %rcx,0x20(%r12)
    3480b67d:	4c 89 61 30          	mov    %r12,0x30(%rcx)
    3480b681:	49 8b 41 28          	mov    0x28(%r9),%rax
    3480b685:	48 85 c0             	test   %rax,%rax
    3480b688:	0f 84 30 00 00 00    	je     3480b6be <dispose_chunk+0x66e>
    3480b68e:	49 39 00             	cmp    %rax,(%r8)
    3480b691:	0f 87 74 00 00 00    	ja     3480b70b <dispose_chunk+0x6bb>
    3480b697:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    3480b69c:	4c 89 60 30          	mov    %r12,0x30(%rax)
    3480b6a0:	e9 19 00 00 00       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b6a5:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480b6aa:	d3 c0                	rol    %cl,%eax
    3480b6ac:	21 47 04             	and    %eax,0x4(%rdi)
    3480b6af:	e9 55 fa ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b6b4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480b6b9:	d3 c0                	rol    %cl,%eax
    3480b6bb:	21 47 04             	and    %eax,0x4(%rdi)
    3480b6be:	49 83 e2 f8          	and    $0xfffffffffffffff8,%r10
    3480b6c2:	4c 01 d2             	add    %r10,%rdx
    3480b6c5:	48 89 d0             	mov    %rdx,%rax
    3480b6c8:	48 83 c8 01          	or     $0x1,%rax
    3480b6cc:	48 89 46 08          	mov    %rax,0x8(%rsi)
    3480b6d0:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    3480b6d4:	48 3b 77 20          	cmp    0x20(%rdi),%rsi
    3480b6d8:	0f 85 e5 fa ff ff    	jne    3480b1c3 <dispose_chunk+0x173>
    3480b6de:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    3480b6e2:	48 83 c4 08          	add    $0x8,%rsp
    3480b6e6:	5b                   	pop    %rbx
    3480b6e7:	41 5c                	pop    %r12
    3480b6e9:	c3                   	retq   
    3480b6ea:	31 c0                	xor    %eax,%eax
    3480b6ec:	4d 85 d2             	test   %r10,%r10
    3480b6ef:	0f 85 1d fe ff ff    	jne    3480b512 <dispose_chunk+0x4c2>
    3480b6f5:	e9 0f fa ff ff       	jmpq   3480b109 <dispose_chunk+0xb9>
    3480b6fa:	45 31 e4             	xor    %r12d,%r12d
    3480b6fd:	4d 85 db             	test   %r11,%r11
    3480b700:	0f 85 03 ff ff ff    	jne    3480b609 <dispose_chunk+0x5b9>
    3480b706:	e9 b3 ff ff ff       	jmpq   3480b6be <dispose_chunk+0x66e>
    3480b70b:	bf 01 00 00 00       	mov    $0x1,%edi
    3480b710:	e8 6b 15 00 00       	callq  3480cc80 <exit>
    3480b715:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480b71c:	00 00 00 
    3480b71f:	90                   	nop

000000003480b720 <memcpy>:
    3480b720:	48 85 d2             	test   %rdx,%rdx
    3480b723:	74 31                	je     3480b756 <memcpy+0x36>
    3480b725:	48 89 f8             	mov    %rdi,%rax
    3480b728:	48 83 fa 08          	cmp    $0x8,%rdx
    3480b72c:	72 14                	jb     3480b742 <memcpy+0x22>
    3480b72e:	f7 c7 07 00 00 00    	test   $0x7,%edi
    3480b734:	74 0c                	je     3480b742 <memcpy+0x22>
    3480b736:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    3480b737:	48 ff ca             	dec    %rdx
    3480b73a:	f7 c7 07 00 00 00    	test   $0x7,%edi
    3480b740:	75 f4                	jne    3480b736 <memcpy+0x16>
    3480b742:	48 89 d1             	mov    %rdx,%rcx
    3480b745:	48 c1 e9 03          	shr    $0x3,%rcx
    3480b749:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    3480b74c:	83 e2 07             	and    $0x7,%edx
    3480b74f:	74 05                	je     3480b756 <memcpy+0x36>
    3480b751:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    3480b752:	ff ca                	dec    %edx
    3480b754:	75 fb                	jne    3480b751 <memcpy+0x31>
    3480b756:	c3                   	retq   
    3480b757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480b75e:	00 00 

000000003480b760 <memmove>:
    3480b760:	48 89 f8             	mov    %rdi,%rax
    3480b763:	48 29 f0             	sub    %rsi,%rax
    3480b766:	48 39 d0             	cmp    %rdx,%rax
    3480b769:	0f 83 b1 ff ff ff    	jae    3480b720 <memcpy>
    3480b76f:	48 31 c0             	xor    %rax,%rax
    3480b772:	48 85 d2             	test   %rdx,%rdx
    3480b775:	74 15                	je     3480b78c <memmove+0x2c>
    3480b777:	48 89 d1             	mov    %rdx,%rcx
    3480b77a:	48 8d 74 16 ff       	lea    -0x1(%rsi,%rdx,1),%rsi
    3480b77f:	48 8d 7c 17 ff       	lea    -0x1(%rdi,%rdx,1),%rdi
    3480b784:	fd                   	std    
    3480b785:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
    3480b787:	fc                   	cld    
    3480b788:	48 8d 47 01          	lea    0x1(%rdi),%rax
    3480b78c:	c3                   	retq   

000000003480b78d <memset>:
    3480b78d:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3480b793:	48 b8 01 01 01 01 01 	movabs $0x101010101010101,%rax
    3480b79a:	01 01 01 
    3480b79d:	48 89 d1             	mov    %rdx,%rcx
    3480b7a0:	49 89 f8             	mov    %rdi,%r8
    3480b7a3:	48 0f af c6          	imul   %rsi,%rax
    3480b7a7:	48 83 f9 10          	cmp    $0x10,%rcx
    3480b7ab:	72 10                	jb     3480b7bd <memset+0x30>
    3480b7ad:	48 89 44 0f f8       	mov    %rax,-0x8(%rdi,%rcx,1)
    3480b7b2:	48 c1 e9 03          	shr    $0x3,%rcx
    3480b7b6:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3480b7b9:	4c 89 c0             	mov    %r8,%rax
    3480b7bc:	c3                   	retq   
    3480b7bd:	85 c9                	test   %ecx,%ecx
    3480b7bf:	74 29                	je     3480b7ea <memset+0x5d>
    3480b7c1:	88 07                	mov    %al,(%rdi)
    3480b7c3:	88 44 0f ff          	mov    %al,-0x1(%rdi,%rcx,1)
    3480b7c7:	83 f9 02             	cmp    $0x2,%ecx
    3480b7ca:	76 1e                	jbe    3480b7ea <memset+0x5d>
    3480b7cc:	88 47 01             	mov    %al,0x1(%rdi)
    3480b7cf:	88 44 0f fe          	mov    %al,-0x2(%rdi,%rcx,1)
    3480b7d3:	83 f9 04             	cmp    $0x4,%ecx
    3480b7d6:	76 12                	jbe    3480b7ea <memset+0x5d>
    3480b7d8:	89 07                	mov    %eax,(%rdi)
    3480b7da:	89 44 0f fc          	mov    %eax,-0x4(%rdi,%rcx,1)
    3480b7de:	83 f9 08             	cmp    $0x8,%ecx
    3480b7e1:	76 07                	jbe    3480b7ea <memset+0x5d>
    3480b7e3:	89 47 04             	mov    %eax,0x4(%rdi)
    3480b7e6:	89 44 0f f8          	mov    %eax,-0x8(%rdi,%rcx,1)
    3480b7ea:	4c 89 c0             	mov    %r8,%rax
    3480b7ed:	c3                   	retq   
    3480b7ee:	66 90                	xchg   %ax,%ax

000000003480b7f0 <pow>:
    3480b7f0:	41 54                	push   %r12
    3480b7f2:	53                   	push   %rbx
    3480b7f3:	48 83 ec 48          	sub    $0x48,%rsp
    3480b7f7:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    3480b7fb:	66 48 0f 7e ce       	movq   %xmm1,%rsi
    3480b800:	48 89 f3             	mov    %rsi,%rbx
    3480b803:	48 c1 eb 20          	shr    $0x20,%rbx
    3480b807:	41 89 dc             	mov    %ebx,%r12d
    3480b80a:	41 81 e4 ff ff ff 7f 	and    $0x7fffffff,%r12d
    3480b811:	f2 0f 10 05 47 77 00 	movsd  0x7747(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480b818:	00 
    3480b819:	44 89 e0             	mov    %r12d,%eax
    3480b81c:	09 f0                	or     %esi,%eax
    3480b81e:	0f 84 3f 00 00 00    	je     3480b863 <pow+0x73>
    3480b824:	66 48 0f 7e d7       	movq   %xmm2,%rdi
    3480b829:	48 89 fa             	mov    %rdi,%rdx
    3480b82c:	48 c1 ea 20          	shr    $0x20,%rdx
    3480b830:	85 ff                	test   %edi,%edi
    3480b832:	0f 85 0c 00 00 00    	jne    3480b844 <pow+0x54>
    3480b838:	81 fa 00 00 f0 3f    	cmp    $0x3ff00000,%edx
    3480b83e:	0f 84 1f 00 00 00    	je     3480b863 <pow+0x73>
    3480b844:	41 89 d1             	mov    %edx,%r9d
    3480b847:	41 81 e1 ff ff ff 7f 	and    $0x7fffffff,%r9d
    3480b84e:	41 81 f9 00 00 f0 7f 	cmp    $0x7ff00000,%r9d
    3480b855:	0f 86 10 00 00 00    	jbe    3480b86b <pow+0x7b>
    3480b85b:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480b85f:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480b863:	48 83 c4 48          	add    $0x48,%rsp
    3480b867:	5b                   	pop    %rbx
    3480b868:	41 5c                	pop    %r12
    3480b86a:	c3                   	retq   
    3480b86b:	0f 94 c0             	sete   %al
    3480b86e:	85 ff                	test   %edi,%edi
    3480b870:	0f 95 c1             	setne  %cl
    3480b873:	84 c1                	test   %al,%cl
    3480b875:	0f 85 e0 ff ff ff    	jne    3480b85b <pow+0x6b>
    3480b87b:	41 81 fc 00 00 f0 7f 	cmp    $0x7ff00000,%r12d
    3480b882:	0f 87 d3 ff ff ff    	ja     3480b85b <pow+0x6b>
    3480b888:	85 f6                	test   %esi,%esi
    3480b88a:	0f 84 0d 00 00 00    	je     3480b89d <pow+0xad>
    3480b890:	41 81 fc 00 00 f0 7f 	cmp    $0x7ff00000,%r12d
    3480b897:	0f 84 be ff ff ff    	je     3480b85b <pow+0x6b>
    3480b89d:	85 d2                	test   %edx,%edx
    3480b89f:	0f 88 0f 00 00 00    	js     3480b8b4 <pow+0xc4>
    3480b8a5:	31 c9                	xor    %ecx,%ecx
    3480b8a7:	85 f6                	test   %esi,%esi
    3480b8a9:	0f 85 79 00 00 00    	jne    3480b928 <pow+0x138>
    3480b8af:	e9 85 06 00 00       	jmpq   3480bf39 <pow+0x749>
    3480b8b4:	b9 02 00 00 00       	mov    $0x2,%ecx
    3480b8b9:	41 81 fc ff ff 3f 43 	cmp    $0x433fffff,%r12d
    3480b8c0:	0f 87 5a 00 00 00    	ja     3480b920 <pow+0x130>
    3480b8c6:	41 81 fc 00 00 f0 3f 	cmp    $0x3ff00000,%r12d
    3480b8cd:	0f 82 4b 00 00 00    	jb     3480b91e <pow+0x12e>
    3480b8d3:	44 89 e0             	mov    %r12d,%eax
    3480b8d6:	c1 e8 14             	shr    $0x14,%eax
    3480b8d9:	41 81 fc 00 00 40 41 	cmp    $0x41400000,%r12d
    3480b8e0:	0f 82 20 06 00 00    	jb     3480bf06 <pow+0x716>
    3480b8e6:	b9 33 04 00 00       	mov    $0x433,%ecx
    3480b8eb:	29 c1                	sub    %eax,%ecx
    3480b8ed:	41 89 f0             	mov    %esi,%r8d
    3480b8f0:	41 d3 e8             	shr    %cl,%r8d
    3480b8f3:	44 89 c0             	mov    %r8d,%eax
    3480b8f6:	d3 e0                	shl    %cl,%eax
    3480b8f8:	39 f0                	cmp    %esi,%eax
    3480b8fa:	b9 00 00 00 00       	mov    $0x0,%ecx
    3480b8ff:	0f 85 1b 00 00 00    	jne    3480b920 <pow+0x130>
    3480b905:	41 83 e0 01          	and    $0x1,%r8d
    3480b909:	b9 02 00 00 00       	mov    $0x2,%ecx
    3480b90e:	44 29 c1             	sub    %r8d,%ecx
    3480b911:	85 f6                	test   %esi,%esi
    3480b913:	0f 85 0f 00 00 00    	jne    3480b928 <pow+0x138>
    3480b919:	e9 1b 06 00 00       	jmpq   3480bf39 <pow+0x749>
    3480b91e:	31 c9                	xor    %ecx,%ecx
    3480b920:	85 f6                	test   %esi,%esi
    3480b922:	0f 84 11 06 00 00    	je     3480bf39 <pow+0x749>
    3480b928:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
    3480b92c:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    3480b931:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    3480b936:	66 0f 7f 4c 24 30    	movdqa %xmm1,0x30(%rsp)
    3480b93c:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    3480b942:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480b946:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    3480b94b:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    3480b950:	e8 2b 28 00 00       	callq  3480e180 <fabs>
    3480b955:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480b95a:	83 7c 24 28 00       	cmpl   $0x0,0x28(%rsp)
    3480b95f:	0f 85 1a 00 00 00    	jne    3480b97f <pow+0x18f>
    3480b965:	85 ff                	test   %edi,%edi
    3480b967:	0f 84 fc 00 00 00    	je     3480ba69 <pow+0x279>
    3480b96d:	89 f8                	mov    %edi,%eax
    3480b96f:	0d 00 00 00 40       	or     $0x40000000,%eax
    3480b974:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
    3480b979:	0f 84 ea 00 00 00    	je     3480ba69 <pow+0x279>
    3480b97f:	83 7c 24 20 00       	cmpl   $0x0,0x20(%rsp)
    3480b984:	f2 44 0f 10 05 d3 75 	movsd  0x75d3(%rip),%xmm8        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480b98b:	00 00 
    3480b98d:	0f 88 a9 00 00 00    	js     3480ba3c <pow+0x24c>
    3480b993:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3480b998:	49 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%r8
    3480b99f:	ff ff ff 
    3480b9a2:	41 81 fc 01 00 e0 41 	cmp    $0x41e00001,%r12d
    3480b9a9:	0f 82 2a 00 00 00    	jb     3480b9d9 <pow+0x1e9>
    3480b9af:	41 81 fc 01 00 f0 43 	cmp    $0x43f00001,%r12d
    3480b9b6:	0f 82 fa 00 00 00    	jb     3480bab6 <pow+0x2c6>
    3480b9bc:	81 ff ff ff ef 3f    	cmp    $0x3fefffff,%edi
    3480b9c2:	0f 87 14 01 00 00    	ja     3480badc <pow+0x2ec>
    3480b9c8:	85 db                	test   %ebx,%ebx
    3480b9ca:	0f 88 14 01 00 00    	js     3480bae4 <pow+0x2f4>
    3480b9d0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480b9d4:	e9 8a fe ff ff       	jmpq   3480b863 <pow+0x73>
    3480b9d9:	31 c9                	xor    %ecx,%ecx
    3480b9db:	81 ff ff ff 0f 00    	cmp    $0xfffff,%edi
    3480b9e1:	ba 00 00 00 00       	mov    $0x0,%edx
    3480b9e6:	0f 87 16 00 00 00    	ja     3480ba02 <pow+0x212>
    3480b9ec:	f2 0f 59 05 cc 93 00 	mulsd  0x93cc(%rip),%xmm0        # 34814dc0 <half+0x110>
    3480b9f3:	00 
    3480b9f4:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    3480b9f9:	48 c1 ef 20          	shr    $0x20,%rdi
    3480b9fd:	ba cb ff ff ff       	mov    $0xffffffcb,%edx
    3480ba02:	89 fe                	mov    %edi,%esi
    3480ba04:	c1 fe 14             	sar    $0x14,%esi
    3480ba07:	8d 94 16 01 fc ff ff 	lea    -0x3ff(%rsi,%rdx,1),%edx
    3480ba0e:	81 e7 ff ff 0f 00    	and    $0xfffff,%edi
    3480ba14:	8d 9f 00 00 f0 3f    	lea    0x3ff00000(%rdi),%ebx
    3480ba1a:	81 ff 8f 98 03 00    	cmp    $0x3988f,%edi
    3480ba20:	0f 82 d3 00 00 00    	jb     3480baf9 <pow+0x309>
    3480ba26:	81 ff 7a b6 0b 00    	cmp    $0xbb67a,%edi
    3480ba2c:	0f 83 bf 00 00 00    	jae    3480baf1 <pow+0x301>
    3480ba32:	b9 01 00 00 00       	mov    $0x1,%ecx
    3480ba37:	e9 bd 00 00 00       	jmpq   3480baf9 <pow+0x309>
    3480ba3c:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    3480ba40:	83 f9 01             	cmp    $0x1,%ecx
    3480ba43:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3480ba48:	0f 84 80 00 00 00    	je     3480bace <pow+0x2de>
    3480ba4e:	85 c9                	test   %ecx,%ecx
    3480ba50:	0f 85 42 ff ff ff    	jne    3480b998 <pow+0x1a8>
    3480ba56:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    3480ba5c:	f2 0f 5c c0          	subsd  %xmm0,%xmm0
    3480ba60:	f2 0f 5e c0          	divsd  %xmm0,%xmm0
    3480ba64:	e9 fa fd ff ff       	jmpq   3480b863 <pow+0x73>
    3480ba69:	85 db                	test   %ebx,%ebx
    3480ba6b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3480ba70:	0f 89 10 00 00 00    	jns    3480ba86 <pow+0x296>
    3480ba76:	f2 0f 10 0d e2 74 00 	movsd  0x74e2(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480ba7d:	00 
    3480ba7e:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    3480ba82:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480ba86:	85 c0                	test   %eax,%eax
    3480ba88:	8b 44 24 04          	mov    0x4(%rsp),%eax
    3480ba8c:	0f 89 d1 fd ff ff    	jns    3480b863 <pow+0x73>
    3480ba92:	81 c7 00 00 10 c0    	add    $0xc0100000,%edi
    3480ba98:	09 c7                	or     %eax,%edi
    3480ba9a:	0f 84 bc ff ff ff    	je     3480ba5c <pow+0x26c>
    3480baa0:	83 f8 01             	cmp    $0x1,%eax
    3480baa3:	0f 85 ba fd ff ff    	jne    3480b863 <pow+0x73>
    3480baa9:	66 0f 57 05 6f 7d 00 	xorpd  0x7d6f(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480bab0:	00 
    3480bab1:	e9 ad fd ff ff       	jmpq   3480b863 <pow+0x73>
    3480bab6:	81 ff fe ff ef 3f    	cmp    $0x3feffffe,%edi
    3480babc:	0f 87 09 04 00 00    	ja     3480becb <pow+0x6db>
    3480bac2:	31 c0                	xor    %eax,%eax
    3480bac4:	85 db                	test   %ebx,%ebx
    3480bac6:	0f 98 c0             	sets   %al
    3480bac9:	e9 10 04 00 00       	jmpq   3480bede <pow+0x6ee>
    3480bace:	f2 44 0f 10 05 a9 7c 	movsd  0x7ca9(%rip),%xmm8        # 34813780 <DoEmFloatIteration.jtable+0x860>
    3480bad5:	00 00 
    3480bad7:	e9 bc fe ff ff       	jmpq   3480b998 <pow+0x1a8>
    3480badc:	85 db                	test   %ebx,%ebx
    3480bade:	0f 8e ec fe ff ff    	jle    3480b9d0 <pow+0x1e0>
    3480bae4:	f2 0f 10 05 94 93 00 	movsd  0x9394(%rip),%xmm0        # 34814e80 <half+0x1d0>
    3480baeb:	00 
    3480baec:	e9 72 fd ff ff       	jmpq   3480b863 <pow+0x73>
    3480baf1:	ff c2                	inc    %edx
    3480baf3:	81 c3 00 00 f0 ff    	add    $0xfff00000,%ebx
    3480baf9:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    3480bafe:	89 ff                	mov    %edi,%edi
    3480bb00:	48 89 de             	mov    %rbx,%rsi
    3480bb03:	48 c1 e6 20          	shl    $0x20,%rsi
    3480bb07:	48 09 fe             	or     %rdi,%rsi
    3480bb0a:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    3480bb0f:	48 8d 35 8a 93 00 00 	lea    0x938a(%rip),%rsi        # 34814ea0 <bp>
    3480bb16:	f2 0f 10 14 ce       	movsd  (%rsi,%rcx,8),%xmm2
    3480bb1b:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480bb1f:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480bb23:	d1 fb                	sar    %ebx
    3480bb25:	81 cb 00 00 00 20    	or     $0x20000000,%ebx
    3480bb2b:	89 ce                	mov    %ecx,%esi
    3480bb2d:	c1 e6 12             	shl    $0x12,%esi
    3480bb30:	8d b4 33 00 00 08 00 	lea    0x80000(%rbx,%rsi,1),%esi
    3480bb37:	48 c1 e6 20          	shl    $0x20,%rsi
    3480bb3b:	66 48 0f 6e ee       	movq   %rsi,%xmm5
    3480bb40:	66 0f 6f f5          	movdqa %xmm5,%xmm6
    3480bb44:	f2 0f 5c f2          	subsd  %xmm2,%xmm6
    3480bb48:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480bb4c:	f2 0f 10 3d 0c 74 00 	movsd  0x740c(%rip),%xmm7        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480bb53:	00 
    3480bb54:	f2 0f 5e fa          	divsd  %xmm2,%xmm7
    3480bb58:	66 0f 28 e0          	movapd %xmm0,%xmm4
    3480bb5c:	f2 0f 59 e7          	mulsd  %xmm7,%xmm4
    3480bb60:	66 49 0f 6e d0       	movq   %r8,%xmm2
    3480bb65:	66 0f 28 dc          	movapd %xmm4,%xmm3
    3480bb69:	66 0f 54 da          	andpd  %xmm2,%xmm3
    3480bb6d:	f2 0f 5c ce          	subsd  %xmm6,%xmm1
    3480bb71:	f2 0f 59 eb          	mulsd  %xmm3,%xmm5
    3480bb75:	f2 0f 5c c5          	subsd  %xmm5,%xmm0
    3480bb79:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    3480bb7d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3480bb81:	f2 0f 59 c7          	mulsd  %xmm7,%xmm0
    3480bb85:	66 0f 28 cc          	movapd %xmm4,%xmm1
    3480bb89:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    3480bb8d:	f2 0f 10 2d 33 92 00 	movsd  0x9233(%rip),%xmm5        # 34814dc8 <half+0x118>
    3480bb94:	00 
    3480bb95:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bb99:	f2 0f 58 2d 2f 92 00 	addsd  0x922f(%rip),%xmm5        # 34814dd0 <half+0x120>
    3480bba0:	00 
    3480bba1:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bba5:	f2 0f 58 2d 2b 92 00 	addsd  0x922b(%rip),%xmm5        # 34814dd8 <half+0x128>
    3480bbac:	00 
    3480bbad:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bbb1:	f2 0f 58 2d 27 92 00 	addsd  0x9227(%rip),%xmm5        # 34814de0 <half+0x130>
    3480bbb8:	00 
    3480bbb9:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bbbd:	f2 0f 58 2d 23 92 00 	addsd  0x9223(%rip),%xmm5        # 34814de8 <half+0x138>
    3480bbc4:	00 
    3480bbc5:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bbc9:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    3480bbcd:	f2 0f 58 2d 1b 92 00 	addsd  0x921b(%rip),%xmm5        # 34814df0 <half+0x140>
    3480bbd4:	00 
    3480bbd5:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480bbd9:	66 0f 28 cc          	movapd %xmm4,%xmm1
    3480bbdd:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
    3480bbe1:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480bbe5:	f2 0f 58 cd          	addsd  %xmm5,%xmm1
    3480bbe9:	66 0f 28 eb          	movapd %xmm3,%xmm5
    3480bbed:	f2 0f 59 ed          	mulsd  %xmm5,%xmm5
    3480bbf1:	f2 0f 10 35 ff 91 00 	movsd  0x91ff(%rip),%xmm6        # 34814df8 <half+0x148>
    3480bbf8:	00 
    3480bbf9:	f2 0f 58 f5          	addsd  %xmm5,%xmm6
    3480bbfd:	f2 0f 58 f1          	addsd  %xmm1,%xmm6
    3480bc01:	66 0f 54 f2          	andpd  %xmm2,%xmm6
    3480bc05:	f2 0f 10 3d f3 91 00 	movsd  0x91f3(%rip),%xmm7        # 34814e00 <half+0x150>
    3480bc0c:	00 
    3480bc0d:	f2 0f 58 fe          	addsd  %xmm6,%xmm7
    3480bc11:	f2 0f 5c fd          	subsd  %xmm5,%xmm7
    3480bc15:	f2 0f 5c cf          	subsd  %xmm7,%xmm1
    3480bc19:	f2 0f 59 de          	mulsd  %xmm6,%xmm3
    3480bc1d:	f2 0f 59 f0          	mulsd  %xmm0,%xmm6
    3480bc21:	f2 0f 59 cc          	mulsd  %xmm4,%xmm1
    3480bc25:	f2 0f 58 ce          	addsd  %xmm6,%xmm1
    3480bc29:	66 0f 28 c3          	movapd %xmm3,%xmm0
    3480bc2d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480bc31:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    3480bc35:	66 0f 28 e0          	movapd %xmm0,%xmm4
    3480bc39:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    3480bc3d:	f2 0f 5c cc          	subsd  %xmm4,%xmm1
    3480bc41:	f2 0f 10 1d bf 91 00 	movsd  0x91bf(%rip),%xmm3        # 34814e08 <half+0x158>
    3480bc48:	00 
    3480bc49:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    3480bc4d:	f2 0f 59 05 bb 91 00 	mulsd  0x91bb(%rip),%xmm0        # 34814e10 <half+0x160>
    3480bc54:	00 
    3480bc55:	f2 0f 59 0d bb 91 00 	mulsd  0x91bb(%rip),%xmm1        # 34814e18 <half+0x168>
    3480bc5c:	00 
    3480bc5d:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    3480bc61:	48 8d 35 48 92 00 00 	lea    0x9248(%rip),%rsi        # 34814eb0 <dp_l>
    3480bc68:	f2 0f 58 0c ce       	addsd  (%rsi,%rcx,8),%xmm1
    3480bc6d:	0f 57 e4             	xorps  %xmm4,%xmm4
    3480bc70:	f2 0f 2a e2          	cvtsi2sd %edx,%xmm4
    3480bc74:	66 0f 28 c3          	movapd %xmm3,%xmm0
    3480bc78:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480bc7c:	48 8d 15 3d 92 00 00 	lea    0x923d(%rip),%rdx        # 34814ec0 <dp_h>
    3480bc83:	f2 0f 10 2c ca       	movsd  (%rdx,%rcx,8),%xmm5
    3480bc88:	f2 0f 58 c5          	addsd  %xmm5,%xmm0
    3480bc8c:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    3480bc90:	66 0f 54 c2          	andpd  %xmm2,%xmm0
    3480bc94:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480bc98:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
    3480bc9c:	f2 0f 5c d5          	subsd  %xmm5,%xmm2
    3480bca0:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480bca4:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    3480bca8:	4c 21 c0             	and    %r8,%rax
    3480bcab:	66 48 0f 6e d0       	movq   %rax,%xmm2
    3480bcb0:	66 0f 28 5c 24 30    	movapd 0x30(%rsp),%xmm3
    3480bcb6:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
    3480bcba:	f2 0f 5c da          	subsd  %xmm2,%xmm3
    3480bcbe:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    3480bcc2:	f2 0f 58 d9          	addsd  %xmm1,%xmm3
    3480bcc6:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    3480bcca:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480bcce:	f2 0f 58 cb          	addsd  %xmm3,%xmm1
    3480bcd2:	66 48 0f 7e c9       	movq   %xmm1,%rcx
    3480bcd7:	48 89 ca             	mov    %rcx,%rdx
    3480bcda:	48 c1 ea 20          	shr    $0x20,%rdx
    3480bcde:	81 fa 00 00 90 40    	cmp    $0x40900000,%edx
    3480bce4:	0f 8c 3a 00 00 00    	jl     3480bd24 <pow+0x534>
    3480bcea:	8d b2 00 00 70 bf    	lea    -0x40900000(%rdx),%esi
    3480bcf0:	09 ce                	or     %ecx,%esi
    3480bcf2:	0f 85 1a 00 00 00    	jne    3480bd12 <pow+0x522>
    3480bcf8:	f2 0f 10 15 58 91 00 	movsd  0x9158(%rip),%xmm2        # 34814e58 <half+0x1a8>
    3480bcff:	00 
    3480bd00:	f2 0f 58 d3          	addsd  %xmm3,%xmm2
    3480bd04:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    3480bd08:	66 0f 2e d1          	ucomisd %xmm1,%xmm2
    3480bd0c:	0f 86 42 00 00 00    	jbe    3480bd54 <pow+0x564>
    3480bd12:	f2 0f 10 05 36 91 00 	movsd  0x9136(%rip),%xmm0        # 34814e50 <half+0x1a0>
    3480bd19:	00 
    3480bd1a:	f2 44 0f 59 c0       	mulsd  %xmm0,%xmm8
    3480bd1f:	e9 0c 03 00 00       	jmpq   3480c030 <pow+0x840>
    3480bd24:	89 d6                	mov    %edx,%esi
    3480bd26:	81 e6 00 fc ff 7f    	and    $0x7ffffc00,%esi
    3480bd2c:	81 fe 00 cc 90 40    	cmp    $0x4090cc00,%esi
    3480bd32:	0f 82 1c 00 00 00    	jb     3480bd54 <pow+0x564>
    3480bd38:	8d b2 00 34 6f 3f    	lea    0x3f6f3400(%rdx),%esi
    3480bd3e:	09 ce                	or     %ecx,%esi
    3480bd40:	0f 85 ae 01 00 00    	jne    3480bef4 <pow+0x704>
    3480bd46:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    3480bd4a:	66 0f 2e cb          	ucomisd %xmm3,%xmm1
    3480bd4e:	0f 83 a0 01 00 00    	jae    3480bef4 <pow+0x704>
    3480bd54:	89 d1                	mov    %edx,%ecx
    3480bd56:	81 e1 ff ff ff 7f    	and    $0x7fffffff,%ecx
    3480bd5c:	31 ff                	xor    %edi,%edi
    3480bd5e:	81 f9 01 00 e0 3f    	cmp    $0x3fe00001,%ecx
    3480bd64:	0f 82 59 00 00 00    	jb     3480bdc3 <pow+0x5d3>
    3480bd6a:	c1 e9 14             	shr    $0x14,%ecx
    3480bd6d:	81 c1 02 fc ff ff    	add    $0xfffffc02,%ecx
    3480bd73:	be 00 00 10 00       	mov    $0x100000,%esi
    3480bd78:	d3 ee                	shr    %cl,%esi
    3480bd7a:	01 d6                	add    %edx,%esi
    3480bd7c:	89 f7                	mov    %esi,%edi
    3480bd7e:	c1 ef 14             	shr    $0x14,%edi
    3480bd81:	81 e7 ff 07 00 00    	and    $0x7ff,%edi
    3480bd87:	8d 8f 01 fc ff ff    	lea    -0x3ff(%rdi),%ecx
    3480bd8d:	bb ff ff 0f 00       	mov    $0xfffff,%ebx
    3480bd92:	d3 eb                	shr    %cl,%ebx
    3480bd94:	f7 d3                	not    %ebx
    3480bd96:	21 f3                	and    %esi,%ebx
    3480bd98:	48 c1 e3 20          	shl    $0x20,%rbx
    3480bd9c:	66 48 0f 6e cb       	movq   %rbx,%xmm1
    3480bda1:	81 e6 ff ff 0f 00    	and    $0xfffff,%esi
    3480bda7:	81 ce 00 00 10 00    	or     $0x100000,%esi
    3480bdad:	b9 13 04 00 00       	mov    $0x413,%ecx
    3480bdb2:	29 f9                	sub    %edi,%ecx
    3480bdb4:	d3 ee                	shr    %cl,%esi
    3480bdb6:	89 f7                	mov    %esi,%edi
    3480bdb8:	f7 df                	neg    %edi
    3480bdba:	85 d2                	test   %edx,%edx
    3480bdbc:	0f 49 fe             	cmovns %esi,%edi
    3480bdbf:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3480bdc3:	66 0f 28 d3          	movapd %xmm3,%xmm2
    3480bdc7:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    3480bdcb:	66 49 0f 6e c8       	movq   %r8,%xmm1
    3480bdd0:	66 0f db ca          	pand   %xmm2,%xmm1
    3480bdd4:	f2 0f 10 15 84 90 00 	movsd  0x9084(%rip),%xmm2        # 34814e60 <half+0x1b0>
    3480bddb:	00 
    3480bddc:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    3480bde0:	66 0f 28 e3          	movapd %xmm3,%xmm4
    3480bde4:	66 0f 28 d9          	movapd %xmm1,%xmm3
    3480bde8:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    3480bdec:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    3480bdf0:	f2 0f 59 25 70 90 00 	mulsd  0x9070(%rip),%xmm4        # 34814e68 <half+0x1b8>
    3480bdf7:	00 
    3480bdf8:	f2 0f 59 0d 70 90 00 	mulsd  0x9070(%rip),%xmm1        # 34814e70 <half+0x1c0>
    3480bdff:	00 
    3480be00:	f2 0f 58 cc          	addsd  %xmm4,%xmm1
    3480be04:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480be08:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480be0c:	66 0f 28 d8          	movapd %xmm0,%xmm3
    3480be10:	f2 0f 5c da          	subsd  %xmm2,%xmm3
    3480be14:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
    3480be18:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480be1c:	f2 0f 59 d2          	mulsd  %xmm2,%xmm2
    3480be20:	f2 0f 10 1d 58 8e 00 	movsd  0x8e58(%rip),%xmm3        # 34814c80 <val_arr+0x1200>
    3480be27:	00 
    3480be28:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be2c:	f2 0f 58 1d 54 8e 00 	addsd  0x8e54(%rip),%xmm3        # 34814c88 <val_arr+0x1208>
    3480be33:	00 
    3480be34:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be38:	f2 0f 58 1d 50 8e 00 	addsd  0x8e50(%rip),%xmm3        # 34814c90 <val_arr+0x1210>
    3480be3f:	00 
    3480be40:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be44:	f2 0f 58 1d 4c 8e 00 	addsd  0x8e4c(%rip),%xmm3        # 34814c98 <val_arr+0x1218>
    3480be4b:	00 
    3480be4c:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be50:	f2 0f 58 1d 48 8e 00 	addsd  0x8e48(%rip),%xmm3        # 34814ca0 <val_arr+0x1220>
    3480be57:	00 
    3480be58:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be5c:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480be60:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480be64:	66 0f 28 d8          	movapd %xmm0,%xmm3
    3480be68:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480be6c:	f2 0f 58 15 04 90 00 	addsd  0x9004(%rip),%xmm2        # 34814e78 <half+0x1c8>
    3480be73:	00 
    3480be74:	f2 0f 5e da          	divsd  %xmm2,%xmm3
    3480be78:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480be7c:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    3480be80:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480be84:	f2 0f 5c da          	subsd  %xmm2,%xmm3
    3480be88:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    3480be8c:	f2 0f 10 05 cc 70 00 	movsd  0x70cc(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480be93:	00 
    3480be94:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
    3480be98:	66 48 0f 7e c1       	movq   %xmm0,%rcx
    3480be9d:	48 89 ca             	mov    %rcx,%rdx
    3480bea0:	48 c1 ea 20          	shr    $0x20,%rdx
    3480bea4:	89 f8                	mov    %edi,%eax
    3480bea6:	c1 e0 14             	shl    $0x14,%eax
    3480bea9:	01 d0                	add    %edx,%eax
    3480beab:	89 c2                	mov    %eax,%edx
    3480bead:	c1 fa 14             	sar    $0x14,%edx
    3480beb0:	85 d2                	test   %edx,%edx
    3480beb2:	0f 8e 65 01 00 00    	jle    3480c01d <pow+0x82d>
    3480beb8:	89 c9                	mov    %ecx,%ecx
    3480beba:	48 c1 e0 20          	shl    $0x20,%rax
    3480bebe:	48 09 c8             	or     %rcx,%rax
    3480bec1:	66 48 0f 6e c0       	movq   %rax,%xmm0
    3480bec6:	e9 65 01 00 00       	jmpq   3480c030 <pow+0x840>
    3480becb:	81 ff 01 00 f0 3f    	cmp    $0x3ff00001,%edi
    3480bed1:	0f 82 68 01 00 00    	jb     3480c03f <pow+0x84f>
    3480bed7:	31 c0                	xor    %eax,%eax
    3480bed9:	85 db                	test   %ebx,%ebx
    3480bedb:	0f 9f c0             	setg   %al
    3480bede:	48 8d 0d ab 8f 00 00 	lea    0x8fab(%rip),%rcx        # 34814e90 <half+0x1e0>
    3480bee5:	f2 0f 10 04 c1       	movsd  (%rcx,%rax,8),%xmm0
    3480beea:	f2 44 0f 59 c0       	mulsd  %xmm0,%xmm8
    3480beef:	e9 3c 01 00 00       	jmpq   3480c030 <pow+0x840>
    3480bef4:	f2 0f 10 05 4c 8f 00 	movsd  0x8f4c(%rip),%xmm0        # 34814e48 <half+0x198>
    3480befb:	00 
    3480befc:	f2 44 0f 59 c0       	mulsd  %xmm0,%xmm8
    3480bf01:	e9 2a 01 00 00       	jmpq   3480c030 <pow+0x840>
    3480bf06:	31 c9                	xor    %ecx,%ecx
    3480bf08:	85 f6                	test   %esi,%esi
    3480bf0a:	0f 85 18 fa ff ff    	jne    3480b928 <pow+0x138>
    3480bf10:	b9 13 04 00 00       	mov    $0x413,%ecx
    3480bf15:	29 c1                	sub    %eax,%ecx
    3480bf17:	45 89 e0             	mov    %r12d,%r8d
    3480bf1a:	41 d3 e8             	shr    %cl,%r8d
    3480bf1d:	44 89 c0             	mov    %r8d,%eax
    3480bf20:	d3 e0                	shl    %cl,%eax
    3480bf22:	31 c9                	xor    %ecx,%ecx
    3480bf24:	44 39 e0             	cmp    %r12d,%eax
    3480bf27:	0f 85 0c 00 00 00    	jne    3480bf39 <pow+0x749>
    3480bf2d:	41 83 e0 01          	and    $0x1,%r8d
    3480bf31:	b9 02 00 00 00       	mov    $0x2,%ecx
    3480bf36:	44 29 c1             	sub    %r8d,%ecx
    3480bf39:	41 81 fc 00 00 f0 7f 	cmp    $0x7ff00000,%r12d
    3480bf40:	0f 85 31 00 00 00    	jne    3480bf77 <pow+0x787>
    3480bf46:	41 8d 81 00 00 10 c0 	lea    -0x3ff00000(%r9),%eax
    3480bf4d:	09 f8                	or     %edi,%eax
    3480bf4f:	0f 84 0e f9 ff ff    	je     3480b863 <pow+0x73>
    3480bf55:	41 81 f9 00 00 f0 3f 	cmp    $0x3ff00000,%r9d
    3480bf5c:	0f 82 3b 00 00 00    	jb     3480bf9d <pow+0x7ad>
    3480bf62:	85 db                	test   %ebx,%ebx
    3480bf64:	0f 89 04 00 00 00    	jns    3480bf6e <pow+0x77e>
    3480bf6a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3480bf6e:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480bf72:	e9 ec f8 ff ff       	jmpq   3480b863 <pow+0x73>
    3480bf77:	41 81 fc 00 00 f0 3f 	cmp    $0x3ff00000,%r12d
    3480bf7e:	0f 85 41 00 00 00    	jne    3480bfc5 <pow+0x7d5>
    3480bf84:	85 db                	test   %ebx,%ebx
    3480bf86:	0f 89 d3 f8 ff ff    	jns    3480b85f <pow+0x6f>
    3480bf8c:	f2 0f 10 05 cc 6f 00 	movsd  0x6fcc(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480bf93:	00 
    3480bf94:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    3480bf98:	e9 c6 f8 ff ff       	jmpq   3480b863 <pow+0x73>
    3480bf9d:	44 89 c8             	mov    %r9d,%eax
    3480bfa0:	09 f8                	or     %edi,%eax
    3480bfa2:	0f 84 1d 00 00 00    	je     3480bfc5 <pow+0x7d5>
    3480bfa8:	85 db                	test   %ebx,%ebx
    3480bfaa:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480bfae:	0f 89 af f8 ff ff    	jns    3480b863 <pow+0x73>
    3480bfb4:	66 0f ef 0d 64 78 00 	pxor   0x7864(%rip),%xmm1        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480bfbb:	00 
    3480bfbc:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480bfc0:	e9 9e f8 ff ff       	jmpq   3480b863 <pow+0x73>
    3480bfc5:	81 fb 00 00 00 40    	cmp    $0x40000000,%ebx
    3480bfcb:	0f 85 09 00 00 00    	jne    3480bfda <pow+0x7ea>
    3480bfd1:	f2 0f 59 d2          	mulsd  %xmm2,%xmm2
    3480bfd5:	e9 85 f8 ff ff       	jmpq   3480b85f <pow+0x6f>
    3480bfda:	85 d2                	test   %edx,%edx
    3480bfdc:	0f 88 46 f9 ff ff    	js     3480b928 <pow+0x138>
    3480bfe2:	81 fb 00 00 e0 3f    	cmp    $0x3fe00000,%ebx
    3480bfe8:	0f 85 3a f9 ff ff    	jne    3480b928 <pow+0x138>
    3480bfee:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480bff2:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
    3480bff8:	e8 13 03 00 00       	callq  3480c310 <sqrt>
    3480bffd:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    3480c003:	66 0f 2e c0          	ucomisd %xmm0,%xmm0
    3480c007:	0f 8b 56 f8 ff ff    	jnp    3480b863 <pow+0x73>
    3480c00d:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480c011:	48 83 c4 48          	add    $0x48,%rsp
    3480c015:	5b                   	pop    %rbx
    3480c016:	41 5c                	pop    %r12
    3480c018:	e9 f3 02 00 00       	jmpq   3480c310 <sqrt>
    3480c01d:	f2 44 0f 11 44 24 10 	movsd  %xmm8,0x10(%rsp)
    3480c024:	e8 97 00 00 00       	callq  3480c0c0 <scalbn>
    3480c029:	f2 44 0f 10 44 24 10 	movsd  0x10(%rsp),%xmm8
    3480c030:	f2 44 0f 59 c0       	mulsd  %xmm0,%xmm8
    3480c035:	66 41 0f 28 c0       	movapd %xmm8,%xmm0
    3480c03a:	e9 24 f8 ff ff       	jmpq   3480b863 <pow+0x73>
    3480c03f:	f2 0f 58 05 39 77 00 	addsd  0x7739(%rip),%xmm0        # 34813780 <DoEmFloatIteration.jtable+0x860>
    3480c046:	00 
    3480c047:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480c04b:	f2 0f 59 d2          	mulsd  %xmm2,%xmm2
    3480c04f:	f2 0f 10 1d c9 8d 00 	movsd  0x8dc9(%rip),%xmm3        # 34814e20 <half+0x170>
    3480c056:	00 
    3480c057:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    3480c05b:	f2 0f 58 1d c5 8d 00 	addsd  0x8dc5(%rip),%xmm3        # 34814e28 <half+0x178>
    3480c062:	00 
    3480c063:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    3480c067:	f2 0f 10 0d 19 77 00 	movsd  0x7719(%rip),%xmm1        # 34813788 <DoEmFloatIteration.jtable+0x868>
    3480c06e:	00 
    3480c06f:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
    3480c073:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    3480c077:	f2 0f 10 1d b1 8d 00 	movsd  0x8db1(%rip),%xmm3        # 34814e30 <half+0x180>
    3480c07e:	00 
    3480c07f:	f2 0f 59 d8          	mulsd  %xmm0,%xmm3
    3480c083:	f2 0f 59 05 ad 8d 00 	mulsd  0x8dad(%rip),%xmm0        # 34814e38 <half+0x188>
    3480c08a:	00 
    3480c08b:	f2 0f 59 0d ad 8d 00 	mulsd  0x8dad(%rip),%xmm1        # 34814e40 <half+0x190>
    3480c092:	00 
    3480c093:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    3480c097:	66 0f 28 d3          	movapd %xmm3,%xmm2
    3480c09b:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480c09f:	66 49 0f 6e c0       	movq   %r8,%xmm0
    3480c0a4:	66 0f db c2          	pand   %xmm2,%xmm0
    3480c0a8:	66 0f 6f d0          	movdqa %xmm0,%xmm2
    3480c0ac:	e9 ef fb ff ff       	jmpq   3480bca0 <pow+0x4b0>
    3480c0b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c0b8:	00 00 00 
    3480c0bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480c0c0 <scalbn>:
    3480c0c0:	81 ff 00 04 00 00    	cmp    $0x400,%edi
    3480c0c6:	0f 8c 35 00 00 00    	jl     3480c101 <scalbn+0x41>
    3480c0cc:	f2 0f 59 05 6c 8b 00 	mulsd  0x8b6c(%rip),%xmm0        # 34814c40 <val_arr+0x11c0>
    3480c0d3:	00 
    3480c0d4:	81 ff ff 07 00 00    	cmp    $0x7ff,%edi
    3480c0da:	0f 8c 64 00 00 00    	jl     3480c144 <scalbn+0x84>
    3480c0e0:	f2 0f 59 05 58 8b 00 	mulsd  0x8b58(%rip),%xmm0        # 34814c40 <val_arr+0x11c0>
    3480c0e7:	00 
    3480c0e8:	81 c7 02 f8 ff ff    	add    $0xfffff802,%edi
    3480c0ee:	81 ff 00 04 00 00    	cmp    $0x400,%edi
    3480c0f4:	b8 ff 03 00 00       	mov    $0x3ff,%eax
    3480c0f9:	0f 4c c7             	cmovl  %edi,%eax
    3480c0fc:	e9 3c 00 00 00       	jmpq   3480c13d <scalbn+0x7d>
    3480c101:	81 ff 01 fc ff ff    	cmp    $0xfffffc01,%edi
    3480c107:	0f 8f 48 00 00 00    	jg     3480c155 <scalbn+0x95>
    3480c10d:	f2 0f 59 05 bb 8d 00 	mulsd  0x8dbb(%rip),%xmm0        # 34814ed0 <dp_h+0x10>
    3480c114:	00 
    3480c115:	81 ff 03 f8 ff ff    	cmp    $0xfffff803,%edi
    3480c11b:	0f 8f 2e 00 00 00    	jg     3480c14f <scalbn+0x8f>
    3480c121:	f2 0f 59 05 a7 8d 00 	mulsd  0x8da7(%rip),%xmm0        # 34814ed0 <dp_h+0x10>
    3480c128:	00 
    3480c129:	81 c7 fc 07 00 00    	add    $0x7fc,%edi
    3480c12f:	81 ff 01 fc ff ff    	cmp    $0xfffffc01,%edi
    3480c135:	b8 02 fc ff ff       	mov    $0xfffffc02,%eax
    3480c13a:	0f 4f c7             	cmovg  %edi,%eax
    3480c13d:	89 c7                	mov    %eax,%edi
    3480c13f:	e9 11 00 00 00       	jmpq   3480c155 <scalbn+0x95>
    3480c144:	81 c7 01 fc ff ff    	add    $0xfffffc01,%edi
    3480c14a:	e9 06 00 00 00       	jmpq   3480c155 <scalbn+0x95>
    3480c14f:	81 c7 fe 03 00 00    	add    $0x3fe,%edi
    3480c155:	81 c7 ff 03 00 00    	add    $0x3ff,%edi
    3480c15b:	48 c1 e7 34          	shl    $0x34,%rdi
    3480c15f:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    3480c164:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480c168:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480c16c:	c3                   	retq   
    3480c16d:	0f 1f 00             	nopl   (%rax)

000000003480c170 <sin>:
    3480c170:	48 83 ec 18          	sub    $0x18,%rsp
    3480c174:	66 48 0f 7e c0       	movq   %xmm0,%rax
    3480c179:	48 c1 e8 20          	shr    $0x20,%rax
    3480c17d:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    3480c182:	3d fb 21 e9 3f       	cmp    $0x3fe921fb,%eax
    3480c187:	0f 87 2c 00 00 00    	ja     3480c1b9 <sin+0x49>
    3480c18d:	3d ff ff 4f 3e       	cmp    $0x3e4fffff,%eax
    3480c192:	0f 87 35 00 00 00    	ja     3480c1cd <sin+0x5d>
    3480c198:	3d 00 00 10 00       	cmp    $0x100000,%eax
    3480c19d:	0f 82 75 00 00 00    	jb     3480c218 <sin+0xa8>
    3480c1a3:	f2 0f 10 0d 8d 8a 00 	movsd  0x8a8d(%rip),%xmm1        # 34814c38 <val_arr+0x11b8>
    3480c1aa:	00 
    3480c1ab:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    3480c1af:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    3480c1b4:	48 83 c4 18          	add    $0x18,%rsp
    3480c1b8:	c3                   	retq   
    3480c1b9:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
    3480c1be:	0f 82 18 00 00 00    	jb     3480c1dc <sin+0x6c>
    3480c1c4:	f2 0f 5c c0          	subsd  %xmm0,%xmm0
    3480c1c8:	48 83 c4 18          	add    $0x18,%rsp
    3480c1cc:	c3                   	retq   
    3480c1cd:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480c1d0:	31 ff                	xor    %edi,%edi
    3480c1d2:	e8 f9 1e 00 00       	callq  3480e0d0 <__sin>
    3480c1d7:	48 83 c4 18          	add    $0x18,%rsp
    3480c1db:	c3                   	retq   
    3480c1dc:	48 89 e7             	mov    %rsp,%rdi
    3480c1df:	e8 ac 0c 00 00       	callq  3480ce90 <__rem_pio2>
    3480c1e4:	24 03                	and    $0x3,%al
    3480c1e6:	3c 02                	cmp    $0x2,%al
    3480c1e8:	0f 84 40 00 00 00    	je     3480c22e <sin+0xbe>
    3480c1ee:	3c 01                	cmp    $0x1,%al
    3480c1f0:	0f 84 52 00 00 00    	je     3480c248 <sin+0xd8>
    3480c1f6:	84 c0                	test   %al,%al
    3480c1f8:	0f 85 5f 00 00 00    	jne    3480c25d <sin+0xed>
    3480c1fe:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480c203:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    3480c209:	bf 01 00 00 00       	mov    $0x1,%edi
    3480c20e:	e8 bd 1e 00 00       	callq  3480e0d0 <__sin>
    3480c213:	48 83 c4 18          	add    $0x18,%rsp
    3480c217:	c3                   	retq   
    3480c218:	f2 0f 10 0d b8 8c 00 	movsd  0x8cb8(%rip),%xmm1        # 34814ed8 <dp_h+0x18>
    3480c21f:	00 
    3480c220:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480c224:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
    3480c229:	48 83 c4 18          	add    $0x18,%rsp
    3480c22d:	c3                   	retq   
    3480c22e:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480c233:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    3480c239:	bf 01 00 00 00       	mov    $0x1,%edi
    3480c23e:	e8 8d 1e 00 00       	callq  3480e0d0 <__sin>
    3480c243:	e9 25 00 00 00       	jmpq   3480c26d <sin+0xfd>
    3480c248:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480c24d:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    3480c253:	e8 68 0b 00 00       	callq  3480cdc0 <__cos>
    3480c258:	48 83 c4 18          	add    $0x18,%rsp
    3480c25c:	c3                   	retq   
    3480c25d:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480c262:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    3480c268:	e8 53 0b 00 00       	callq  3480cdc0 <__cos>
    3480c26d:	0f 57 05 ac 75 00 00 	xorps  0x75ac(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480c274:	48 83 c4 18          	add    $0x18,%rsp
    3480c278:	c3                   	retq   
    3480c279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480c280 <sprintf>:
    3480c280:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    3480c287:	84 c0                	test   %al,%al
    3480c289:	0f 84 37 00 00 00    	je     3480c2c6 <sprintf+0x46>
    3480c28f:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    3480c294:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    3480c299:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    3480c29e:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
    3480c2a5:	00 
    3480c2a6:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
    3480c2ad:	00 
    3480c2ae:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
    3480c2b5:	00 
    3480c2b6:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
    3480c2bd:	00 
    3480c2be:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
    3480c2c5:	00 
    3480c2c6:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    3480c2cb:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    3480c2d0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    3480c2d5:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    3480c2da:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    3480c2df:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480c2e4:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    3480c2eb:	00 
    3480c2ec:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3480c2f1:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
    3480c2f8:	00 
    3480c2f9:	c7 04 24 10 00 00 00 	movl   $0x10,(%rsp)
    3480c300:	48 89 e2             	mov    %rsp,%rdx
    3480c303:	e8 98 0a 00 00       	callq  3480cda0 <vsprintf>
    3480c308:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    3480c30f:	c3                   	retq   

000000003480c310 <sqrt>:
    3480c310:	66 48 0f 7e c7       	movq   %xmm0,%rdi
    3480c315:	48 89 fe             	mov    %rdi,%rsi
    3480c318:	48 c1 ee 20          	shr    $0x20,%rsi
    3480c31c:	89 f0                	mov    %esi,%eax
    3480c31e:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
    3480c323:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
    3480c328:	0f 85 0d 00 00 00    	jne    3480c33b <sqrt+0x2b>
    3480c32e:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480c332:	f2 0f 59 c9          	mulsd  %xmm1,%xmm1
    3480c336:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480c33a:	c3                   	retq   
    3480c33b:	85 f6                	test   %esi,%esi
    3480c33d:	0f 8e 1b 00 00 00    	jle    3480c35e <sqrt+0x4e>
    3480c343:	49 89 f8             	mov    %rdi,%r8
    3480c346:	49 c1 e8 34          	shr    $0x34,%r8
    3480c34a:	45 85 c0             	test   %r8d,%r8d
    3480c34d:	0f 85 81 00 00 00    	jne    3480c3d4 <sqrt+0xc4>
    3480c353:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3480c359:	e9 36 00 00 00       	jmpq   3480c394 <sqrt+0x84>
    3480c35e:	89 f0                	mov    %esi,%eax
    3480c360:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    3480c365:	09 f8                	or     %edi,%eax
    3480c367:	0f 84 ce 01 00 00    	je     3480c53b <sqrt+0x22b>
    3480c36d:	85 f6                	test   %esi,%esi
    3480c36f:	0f 88 c7 01 00 00    	js     3480c53c <sqrt+0x22c>
    3480c375:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3480c37b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c380:	89 fe                	mov    %edi,%esi
    3480c382:	c1 ee 0b             	shr    $0xb,%esi
    3480c385:	c1 e7 15             	shl    $0x15,%edi
    3480c388:	41 83 c0 eb          	add    $0xffffffeb,%r8d
    3480c38c:	85 f6                	test   %esi,%esi
    3480c38e:	0f 84 ec ff ff ff    	je     3480c380 <sqrt+0x70>
    3480c394:	31 c0                	xor    %eax,%eax
    3480c396:	f7 c6 00 00 10 00    	test   $0x100000,%esi
    3480c39c:	0f 85 1e 00 00 00    	jne    3480c3c0 <sqrt+0xb0>
    3480c3a2:	31 c0                	xor    %eax,%eax
    3480c3a4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c3ab:	00 00 00 00 00 
    3480c3b0:	01 f6                	add    %esi,%esi
    3480c3b2:	ff c0                	inc    %eax
    3480c3b4:	f7 c6 00 00 10 00    	test   $0x100000,%esi
    3480c3ba:	0f 84 f0 ff ff ff    	je     3480c3b0 <sqrt+0xa0>
    3480c3c0:	41 29 c0             	sub    %eax,%r8d
    3480c3c3:	b9 20 00 00 00       	mov    $0x20,%ecx
    3480c3c8:	29 c1                	sub    %eax,%ecx
    3480c3ca:	89 fa                	mov    %edi,%edx
    3480c3cc:	d3 ea                	shr    %cl,%edx
    3480c3ce:	09 d6                	or     %edx,%esi
    3480c3d0:	89 c1                	mov    %eax,%ecx
    3480c3d2:	d3 e7                	shl    %cl,%edi
    3480c3d4:	41 81 c0 01 fc ff ff 	add    $0xfffffc01,%r8d
    3480c3db:	81 e6 ff ff 0f 00    	and    $0xfffff,%esi
    3480c3e1:	81 ce 00 00 10 00    	or     $0x100000,%esi
    3480c3e7:	41 f6 c0 01          	test   $0x1,%r8b
    3480c3eb:	0f 84 06 00 00 00    	je     3480c3f7 <sqrt+0xe7>
    3480c3f1:	0f a4 fe 01          	shld   $0x1,%edi,%esi
    3480c3f5:	01 ff                	add    %edi,%edi
    3480c3f7:	41 54                	push   %r12
    3480c3f9:	53                   	push   %rbx
    3480c3fa:	0f a4 fe 01          	shld   $0x1,%edi,%esi
    3480c3fe:	8d 0c 3f             	lea    (%rdi,%rdi,1),%ecx
    3480c401:	45 31 c9             	xor    %r9d,%r9d
    3480c404:	b8 00 00 20 00       	mov    $0x200000,%eax
    3480c409:	45 31 db             	xor    %r11d,%r11d
    3480c40c:	0f 1f 40 00          	nopl   0x0(%rax)
    3480c410:	42 8d 1c 18          	lea    (%rax,%r11,1),%ebx
    3480c414:	89 f2                	mov    %esi,%edx
    3480c416:	29 da                	sub    %ebx,%edx
    3480c418:	0f 8d 12 00 00 00    	jge    3480c430 <sqrt+0x120>
    3480c41e:	89 f2                	mov    %esi,%edx
    3480c420:	e9 13 00 00 00       	jmpq   3480c438 <sqrt+0x128>
    3480c425:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480c42c:	00 00 00 00 
    3480c430:	01 c3                	add    %eax,%ebx
    3480c432:	41 01 c1             	add    %eax,%r9d
    3480c435:	41 89 db             	mov    %ebx,%r11d
    3480c438:	c1 ef 1e             	shr    $0x1e,%edi
    3480c43b:	83 e7 01             	and    $0x1,%edi
    3480c43e:	8d 34 57             	lea    (%rdi,%rdx,2),%esi
    3480c441:	89 c7                	mov    %eax,%edi
    3480c443:	d1 ef                	shr    %edi
    3480c445:	42 8d 1c 1f          	lea    (%rdi,%r11,1),%ebx
    3480c449:	89 f2                	mov    %esi,%edx
    3480c44b:	29 da                	sub    %ebx,%edx
    3480c44d:	0f 8d 0d 00 00 00    	jge    3480c460 <sqrt+0x150>
    3480c453:	89 f2                	mov    %esi,%edx
    3480c455:	e9 0e 00 00 00       	jmpq   3480c468 <sqrt+0x158>
    3480c45a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480c460:	01 fb                	add    %edi,%ebx
    3480c462:	41 01 f9             	add    %edi,%r9d
    3480c465:	41 89 db             	mov    %ebx,%r11d
    3480c468:	8d 3c 09             	lea    (%rcx,%rcx,1),%edi
    3480c46b:	89 ce                	mov    %ecx,%esi
    3480c46d:	c1 ee 1e             	shr    $0x1e,%esi
    3480c470:	83 e6 01             	and    $0x1,%esi
    3480c473:	8d 34 56             	lea    (%rsi,%rdx,2),%esi
    3480c476:	c1 e8 02             	shr    $0x2,%eax
    3480c479:	c1 e1 02             	shl    $0x2,%ecx
    3480c47c:	85 c0                	test   %eax,%eax
    3480c47e:	0f 85 8c ff ff ff    	jne    3480c410 <sqrt+0x100>
    3480c484:	41 d1 e8             	shr    %r8d
    3480c487:	b8 00 00 00 80       	mov    $0x80000000,%eax
    3480c48c:	45 31 d2             	xor    %r10d,%r10d
    3480c48f:	45 31 e4             	xor    %r12d,%r12d
    3480c492:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c499:	1f 84 00 00 00 00 00 
    3480c4a0:	41 8d 3c 04          	lea    (%r12,%rax,1),%edi
    3480c4a4:	89 f2                	mov    %esi,%edx
    3480c4a6:	44 29 da             	sub    %r11d,%edx
    3480c4a9:	0f 8f 0e 00 00 00    	jg     3480c4bd <sqrt+0x1ad>
    3480c4af:	0f 85 2a 00 00 00    	jne    3480c4df <sqrt+0x1cf>
    3480c4b5:	39 f9                	cmp    %edi,%ecx
    3480c4b7:	0f 82 22 00 00 00    	jb     3480c4df <sqrt+0x1cf>
    3480c4bd:	85 ff                	test   %edi,%edi
    3480c4bf:	40 0f 98 c6          	sets   %sil
    3480c4c3:	41 89 fc             	mov    %edi,%r12d
    3480c4c6:	41 01 c4             	add    %eax,%r12d
    3480c4c9:	0f 99 c3             	setns  %bl
    3480c4cc:	40 20 f3             	and    %sil,%bl
    3480c4cf:	0f b6 f3             	movzbl %bl,%esi
    3480c4d2:	41 01 f3             	add    %esi,%r11d
    3480c4d5:	29 f9                	sub    %edi,%ecx
    3480c4d7:	83 da 00             	sbb    $0x0,%edx
    3480c4da:	41 01 c2             	add    %eax,%r10d
    3480c4dd:	89 d6                	mov    %edx,%esi
    3480c4df:	0f a4 ce 01          	shld   $0x1,%ecx,%esi
    3480c4e3:	01 c9                	add    %ecx,%ecx
    3480c4e5:	d1 e8                	shr    %eax
    3480c4e7:	0f 85 b3 ff ff ff    	jne    3480c4a0 <sqrt+0x190>
    3480c4ed:	09 f1                	or     %esi,%ecx
    3480c4ef:	5b                   	pop    %rbx
    3480c4f0:	41 5c                	pop    %r12
    3480c4f2:	0f 84 21 00 00 00    	je     3480c519 <sqrt+0x209>
    3480c4f8:	41 83 fa ff          	cmp    $0xffffffff,%r10d
    3480c4fc:	0f 84 11 00 00 00    	je     3480c513 <sqrt+0x203>
    3480c502:	44 89 d0             	mov    %r10d,%eax
    3480c505:	83 e0 01             	and    $0x1,%eax
    3480c508:	44 01 d0             	add    %r10d,%eax
    3480c50b:	41 89 c2             	mov    %eax,%r10d
    3480c50e:	e9 06 00 00 00       	jmpq   3480c519 <sqrt+0x209>
    3480c513:	41 ff c1             	inc    %r9d
    3480c516:	45 31 d2             	xor    %r10d,%r10d
    3480c519:	44 89 c8             	mov    %r9d,%eax
    3480c51c:	d1 f8                	sar    %eax
    3480c51e:	45 0f ac ca 01       	shrd   $0x1,%r9d,%r10d
    3480c523:	41 c1 e0 14          	shl    $0x14,%r8d
    3480c527:	41 8d 84 00 00 00 e0 	lea    0x3fe00000(%r8,%rax,1),%eax
    3480c52e:	3f 
    3480c52f:	48 c1 e0 20          	shl    $0x20,%rax
    3480c533:	49 09 c2             	or     %rax,%r10
    3480c536:	66 49 0f 6e c2       	movq   %r10,%xmm0
    3480c53b:	c3                   	retq   
    3480c53c:	f2 0f 5c c0          	subsd  %xmm0,%xmm0
    3480c540:	f2 0f 5e c0          	divsd  %xmm0,%xmm0
    3480c544:	c3                   	retq   
    3480c545:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c54c:	00 00 00 
    3480c54f:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c556:	00 00 00 
    3480c559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480c560 <_start>:
    3480c560:	e9 4b 4d ff ff       	jmpq   348012b0 <enclave_main>
    3480c565:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c56c:	00 00 00 
    3480c56f:	90                   	nop

000000003480c570 <strlen>:
    3480c570:	40 f6 c7 07          	test   $0x7,%dil
    3480c574:	48 89 f8             	mov    %rdi,%rax
    3480c577:	0f 84 17 00 00 00    	je     3480c594 <strlen+0x24>
    3480c57d:	48 89 f8             	mov    %rdi,%rax
    3480c580:	80 38 00             	cmpb   $0x0,(%rax)
    3480c583:	0f 84 65 00 00 00    	je     3480c5ee <strlen+0x7e>
    3480c589:	48 ff c0             	inc    %rax
    3480c58c:	a8 07                	test   $0x7,%al
    3480c58e:	0f 85 ec ff ff ff    	jne    3480c580 <strlen+0x10>
    3480c594:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    3480c598:	49 b8 80 80 80 80 80 	movabs $0x8080808080808080,%r8
    3480c59f:	80 80 80 
    3480c5a2:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
    3480c5a9:	fe fe fe 
    3480c5ac:	0f 1f 40 00          	nopl   0x0(%rax)
    3480c5b0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3480c5b4:	48 83 c0 08          	add    $0x8,%rax
    3480c5b8:	48 89 ce             	mov    %rcx,%rsi
    3480c5bb:	48 f7 d6             	not    %rsi
    3480c5be:	4a 8d 14 09          	lea    (%rcx,%r9,1),%rdx
    3480c5c2:	4c 21 c6             	and    %r8,%rsi
    3480c5c5:	48 85 d6             	test   %rdx,%rsi
    3480c5c8:	0f 84 e2 ff ff ff    	je     3480c5b0 <strlen+0x40>
    3480c5ce:	84 c9                	test   %cl,%cl
    3480c5d0:	0f 84 18 00 00 00    	je     3480c5ee <strlen+0x7e>
    3480c5d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c5dd:	00 00 00 
    3480c5e0:	80 78 01 00          	cmpb   $0x0,0x1(%rax)
    3480c5e4:	48 8d 40 01          	lea    0x1(%rax),%rax
    3480c5e8:	0f 85 f2 ff ff ff    	jne    3480c5e0 <strlen+0x70>
    3480c5ee:	48 29 f8             	sub    %rdi,%rax
    3480c5f1:	c3                   	retq   

000000003480c5f2 <strncmp>:
    3480c5f2:	48 85 d2             	test   %rdx,%rdx
    3480c5f5:	74 3b                	je     3480c632 <strncmp+0x40>
    3480c5f7:	8a 07                	mov    (%rdi),%al
    3480c5f9:	84 c0                	test   %al,%al
    3480c5fb:	74 2a                	je     3480c627 <strncmp+0x35>
    3480c5fd:	b9 01 00 00 00       	mov    $0x1,%ecx
    3480c602:	48 29 d1             	sub    %rdx,%rcx
    3480c605:	48 ff c7             	inc    %rdi
    3480c608:	0f b6 16             	movzbl (%rsi),%edx
    3480c60b:	38 d0                	cmp    %dl,%al
    3480c60d:	75 1a                	jne    3480c629 <strncmp+0x37>
    3480c60f:	48 85 c9             	test   %rcx,%rcx
    3480c612:	74 15                	je     3480c629 <strncmp+0x37>
    3480c614:	84 d2                	test   %dl,%dl
    3480c616:	74 11                	je     3480c629 <strncmp+0x37>
    3480c618:	48 ff c6             	inc    %rsi
    3480c61b:	8a 07                	mov    (%rdi),%al
    3480c61d:	48 ff c1             	inc    %rcx
    3480c620:	48 ff c7             	inc    %rdi
    3480c623:	84 c0                	test   %al,%al
    3480c625:	75 e1                	jne    3480c608 <strncmp+0x16>
    3480c627:	31 c0                	xor    %eax,%eax
    3480c629:	0f b6 c0             	movzbl %al,%eax
    3480c62c:	0f b6 0e             	movzbl (%rsi),%ecx
    3480c62f:	29 c8                	sub    %ecx,%eax
    3480c631:	c3                   	retq   
    3480c632:	31 c0                	xor    %eax,%eax
    3480c634:	c3                   	retq   
    3480c635:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c63c:	00 00 00 
    3480c63f:	90                   	nop

000000003480c640 <sysconf>:
    3480c640:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    3480c647:	81 ff fa 00 00 00    	cmp    $0xfa,%edi
    3480c64d:	0f 82 17 00 00 00    	jb     3480c66a <sysconf+0x2a>
    3480c653:	e8 08 08 00 00       	callq  3480ce60 <__errno_location>
    3480c658:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    3480c65e:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    3480c665:	e9 70 01 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c66a:	48 63 c7             	movslq %edi,%rax
    3480c66d:	48 8d 0d 6c 88 00 00 	lea    0x886c(%rip),%rcx        # 34814ee0 <sysconf.values>
    3480c674:	48 0f bf 0c 41       	movswq (%rcx,%rax,2),%rcx
    3480c679:	48 83 f9 fe          	cmp    $0xfffffffffffffffe,%rcx
    3480c67d:	0f 84 33 00 00 00    	je     3480c6b6 <sysconf+0x76>
    3480c683:	0f b7 d1             	movzwl %cx,%edx
    3480c686:	81 fa fd ff 00 00    	cmp    $0xfffd,%edx
    3480c68c:	0f 85 2e 00 00 00    	jne    3480c6c0 <sysconf+0x80>
    3480c692:	85 ff                	test   %edi,%edi
    3480c694:	0f 84 27 01 00 00    	je     3480c7c1 <sysconf+0x181>
    3480c69a:	83 ff 1c             	cmp    $0x1c,%edi
    3480c69d:	0f 84 28 01 00 00    	je     3480c7cb <sysconf+0x18b>
    3480c6a3:	83 ff 21             	cmp    $0x21,%edi
    3480c6a6:	0f 85 29 01 00 00    	jne    3480c7d5 <sysconf+0x195>
    3480c6ac:	b9 ff ff ff 7f       	mov    $0x7fffffff,%ecx
    3480c6b1:	e9 24 01 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c6b6:	b9 69 10 03 00       	mov    $0x31069,%ecx
    3480c6bb:	e9 1a 01 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c6c0:	48 83 c0 ad          	add    $0xffffffffffffffad,%rax
    3480c6c4:	48 83 f8 01          	cmp    $0x1,%rax
    3480c6c8:	0f 87 bd 00 00 00    	ja     3480c78b <sysconf+0x14b>
    3480c6ce:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480c6d1:	0f 29 04 24          	movaps %xmm0,(%rsp)
    3480c6d5:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    3480c6da:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    3480c6df:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    3480c6e4:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    3480c6e9:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    3480c6ee:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    3480c6f3:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    3480c6f8:	c6 04 24 01          	movb   $0x1,(%rsp)
    3480c6fc:	45 31 c0             	xor    %r8d,%r8d
    3480c6ff:	48 89 e2             	mov    %rsp,%rdx
    3480c702:	b8 cc 00 00 00       	mov    $0xcc,%eax
    3480c707:	31 ff                	xor    %edi,%edi
    3480c709:	be 80 00 00 00       	mov    $0x80,%esi
    3480c70e:	0f 05                	syscall 
    3480c710:	31 c0                	xor    %eax,%eax
    3480c712:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c719:	1f 84 00 00 00 00 00 
    3480c720:	42 8a 0c 04          	mov    (%rsp,%r8,1),%cl
    3480c724:	84 c9                	test   %cl,%cl
    3480c726:	0f 84 17 00 00 00    	je     3480c743 <sysconf+0x103>
    3480c72c:	0f 1f 40 00          	nopl   0x0(%rax)
    3480c730:	89 ca                	mov    %ecx,%edx
    3480c732:	fe ca                	dec    %dl
    3480c734:	ff c0                	inc    %eax
    3480c736:	20 d1                	and    %dl,%cl
    3480c738:	0f 85 f2 ff ff ff    	jne    3480c730 <sysconf+0xf0>
    3480c73e:	42 c6 04 04 00       	movb   $0x0,(%rsp,%r8,1)
    3480c743:	4c 89 c6             	mov    %r8,%rsi
    3480c746:	48 83 ce 01          	or     $0x1,%rsi
    3480c74a:	8a 14 34             	mov    (%rsp,%rsi,1),%dl
    3480c74d:	84 d2                	test   %dl,%dl
    3480c74f:	0f 84 1d 00 00 00    	je     3480c772 <sysconf+0x132>
    3480c755:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480c75c:	00 00 00 00 
    3480c760:	89 d1                	mov    %edx,%ecx
    3480c762:	fe c9                	dec    %cl
    3480c764:	ff c0                	inc    %eax
    3480c766:	20 ca                	and    %cl,%dl
    3480c768:	0f 85 f2 ff ff ff    	jne    3480c760 <sysconf+0x120>
    3480c76e:	c6 04 34 00          	movb   $0x0,(%rsp,%rsi,1)
    3480c772:	49 83 c0 02          	add    $0x2,%r8
    3480c776:	49 81 f8 80 00 00 00 	cmp    $0x80,%r8
    3480c77d:	0f 85 9d ff ff ff    	jne    3480c720 <sysconf+0xe0>
    3480c783:	48 63 c8             	movslq %eax,%rcx
    3480c786:	e9 4f 00 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c78b:	83 f9 fc             	cmp    $0xfffffffc,%ecx
    3480c78e:	0f 8f 46 00 00 00    	jg     3480c7da <sysconf+0x19a>
    3480c794:	81 e1 ff 3f 00 00    	and    $0x3fff,%ecx
    3480c79a:	48 89 e6             	mov    %rsp,%rsi
    3480c79d:	b8 61 00 00 00       	mov    $0x61,%eax
    3480c7a2:	48 89 cf             	mov    %rcx,%rdi
    3480c7a5:	0f 05                	syscall 
    3480c7a7:	48 8b 04 24          	mov    (%rsp),%rax
    3480c7ab:	48 b9 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rcx
    3480c7b2:	ff ff 7f 
    3480c7b5:	48 39 c8             	cmp    %rcx,%rax
    3480c7b8:	48 0f 42 c8          	cmovb  %rax,%rcx
    3480c7bc:	e9 19 00 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c7c1:	b9 00 00 02 00       	mov    $0x20000,%ecx
    3480c7c6:	e9 0f 00 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c7cb:	b9 00 80 00 00       	mov    $0x8000,%ecx
    3480c7d0:	e9 05 00 00 00       	jmpq   3480c7da <sysconf+0x19a>
    3480c7d5:	b9 00 10 00 00       	mov    $0x1000,%ecx
    3480c7da:	48 89 c8             	mov    %rcx,%rax
    3480c7dd:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    3480c7e4:	c3                   	retq   
    3480c7e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c7ec:	00 00 00 
    3480c7ef:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480c7f6:	00 00 00 
    3480c7f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480c800 <clock>:
    3480c800:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
    3480c807:	e9 60 05 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c80c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c811:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c818:	0f 1f 84 00 00 00 00 
    3480c81f:	00 

000000003480c820 <time>:
    3480c820:	49 c7 c6 01 00 00 00 	mov    $0x1,%r14
    3480c827:	e9 40 05 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c82c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c831:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c838:	0f 1f 84 00 00 00 00 
    3480c83f:	00 

000000003480c840 <localtime>:
    3480c840:	49 c7 c6 02 00 00 00 	mov    $0x2,%r14
    3480c847:	e9 20 05 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c84c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c851:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c858:	0f 1f 84 00 00 00 00 
    3480c85f:	00 

000000003480c860 <gmtime>:
    3480c860:	49 c7 c6 03 00 00 00 	mov    $0x3,%r14
    3480c867:	e9 00 05 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c86c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c871:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c878:	0f 1f 84 00 00 00 00 
    3480c87f:	00 

000000003480c880 <mktime>:
    3480c880:	49 c7 c6 04 00 00 00 	mov    $0x4,%r14
    3480c887:	e9 e0 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c88c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c891:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c898:	0f 1f 84 00 00 00 00 
    3480c89f:	00 

000000003480c8a0 <gettimeofday>:
    3480c8a0:	49 c7 c6 05 00 00 00 	mov    $0x5,%r14
    3480c8a7:	e9 c0 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c8ac:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c8b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c8b8:	0f 1f 84 00 00 00 00 
    3480c8bf:	00 

000000003480c8c0 <puts>:
    3480c8c0:	49 c7 c6 06 00 00 00 	mov    $0x6,%r14
    3480c8c7:	e9 a0 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c8cc:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c8d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c8d8:	0f 1f 84 00 00 00 00 
    3480c8df:	00 

000000003480c8e0 <open>:
    3480c8e0:	49 c7 c6 07 00 00 00 	mov    $0x7,%r14
    3480c8e7:	e9 80 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c8ec:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c8f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c8f8:	0f 1f 84 00 00 00 00 
    3480c8ff:	00 

000000003480c900 <close>:
    3480c900:	49 c7 c6 08 00 00 00 	mov    $0x8,%r14
    3480c907:	e9 60 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c90c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c911:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c918:	0f 1f 84 00 00 00 00 
    3480c91f:	00 

000000003480c920 <read>:
    3480c920:	49 c7 c6 09 00 00 00 	mov    $0x9,%r14
    3480c927:	e9 40 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c92c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c931:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c938:	0f 1f 84 00 00 00 00 
    3480c93f:	00 

000000003480c940 <write>:
    3480c940:	49 c7 c6 0a 00 00 00 	mov    $0xa,%r14
    3480c947:	e9 20 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c94c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c951:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c958:	0f 1f 84 00 00 00 00 
    3480c95f:	00 

000000003480c960 <lseek>:
    3480c960:	49 c7 c6 0b 00 00 00 	mov    $0xb,%r14
    3480c967:	e9 00 04 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c96c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c971:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c978:	0f 1f 84 00 00 00 00 
    3480c97f:	00 

000000003480c980 <socket>:
    3480c980:	49 c7 c6 0c 00 00 00 	mov    $0xc,%r14
    3480c987:	e9 e0 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c98c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c991:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c998:	0f 1f 84 00 00 00 00 
    3480c99f:	00 

000000003480c9a0 <bind>:
    3480c9a0:	49 c7 c6 0d 00 00 00 	mov    $0xd,%r14
    3480c9a7:	e9 c0 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c9ac:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c9b1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c9b8:	0f 1f 84 00 00 00 00 
    3480c9bf:	00 

000000003480c9c0 <connect>:
    3480c9c0:	49 c7 c6 0e 00 00 00 	mov    $0xe,%r14
    3480c9c7:	e9 a0 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c9cc:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c9d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c9d8:	0f 1f 84 00 00 00 00 
    3480c9df:	00 

000000003480c9e0 <listen>:
    3480c9e0:	49 c7 c6 0f 00 00 00 	mov    $0xf,%r14
    3480c9e7:	e9 80 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480c9ec:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480c9f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480c9f8:	0f 1f 84 00 00 00 00 
    3480c9ff:	00 

000000003480ca00 <accept>:
    3480ca00:	49 c7 c6 10 00 00 00 	mov    $0x10,%r14
    3480ca07:	e9 60 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ca0c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ca11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ca18:	0f 1f 84 00 00 00 00 
    3480ca1f:	00 

000000003480ca20 <fstat>:
    3480ca20:	49 c7 c6 11 00 00 00 	mov    $0x11,%r14
    3480ca27:	e9 40 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ca2c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ca31:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ca38:	0f 1f 84 00 00 00 00 
    3480ca3f:	00 

000000003480ca40 <send>:
    3480ca40:	49 c7 c6 12 00 00 00 	mov    $0x12,%r14
    3480ca47:	e9 20 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ca4c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ca51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ca58:	0f 1f 84 00 00 00 00 
    3480ca5f:	00 

000000003480ca60 <recv>:
    3480ca60:	49 c7 c6 13 00 00 00 	mov    $0x13,%r14
    3480ca67:	e9 00 03 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ca6c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ca71:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ca78:	0f 1f 84 00 00 00 00 
    3480ca7f:	00 

000000003480ca80 <sendto>:
    3480ca80:	49 c7 c6 14 00 00 00 	mov    $0x14,%r14
    3480ca87:	e9 e0 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ca8c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ca91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ca98:	0f 1f 84 00 00 00 00 
    3480ca9f:	00 

000000003480caa0 <recvfrom>:
    3480caa0:	49 c7 c6 15 00 00 00 	mov    $0x15,%r14
    3480caa7:	e9 c0 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480caac:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cab1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cab8:	0f 1f 84 00 00 00 00 
    3480cabf:	00 

000000003480cac0 <gethostname>:
    3480cac0:	49 c7 c6 16 00 00 00 	mov    $0x16,%r14
    3480cac7:	e9 a0 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cacc:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cad1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cad8:	0f 1f 84 00 00 00 00 
    3480cadf:	00 

000000003480cae0 <getaddrinfo>:
    3480cae0:	49 c7 c6 17 00 00 00 	mov    $0x17,%r14
    3480cae7:	e9 80 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480caec:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480caf1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480caf8:	0f 1f 84 00 00 00 00 
    3480caff:	00 

000000003480cb00 <getenv>:
    3480cb00:	49 c7 c6 18 00 00 00 	mov    $0x18,%r14
    3480cb07:	e9 60 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cb0c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cb11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cb18:	0f 1f 84 00 00 00 00 
    3480cb1f:	00 

000000003480cb20 <getsockname>:
    3480cb20:	49 c7 c6 19 00 00 00 	mov    $0x19,%r14
    3480cb27:	e9 40 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cb2c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cb31:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cb38:	0f 1f 84 00 00 00 00 
    3480cb3f:	00 

000000003480cb40 <getsockopt>:
    3480cb40:	49 c7 c6 1a 00 00 00 	mov    $0x1a,%r14
    3480cb47:	e9 20 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cb4c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cb51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cb58:	0f 1f 84 00 00 00 00 
    3480cb5f:	00 

000000003480cb60 <getservbyname>:
    3480cb60:	49 c7 c6 1b 00 00 00 	mov    $0x1b,%r14
    3480cb67:	e9 00 02 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cb6c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cb71:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cb78:	0f 1f 84 00 00 00 00 
    3480cb7f:	00 

000000003480cb80 <getprotobynumber>:
    3480cb80:	49 c7 c6 1c 00 00 00 	mov    $0x1c,%r14
    3480cb87:	e9 e0 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cb8c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cb91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cb98:	0f 1f 84 00 00 00 00 
    3480cb9f:	00 

000000003480cba0 <setsockopt>:
    3480cba0:	49 c7 c6 1d 00 00 00 	mov    $0x1d,%r14
    3480cba7:	e9 c0 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cbac:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cbb1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cbb8:	0f 1f 84 00 00 00 00 
    3480cbbf:	00 

000000003480cbc0 <htons>:
    3480cbc0:	49 c7 c6 1e 00 00 00 	mov    $0x1e,%r14
    3480cbc7:	e9 a0 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cbcc:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cbd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cbd8:	0f 1f 84 00 00 00 00 
    3480cbdf:	00 

000000003480cbe0 <htonl>:
    3480cbe0:	49 c7 c6 1f 00 00 00 	mov    $0x1f,%r14
    3480cbe7:	e9 80 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cbec:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cbf1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cbf8:	0f 1f 84 00 00 00 00 
    3480cbff:	00 

000000003480cc00 <ntohs>:
    3480cc00:	49 c7 c6 20 00 00 00 	mov    $0x20,%r14
    3480cc07:	e9 60 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cc0c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cc11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cc18:	0f 1f 84 00 00 00 00 
    3480cc1f:	00 

000000003480cc20 <ntohl>:
    3480cc20:	49 c7 c6 21 00 00 00 	mov    $0x21,%r14
    3480cc27:	e9 40 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cc2c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cc31:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cc38:	0f 1f 84 00 00 00 00 
    3480cc3f:	00 

000000003480cc40 <signal>:
    3480cc40:	49 c7 c6 22 00 00 00 	mov    $0x22,%r14
    3480cc47:	e9 20 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cc4c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cc51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cc58:	0f 1f 84 00 00 00 00 
    3480cc5f:	00 

000000003480cc60 <shutdown>:
    3480cc60:	49 c7 c6 23 00 00 00 	mov    $0x23,%r14
    3480cc67:	e9 00 01 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cc6c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cc71:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cc78:	0f 1f 84 00 00 00 00 
    3480cc7f:	00 

000000003480cc80 <exit>:
    3480cc80:	49 c7 c6 24 00 00 00 	mov    $0x24,%r14
    3480cc87:	e9 e0 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cc8c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cc91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cc98:	0f 1f 84 00 00 00 00 
    3480cc9f:	00 

000000003480cca0 <mbedtls_net_bind>:
    3480cca0:	49 c7 c6 25 00 00 00 	mov    $0x25,%r14
    3480cca7:	e9 c0 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ccac:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ccb1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ccb8:	0f 1f 84 00 00 00 00 
    3480ccbf:	00 

000000003480ccc0 <mbedtls_net_accept>:
    3480ccc0:	49 c7 c6 26 00 00 00 	mov    $0x26,%r14
    3480ccc7:	e9 a0 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cccc:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ccd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ccd8:	0f 1f 84 00 00 00 00 
    3480ccdf:	00 

000000003480cce0 <mbedtls_net_recv_timeout>:
    3480cce0:	49 c7 c6 27 00 00 00 	mov    $0x27,%r14
    3480cce7:	e9 80 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480ccec:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480ccf1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ccf8:	0f 1f 84 00 00 00 00 
    3480ccff:	00 

000000003480cd00 <mbedtls_net_send>:
    3480cd00:	49 c7 c6 28 00 00 00 	mov    $0x28,%r14
    3480cd07:	e9 60 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cd0c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cd11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cd18:	0f 1f 84 00 00 00 00 
    3480cd1f:	00 

000000003480cd20 <mbedtls_net_free>:
    3480cd20:	49 c7 c6 29 00 00 00 	mov    $0x29,%r14
    3480cd27:	e9 40 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cd2c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cd31:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cd38:	0f 1f 84 00 00 00 00 
    3480cd3f:	00 

000000003480cd40 <sgx_measure_start>:
    3480cd40:	49 c7 c6 2b 00 00 00 	mov    $0x2b,%r14
    3480cd47:	e9 20 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>
    3480cd4c:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480cd51:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480cd58:	0f 1f 84 00 00 00 00 
    3480cd5f:	00 

000000003480cd60 <sgx_measure_wait>:
    3480cd60:	49 c7 c6 2c 00 00 00 	mov    $0x2c,%r14
    3480cd67:	e9 00 00 00 00       	jmpq   3480cd6c <do_sgx_ocall>

000000003480cd6c <do_sgx_ocall>:
    3480cd6c:	48 89 24 25 d0 77 31 	mov    %rsp,0x353177d0
    3480cd73:	35 
    3480cd74:	48 8b 24 25 c8 77 31 	mov    0x353177c8,%rsp
    3480cd7b:	35 
    3480cd7c:	4e 8b 34 f5 f0 74 a1 	mov    0x34a174f0(,%r14,8),%r14
    3480cd83:	34 
    3480cd84:	41 ff d6             	callq  *%r14
    3480cd87:	48 8b 24 25 d0 77 31 	mov    0x353177d0,%rsp
    3480cd8e:	35 
    3480cd8f:	c3                   	retq   

000000003480cd90 <secureCopy>:
    3480cd90:	c3                   	retq   
    3480cd91:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480cd98:	00 00 00 
    3480cd9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480cda0 <vsprintf>:
    3480cda0:	48 89 d0             	mov    %rdx,%rax
    3480cda3:	48 89 f1             	mov    %rsi,%rcx
    3480cda6:	be ff ff ff 7f       	mov    $0x7fffffff,%esi
    3480cdab:	48 89 ca             	mov    %rcx,%rdx
    3480cdae:	48 89 c1             	mov    %rax,%rcx
    3480cdb1:	e9 1a 16 00 00       	jmpq   3480e3d0 <vsnprintf>
    3480cdb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480cdbd:	00 00 00 

000000003480cdc0 <__cos>:
    3480cdc0:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480cdc4:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480cdc8:	f2 0f 59 d2          	mulsd  %xmm2,%xmm2
    3480cdcc:	66 0f 28 da          	movapd %xmm2,%xmm3
    3480cdd0:	f2 0f 59 db          	mulsd  %xmm3,%xmm3
    3480cdd4:	f2 0f 10 25 fc 82 00 	movsd  0x82fc(%rip),%xmm4        # 348150d8 <sysconf.values+0x1f8>
    3480cddb:	00 
    3480cddc:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
    3480cde0:	f2 0f 58 25 f8 82 00 	addsd  0x82f8(%rip),%xmm4        # 348150e0 <sysconf.values+0x200>
    3480cde7:	00 
    3480cde8:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
    3480cdec:	f2 0f 58 25 f4 82 00 	addsd  0x82f4(%rip),%xmm4        # 348150e8 <sysconf.values+0x208>
    3480cdf3:	00 
    3480cdf4:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
    3480cdf8:	f2 0f 59 db          	mulsd  %xmm3,%xmm3
    3480cdfc:	f2 0f 10 05 ec 82 00 	movsd  0x82ec(%rip),%xmm0        # 348150f0 <sysconf.values+0x210>
    3480ce03:	00 
    3480ce04:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    3480ce08:	f2 0f 58 05 e8 82 00 	addsd  0x82e8(%rip),%xmm0        # 348150f8 <sysconf.values+0x218>
    3480ce0f:	00 
    3480ce10:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    3480ce14:	f2 0f 58 05 e4 82 00 	addsd  0x82e4(%rip),%xmm0        # 34815100 <sysconf.values+0x220>
    3480ce1b:	00 
    3480ce1c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
    3480ce20:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    3480ce24:	f2 0f 10 1d 5c 69 00 	movsd  0x695c(%rip),%xmm3        # 34813788 <DoEmFloatIteration.jtable+0x868>
    3480ce2b:	00 
    3480ce2c:	f2 0f 59 da          	mulsd  %xmm2,%xmm3
    3480ce30:	f2 0f 10 25 28 61 00 	movsd  0x6128(%rip),%xmm4        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480ce37:	00 
    3480ce38:	66 0f 28 ec          	movapd %xmm4,%xmm5
    3480ce3c:	f2 0f 5c eb          	subsd  %xmm3,%xmm5
    3480ce40:	f2 0f 5c e5          	subsd  %xmm5,%xmm4
    3480ce44:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    3480ce48:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    3480ce4c:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3480ce50:	f2 0f 58 c4          	addsd  %xmm4,%xmm0
    3480ce54:	f2 0f 58 c5          	addsd  %xmm5,%xmm0
    3480ce58:	c3                   	retq   
    3480ce59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480ce60 <__errno_location>:
    3480ce60:	48 83 3d 60 3c b1 00 	cmpq   $0x0,0xb13c60(%rip)        # 35320ac8 <__libc>
    3480ce67:	00 
    3480ce68:	0f 84 0e 00 00 00    	je     3480ce7c <__errno_location+0x1c>
    3480ce6e:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
    3480ce75:	00 00 
    3480ce77:	48 8b 40 40          	mov    0x40(%rax),%rax
    3480ce7b:	c3                   	retq   
    3480ce7c:	48 8d 05 2d a9 b0 00 	lea    0xb0a92d(%rip),%rax        # 353177b0 <__errno_location.e>
    3480ce83:	c3                   	retq   
    3480ce84:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480ce8b:	00 00 00 
    3480ce8e:	66 90                	xchg   %ax,%ax

000000003480ce90 <__rem_pio2>:
    3480ce90:	41 54                	push   %r12
    3480ce92:	53                   	push   %rbx
    3480ce93:	48 83 ec 28          	sub    $0x28,%rsp
    3480ce97:	49 89 fc             	mov    %rdi,%r12
    3480ce9a:	66 48 0f 7e c0       	movq   %xmm0,%rax
    3480ce9f:	48 89 c3             	mov    %rax,%rbx
    3480cea2:	48 c1 eb 3f          	shr    $0x3f,%rbx
    3480cea6:	48 89 c1             	mov    %rax,%rcx
    3480cea9:	48 c1 e9 20          	shr    $0x20,%rcx
    3480cead:	89 ca                	mov    %ecx,%edx
    3480ceaf:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
    3480ceb5:	81 fa 7a 6a 0f 40    	cmp    $0x400f6a7a,%edx
    3480cebb:	0f 87 5d 00 00 00    	ja     3480cf1e <__rem_pio2+0x8e>
    3480cec1:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
    3480cec7:	81 f9 fb 21 09 00    	cmp    $0x921fb,%ecx
    3480cecd:	0f 84 29 01 00 00    	je     3480cffc <__rem_pio2+0x16c>
    3480ced3:	81 fa 7c d9 02 40    	cmp    $0x4002d97c,%edx
    3480ced9:	0f 87 d2 00 00 00    	ja     3480cfb1 <__rem_pio2+0x121>
    3480cedf:	85 db                	test   %ebx,%ebx
    3480cee1:	0f 84 37 03 00 00    	je     3480d21e <__rem_pio2+0x38e>
    3480cee7:	f2 0f 58 05 91 82 00 	addsd  0x8291(%rip),%xmm0        # 34815180 <sysconf.values+0x2a0>
    3480ceee:	00 
    3480ceef:	f2 0f 10 0d 91 82 00 	movsd  0x8291(%rip),%xmm1        # 34815188 <sysconf.values+0x2a8>
    3480cef6:	00 
    3480cef7:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480cefb:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480ceff:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480cf05:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480cf09:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480cf0d:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480cf14:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3480cf19:	e9 eb 01 00 00       	jmpq   3480d109 <__rem_pio2+0x279>
    3480cf1e:	81 fa 3b 46 1c 40    	cmp    $0x401c463b,%edx
    3480cf24:	0f 87 57 00 00 00    	ja     3480cf81 <__rem_pio2+0xf1>
    3480cf2a:	81 fa bc fd 15 40    	cmp    $0x4015fdbc,%edx
    3480cf30:	0f 87 ba 00 00 00    	ja     3480cff0 <__rem_pio2+0x160>
    3480cf36:	81 fa 7c d9 12 40    	cmp    $0x4012d97c,%edx
    3480cf3c:	0f 84 ba 00 00 00    	je     3480cffc <__rem_pio2+0x16c>
    3480cf42:	85 db                	test   %ebx,%ebx
    3480cf44:	0f 84 42 03 00 00    	je     3480d28c <__rem_pio2+0x3fc>
    3480cf4a:	f2 0f 58 05 de 81 00 	addsd  0x81de(%rip),%xmm0        # 34815130 <sysconf.values+0x250>
    3480cf51:	00 
    3480cf52:	f2 0f 10 0d de 81 00 	movsd  0x81de(%rip),%xmm1        # 34815138 <sysconf.values+0x258>
    3480cf59:	00 
    3480cf5a:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480cf5e:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480cf62:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480cf68:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480cf6c:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480cf70:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480cf77:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3480cf7c:	e9 88 01 00 00       	jmpq   3480d109 <__rem_pio2+0x279>
    3480cf81:	81 fa fa 21 39 41    	cmp    $0x413921fa,%edx
    3480cf87:	0f 86 6f 00 00 00    	jbe    3480cffc <__rem_pio2+0x16c>
    3480cf8d:	81 fa 00 00 f0 7f    	cmp    $0x7ff00000,%edx
    3480cf93:	0f 82 78 01 00 00    	jb     3480d111 <__rem_pio2+0x281>
    3480cf99:	f2 0f 5c c0          	subsd  %xmm0,%xmm0
    3480cf9d:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480cfa4:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    3480cfaa:	31 c0                	xor    %eax,%eax
    3480cfac:	e9 58 01 00 00       	jmpq   3480d109 <__rem_pio2+0x279>
    3480cfb1:	85 db                	test   %ebx,%ebx
    3480cfb3:	0f 84 9c 02 00 00    	je     3480d255 <__rem_pio2+0x3c5>
    3480cfb9:	f2 0f 58 05 9f 81 00 	addsd  0x819f(%rip),%xmm0        # 34815160 <sysconf.values+0x280>
    3480cfc0:	00 
    3480cfc1:	f2 0f 10 0d 9f 81 00 	movsd  0x819f(%rip),%xmm1        # 34815168 <sysconf.values+0x288>
    3480cfc8:	00 
    3480cfc9:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480cfcd:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480cfd1:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480cfd7:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480cfdb:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480cfdf:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480cfe6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    3480cfeb:	e9 19 01 00 00       	jmpq   3480d109 <__rem_pio2+0x279>
    3480cff0:	81 fa fb 21 19 40    	cmp    $0x401921fb,%edx
    3480cff6:	0f 85 e3 01 00 00    	jne    3480d1df <__rem_pio2+0x34f>
    3480cffc:	f2 0f 10 0d 8c 81 00 	movsd  0x818c(%rip),%xmm1        # 34815190 <sysconf.values+0x2b0>
    3480d003:	00 
    3480d004:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480d008:	f2 0f 58 0d 88 81 00 	addsd  0x8188(%rip),%xmm1        # 34815198 <sysconf.values+0x2b8>
    3480d00f:	00 
    3480d010:	f2 0f 58 0d 88 81 00 	addsd  0x8188(%rip),%xmm1        # 348151a0 <sysconf.values+0x2c0>
    3480d017:	00 
    3480d018:	f2 0f 10 15 50 81 00 	movsd  0x8150(%rip),%xmm2        # 34815170 <sysconf.values+0x290>
    3480d01f:	00 
    3480d020:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    3480d024:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    3480d028:	f2 0f 10 05 58 81 00 	movsd  0x8158(%rip),%xmm0        # 34815188 <sysconf.values+0x2a8>
    3480d02f:	00 
    3480d030:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    3480d034:	66 0f 28 da          	movapd %xmm2,%xmm3
    3480d038:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    3480d03c:	f2 41 0f 11 1c 24    	movsd  %xmm3,(%r12)
    3480d042:	66 48 0f 7e d8       	movq   %xmm3,%rax
    3480d047:	48 c1 e8 34          	shr    $0x34,%rax
    3480d04b:	25 ff 07 00 00       	and    $0x7ff,%eax
    3480d050:	c1 ea 14             	shr    $0x14,%edx
    3480d053:	89 d1                	mov    %edx,%ecx
    3480d055:	29 c1                	sub    %eax,%ecx
    3480d057:	83 f9 11             	cmp    $0x11,%ecx
    3480d05a:	0f 8c 96 00 00 00    	jl     3480d0f6 <__rem_pio2+0x266>
    3480d060:	f2 0f 10 1d 40 81 00 	movsd  0x8140(%rip),%xmm3        # 348151a8 <sysconf.values+0x2c8>
    3480d067:	00 
    3480d068:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
    3480d06c:	66 0f 28 e2          	movapd %xmm2,%xmm4
    3480d070:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    3480d074:	f2 0f 10 05 34 81 00 	movsd  0x8134(%rip),%xmm0        # 348151b0 <sysconf.values+0x2d0>
    3480d07b:	00 
    3480d07c:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    3480d080:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
    3480d084:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480d088:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d08c:	66 0f 28 dc          	movapd %xmm4,%xmm3
    3480d090:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    3480d094:	f2 41 0f 11 1c 24    	movsd  %xmm3,(%r12)
    3480d09a:	66 48 0f 7e d8       	movq   %xmm3,%rax
    3480d09f:	48 c1 e8 34          	shr    $0x34,%rax
    3480d0a3:	25 ff 07 00 00       	and    $0x7ff,%eax
    3480d0a8:	29 c2                	sub    %eax,%edx
    3480d0aa:	83 fa 32             	cmp    $0x32,%edx
    3480d0ad:	0f 8c 3f 00 00 00    	jl     3480d0f2 <__rem_pio2+0x262>
    3480d0b3:	f2 0f 10 1d fd 80 00 	movsd  0x80fd(%rip),%xmm3        # 348151b8 <sysconf.values+0x2d8>
    3480d0ba:	00 
    3480d0bb:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
    3480d0bf:	66 0f 28 d4          	movapd %xmm4,%xmm2
    3480d0c3:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480d0c7:	f2 0f 10 05 f1 80 00 	movsd  0x80f1(%rip),%xmm0        # 348151c0 <sysconf.values+0x2e0>
    3480d0ce:	00 
    3480d0cf:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    3480d0d3:	f2 0f 5c e2          	subsd  %xmm2,%xmm4
    3480d0d7:	f2 0f 5c e3          	subsd  %xmm3,%xmm4
    3480d0db:	f2 0f 5c c4          	subsd  %xmm4,%xmm0
    3480d0df:	66 0f 28 da          	movapd %xmm2,%xmm3
    3480d0e3:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
    3480d0e7:	f2 41 0f 11 1c 24    	movsd  %xmm3,(%r12)
    3480d0ed:	e9 04 00 00 00       	jmpq   3480d0f6 <__rem_pio2+0x266>
    3480d0f2:	66 0f 28 d4          	movapd %xmm4,%xmm2
    3480d0f6:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    3480d0fa:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480d0fe:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
    3480d102:	f2 41 0f 11 54 24 08 	movsd  %xmm2,0x8(%r12)
    3480d109:	48 83 c4 28          	add    $0x28,%rsp
    3480d10d:	5b                   	pop    %rbx
    3480d10e:	41 5c                	pop    %r12
    3480d110:	c3                   	retq   
    3480d111:	48 b9 ff ff ff ff ff 	movabs $0xfffffffffffff,%rcx
    3480d118:	ff 0f 00 
    3480d11b:	48 21 c8             	and    %rcx,%rax
    3480d11e:	48 b9 00 00 00 00 00 	movabs $0x4160000000000000,%rcx
    3480d125:	00 60 41 
    3480d128:	48 09 c1             	or     %rax,%rcx
    3480d12b:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    3480d130:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    3480d134:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480d137:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    3480d13b:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    3480d141:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    3480d145:	f2 0f 10 05 bb 7f 00 	movsd  0x7fbb(%rip),%xmm0        # 34815108 <sysconf.values+0x228>
    3480d14c:	00 
    3480d14d:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480d151:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    3480d155:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
    3480d159:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    3480d15f:	f2 0f 5c ca          	subsd  %xmm2,%xmm1
    3480d163:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480d167:	f2 0f 11 4c 24 20    	movsd  %xmm1,0x20(%rsp)
    3480d16d:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d171:	b9 02 00 00 00       	mov    $0x2,%ecx
    3480d176:	e9 0e 00 00 00       	jmpq   3480d189 <__rem_pio2+0x2f9>
    3480d17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480d180:	f2 0f 10 4c cc 08    	movsd  0x8(%rsp,%rcx,8),%xmm1
    3480d186:	48 ff c9             	dec    %rcx
    3480d189:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
    3480d18d:	0f 85 06 00 00 00    	jne    3480d199 <__rem_pio2+0x309>
    3480d193:	0f 8b e7 ff ff ff    	jnp    3480d180 <__rem_pio2+0x2f0>
    3480d199:	c1 ea 14             	shr    $0x14,%edx
    3480d19c:	81 c2 ea fb ff ff    	add    $0xfffffbea,%edx
    3480d1a2:	ff c1                	inc    %ecx
    3480d1a4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    3480d1a9:	48 89 e6             	mov    %rsp,%rsi
    3480d1ac:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    3480d1b2:	e8 59 01 00 00       	callq  3480d310 <__rem_pio2_large>
    3480d1b7:	85 db                	test   %ebx,%ebx
    3480d1b9:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
    3480d1be:	0f 84 ff 00 00 00    	je     3480d2c3 <__rem_pio2+0x433>
    3480d1c4:	66 0f 16 44 24 08    	movhpd 0x8(%rsp),%xmm0
    3480d1ca:	66 0f 57 05 4e 66 00 	xorpd  0x664e(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480d1d1:	00 
    3480d1d2:	66 41 0f 11 04 24    	movupd %xmm0,(%r12)
    3480d1d8:	f7 d8                	neg    %eax
    3480d1da:	e9 2a ff ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d1df:	85 db                	test   %ebx,%ebx
    3480d1e1:	0f 84 f1 00 00 00    	je     3480d2d8 <__rem_pio2+0x448>
    3480d1e7:	f2 0f 58 05 21 7f 00 	addsd  0x7f21(%rip),%xmm0        # 34815110 <sysconf.values+0x230>
    3480d1ee:	00 
    3480d1ef:	f2 0f 10 0d 21 7f 00 	movsd  0x7f21(%rip),%xmm1        # 34815118 <sysconf.values+0x238>
    3480d1f6:	00 
    3480d1f7:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d1fb:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d1ff:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480d205:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d209:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d20d:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480d214:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    3480d219:	e9 eb fe ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d21e:	f2 0f 58 05 4a 7f 00 	addsd  0x7f4a(%rip),%xmm0        # 34815170 <sysconf.values+0x290>
    3480d225:	00 
    3480d226:	f2 0f 10 0d 4a 7f 00 	movsd  0x7f4a(%rip),%xmm1        # 34815178 <sysconf.values+0x298>
    3480d22d:	00 
    3480d22e:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d232:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d236:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480d23c:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d240:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d244:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480d24b:	b8 01 00 00 00       	mov    $0x1,%eax
    3480d250:	e9 b4 fe ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d255:	f2 0f 58 05 f3 7e 00 	addsd  0x7ef3(%rip),%xmm0        # 34815150 <sysconf.values+0x270>
    3480d25c:	00 
    3480d25d:	f2 0f 10 0d f3 7e 00 	movsd  0x7ef3(%rip),%xmm1        # 34815158 <sysconf.values+0x278>
    3480d264:	00 
    3480d265:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d269:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d26d:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480d273:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d277:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d27b:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480d282:	b8 02 00 00 00       	mov    $0x2,%eax
    3480d287:	e9 7d fe ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d28c:	f2 0f 58 05 ac 7e 00 	addsd  0x7eac(%rip),%xmm0        # 34815140 <sysconf.values+0x260>
    3480d293:	00 
    3480d294:	f2 0f 10 0d ac 7e 00 	movsd  0x7eac(%rip),%xmm1        # 34815148 <sysconf.values+0x268>
    3480d29b:	00 
    3480d29c:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d2a0:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d2a4:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480d2aa:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d2ae:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d2b2:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480d2b9:	b8 03 00 00 00       	mov    $0x3,%eax
    3480d2be:	e9 46 fe ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d2c3:	f2 41 0f 11 04 24    	movsd  %xmm0,(%r12)
    3480d2c9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480d2ce:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    3480d2d3:	e9 31 fe ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d2d8:	f2 0f 58 05 40 7e 00 	addsd  0x7e40(%rip),%xmm0        # 34815120 <sysconf.values+0x240>
    3480d2df:	00 
    3480d2e0:	f2 0f 10 0d 40 7e 00 	movsd  0x7e40(%rip),%xmm1        # 34815128 <sysconf.values+0x248>
    3480d2e7:	00 
    3480d2e8:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d2ec:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d2f0:	f2 41 0f 11 14 24    	movsd  %xmm2,(%r12)
    3480d2f6:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480d2fa:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d2fe:	f2 41 0f 11 44 24 08 	movsd  %xmm0,0x8(%r12)
    3480d305:	b8 04 00 00 00       	mov    $0x4,%eax
    3480d30a:	e9 fa fd ff ff       	jmpq   3480d109 <__rem_pio2+0x279>
    3480d30f:	90                   	nop

000000003480d310 <__rem_pio2_large>:
    3480d310:	41 54                	push   %r12
    3480d312:	53                   	push   %rbx
    3480d313:	48 81 ec d8 02 00 00 	sub    $0x2d8,%rsp
    3480d31a:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
    3480d31f:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    3480d324:	4c 89 84 24 d0 00 00 	mov    %r8,0xd0(%rsp)
    3480d32b:	00 
    3480d32c:	49 63 c0             	movslq %r8d,%rax
    3480d32f:	48 8d 35 ba 7e 00 00 	lea    0x7eba(%rip),%rsi        # 348151f0 <init_jk>
    3480d336:	44 8b 24 86          	mov    (%rsi,%rax,4),%r12d
    3480d33a:	44 8d 41 ff          	lea    -0x1(%rcx),%r8d
    3480d33e:	8d 42 fd             	lea    -0x3(%rdx),%eax
    3480d341:	48 98                	cltq   
    3480d343:	48 69 d8 ab aa aa 2a 	imul   $0x2aaaaaab,%rax,%rbx
    3480d34a:	48 89 d8             	mov    %rbx,%rax
    3480d34d:	48 c1 e8 3f          	shr    $0x3f,%rax
    3480d351:	48 c1 fb 22          	sar    $0x22,%rbx
    3480d355:	31 f6                	xor    %esi,%esi
    3480d357:	01 c3                	add    %eax,%ebx
    3480d359:	0f 48 de             	cmovs  %esi,%ebx
    3480d35c:	44 6b d3 e8          	imul   $0xffffffe8,%ebx,%r10d
    3480d360:	44 89 e0             	mov    %r12d,%eax
    3480d363:	44 01 c0             	add    %r8d,%eax
    3480d366:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    3480d36b:	0f 88 cb 00 00 00    	js     3480d43c <__rem_pio2_large+0x12c>
    3480d371:	89 d8                	mov    %ebx,%eax
    3480d373:	44 29 c0             	sub    %r8d,%eax
    3480d376:	4c 63 d8             	movslq %eax,%r11
    3480d379:	41 8d 3c 0c          	lea    (%r12,%rcx,1),%edi
    3480d37d:	41 89 f9             	mov    %edi,%r9d
    3480d380:	41 83 e1 01          	and    $0x1,%r9d
    3480d384:	83 ff 01             	cmp    $0x1,%edi
    3480d387:	0f 85 29 00 00 00    	jne    3480d3b6 <__rem_pio2_large+0xa6>
    3480d38d:	31 f6                	xor    %esi,%esi
    3480d38f:	4d 85 c9             	test   %r9,%r9
    3480d392:	0f 84 a4 00 00 00    	je     3480d43c <__rem_pio2_large+0x12c>
    3480d398:	4d 85 db             	test   %r11,%r11
    3480d39b:	0f 88 8e 00 00 00    	js     3480d42f <__rem_pio2_large+0x11f>
    3480d3a1:	48 8d 05 58 7e 00 00 	lea    0x7e58(%rip),%rax        # 34815200 <ipio2>
    3480d3a8:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480d3ab:	f2 42 0f 2a 04 98    	cvtsi2sdl (%rax,%r11,4),%xmm0
    3480d3b1:	e9 7d 00 00 00       	jmpq   3480d433 <__rem_pio2_large+0x123>
    3480d3b6:	4c 29 cf             	sub    %r9,%rdi
    3480d3b9:	48 8d 05 40 7e 00 00 	lea    0x7e40(%rip),%rax        # 34815200 <ipio2>
    3480d3c0:	4a 8d 5c 98 04       	lea    0x4(%rax,%r11,4),%rbx
    3480d3c5:	31 f6                	xor    %esi,%esi
    3480d3c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3480d3ce:	00 00 
    3480d3d0:	4c 89 d8             	mov    %r11,%rax
    3480d3d3:	48 01 f0             	add    %rsi,%rax
    3480d3d6:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d3da:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480d3de:	0f 88 09 00 00 00    	js     3480d3ed <__rem_pio2_large+0xdd>
    3480d3e4:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480d3e7:	f2 0f 2a 4c b3 fc    	cvtsi2sdl -0x4(%rbx,%rsi,4),%xmm1
    3480d3ed:	f2 0f 11 8c f4 90 01 	movsd  %xmm1,0x190(%rsp,%rsi,8)
    3480d3f4:	00 00 
    3480d3f6:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3480d3fa:	0f 8c 08 00 00 00    	jl     3480d408 <__rem_pio2_large+0xf8>
    3480d400:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480d403:	f2 0f 2a 04 b3       	cvtsi2sdl (%rbx,%rsi,4),%xmm0
    3480d408:	f2 0f 11 84 f4 98 01 	movsd  %xmm0,0x198(%rsp,%rsi,8)
    3480d40f:	00 00 
    3480d411:	48 83 c6 02          	add    $0x2,%rsi
    3480d415:	48 39 f7             	cmp    %rsi,%rdi
    3480d418:	0f 85 b2 ff ff ff    	jne    3480d3d0 <__rem_pio2_large+0xc0>
    3480d41e:	49 01 f3             	add    %rsi,%r11
    3480d421:	4d 85 c9             	test   %r9,%r9
    3480d424:	0f 85 6e ff ff ff    	jne    3480d398 <__rem_pio2_large+0x88>
    3480d42a:	e9 0d 00 00 00       	jmpq   3480d43c <__rem_pio2_large+0x12c>
    3480d42f:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d433:	f2 0f 11 84 f4 90 01 	movsd  %xmm0,0x190(%rsp,%rsi,8)
    3480d43a:	00 00 
    3480d43c:	4c 89 64 24 60       	mov    %r12,0x60(%rsp)
    3480d441:	49 63 c4             	movslq %r12d,%rax
    3480d444:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3480d449:	48 89 d0             	mov    %rdx,%rax
    3480d44c:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    3480d453:	00 
    3480d454:	4c 89 94 24 c0 00 00 	mov    %r10,0xc0(%rsp)
    3480d45b:	00 
    3480d45c:	42 8d 7c 12 e8       	lea    -0x18(%rdx,%r10,1),%edi
    3480d461:	44 89 c3             	mov    %r8d,%ebx
    3480d464:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    3480d469:	41 89 cc             	mov    %ecx,%r12d
    3480d46c:	44 89 e0             	mov    %r12d,%eax
    3480d46f:	83 e0 01             	and    $0x1,%eax
    3480d472:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    3480d477:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3480d47c:	49 29 c4             	sub    %rax,%r12
    3480d47f:	48 89 d8             	mov    %rbx,%rax
    3480d482:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3480d487:	48 c1 e3 20          	shl    $0x20,%rbx
    3480d48b:	31 c9                	xor    %ecx,%ecx
    3480d48d:	49 ba 00 00 00 00 ff 	movabs $0xffffffff00000000,%r10
    3480d494:	ff ff ff 
    3480d497:	48 ba 00 00 00 00 fe 	movabs $0xfffffffe00000000,%rdx
    3480d49e:	ff ff ff 
    3480d4a1:	89 7c 24 14          	mov    %edi,0x14(%rsp)
    3480d4a5:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    3480d4aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480d4b0:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480d4b5:	85 c0                	test   %eax,%eax
    3480d4b7:	0f 8e 23 00 00 00    	jle    3480d4e0 <__rem_pio2_large+0x1d0>
    3480d4bd:	83 f8 01             	cmp    $0x1,%eax
    3480d4c0:	0f 85 2a 00 00 00    	jne    3480d4f0 <__rem_pio2_large+0x1e0>
    3480d4c6:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d4ca:	31 f6                	xor    %esi,%esi
    3480d4cc:	e9 7a 00 00 00       	jmpq   3480d54b <__rem_pio2_large+0x23b>
    3480d4d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480d4d8:	0f 1f 84 00 00 00 00 
    3480d4df:	00 
    3480d4e0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d4e4:	e9 98 00 00 00       	jmpq   3480d581 <__rem_pio2_large+0x271>
    3480d4e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3480d4f0:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480d4f4:	49 89 d9             	mov    %rbx,%r9
    3480d4f7:	31 f6                	xor    %esi,%esi
    3480d4f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3480d500:	4d 89 c8             	mov    %r9,%r8
    3480d503:	49 c1 f8 1d          	sar    $0x1d,%r8
    3480d507:	f2 41 0f 10 14 f3    	movsd  (%r11,%rsi,8),%xmm2
    3480d50d:	f2 41 0f 10 44 f3 08 	movsd  0x8(%r11,%rsi,8),%xmm0
    3480d514:	f2 42 0f 59 94 04 90 	mulsd  0x190(%rsp,%r8,1),%xmm2
    3480d51b:	01 00 00 
    3480d51e:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d522:	4b 8d 04 11          	lea    (%r9,%r10,1),%rax
    3480d526:	48 c1 f8 1d          	sar    $0x1d,%rax
    3480d52a:	f2 0f 59 84 04 90 01 	mulsd  0x190(%rsp,%rax,1),%xmm0
    3480d531:	00 00 
    3480d533:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
    3480d537:	48 83 c6 02          	add    $0x2,%rsi
    3480d53b:	49 01 d1             	add    %rdx,%r9
    3480d53e:	49 39 f4             	cmp    %rsi,%r12
    3480d541:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480d545:	0f 85 b5 ff ff ff    	jne    3480d500 <__rem_pio2_large+0x1f0>
    3480d54b:	48 83 7c 24 48 00    	cmpq   $0x0,0x48(%rsp)
    3480d551:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480d555:	0f 84 26 00 00 00    	je     3480d581 <__rem_pio2_large+0x271>
    3480d55b:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    3480d560:	4c 8d 04 01          	lea    (%rcx,%rax,1),%r8
    3480d564:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3480d569:	f2 0f 10 0c f0       	movsd  (%rax,%rsi,8),%xmm1
    3480d56e:	41 29 f0             	sub    %esi,%r8d
    3480d571:	49 63 c0             	movslq %r8d,%rax
    3480d574:	f2 0f 59 8c c4 90 01 	mulsd  0x190(%rsp,%rax,8),%xmm1
    3480d57b:	00 00 
    3480d57d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480d581:	f2 0f 11 84 cc 30 02 	movsd  %xmm0,0x230(%rsp,%rcx,8)
    3480d588:	00 00 
    3480d58a:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
    3480d591:	00 00 00 
    3480d594:	48 01 c3             	add    %rax,%rbx
    3480d597:	48 3b 4c 24 18       	cmp    0x18(%rsp),%rcx
    3480d59c:	48 8d 49 01          	lea    0x1(%rcx),%rcx
    3480d5a0:	0f 8c 0a ff ff ff    	jl     3480d4b0 <__rem_pio2_large+0x1a0>
    3480d5a6:	b8 18 00 00 00       	mov    $0x18,%eax
    3480d5ab:	29 f8                	sub    %edi,%eax
    3480d5ad:	89 44 24 54          	mov    %eax,0x54(%rsp)
    3480d5b1:	b8 17 00 00 00       	mov    $0x17,%eax
    3480d5b6:	29 f8                	sub    %edi,%eax
    3480d5b8:	89 44 24 50          	mov    %eax,0x50(%rsp)
    3480d5bc:	8b 44 24 38          	mov    0x38(%rsp),%eax
    3480d5c0:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3480d5c5:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    3480d5ca:	89 d1                	mov    %edx,%ecx
    3480d5cc:	83 e1 03             	and    $0x3,%ecx
    3480d5cf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    3480d5d4:	48 8d 44 84 6c       	lea    0x6c(%rsp,%rax,4),%rax
    3480d5d9:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    3480d5e0:	00 
    3480d5e1:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    3480d5e6:	48 8d 40 18          	lea    0x18(%rax),%rax
    3480d5ea:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
    3480d5f1:	00 
    3480d5f2:	49 89 cc             	mov    %rcx,%r12
    3480d5f5:	49 29 d4             	sub    %rdx,%r12
    3480d5f8:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    3480d5fc:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3480d601:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
    3480d606:	48 f7 d9             	neg    %rcx
    3480d609:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    3480d60e:	f2 0f 10 35 b2 7b 00 	movsd  0x7bb2(%rip),%xmm6        # 348151c8 <sysconf.values+0x2e8>
    3480d615:	00 
    3480d616:	f2 0f 10 3d b2 7b 00 	movsd  0x7bb2(%rip),%xmm7        # 348151d0 <sysconf.values+0x2f0>
    3480d61d:	00 
    3480d61e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480d623:	89 c1                	mov    %eax,%ecx
    3480d625:	e9 36 00 00 00       	jmpq   3480d660 <__rem_pio2_large+0x350>
    3480d62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480d630:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480d634:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    3480d638:	e9 23 00 00 00       	jmpq   3480d660 <__rem_pio2_large+0x350>
    3480d63d:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d641:	31 ff                	xor    %edi,%edi
    3480d643:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480d647:	4d 85 c9             	test   %r9,%r9
    3480d64a:	0f 85 f5 03 00 00    	jne    3480da45 <__rem_pio2_large+0x735>
    3480d650:	e9 16 04 00 00       	jmpq   3480da6b <__rem_pio2_large+0x75b>
    3480d655:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480d65c:	00 00 00 00 
    3480d660:	89 cb                	mov    %ecx,%ebx
    3480d662:	48 63 c3             	movslq %ebx,%rax
    3480d665:	f2 0f 10 8c c4 30 02 	movsd  0x230(%rsp,%rax,8),%xmm1
    3480d66c:	00 00 
    3480d66e:	85 c0                	test   %eax,%eax
    3480d670:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3480d675:	0f 8e 65 00 00 00    	jle    3480d6e0 <__rem_pio2_large+0x3d0>
    3480d67b:	48 ff c0             	inc    %rax
    3480d67e:	48 8d 4c 24 70       	lea    0x70(%rsp),%rcx
    3480d683:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480d68a:	84 00 00 00 00 00 
    3480d690:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480d694:	f2 0f 59 c6          	mulsd  %xmm6,%xmm0
    3480d698:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
    3480d69c:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480d69f:	f2 0f 2a c2          	cvtsi2sd %edx,%xmm0
    3480d6a3:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d6a7:	f2 0f 59 d7          	mulsd  %xmm7,%xmm2
    3480d6ab:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480d6af:	f2 0f 2c d2          	cvttsd2si %xmm2,%edx
    3480d6b3:	89 11                	mov    %edx,(%rcx)
    3480d6b5:	f2 0f 58 84 c4 20 02 	addsd  0x220(%rsp,%rax,8),%xmm0
    3480d6bc:	00 00 
    3480d6be:	48 83 c1 04          	add    $0x4,%rcx
    3480d6c2:	48 ff c8             	dec    %rax
    3480d6c5:	48 83 f8 01          	cmp    $0x1,%rax
    3480d6c9:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480d6cd:	0f 8f bd ff ff ff    	jg     3480d690 <__rem_pio2_large+0x380>
    3480d6d3:	e9 0c 00 00 00       	jmpq   3480d6e4 <__rem_pio2_large+0x3d4>
    3480d6d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480d6df:	00 
    3480d6e0:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480d6e4:	e8 d7 e9 ff ff       	callq  3480c0c0 <scalbn>
    3480d6e9:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    3480d6ef:	f2 0f 59 05 c9 60 00 	mulsd  0x60c9(%rip),%xmm0        # 348137c0 <DoEmFloatIteration.jtable+0x8a0>
    3480d6f6:	00 
    3480d6f7:	e8 94 0a 00 00       	callq  3480e190 <floor>
    3480d6fc:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480d700:	85 ff                	test   %edi,%edi
    3480d702:	f2 0f 59 05 ce 7a 00 	mulsd  0x7ace(%rip),%xmm0        # 348151d8 <sysconf.values+0x2f8>
    3480d709:	00 
    3480d70a:	f2 0f 58 44 24 08    	addsd  0x8(%rsp),%xmm0
    3480d710:	f2 44 0f 2c d8       	cvttsd2si %xmm0,%r11d
    3480d715:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480d718:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
    3480d71d:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3480d721:	0f 8e 79 00 00 00    	jle    3480d7a0 <__rem_pio2_large+0x490>
    3480d727:	48 63 c3             	movslq %ebx,%rax
    3480d72a:	44 8b 4c 84 6c       	mov    0x6c(%rsp,%rax,4),%r9d
    3480d72f:	44 89 ca             	mov    %r9d,%edx
    3480d732:	8b 4c 24 54          	mov    0x54(%rsp),%ecx
    3480d736:	d3 fa                	sar    %cl,%edx
    3480d738:	41 01 d3             	add    %edx,%r11d
    3480d73b:	d3 e2                	shl    %cl,%edx
    3480d73d:	41 29 d1             	sub    %edx,%r9d
    3480d740:	44 89 4c 84 6c       	mov    %r9d,0x6c(%rsp,%rax,4)
    3480d745:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
    3480d749:	41 d3 f9             	sar    %cl,%r9d
    3480d74c:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    3480d751:	f2 0f 10 35 6f 7a 00 	movsd  0x7a6f(%rip),%xmm6        # 348151c8 <sysconf.values+0x2e8>
    3480d758:	00 
    3480d759:	f2 0f 10 3d 6f 7a 00 	movsd  0x7a6f(%rip),%xmm7        # 348151d0 <sysconf.values+0x2f0>
    3480d760:	00 
    3480d761:	f2 0f 10 0d f7 57 00 	movsd  0x57f7(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480d768:	00 
    3480d769:	45 85 c9             	test   %r9d,%r9d
    3480d76c:	0f 8e ee 01 00 00    	jle    3480d960 <__rem_pio2_large+0x650>
    3480d772:	48 89 d8             	mov    %rbx,%rax
    3480d775:	85 c0                	test   %eax,%eax
    3480d777:	0f 8e 43 01 00 00    	jle    3480d8c0 <__rem_pio2_large+0x5b0>
    3480d77d:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    3480d782:	41 89 c1             	mov    %eax,%r9d
    3480d785:	45 89 c8             	mov    %r9d,%r8d
    3480d788:	41 83 e0 01          	and    $0x1,%r8d
    3480d78c:	83 f8 01             	cmp    $0x1,%eax
    3480d78f:	0f 85 4c 00 00 00    	jne    3480d7e1 <__rem_pio2_large+0x4d1>
    3480d795:	31 c9                	xor    %ecx,%ecx
    3480d797:	31 c0                	xor    %eax,%eax
    3480d799:	e9 c1 00 00 00       	jmpq   3480d85f <__rem_pio2_large+0x54f>
    3480d79e:	66 90                	xchg   %ax,%ax
    3480d7a0:	85 ff                	test   %edi,%edi
    3480d7a2:	0f 84 27 01 00 00    	je     3480d8cf <__rem_pio2_large+0x5bf>
    3480d7a8:	41 b9 02 00 00 00    	mov    $0x2,%r9d
    3480d7ae:	66 0f 2e 05 d2 5f 00 	ucomisd 0x5fd2(%rip),%xmm0        # 34813788 <DoEmFloatIteration.jtable+0x868>
    3480d7b5:	00 
    3480d7b6:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    3480d7bb:	f2 0f 10 35 05 7a 00 	movsd  0x7a05(%rip),%xmm6        # 348151c8 <sysconf.values+0x2e8>
    3480d7c2:	00 
    3480d7c3:	f2 0f 10 3d 05 7a 00 	movsd  0x7a05(%rip),%xmm7        # 348151d0 <sysconf.values+0x2f0>
    3480d7ca:	00 
    3480d7cb:	f2 0f 10 0d 8d 57 00 	movsd  0x578d(%rip),%xmm1        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480d7d2:	00 
    3480d7d3:	0f 83 99 ff ff ff    	jae    3480d772 <__rem_pio2_large+0x462>
    3480d7d9:	45 31 c9             	xor    %r9d,%r9d
    3480d7dc:	e9 7f 01 00 00       	jmpq   3480d960 <__rem_pio2_large+0x650>
    3480d7e1:	4d 29 c1             	sub    %r8,%r9
    3480d7e4:	31 c9                	xor    %ecx,%ecx
    3480d7e6:	31 c0                	xor    %eax,%eax
    3480d7e8:	e9 13 00 00 00       	jmpq   3480d800 <__rem_pio2_large+0x4f0>
    3480d7ed:	31 c0                	xor    %eax,%eax
    3480d7ef:	e9 35 00 00 00       	jmpq   3480d829 <__rem_pio2_large+0x519>
    3480d7f4:	31 c0                	xor    %eax,%eax
    3480d7f6:	e9 57 00 00 00       	jmpq   3480d852 <__rem_pio2_large+0x542>
    3480d7fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480d800:	8b 74 8c 70          	mov    0x70(%rsp,%rcx,4),%esi
    3480d804:	ba ff ff ff 00       	mov    $0xffffff,%edx
    3480d809:	85 c0                	test   %eax,%eax
    3480d80b:	0f 85 12 00 00 00    	jne    3480d823 <__rem_pio2_large+0x513>
    3480d811:	85 f6                	test   %esi,%esi
    3480d813:	0f 84 d4 ff ff ff    	je     3480d7ed <__rem_pio2_large+0x4dd>
    3480d819:	ba 00 00 00 01       	mov    $0x1000000,%edx
    3480d81e:	b8 01 00 00 00       	mov    $0x1,%eax
    3480d823:	29 f2                	sub    %esi,%edx
    3480d825:	89 54 8c 70          	mov    %edx,0x70(%rsp,%rcx,4)
    3480d829:	8b 74 8c 74          	mov    0x74(%rsp,%rcx,4),%esi
    3480d82d:	ba ff ff ff 00       	mov    $0xffffff,%edx
    3480d832:	85 c0                	test   %eax,%eax
    3480d834:	0f 85 12 00 00 00    	jne    3480d84c <__rem_pio2_large+0x53c>
    3480d83a:	85 f6                	test   %esi,%esi
    3480d83c:	0f 84 b2 ff ff ff    	je     3480d7f4 <__rem_pio2_large+0x4e4>
    3480d842:	ba 00 00 00 01       	mov    $0x1000000,%edx
    3480d847:	b8 01 00 00 00       	mov    $0x1,%eax
    3480d84c:	29 f2                	sub    %esi,%edx
    3480d84e:	89 54 8c 74          	mov    %edx,0x74(%rsp,%rcx,4)
    3480d852:	48 83 c1 02          	add    $0x2,%rcx
    3480d856:	49 39 c9             	cmp    %rcx,%r9
    3480d859:	0f 85 a1 ff ff ff    	jne    3480d800 <__rem_pio2_large+0x4f0>
    3480d85f:	4d 85 c0             	test   %r8,%r8
    3480d862:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    3480d867:	0f 84 29 00 00 00    	je     3480d896 <__rem_pio2_large+0x586>
    3480d86d:	8b 54 8c 70          	mov    0x70(%rsp,%rcx,4),%edx
    3480d871:	be ff ff ff 00       	mov    $0xffffff,%esi
    3480d876:	85 c0                	test   %eax,%eax
    3480d878:	0f 85 12 00 00 00    	jne    3480d890 <__rem_pio2_large+0x580>
    3480d87e:	85 d2                	test   %edx,%edx
    3480d880:	0f 84 3a 00 00 00    	je     3480d8c0 <__rem_pio2_large+0x5b0>
    3480d886:	be 00 00 00 01       	mov    $0x1000000,%esi
    3480d88b:	b8 01 00 00 00       	mov    $0x1,%eax
    3480d890:	29 d6                	sub    %edx,%esi
    3480d892:	89 74 8c 70          	mov    %esi,0x70(%rsp,%rcx,4)
    3480d896:	85 ff                	test   %edi,%edi
    3480d898:	0f 8e 4e 00 00 00    	jle    3480d8ec <__rem_pio2_large+0x5dc>
    3480d89e:	83 ff 01             	cmp    $0x1,%edi
    3480d8a1:	0f 84 39 00 00 00    	je     3480d8e0 <__rem_pio2_large+0x5d0>
    3480d8a7:	83 ff 02             	cmp    $0x2,%edi
    3480d8aa:	0f 85 3c 00 00 00    	jne    3480d8ec <__rem_pio2_large+0x5dc>
    3480d8b0:	b9 ff ff 3f 00       	mov    $0x3fffff,%ecx
    3480d8b5:	e9 2b 00 00 00       	jmpq   3480d8e5 <__rem_pio2_large+0x5d5>
    3480d8ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480d8c0:	31 c0                	xor    %eax,%eax
    3480d8c2:	85 ff                	test   %edi,%edi
    3480d8c4:	0f 8f d4 ff ff ff    	jg     3480d89e <__rem_pio2_large+0x58e>
    3480d8ca:	e9 1d 00 00 00       	jmpq   3480d8ec <__rem_pio2_large+0x5dc>
    3480d8cf:	48 63 c3             	movslq %ebx,%rax
    3480d8d2:	44 8b 4c 84 6c       	mov    0x6c(%rsp,%rax,4),%r9d
    3480d8d7:	41 c1 f9 17          	sar    $0x17,%r9d
    3480d8db:	e9 6c fe ff ff       	jmpq   3480d74c <__rem_pio2_large+0x43c>
    3480d8e0:	b9 ff ff 7f 00       	mov    $0x7fffff,%ecx
    3480d8e5:	48 63 d3             	movslq %ebx,%rdx
    3480d8e8:	21 4c 94 6c          	and    %ecx,0x6c(%rsp,%rdx,4)
    3480d8ec:	41 ff c3             	inc    %r11d
    3480d8ef:	41 83 f9 02          	cmp    $0x2,%r9d
    3480d8f3:	0f 85 67 00 00 00    	jne    3480d960 <__rem_pio2_large+0x650>
    3480d8f9:	66 0f 28 d1          	movapd %xmm1,%xmm2
    3480d8fd:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
    3480d901:	41 b9 02 00 00 00    	mov    $0x2,%r9d
    3480d907:	85 c0                	test   %eax,%eax
    3480d909:	0f 84 55 00 00 00    	je     3480d964 <__rem_pio2_large+0x654>
    3480d90f:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480d913:	44 89 5c 24 08       	mov    %r11d,0x8(%rsp)
    3480d918:	f2 0f 11 94 24 d8 00 	movsd  %xmm2,0xd8(%rsp)
    3480d91f:	00 00 
    3480d921:	e8 9a e7 ff ff       	callq  3480c0c0 <scalbn>
    3480d926:	f2 0f 10 94 24 d8 00 	movsd  0xd8(%rsp),%xmm2
    3480d92d:	00 00 
    3480d92f:	f2 0f 10 3d 99 78 00 	movsd  0x7899(%rip),%xmm7        # 348151d0 <sysconf.values+0x2f0>
    3480d936:	00 
    3480d937:	f2 0f 10 35 89 78 00 	movsd  0x7889(%rip),%xmm6        # 348151c8 <sysconf.values+0x2e8>
    3480d93e:	00 
    3480d93f:	41 b9 02 00 00 00    	mov    $0x2,%r9d
    3480d945:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480d949:	44 8b 5c 24 08       	mov    0x8(%rsp),%r11d
    3480d94e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    3480d953:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
    3480d957:	e9 08 00 00 00       	jmpq   3480d964 <__rem_pio2_large+0x654>
    3480d95c:	0f 1f 40 00          	nopl   0x0(%rax)
    3480d960:	66 0f 28 d0          	movapd %xmm0,%xmm2
    3480d964:	66 0f 2e 15 74 78 00 	ucomisd 0x7874(%rip),%xmm2        # 348151e0 <sysconf.values+0x300>
    3480d96b:	00 
    3480d96c:	0f 85 d4 02 00 00    	jne    3480dc46 <__rem_pio2_large+0x936>
    3480d972:	0f 8a ce 02 00 00    	jp     3480dc46 <__rem_pio2_large+0x936>
    3480d978:	3b 5c 24 60          	cmp    0x60(%rsp),%ebx
    3480d97c:	0f 8e 36 01 00 00    	jle    3480dab8 <__rem_pio2_large+0x7a8>
    3480d982:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480d987:	48 89 c8             	mov    %rcx,%rax
    3480d98a:	4c 29 d0             	sub    %r10,%rax
    3480d98d:	31 f6                	xor    %esi,%esi
    3480d98f:	48 83 f8 08          	cmp    $0x8,%rax
    3480d993:	0f 82 07 01 00 00    	jb     3480daa0 <__rem_pio2_large+0x790>
    3480d999:	49 89 c0             	mov    %rax,%r8
    3480d99c:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    3480d9a0:	48 89 c2             	mov    %rax,%rdx
    3480d9a3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    3480d9a7:	0f 84 f3 00 00 00    	je     3480daa0 <__rem_pio2_large+0x790>
    3480d9ad:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    3480d9b2:	48 8d 7a f8          	lea    -0x8(%rdx),%rdi
    3480d9b6:	48 c1 ef 03          	shr    $0x3,%rdi
    3480d9ba:	44 8d 4f 01          	lea    0x1(%rdi),%r9d
    3480d9be:	41 83 e1 01          	and    $0x1,%r9d
    3480d9c2:	48 85 ff             	test   %rdi,%rdi
    3480d9c5:	0f 84 72 fc ff ff    	je     3480d63d <__rem_pio2_large+0x32d>
    3480d9cb:	48 8d 4c 24 60       	lea    0x60(%rsp),%rcx
    3480d9d0:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    3480d9d5:	48 8d 0c b1          	lea    (%rcx,%rsi,4),%rcx
    3480d9d9:	49 8d 71 ff          	lea    -0x1(%r9),%rsi
    3480d9dd:	48 29 fe             	sub    %rdi,%rsi
    3480d9e0:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480d9e4:	31 ff                	xor    %edi,%edi
    3480d9e6:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480d9ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480d9f0:	f3 0f 6f 54 b9 d0    	movdqu -0x30(%rcx,%rdi,4),%xmm2
    3480d9f6:	f3 0f 6f 5c b9 e0    	movdqu -0x20(%rcx,%rdi,4),%xmm3
    3480d9fc:	f3 0f 6f 64 b9 f0    	movdqu -0x10(%rcx,%rdi,4),%xmm4
    3480da02:	f3 0f 6f 2c b9       	movdqu (%rcx,%rdi,4),%xmm5
    3480da07:	66 0f 70 ed 1b       	pshufd $0x1b,%xmm5,%xmm5
    3480da0c:	66 0f 70 e4 1b       	pshufd $0x1b,%xmm4,%xmm4
    3480da11:	66 0f eb e8          	por    %xmm0,%xmm5
    3480da15:	66 0f eb e1          	por    %xmm1,%xmm4
    3480da19:	66 0f 70 c3 1b       	pshufd $0x1b,%xmm3,%xmm0
    3480da1e:	66 0f 70 ca 1b       	pshufd $0x1b,%xmm2,%xmm1
    3480da23:	66 0f eb c5          	por    %xmm5,%xmm0
    3480da27:	66 0f eb cc          	por    %xmm4,%xmm1
    3480da2b:	48 83 c7 f0          	add    $0xfffffffffffffff0,%rdi
    3480da2f:	48 83 c6 02          	add    $0x2,%rsi
    3480da33:	0f 85 b7 ff ff ff    	jne    3480d9f0 <__rem_pio2_large+0x6e0>
    3480da39:	48 f7 df             	neg    %rdi
    3480da3c:	4d 85 c9             	test   %r9,%r9
    3480da3f:	0f 84 26 00 00 00    	je     3480da6b <__rem_pio2_large+0x75b>
    3480da45:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480da4a:	48 29 f9             	sub    %rdi,%rcx
    3480da4d:	f3 0f 6f 54 8c 50    	movdqu 0x50(%rsp,%rcx,4),%xmm2
    3480da53:	f3 0f 6f 5c 8c 60    	movdqu 0x60(%rsp,%rcx,4),%xmm3
    3480da59:	66 0f 70 d2 1b       	pshufd $0x1b,%xmm2,%xmm2
    3480da5e:	66 0f 56 ca          	orpd   %xmm2,%xmm1
    3480da62:	66 0f 70 d3 1b       	pshufd $0x1b,%xmm3,%xmm2
    3480da67:	66 0f 56 c2          	orpd   %xmm2,%xmm0
    3480da6b:	66 0f 56 c1          	orpd   %xmm1,%xmm0
    3480da6f:	66 0f 70 c8 4e       	pshufd $0x4e,%xmm0,%xmm1
    3480da74:	66 0f eb c8          	por    %xmm0,%xmm1
    3480da78:	66 0f 70 c1 e5       	pshufd $0xe5,%xmm1,%xmm0
    3480da7d:	66 0f eb c1          	por    %xmm1,%xmm0
    3480da81:	66 0f 7e c6          	movd   %xmm0,%esi
    3480da85:	48 39 d0             	cmp    %rdx,%rax
    3480da88:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480da8c:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    3480da91:	0f 84 19 00 00 00    	je     3480dab0 <__rem_pio2_large+0x7a0>
    3480da97:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480da9c:	4c 29 c1             	sub    %r8,%rcx
    3480da9f:	90                   	nop
    3480daa0:	0b 74 8c 6c          	or     0x6c(%rsp,%rcx,4),%esi
    3480daa4:	48 ff c9             	dec    %rcx
    3480daa7:	4c 39 d1             	cmp    %r10,%rcx
    3480daaa:	0f 8f f0 ff ff ff    	jg     3480daa0 <__rem_pio2_large+0x790>
    3480dab0:	85 f6                	test   %esi,%esi
    3480dab2:	0f 85 13 02 00 00    	jne    3480dccb <__rem_pio2_large+0x9bb>
    3480dab8:	31 c0                	xor    %eax,%eax
    3480daba:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    3480dac1:	00 
    3480dac2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480dac9:	1f 84 00 00 00 00 00 
    3480dad0:	ff c0                	inc    %eax
    3480dad2:	83 39 00             	cmpl   $0x0,(%rcx)
    3480dad5:	48 8d 49 fc          	lea    -0x4(%rcx),%rcx
    3480dad9:	0f 84 f1 ff ff ff    	je     3480dad0 <__rem_pio2_large+0x7c0>
    3480dadf:	8d 0c 03             	lea    (%rbx,%rax,1),%ecx
    3480dae2:	85 c0                	test   %eax,%eax
    3480dae4:	4c 8b 54 24 68       	mov    0x68(%rsp),%r10
    3480dae9:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
    3480daee:	0f 8e 6c fb ff ff    	jle    3480d660 <__rem_pio2_large+0x350>
    3480daf4:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    3480daf8:	4c 63 c9             	movslq %ecx,%r9
    3480dafb:	44 01 d3             	add    %r10d,%ebx
    3480dafe:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    3480db03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480db0a:	84 00 00 00 00 00 
    3480db10:	4c 89 c2             	mov    %r8,%rdx
    3480db13:	4c 8d 42 01          	lea    0x1(%rdx),%r8
    3480db17:	42 8d 04 12          	lea    (%rdx,%r10,1),%eax
    3480db1b:	45 85 d2             	test   %r10d,%r10d
    3480db1e:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
    3480db23:	48 8d 4c 0a 01       	lea    0x1(%rdx,%rcx,1),%rcx
    3480db28:	48 8d 35 d1 76 00 00 	lea    0x76d1(%rip),%rsi        # 34815200 <ipio2>
    3480db2f:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480db32:	f2 0f 2a 04 8e       	cvtsi2sdl (%rsi,%rcx,4),%xmm0
    3480db37:	48 98                	cltq   
    3480db39:	f2 0f 11 84 c4 90 01 	movsd  %xmm0,0x190(%rsp,%rax,8)
    3480db40:	00 00 
    3480db42:	0f 8e 28 00 00 00    	jle    3480db70 <__rem_pio2_large+0x860>
    3480db48:	48 63 f3             	movslq %ebx,%rsi
    3480db4b:	48 83 7c 24 38 03    	cmpq   $0x3,0x38(%rsp)
    3480db51:	0f 83 29 00 00 00    	jae    3480db80 <__rem_pio2_large+0x870>
    3480db57:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480db5b:	31 ff                	xor    %edi,%edi
    3480db5d:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    3480db63:	0f 85 91 00 00 00    	jne    3480dbfa <__rem_pio2_large+0x8ea>
    3480db69:	e9 bf 00 00 00       	jmpq   3480dc2d <__rem_pio2_large+0x91d>
    3480db6e:	66 90                	xchg   %ax,%ax
    3480db70:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480db74:	e9 b4 00 00 00       	jmpq   3480dc2d <__rem_pio2_large+0x91d>
    3480db79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3480db80:	48 8d 84 f4 90 01 00 	lea    0x190(%rsp,%rsi,8),%rax
    3480db87:	00 
    3480db88:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480db8c:	31 ff                	xor    %edi,%edi
    3480db8e:	48 8b 8c 24 e8 00 00 	mov    0xe8(%rsp),%rcx
    3480db95:	00 
    3480db96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480db9d:	00 00 00 
    3480dba0:	f2 0f 10 49 e8       	movsd  -0x18(%rcx),%xmm1
    3480dba5:	f2 0f 10 51 f0       	movsd  -0x10(%rcx),%xmm2
    3480dbaa:	f2 0f 59 0c f8       	mulsd  (%rax,%rdi,8),%xmm1
    3480dbaf:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    3480dbb3:	f2 0f 59 54 f8 f8    	mulsd  -0x8(%rax,%rdi,8),%xmm2
    3480dbb9:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480dbbd:	f2 0f 10 49 f8       	movsd  -0x8(%rcx),%xmm1
    3480dbc2:	f2 0f 59 4c f8 f0    	mulsd  -0x10(%rax,%rdi,8),%xmm1
    3480dbc8:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    3480dbcc:	f2 0f 10 01          	movsd  (%rcx),%xmm0
    3480dbd0:	f2 0f 59 44 f8 e8    	mulsd  -0x18(%rax,%rdi,8),%xmm0
    3480dbd6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480dbda:	48 83 c1 20          	add    $0x20,%rcx
    3480dbde:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    3480dbe2:	49 39 fc             	cmp    %rdi,%r12
    3480dbe5:	0f 85 b5 ff ff ff    	jne    3480dba0 <__rem_pio2_large+0x890>
    3480dbeb:	48 f7 df             	neg    %rdi
    3480dbee:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
    3480dbf4:	0f 84 33 00 00 00    	je     3480dc2d <__rem_pio2_large+0x91d>
    3480dbfa:	48 29 fe             	sub    %rdi,%rsi
    3480dbfd:	48 8d 84 f4 90 01 00 	lea    0x190(%rsp,%rsi,8),%rax
    3480dc04:	00 
    3480dc05:	49 8d 0c fb          	lea    (%r11,%rdi,8),%rcx
    3480dc09:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    3480dc0e:	66 90                	xchg   %ax,%ax
    3480dc10:	f2 0f 10 09          	movsd  (%rcx),%xmm1
    3480dc14:	f2 0f 59 08          	mulsd  (%rax),%xmm1
    3480dc18:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480dc1c:	48 83 c0 f8          	add    $0xfffffffffffffff8,%rax
    3480dc20:	48 83 c1 08          	add    $0x8,%rcx
    3480dc24:	48 ff c6             	inc    %rsi
    3480dc27:	0f 85 e3 ff ff ff    	jne    3480dc10 <__rem_pio2_large+0x900>
    3480dc2d:	f2 0f 11 84 d4 38 02 	movsd  %xmm0,0x238(%rsp,%rdx,8)
    3480dc34:	00 00 
    3480dc36:	ff c3                	inc    %ebx
    3480dc38:	4d 39 c8             	cmp    %r9,%r8
    3480dc3b:	0f 8c cf fe ff ff    	jl     3480db10 <__rem_pio2_large+0x800>
    3480dc41:	e9 ea f9 ff ff       	jmpq   3480d630 <__rem_pio2_large+0x320>
    3480dc46:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    3480dc4b:	45 89 dc             	mov    %r11d,%r12d
    3480dc4e:	f7 df                	neg    %edi
    3480dc50:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480dc54:	e8 67 e4 ff ff       	callq  3480c0c0 <scalbn>
    3480dc59:	66 0f 2e 05 a7 74 00 	ucomisd 0x74a7(%rip),%xmm0        # 34815108 <sysconf.values+0x228>
    3480dc60:	00 
    3480dc61:	0f 83 09 00 00 00    	jae    3480dc70 <__rem_pio2_large+0x960>
    3480dc67:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    3480dc6b:	e9 4b 00 00 00       	jmpq   3480dcbb <__rem_pio2_large+0x9ab>
    3480dc70:	f2 0f 10 0d 50 75 00 	movsd  0x7550(%rip),%xmm1        # 348151c8 <sysconf.values+0x2e8>
    3480dc77:	00 
    3480dc78:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480dc7c:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    3480dc80:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480dc83:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    3480dc87:	f2 0f 10 15 41 75 00 	movsd  0x7541(%rip),%xmm2        # 348151d0 <sysconf.values+0x2f0>
    3480dc8e:	00 
    3480dc8f:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
    3480dc93:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    3480dc97:	f2 0f 2c c2          	cvttsd2si %xmm2,%eax
    3480dc9b:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480dca0:	89 44 8c 70          	mov    %eax,0x70(%rsp,%rcx,4)
    3480dca4:	ff c3                	inc    %ebx
    3480dca6:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
    3480dcad:	00 
    3480dcae:	03 84 24 c8 00 00 00 	add    0xc8(%rsp),%eax
    3480dcb5:	89 c7                	mov    %eax,%edi
    3480dcb7:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480dcbb:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
    3480dcbf:	48 63 cb             	movslq %ebx,%rcx
    3480dcc2:	89 44 8c 70          	mov    %eax,0x70(%rsp,%rcx,4)
    3480dcc6:	e9 27 00 00 00       	jmpq   3480dcf2 <__rem_pio2_large+0x9e2>
    3480dccb:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    3480dcd0:	45 89 dc             	mov    %r11d,%r12d
    3480dcd3:	48 63 c3             	movslq %ebx,%rax
    3480dcd6:	48 8d 44 84 6c       	lea    0x6c(%rsp,%rax,4),%rax
    3480dcdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480dce0:	83 c7 e8             	add    $0xffffffe8,%edi
    3480dce3:	ff cb                	dec    %ebx
    3480dce5:	83 38 00             	cmpl   $0x0,(%rax)
    3480dce8:	48 8d 40 fc          	lea    -0x4(%rax),%rax
    3480dcec:	0f 84 ee ff ff ff    	je     3480dce0 <__rem_pio2_large+0x9d0>
    3480dcf2:	f2 0f 10 05 66 52 00 	movsd  0x5266(%rip),%xmm0        # 34812f60 <DoEmFloatIteration.jtable+0x40>
    3480dcf9:	00 
    3480dcfa:	e8 c1 e3 ff ff       	callq  3480c0c0 <scalbn>
    3480dcff:	49 89 db             	mov    %rbx,%r11
    3480dd02:	85 db                	test   %ebx,%ebx
    3480dd04:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3480dd09:	0f 88 b6 00 00 00    	js     3480ddc5 <__rem_pio2_large+0xab5>
    3480dd0f:	4c 89 d9             	mov    %r11,%rcx
    3480dd12:	4c 63 c9             	movslq %ecx,%r9
    3480dd15:	49 8d 41 01          	lea    0x1(%r9),%rax
    3480dd19:	f2 0f 10 15 a7 74 00 	movsd  0x74a7(%rip),%xmm2        # 348151c8 <sysconf.values+0x2e8>
    3480dd20:	00 
    3480dd21:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480dd28:	0f 1f 84 00 00 00 00 
    3480dd2f:	00 
    3480dd30:	0f 57 c9             	xorps  %xmm1,%xmm1
    3480dd33:	f2 0f 2a 4c 84 6c    	cvtsi2sdl 0x6c(%rsp,%rax,4),%xmm1
    3480dd39:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    3480dd3d:	f2 0f 11 8c c4 28 02 	movsd  %xmm1,0x228(%rsp,%rax,8)
    3480dd44:	00 00 
    3480dd46:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    3480dd4a:	48 ff c8             	dec    %rax
    3480dd4d:	0f 8f dd ff ff ff    	jg     3480dd30 <__rem_pio2_large+0xa20>
    3480dd53:	85 c9                	test   %ecx,%ecx
    3480dd55:	0f 88 6a 00 00 00    	js     3480ddc5 <__rem_pio2_large+0xab5>
    3480dd5b:	4a 8d 8c cc 30 02 00 	lea    0x230(%rsp,%r9,8),%rcx
    3480dd62:	00 
    3480dd63:	4c 8d 05 66 7f 00 00 	lea    0x7f66(%rip),%r8        # 34815cd0 <PIo2>
    3480dd6a:	4d 89 ca             	mov    %r9,%r10
    3480dd6d:	0f 1f 00             	nopl   (%rax)
    3480dd70:	4c 89 cf             	mov    %r9,%rdi
    3480dd73:	4c 29 d7             	sub    %r10,%rdi
    3480dd76:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480dd7a:	4c 89 c2             	mov    %r8,%rdx
    3480dd7d:	31 c0                	xor    %eax,%eax
    3480dd7f:	90                   	nop
    3480dd80:	66 0f 28 c8          	movapd %xmm0,%xmm1
    3480dd84:	f2 0f 10 02          	movsd  (%rdx),%xmm0
    3480dd88:	f2 0f 59 04 c1       	mulsd  (%rcx,%rax,8),%xmm0
    3480dd8d:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480dd91:	48 39 f0             	cmp    %rsi,%rax
    3480dd94:	0f 8d 11 00 00 00    	jge    3480ddab <__rem_pio2_large+0xa9b>
    3480dd9a:	48 83 c2 08          	add    $0x8,%rdx
    3480dd9e:	48 39 f8             	cmp    %rdi,%rax
    3480dda1:	48 8d 40 01          	lea    0x1(%rax),%rax
    3480dda5:	0f 8c d5 ff ff ff    	jl     3480dd80 <__rem_pio2_large+0xa70>
    3480ddab:	f2 0f 11 84 fc f0 00 	movsd  %xmm0,0xf0(%rsp,%rdi,8)
    3480ddb2:	00 00 
    3480ddb4:	48 83 c1 f8          	add    $0xfffffffffffffff8,%rcx
    3480ddb8:	4d 85 d2             	test   %r10,%r10
    3480ddbb:	4d 8d 52 ff          	lea    -0x1(%r10),%r10
    3480ddbf:	0f 8f ab ff ff ff    	jg     3480dd70 <__rem_pio2_large+0xa60>
    3480ddc5:	48 8b 8c 24 d0 00 00 	mov    0xd0(%rsp),%rcx
    3480ddcc:	00 
    3480ddcd:	8d 41 ff             	lea    -0x1(%rcx),%eax
    3480ddd0:	83 f8 02             	cmp    $0x2,%eax
    3480ddd3:	0f 82 30 01 00 00    	jb     3480df09 <__rem_pio2_large+0xbf9>
    3480ddd9:	85 c9                	test   %ecx,%ecx
    3480dddb:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3480dde0:	8b 74 24 08          	mov    0x8(%rsp),%esi
    3480dde4:	0f 84 5d 01 00 00    	je     3480df47 <__rem_pio2_large+0xc37>
    3480ddea:	83 f9 03             	cmp    $0x3,%ecx
    3480dded:	0f 85 c8 02 00 00    	jne    3480e0bb <__rem_pio2_large+0xdab>
    3480ddf3:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480ddf7:	45 85 db             	test   %r11d,%r11d
    3480ddfa:	0f 8e d6 00 00 00    	jle    3480ded6 <__rem_pio2_large+0xbc6>
    3480de00:	49 63 c3             	movslq %r11d,%rax
    3480de03:	f2 0f 10 8c c4 f0 00 	movsd  0xf0(%rsp,%rax,8),%xmm1
    3480de0a:	00 00 
    3480de0c:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3480de10:	f2 0f 10 94 cc e0 00 	movsd  0xe0(%rsp,%rcx,8),%xmm2
    3480de17:	00 00 
    3480de19:	66 0f 28 da          	movapd %xmm2,%xmm3
    3480de1d:	f2 0f 58 d9          	addsd  %xmm1,%xmm3
    3480de21:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480de25:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480de29:	f2 0f 11 94 cc e8 00 	movsd  %xmm2,0xe8(%rsp,%rcx,8)
    3480de30:	00 00 
    3480de32:	f2 0f 11 9c cc e0 00 	movsd  %xmm3,0xe0(%rsp,%rcx,8)
    3480de39:	00 00 
    3480de3b:	48 ff c9             	dec    %rcx
    3480de3e:	48 83 f9 01          	cmp    $0x1,%rcx
    3480de42:	66 0f 28 cb          	movapd %xmm3,%xmm1
    3480de46:	0f 8f c4 ff ff ff    	jg     3480de10 <__rem_pio2_large+0xb00>
    3480de4c:	41 83 fb 02          	cmp    $0x2,%r11d
    3480de50:	0f 8c 80 00 00 00    	jl     3480ded6 <__rem_pio2_large+0xbc6>
    3480de56:	f2 0f 10 8c c4 f0 00 	movsd  0xf0(%rsp,%rax,8),%xmm1
    3480de5d:	00 00 
    3480de5f:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3480de63:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480de6a:	84 00 00 00 00 00 
    3480de70:	f2 0f 10 94 cc e0 00 	movsd  0xe0(%rsp,%rcx,8),%xmm2
    3480de77:	00 00 
    3480de79:	66 0f 28 da          	movapd %xmm2,%xmm3
    3480de7d:	f2 0f 58 d9          	addsd  %xmm1,%xmm3
    3480de81:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
    3480de85:	f2 0f 58 d1          	addsd  %xmm1,%xmm2
    3480de89:	f2 0f 11 94 cc e8 00 	movsd  %xmm2,0xe8(%rsp,%rcx,8)
    3480de90:	00 00 
    3480de92:	f2 0f 11 9c cc e0 00 	movsd  %xmm3,0xe0(%rsp,%rcx,8)
    3480de99:	00 00 
    3480de9b:	48 ff c9             	dec    %rcx
    3480de9e:	48 83 f9 02          	cmp    $0x2,%rcx
    3480dea2:	66 0f 28 cb          	movapd %xmm3,%xmm1
    3480dea6:	0f 8f c4 ff ff ff    	jg     3480de70 <__rem_pio2_large+0xb60>
    3480deac:	41 83 fb 02          	cmp    $0x2,%r11d
    3480deb0:	0f 8c 20 00 00 00    	jl     3480ded6 <__rem_pio2_large+0xbc6>
    3480deb6:	48 ff c0             	inc    %rax
    3480deb9:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480debd:	0f 1f 00             	nopl   (%rax)
    3480dec0:	f2 0f 58 84 c4 e8 00 	addsd  0xe8(%rsp,%rax,8),%xmm0
    3480dec7:	00 00 
    3480dec9:	48 ff c8             	dec    %rax
    3480decc:	48 83 f8 02          	cmp    $0x2,%rax
    3480ded0:	0f 8f ea ff ff ff    	jg     3480dec0 <__rem_pio2_large+0xbb0>
    3480ded6:	85 f6                	test   %esi,%esi
    3480ded8:	f2 0f 10 8c 24 f0 00 	movsd  0xf0(%rsp),%xmm1
    3480dedf:	00 00 
    3480dee1:	0f 84 a3 01 00 00    	je     3480e08a <__rem_pio2_large+0xd7a>
    3480dee7:	66 0f 16 8c 24 f8 00 	movhpd 0xf8(%rsp),%xmm1
    3480deee:	00 00 
    3480def0:	66 0f 28 15 28 59 00 	movapd 0x5928(%rip),%xmm2        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480def7:	00 
    3480def8:	66 0f 57 ca          	xorpd  %xmm2,%xmm1
    3480defc:	66 0f 11 0a          	movupd %xmm1,(%rdx)
    3480df00:	66 0f 57 c2          	xorpd  %xmm2,%xmm0
    3480df04:	e9 91 01 00 00       	jmpq   3480e09a <__rem_pio2_large+0xd8a>
    3480df09:	45 85 db             	test   %r11d,%r11d
    3480df0c:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3480df11:	8b 7c 24 08          	mov    0x8(%rsp),%edi
    3480df15:	0f 88 64 00 00 00    	js     3480df7f <__rem_pio2_large+0xc6f>
    3480df1b:	49 63 c3             	movslq %r11d,%rax
    3480df1e:	48 ff c0             	inc    %rax
    3480df21:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480df25:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480df2c:	00 00 00 00 
    3480df30:	f2 0f 58 8c c4 e8 00 	addsd  0xe8(%rsp,%rax,8),%xmm1
    3480df37:	00 00 
    3480df39:	48 ff c8             	dec    %rax
    3480df3c:	0f 8f ee ff ff ff    	jg     3480df30 <__rem_pio2_large+0xc20>
    3480df42:	e9 3c 00 00 00       	jmpq   3480df83 <__rem_pio2_large+0xc73>
    3480df47:	45 85 db             	test   %r11d,%r11d
    3480df4a:	0f 88 53 01 00 00    	js     3480e0a3 <__rem_pio2_large+0xd93>
    3480df50:	49 63 c3             	movslq %r11d,%rax
    3480df53:	48 ff c0             	inc    %rax
    3480df56:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480df5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480df60:	f2 0f 58 84 c4 e8 00 	addsd  0xe8(%rsp,%rax,8),%xmm0
    3480df67:	00 00 
    3480df69:	48 ff c8             	dec    %rax
    3480df6c:	0f 8f ee ff ff ff    	jg     3480df60 <__rem_pio2_large+0xc50>
    3480df72:	85 f6                	test   %esi,%esi
    3480df74:	0f 85 35 01 00 00    	jne    3480e0af <__rem_pio2_large+0xd9f>
    3480df7a:	e9 38 01 00 00       	jmpq   3480e0b7 <__rem_pio2_large+0xda7>
    3480df7f:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480df83:	85 ff                	test   %edi,%edi
    3480df85:	66 0f 28 c1          	movapd %xmm1,%xmm0
    3480df89:	0f 84 0c 00 00 00    	je     3480df9b <__rem_pio2_large+0xc8b>
    3480df8f:	66 0f 28 05 89 58 00 	movapd 0x5889(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480df96:	00 
    3480df97:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
    3480df9b:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
    3480df9f:	f2 0f 10 84 24 f0 00 	movsd  0xf0(%rsp),%xmm0
    3480dfa6:	00 00 
    3480dfa8:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    3480dfac:	45 85 db             	test   %r11d,%r11d
    3480dfaf:	0f 8e bc 00 00 00    	jle    3480e071 <__rem_pio2_large+0xd61>
    3480dfb5:	41 8d 4b 01          	lea    0x1(%r11),%ecx
    3480dfb9:	48 8d 41 fe          	lea    -0x2(%rcx),%rax
    3480dfbd:	41 83 e3 07          	and    $0x7,%r11d
    3480dfc1:	48 83 f8 07          	cmp    $0x7,%rax
    3480dfc5:	0f 83 13 00 00 00    	jae    3480dfde <__rem_pio2_large+0xcce>
    3480dfcb:	b8 01 00 00 00       	mov    $0x1,%eax
    3480dfd0:	45 85 db             	test   %r11d,%r11d
    3480dfd3:	0f 85 75 00 00 00    	jne    3480e04e <__rem_pio2_large+0xd3e>
    3480dfd9:	e9 93 00 00 00       	jmpq   3480e071 <__rem_pio2_large+0xd61>
    3480dfde:	4c 29 d9             	sub    %r11,%rcx
    3480dfe1:	b8 01 00 00 00       	mov    $0x1,%eax
    3480dfe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480dfed:	00 00 00 
    3480dff0:	f2 0f 58 84 c4 f0 00 	addsd  0xf0(%rsp,%rax,8),%xmm0
    3480dff7:	00 00 
    3480dff9:	f2 0f 58 84 c4 f8 00 	addsd  0xf8(%rsp,%rax,8),%xmm0
    3480e000:	00 00 
    3480e002:	f2 0f 58 84 c4 00 01 	addsd  0x100(%rsp,%rax,8),%xmm0
    3480e009:	00 00 
    3480e00b:	f2 0f 58 84 c4 08 01 	addsd  0x108(%rsp,%rax,8),%xmm0
    3480e012:	00 00 
    3480e014:	f2 0f 58 84 c4 10 01 	addsd  0x110(%rsp,%rax,8),%xmm0
    3480e01b:	00 00 
    3480e01d:	f2 0f 58 84 c4 18 01 	addsd  0x118(%rsp,%rax,8),%xmm0
    3480e024:	00 00 
    3480e026:	f2 0f 58 84 c4 20 01 	addsd  0x120(%rsp,%rax,8),%xmm0
    3480e02d:	00 00 
    3480e02f:	f2 0f 58 84 c4 28 01 	addsd  0x128(%rsp,%rax,8),%xmm0
    3480e036:	00 00 
    3480e038:	48 83 c0 08          	add    $0x8,%rax
    3480e03c:	48 39 c1             	cmp    %rax,%rcx
    3480e03f:	0f 85 ab ff ff ff    	jne    3480dff0 <__rem_pio2_large+0xce0>
    3480e045:	45 85 db             	test   %r11d,%r11d
    3480e048:	0f 84 23 00 00 00    	je     3480e071 <__rem_pio2_large+0xd61>
    3480e04e:	48 8d 84 c4 f0 00 00 	lea    0xf0(%rsp,%rax,8),%rax
    3480e055:	00 
    3480e056:	49 f7 db             	neg    %r11
    3480e059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3480e060:	f2 0f 58 00          	addsd  (%rax),%xmm0
    3480e064:	48 83 c0 08          	add    $0x8,%rax
    3480e068:	49 ff c3             	inc    %r11
    3480e06b:	0f 85 ef ff ff ff    	jne    3480e060 <__rem_pio2_large+0xd50>
    3480e071:	85 ff                	test   %edi,%edi
    3480e073:	0f 84 08 00 00 00    	je     3480e081 <__rem_pio2_large+0xd71>
    3480e079:	66 0f 57 05 9f 57 00 	xorpd  0x579f(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480e080:	00 
    3480e081:	48 83 c2 08          	add    $0x8,%rdx
    3480e085:	e9 2d 00 00 00       	jmpq   3480e0b7 <__rem_pio2_large+0xda7>
    3480e08a:	f2 0f 11 0a          	movsd  %xmm1,(%rdx)
    3480e08e:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    3480e095:	00 
    3480e096:	48 89 42 08          	mov    %rax,0x8(%rdx)
    3480e09a:	48 83 c2 10          	add    $0x10,%rdx
    3480e09e:	e9 14 00 00 00       	jmpq   3480e0b7 <__rem_pio2_large+0xda7>
    3480e0a3:	66 0f 57 c0          	xorpd  %xmm0,%xmm0
    3480e0a7:	85 f6                	test   %esi,%esi
    3480e0a9:	0f 84 08 00 00 00    	je     3480e0b7 <__rem_pio2_large+0xda7>
    3480e0af:	66 0f 57 05 69 57 00 	xorpd  0x5769(%rip),%xmm0        # 34813820 <DoEmFloatIteration.jtable+0x900>
    3480e0b6:	00 
    3480e0b7:	f2 0f 11 02          	movsd  %xmm0,(%rdx)
    3480e0bb:	41 83 e4 07          	and    $0x7,%r12d
    3480e0bf:	44 89 e0             	mov    %r12d,%eax
    3480e0c2:	48 81 c4 d8 02 00 00 	add    $0x2d8,%rsp
    3480e0c9:	5b                   	pop    %rbx
    3480e0ca:	41 5c                	pop    %r12
    3480e0cc:	c3                   	retq   
    3480e0cd:	0f 1f 00             	nopl   (%rax)

000000003480e0d0 <__sin>:
    3480e0d0:	66 0f 28 d8          	movapd %xmm0,%xmm3
    3480e0d4:	f2 0f 59 db          	mulsd  %xmm3,%xmm3
    3480e0d8:	66 0f 28 d3          	movapd %xmm3,%xmm2
    3480e0dc:	f2 0f 59 d2          	mulsd  %xmm2,%xmm2
    3480e0e0:	f2 0f 10 2d 28 7c 00 	movsd  0x7c28(%rip),%xmm5        # 34815d10 <PIo2+0x40>
    3480e0e7:	00 
    3480e0e8:	f2 0f 59 eb          	mulsd  %xmm3,%xmm5
    3480e0ec:	f2 0f 58 2d 24 7c 00 	addsd  0x7c24(%rip),%xmm5        # 34815d18 <PIo2+0x48>
    3480e0f3:	00 
    3480e0f4:	f2 0f 59 eb          	mulsd  %xmm3,%xmm5
    3480e0f8:	f2 0f 58 2d 20 7c 00 	addsd  0x7c20(%rip),%xmm5        # 34815d20 <PIo2+0x50>
    3480e0ff:	00 
    3480e100:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
    3480e104:	f2 0f 10 25 1c 7c 00 	movsd  0x7c1c(%rip),%xmm4        # 34815d28 <PIo2+0x58>
    3480e10b:	00 
    3480e10c:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
    3480e110:	f2 0f 58 25 18 7c 00 	addsd  0x7c18(%rip),%xmm4        # 34815d30 <PIo2+0x60>
    3480e117:	00 
    3480e118:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
    3480e11c:	f2 0f 58 e5          	addsd  %xmm5,%xmm4
    3480e120:	66 0f 28 d3          	movapd %xmm3,%xmm2
    3480e124:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
    3480e128:	85 ff                	test   %edi,%edi
    3480e12a:	0f 84 2d 00 00 00    	je     3480e15d <__sin+0x8d>
    3480e130:	f2 0f 10 2d 50 56 00 	movsd  0x5650(%rip),%xmm5        # 34813788 <DoEmFloatIteration.jtable+0x868>
    3480e137:	00 
    3480e138:	f2 0f 59 e9          	mulsd  %xmm1,%xmm5
    3480e13c:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
    3480e140:	f2 0f 5c ec          	subsd  %xmm4,%xmm5
    3480e144:	f2 0f 59 dd          	mulsd  %xmm5,%xmm3
    3480e148:	f2 0f 5c d9          	subsd  %xmm1,%xmm3
    3480e14c:	f2 0f 59 15 e4 7b 00 	mulsd  0x7be4(%rip),%xmm2        # 34815d38 <PIo2+0x68>
    3480e153:	00 
    3480e154:	f2 0f 58 d3          	addsd  %xmm3,%xmm2
    3480e158:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
    3480e15c:	c3                   	retq   
    3480e15d:	f2 0f 59 dc          	mulsd  %xmm4,%xmm3
    3480e161:	f2 0f 58 1d d7 7b 00 	addsd  0x7bd7(%rip),%xmm3        # 34815d40 <PIo2+0x70>
    3480e168:	00 
    3480e169:	f2 0f 59 d3          	mulsd  %xmm3,%xmm2
    3480e16d:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
    3480e171:	66 0f 28 c2          	movapd %xmm2,%xmm0
    3480e175:	c3                   	retq   
    3480e176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480e17d:	00 00 00 

000000003480e180 <fabs>:
    3480e180:	0f 54 05 b9 56 00 00 	andps  0x56b9(%rip),%xmm0        # 34813840 <DoEmFloatIteration.jtable+0x920>
    3480e187:	c3                   	retq   
    3480e188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480e18f:	00 

000000003480e190 <floor>:
    3480e190:	66 0f 57 c9          	xorpd  %xmm1,%xmm1
    3480e194:	66 0f 2e c1          	ucomisd %xmm1,%xmm0
    3480e198:	0f 85 06 00 00 00    	jne    3480e1a4 <floor+0x14>
    3480e19e:	0f 8b 8c 00 00 00    	jnp    3480e230 <floor+0xa0>
    3480e1a4:	66 48 0f 7e c0       	movq   %xmm0,%rax
    3480e1a9:	48 89 c1             	mov    %rax,%rcx
    3480e1ac:	48 c1 e9 34          	shr    $0x34,%rcx
    3480e1b0:	81 e1 ff 07 00 00    	and    $0x7ff,%ecx
    3480e1b6:	81 f9 32 04 00 00    	cmp    $0x432,%ecx
    3480e1bc:	0f 87 6e 00 00 00    	ja     3480e230 <floor+0xa0>
    3480e1c2:	48 85 c0             	test   %rax,%rax
    3480e1c5:	f2 0f 10 15 7b 7b 00 	movsd  0x7b7b(%rip),%xmm2        # 34815d48 <PIo2+0x78>
    3480e1cc:	00 
    3480e1cd:	f2 0f 10 1d 7b 7b 00 	movsd  0x7b7b(%rip),%xmm3        # 34815d50 <PIo2+0x80>
    3480e1d4:	00 
    3480e1d5:	0f 88 09 00 00 00    	js     3480e1e4 <floor+0x54>
    3480e1db:	66 0f 28 cb          	movapd %xmm3,%xmm1
    3480e1df:	e9 08 00 00 00       	jmpq   3480e1ec <floor+0x5c>
    3480e1e4:	66 0f 28 ca          	movapd %xmm2,%xmm1
    3480e1e8:	66 0f 28 d3          	movapd %xmm3,%xmm2
    3480e1ec:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
    3480e1f0:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    3480e1f4:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
    3480e1f8:	81 f9 fe 03 00 00    	cmp    $0x3fe,%ecx
    3480e1fe:	0f 87 12 00 00 00    	ja     3480e216 <floor+0x86>
    3480e204:	f2 0f 11 4c 24 f8    	movsd  %xmm1,-0x8(%rsp)
    3480e20a:	48 c1 f8 3f          	sar    $0x3f,%rax
    3480e20e:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480e211:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    3480e215:	c3                   	retq   
    3480e216:	66 0f 57 d2          	xorpd  %xmm2,%xmm2
    3480e21a:	66 0f 2e ca          	ucomisd %xmm2,%xmm1
    3480e21e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    3480e222:	0f 86 08 00 00 00    	jbe    3480e230 <floor+0xa0>
    3480e228:	f2 0f 58 05 50 55 00 	addsd  0x5550(%rip),%xmm0        # 34813780 <DoEmFloatIteration.jtable+0x860>
    3480e22f:	00 
    3480e230:	c3                   	retq   
    3480e231:	0f 1f 00             	nopl   (%rax)
    3480e234:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480e23b:	00 00 00 
    3480e23e:	66 90                	xchg   %ax,%ax

000000003480e240 <clock_nosgx>:
    3480e240:	53                   	push   %rbx
    3480e241:	48 83 ec 10          	sub    $0x10,%rsp
    3480e245:	48 89 e6             	mov    %rsp,%rsi
    3480e248:	b8 e4 00 00 00       	mov    $0xe4,%eax
    3480e24d:	bf 02 00 00 00       	mov    $0x2,%edi
    3480e252:	0f 05                	syscall 
    3480e254:	48 89 c3             	mov    %rax,%rbx
    3480e257:	85 db                	test   %ebx,%ebx
    3480e259:	0f 84 23 00 00 00    	je     3480e282 <clock_nosgx+0x42>
    3480e25f:	83 fb da             	cmp    $0xffffffda,%ebx
    3480e262:	0f 85 05 00 00 00    	jne    3480e26d <clock_nosgx+0x2d>
    3480e268:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
    3480e26d:	f7 db                	neg    %ebx
    3480e26f:	e8 ec eb ff ff       	callq  3480ce60 <__errno_location>
    3480e274:	89 18                	mov    %ebx,(%rax)
    3480e276:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3480e27d:	e9 60 00 00 00       	jmpq   3480e2e2 <clock_nosgx+0xa2>
    3480e282:	48 8b 0c 24          	mov    (%rsp),%rcx
    3480e286:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3480e28d:	48 ba f6 5a d0 7b 63 	movabs $0x8637bd05af6,%rdx
    3480e294:	08 00 00 
    3480e297:	48 39 d1             	cmp    %rdx,%rcx
    3480e29a:	0f 8f 42 00 00 00    	jg     3480e2e2 <clock_nosgx+0xa2>
    3480e2a0:	48 b8 cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rax
    3480e2a7:	9b c4 20 
    3480e2aa:	48 f7 6c 24 08       	imulq  0x8(%rsp)
    3480e2af:	48 89 d0             	mov    %rdx,%rax
    3480e2b2:	48 c1 e8 3f          	shr    $0x3f,%rax
    3480e2b6:	48 c1 fa 07          	sar    $0x7,%rdx
    3480e2ba:	48 01 c2             	add    %rax,%rdx
    3480e2bd:	48 69 c9 40 42 0f 00 	imul   $0xf4240,%rcx,%rcx
    3480e2c4:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    3480e2cb:	ff ff 7f 
    3480e2ce:	48 29 c8             	sub    %rcx,%rax
    3480e2d1:	48 01 d1             	add    %rdx,%rcx
    3480e2d4:	48 39 c2             	cmp    %rax,%rdx
    3480e2d7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3480e2de:	48 0f 4e c1          	cmovle %rcx,%rax
    3480e2e2:	48 83 c4 10          	add    $0x10,%rsp
    3480e2e6:	5b                   	pop    %rbx
    3480e2e7:	c3                   	retq   
    3480e2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480e2ef:	00 

000000003480e2f0 <puts_nosgx>:
    3480e2f0:	41 54                	push   %r12
    3480e2f2:	53                   	push   %rbx
    3480e2f3:	50                   	push   %rax
    3480e2f4:	49 89 fc             	mov    %rdi,%r12
    3480e2f7:	48 8d 05 22 8c 20 00 	lea    0x208c22(%rip),%rax        # 34a16f20 <stdout>
    3480e2fe:	48 8b 18             	mov    (%rax),%rbx
    3480e301:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    3480e308:	0f 88 11 00 00 00    	js     3480e31f <puts_nosgx+0x2f>
    3480e30e:	48 89 df             	mov    %rbx,%rdi
    3480e311:	e8 ea 01 00 00       	callq  3480e500 <__lockfile>
    3480e316:	89 44 24 04          	mov    %eax,0x4(%rsp)
    3480e31a:	e9 08 00 00 00       	jmpq   3480e327 <puts_nosgx+0x37>
    3480e31f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    3480e326:	00 
    3480e327:	4c 89 e7             	mov    %r12,%rdi
    3480e32a:	48 89 de             	mov    %rbx,%rsi
    3480e32d:	e8 ae 03 00 00       	callq  3480e6e0 <fputs>
    3480e332:	85 c0                	test   %eax,%eax
    3480e334:	0f 88 6b 00 00 00    	js     3480e3a5 <puts_nosgx+0xb5>
    3480e33a:	80 bb 8b 00 00 00 0a 	cmpb   $0xa,0x8b(%rbx)
    3480e341:	0f 84 2c 00 00 00    	je     3480e373 <puts_nosgx+0x83>
    3480e347:	48 8b 43 28          	mov    0x28(%rbx),%rax
    3480e34b:	48 3b 43 20          	cmp    0x20(%rbx),%rax
    3480e34f:	0f 83 1e 00 00 00    	jae    3480e373 <puts_nosgx+0x83>
    3480e355:	48 8d 48 01          	lea    0x1(%rax),%rcx
    3480e359:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
    3480e35d:	c6 00 0a             	movb   $0xa,(%rax)
    3480e360:	45 31 e4             	xor    %r12d,%r12d
    3480e363:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    3480e368:	0f 85 24 00 00 00    	jne    3480e392 <puts_nosgx+0xa2>
    3480e36e:	e9 27 00 00 00       	jmpq   3480e39a <puts_nosgx+0xaa>
    3480e373:	be 0a 00 00 00       	mov    $0xa,%esi
    3480e378:	48 89 df             	mov    %rbx,%rdi
    3480e37b:	e8 a0 01 00 00       	callq  3480e520 <__overflow>
    3480e380:	41 89 c4             	mov    %eax,%r12d
    3480e383:	41 c1 fc 1f          	sar    $0x1f,%r12d
    3480e387:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    3480e38c:	0f 84 08 00 00 00    	je     3480e39a <puts_nosgx+0xaa>
    3480e392:	48 89 df             	mov    %rbx,%rdi
    3480e395:	e8 76 01 00 00       	callq  3480e510 <__unlockfile>
    3480e39a:	44 89 e0             	mov    %r12d,%eax
    3480e39d:	48 83 c4 08          	add    $0x8,%rsp
    3480e3a1:	5b                   	pop    %rbx
    3480e3a2:	41 5c                	pop    %r12
    3480e3a4:	c3                   	retq   
    3480e3a5:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    3480e3ab:	83 7c 24 04 00       	cmpl   $0x0,0x4(%rsp)
    3480e3b0:	0f 85 dc ff ff ff    	jne    3480e392 <puts_nosgx+0xa2>
    3480e3b6:	e9 df ff ff ff       	jmpq   3480e39a <puts_nosgx+0xaa>
    3480e3bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480e3c0 <write_nosgx>:
    3480e3c0:	48 63 ff             	movslq %edi,%rdi
    3480e3c3:	b8 01 00 00 00       	mov    $0x1,%eax
    3480e3c8:	0f 05                	syscall 
    3480e3ca:	c3                   	retq   
    3480e3cb:	90                   	nop
    3480e3cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000003480e3d0 <vsnprintf>:
    3480e3d0:	41 54                	push   %r12
    3480e3d2:	53                   	push   %rbx
    3480e3d3:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    3480e3da:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3480e3df:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    3480e3e4:	48 89 f3             	mov    %rsi,%rbx
    3480e3e7:	49 89 fc             	mov    %rdi,%r12
    3480e3ea:	48 8d 35 37 8b 20 00 	lea    0x208b37(%rip),%rsi        # 34a16f28 <stdout+0x8>
    3480e3f1:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    3480e3f6:	ba d0 00 00 00       	mov    $0xd0,%edx
    3480e3fb:	e8 20 d3 ff ff       	callq  3480b720 <memcpy>
    3480e400:	48 89 d9             	mov    %rbx,%rcx
    3480e403:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
    3480e407:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
    3480e40d:	0f 82 23 00 00 00    	jb     3480e436 <vsnprintf+0x66>
    3480e413:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3480e418:	48 85 c9             	test   %rcx,%rcx
    3480e41b:	0f 84 1f 00 00 00    	je     3480e440 <vsnprintf+0x70>
    3480e421:	e8 3a ea ff ff       	callq  3480ce60 <__errno_location>
    3480e426:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
    3480e42c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3480e431:	e9 72 00 00 00       	jmpq   3480e4a8 <vsnprintf+0xd8>
    3480e436:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    3480e43b:	e9 0d 00 00 00       	jmpq   3480e44d <vsnprintf+0x7d>
    3480e440:	48 89 c2             	mov    %rax,%rdx
    3480e443:	4c 8d 64 24 07       	lea    0x7(%rsp),%r12
    3480e448:	b9 01 00 00 00       	mov    $0x1,%ecx
    3480e44d:	48 c7 c3 fe ff ff ff 	mov    $0xfffffffffffffffe,%rbx
    3480e454:	4c 29 e3             	sub    %r12,%rbx
    3480e457:	48 39 d9             	cmp    %rbx,%rcx
    3480e45a:	48 0f 46 d9          	cmovbe %rcx,%rbx
    3480e45e:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
    3480e463:	4c 89 64 24 40       	mov    %r12,0x40(%rsp)
    3480e468:	4c 89 64 24 70       	mov    %r12,0x70(%rsp)
    3480e46d:	49 01 dc             	add    %rbx,%r12
    3480e470:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    3480e475:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
    3480e47a:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    3480e47f:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3480e484:	e8 57 06 00 00       	callq  3480eae0 <vfprintf>
    3480e489:	48 85 db             	test   %rbx,%rbx
    3480e48c:	0f 84 16 00 00 00    	je     3480e4a8 <vsnprintf+0xd8>
    3480e492:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    3480e497:	31 d2                	xor    %edx,%edx
    3480e499:	48 3b 4c 24 38       	cmp    0x38(%rsp),%rcx
    3480e49e:	0f 94 c2             	sete   %dl
    3480e4a1:	48 f7 da             	neg    %rdx
    3480e4a4:	c6 04 11 00          	movb   $0x0,(%rcx,%rdx,1)
    3480e4a8:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    3480e4af:	5b                   	pop    %rbx
    3480e4b0:	41 5c                	pop    %r12
    3480e4b2:	c3                   	retq   
    3480e4b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480e4ba:	84 00 00 00 00 00 

000000003480e4c0 <sn_write>:
    3480e4c0:	41 54                	push   %r12
    3480e4c2:	53                   	push   %rbx
    3480e4c3:	50                   	push   %rax
    3480e4c4:	48 89 14 24          	mov    %rdx,(%rsp)
    3480e4c8:	48 89 fb             	mov    %rdi,%rbx
    3480e4cb:	4c 8b 63 20          	mov    0x20(%rbx),%r12
    3480e4cf:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    3480e4d3:	49 29 fc             	sub    %rdi,%r12
    3480e4d6:	49 39 d4             	cmp    %rdx,%r12
    3480e4d9:	4c 0f 47 e2          	cmova  %rdx,%r12
    3480e4dd:	4c 89 e2             	mov    %r12,%rdx
    3480e4e0:	e8 3b d2 ff ff       	callq  3480b720 <memcpy>
    3480e4e5:	4c 01 63 28          	add    %r12,0x28(%rbx)
    3480e4e9:	48 8b 04 24          	mov    (%rsp),%rax
    3480e4ed:	48 83 c4 08          	add    $0x8,%rsp
    3480e4f1:	5b                   	pop    %rbx
    3480e4f2:	41 5c                	pop    %r12
    3480e4f4:	c3                   	retq   
    3480e4f5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480e4fc:	00 00 00 
    3480e4ff:	90                   	nop

000000003480e500 <__lockfile>:
    3480e500:	31 c0                	xor    %eax,%eax
    3480e502:	c3                   	retq   
    3480e503:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480e50a:	84 00 00 00 00 00 

000000003480e510 <__unlockfile>:
    3480e510:	c3                   	retq   
    3480e511:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480e518:	00 00 00 
    3480e51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480e520 <__overflow>:
    3480e520:	41 54                	push   %r12
    3480e522:	53                   	push   %rbx
    3480e523:	50                   	push   %rax
    3480e524:	41 89 f4             	mov    %esi,%r12d
    3480e527:	48 89 fb             	mov    %rdi,%rbx
    3480e52a:	44 88 64 24 07       	mov    %r12b,0x7(%rsp)
    3480e52f:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e533:	48 85 c0             	test   %rax,%rax
    3480e536:	0f 84 4c 00 00 00    	je     3480e588 <__overflow+0x68>
    3480e53c:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    3480e540:	48 39 c1             	cmp    %rax,%rcx
    3480e543:	0f 83 13 00 00 00    	jae    3480e55c <__overflow+0x3c>
    3480e549:	41 0f b6 c4          	movzbl %r12b,%eax
    3480e54d:	0f be 93 8b 00 00 00 	movsbl 0x8b(%rbx),%edx
    3480e554:	39 d0                	cmp    %edx,%eax
    3480e556:	0f 85 4c 00 00 00    	jne    3480e5a8 <__overflow+0x88>
    3480e55c:	48 8d 74 24 07       	lea    0x7(%rsp),%rsi
    3480e561:	ba 01 00 00 00       	mov    $0x1,%edx
    3480e566:	48 89 df             	mov    %rbx,%rdi
    3480e569:	ff 53 48             	callq  *0x48(%rbx)
    3480e56c:	48 89 c1             	mov    %rax,%rcx
    3480e56f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3480e574:	48 83 f9 01          	cmp    $0x1,%rcx
    3480e578:	0f 85 35 00 00 00    	jne    3480e5b3 <__overflow+0x93>
    3480e57e:	0f b6 44 24 07       	movzbl 0x7(%rsp),%eax
    3480e583:	e9 2b 00 00 00       	jmpq   3480e5b3 <__overflow+0x93>
    3480e588:	48 89 df             	mov    %rbx,%rdi
    3480e58b:	e8 f0 00 00 00       	callq  3480e680 <__towrite>
    3480e590:	89 c1                	mov    %eax,%ecx
    3480e592:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3480e597:	85 c9                	test   %ecx,%ecx
    3480e599:	0f 85 14 00 00 00    	jne    3480e5b3 <__overflow+0x93>
    3480e59f:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e5a3:	e9 94 ff ff ff       	jmpq   3480e53c <__overflow+0x1c>
    3480e5a8:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    3480e5ac:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    3480e5b0:	44 88 21             	mov    %r12b,(%rcx)
    3480e5b3:	48 83 c4 08          	add    $0x8,%rsp
    3480e5b7:	5b                   	pop    %rbx
    3480e5b8:	41 5c                	pop    %r12
    3480e5ba:	c3                   	retq   
    3480e5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480e5c0 <__stdio_close>:
    3480e5c0:	8b 7f 78             	mov    0x78(%rdi),%edi
    3480e5c3:	e9 38 e3 ff ff       	jmpq   3480c900 <close>
    3480e5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480e5cf:	00 

000000003480e5d0 <__stdio_seek>:
    3480e5d0:	41 54                	push   %r12
    3480e5d2:	53                   	push   %rbx
    3480e5d3:	50                   	push   %rax
    3480e5d4:	89 d3                	mov    %edx,%ebx
    3480e5d6:	48 89 34 24          	mov    %rsi,(%rsp)
    3480e5da:	49 89 fc             	mov    %rdi,%r12
    3480e5dd:	48 8d 3d 74 77 00 00 	lea    0x7774(%rip),%rdi        # 34815d58 <PIo2+0x88>
    3480e5e4:	48 8d 35 73 77 00 00 	lea    0x7773(%rip),%rsi        # 34815d5e <PIo2+0x8e>
    3480e5eb:	ba 0b 00 00 00       	mov    $0xb,%edx
    3480e5f0:	31 c0                	xor    %eax,%eax
    3480e5f2:	e8 09 04 00 00       	callq  3480ea00 <printf>
    3480e5f7:	49 63 7c 24 78       	movslq 0x78(%r12),%rdi
    3480e5fc:	48 63 d3             	movslq %ebx,%rdx
    3480e5ff:	b8 08 00 00 00       	mov    $0x8,%eax
    3480e604:	48 8b 34 24          	mov    (%rsp),%rsi
    3480e608:	0f 05                	syscall 
    3480e60a:	48 89 c7             	mov    %rax,%rdi
    3480e60d:	48 83 c4 08          	add    $0x8,%rsp
    3480e611:	5b                   	pop    %rbx
    3480e612:	41 5c                	pop    %r12
    3480e614:	e9 97 04 00 00       	jmpq   3480eab0 <__syscall_ret>
    3480e619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000003480e620 <__stdout_write>:
    3480e620:	48 83 ec 48          	sub    $0x48,%rsp
    3480e624:	49 89 d0             	mov    %rdx,%r8
    3480e627:	49 89 f1             	mov    %rsi,%r9
    3480e62a:	49 89 fa             	mov    %rdi,%r10
    3480e62d:	48 8d 05 cc 40 00 00 	lea    0x40cc(%rip),%rax        # 34812700 <__stdio_write>
    3480e634:	49 89 42 48          	mov    %rax,0x48(%r10)
    3480e638:	41 f6 02 40          	testb  $0x40,(%r10)
    3480e63c:	0f 85 26 00 00 00    	jne    3480e668 <__stdout_write+0x48>
    3480e642:	49 63 7a 78          	movslq 0x78(%r10),%rdi
    3480e646:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    3480e64b:	b8 10 00 00 00       	mov    $0x10,%eax
    3480e650:	be 01 54 00 00       	mov    $0x5401,%esi
    3480e655:	0f 05                	syscall 
    3480e657:	48 85 c0             	test   %rax,%rax
    3480e65a:	0f 84 08 00 00 00    	je     3480e668 <__stdout_write+0x48>
    3480e660:	41 c6 82 8b 00 00 00 	movb   $0xff,0x8b(%r10)
    3480e667:	ff 
    3480e668:	4c 89 d7             	mov    %r10,%rdi
    3480e66b:	4c 89 ce             	mov    %r9,%rsi
    3480e66e:	4c 89 c2             	mov    %r8,%rdx
    3480e671:	e8 8a 40 00 00       	callq  34812700 <__stdio_write>
    3480e676:	48 83 c4 48          	add    $0x48,%rsp
    3480e67a:	c3                   	retq   
    3480e67b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480e680 <__towrite>:
    3480e680:	8a 87 8a 00 00 00    	mov    0x8a(%rdi),%al
    3480e686:	89 c1                	mov    %eax,%ecx
    3480e688:	fe c9                	dec    %cl
    3480e68a:	08 c1                	or     %al,%cl
    3480e68c:	88 8f 8a 00 00 00    	mov    %cl,0x8a(%rdi)
    3480e692:	8b 07                	mov    (%rdi),%eax
    3480e694:	a8 08                	test   $0x8,%al
    3480e696:	0f 85 1e 00 00 00    	jne    3480e6ba <__towrite+0x3a>
    3480e69c:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480e69f:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
    3480e6a3:	48 8b 47 58          	mov    0x58(%rdi),%rax
    3480e6a7:	48 89 47 38          	mov    %rax,0x38(%rdi)
    3480e6ab:	48 89 47 28          	mov    %rax,0x28(%rdi)
    3480e6af:	48 03 47 60          	add    0x60(%rdi),%rax
    3480e6b3:	48 89 47 20          	mov    %rax,0x20(%rdi)
    3480e6b7:	31 c0                	xor    %eax,%eax
    3480e6b9:	c3                   	retq   
    3480e6ba:	83 c8 20             	or     $0x20,%eax
    3480e6bd:	89 07                	mov    %eax,(%rdi)
    3480e6bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3480e6c4:	c3                   	retq   
    3480e6c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3480e6cc:	00 00 00 00 

000000003480e6d0 <__towrite_needs_stdio_exit>:
    3480e6d0:	e9 eb 3e 00 00       	jmpq   348125c0 <__stdio_exit>
    3480e6d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480e6dc:	00 00 00 
    3480e6df:	90                   	nop

000000003480e6e0 <fputs>:
    3480e6e0:	41 54                	push   %r12
    3480e6e2:	53                   	push   %rbx
    3480e6e3:	50                   	push   %rax
    3480e6e4:	49 89 f4             	mov    %rsi,%r12
    3480e6e7:	48 89 fb             	mov    %rdi,%rbx
    3480e6ea:	e8 81 de ff ff       	callq  3480c570 <strlen>
    3480e6ef:	ba 01 00 00 00       	mov    $0x1,%edx
    3480e6f4:	48 89 df             	mov    %rbx,%rdi
    3480e6f7:	48 89 c6             	mov    %rax,%rsi
    3480e6fa:	4c 89 e1             	mov    %r12,%rcx
    3480e6fd:	e8 2e 01 00 00       	callq  3480e830 <fwrite>
    3480e702:	ff c8                	dec    %eax
    3480e704:	48 83 c4 08          	add    $0x8,%rsp
    3480e708:	5b                   	pop    %rbx
    3480e709:	41 5c                	pop    %r12
    3480e70b:	c3                   	retq   
    3480e70c:	0f 1f 40 00          	nopl   0x0(%rax)

000000003480e710 <__fwritex>:
    3480e710:	41 54                	push   %r12
    3480e712:	53                   	push   %rbx
    3480e713:	48 83 ec 18          	sub    $0x18,%rsp
    3480e717:	48 89 d3             	mov    %rdx,%rbx
    3480e71a:	48 89 f1             	mov    %rsi,%rcx
    3480e71d:	49 89 f8             	mov    %rdi,%r8
    3480e720:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e724:	48 85 c0             	test   %rax,%rax
    3480e727:	0f 84 9f 00 00 00    	je     3480e7cc <__fwritex+0xbc>
    3480e72d:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    3480e731:	48 29 f8             	sub    %rdi,%rax
    3480e734:	48 39 c8             	cmp    %rcx,%rax
    3480e737:	0f 83 16 00 00 00    	jae    3480e753 <__fwritex+0x43>
    3480e73d:	48 8b 43 48          	mov    0x48(%rbx),%rax
    3480e741:	48 89 df             	mov    %rbx,%rdi
    3480e744:	4c 89 c6             	mov    %r8,%rsi
    3480e747:	48 89 ca             	mov    %rcx,%rdx
    3480e74a:	48 83 c4 18          	add    $0x18,%rsp
    3480e74e:	5b                   	pop    %rbx
    3480e74f:	41 5c                	pop    %r12
    3480e751:	ff e0                	jmpq   *%rax
    3480e753:	80 bb 8b 00 00 00 00 	cmpb   $0x0,0x8b(%rbx)
    3480e75a:	0f 88 9f 00 00 00    	js     3480e7ff <__fwritex+0xef>
    3480e760:	48 89 de             	mov    %rbx,%rsi
    3480e763:	49 8d 1c 08          	lea    (%r8,%rcx,1),%rbx
    3480e767:	45 31 e4             	xor    %r12d,%r12d
    3480e76a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480e770:	48 89 c8             	mov    %rcx,%rax
    3480e773:	4c 01 e0             	add    %r12,%rax
    3480e776:	0f 84 80 00 00 00    	je     3480e7fc <__fwritex+0xec>
    3480e77c:	42 80 7c 23 ff 0a    	cmpb   $0xa,-0x1(%rbx,%r12,1)
    3480e782:	4d 8d 64 24 ff       	lea    -0x1(%r12),%r12
    3480e787:	0f 85 e3 ff ff ff    	jne    3480e770 <__fwritex+0x60>
    3480e78d:	4a 8d 54 21 01       	lea    0x1(%rcx,%r12,1),%rdx
    3480e792:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    3480e797:	48 89 f7             	mov    %rsi,%rdi
    3480e79a:	4c 89 c6             	mov    %r8,%rsi
    3480e79d:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
    3480e7a2:	ff 57 48             	callq  *0x48(%rdi)
    3480e7a5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480e7aa:	48 39 c8             	cmp    %rcx,%rax
    3480e7ad:	0f 82 6d 00 00 00    	jb     3480e820 <__fwritex+0x110>
    3480e7b3:	4d 8d 44 1c 01       	lea    0x1(%r12,%rbx,1),%r8
    3480e7b8:	49 f7 d4             	not    %r12
    3480e7bb:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    3480e7c0:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    3480e7c4:	4c 89 e1             	mov    %r12,%rcx
    3480e7c7:	e9 3a 00 00 00       	jmpq   3480e806 <__fwritex+0xf6>
    3480e7cc:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    3480e7d1:	4d 89 c4             	mov    %r8,%r12
    3480e7d4:	48 89 df             	mov    %rbx,%rdi
    3480e7d7:	e8 a4 fe ff ff       	callq  3480e680 <__towrite>
    3480e7dc:	85 c0                	test   %eax,%eax
    3480e7de:	0f 84 07 00 00 00    	je     3480e7eb <__fwritex+0xdb>
    3480e7e4:	31 c9                	xor    %ecx,%ecx
    3480e7e6:	e9 35 00 00 00       	jmpq   3480e820 <__fwritex+0x110>
    3480e7eb:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e7ef:	4d 89 e0             	mov    %r12,%r8
    3480e7f2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480e7f7:	e9 31 ff ff ff       	jmpq   3480e72d <__fwritex+0x1d>
    3480e7fc:	48 89 f3             	mov    %rsi,%rbx
    3480e7ff:	31 c0                	xor    %eax,%eax
    3480e801:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3480e806:	4c 89 c6             	mov    %r8,%rsi
    3480e809:	48 89 ca             	mov    %rcx,%rdx
    3480e80c:	49 89 cc             	mov    %rcx,%r12
    3480e80f:	e8 0c cf ff ff       	callq  3480b720 <memcpy>
    3480e814:	4c 01 63 28          	add    %r12,0x28(%rbx)
    3480e818:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    3480e81d:	4c 01 e1             	add    %r12,%rcx
    3480e820:	48 89 c8             	mov    %rcx,%rax
    3480e823:	48 83 c4 18          	add    $0x18,%rsp
    3480e827:	5b                   	pop    %rbx
    3480e828:	41 5c                	pop    %r12
    3480e82a:	c3                   	retq   
    3480e82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000003480e830 <fwrite>:
    3480e830:	41 54                	push   %r12
    3480e832:	53                   	push   %rbx
    3480e833:	48 83 ec 38          	sub    $0x38,%rsp
    3480e837:	48 89 cb             	mov    %rcx,%rbx
    3480e83a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    3480e83f:	49 89 f4             	mov    %rsi,%r12
    3480e842:	48 89 fe             	mov    %rdi,%rsi
    3480e845:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    3480e84c:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
    3480e851:	0f 88 21 00 00 00    	js     3480e878 <fwrite+0x48>
    3480e857:	48 89 df             	mov    %rbx,%rdi
    3480e85a:	49 89 f4             	mov    %rsi,%r12
    3480e85d:	e8 9e fc ff ff       	callq  3480e500 <__lockfile>
    3480e862:	4c 89 e6             	mov    %r12,%rsi
    3480e865:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    3480e86a:	85 c0                	test   %eax,%eax
    3480e86c:	0f 95 c0             	setne  %al
    3480e86f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3480e873:	e9 08 00 00 00       	jmpq   3480e880 <fwrite+0x50>
    3480e878:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    3480e87f:	00 
    3480e880:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480e885:	49 0f af cc          	imul   %r12,%rcx
    3480e889:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e88d:	48 85 c0             	test   %rax,%rax
    3480e890:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    3480e895:	0f 84 d5 00 00 00    	je     3480e970 <fwrite+0x140>
    3480e89b:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    3480e89f:	48 29 f8             	sub    %rdi,%rax
    3480e8a2:	48 39 c8             	cmp    %rcx,%rax
    3480e8a5:	0f 83 46 00 00 00    	jae    3480e8f1 <fwrite+0xc1>
    3480e8ab:	48 89 df             	mov    %rbx,%rdi
    3480e8ae:	48 89 ca             	mov    %rcx,%rdx
    3480e8b1:	ff 53 48             	callq  *0x48(%rbx)
    3480e8b4:	49 89 c4             	mov    %rax,%r12
    3480e8b7:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    3480e8bc:	0f 84 08 00 00 00    	je     3480e8ca <fwrite+0x9a>
    3480e8c2:	48 89 df             	mov    %rbx,%rdi
    3480e8c5:	e8 46 fc ff ff       	callq  3480e510 <__unlockfile>
    3480e8ca:	4c 3b 64 24 30       	cmp    0x30(%rsp),%r12
    3480e8cf:	0f 84 0f 00 00 00    	je     3480e8e4 <fwrite+0xb4>
    3480e8d5:	31 d2                	xor    %edx,%edx
    3480e8d7:	4c 89 e0             	mov    %r12,%rax
    3480e8da:	48 f7 74 24 28       	divq   0x28(%rsp)
    3480e8df:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3480e8e4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3480e8e9:	48 83 c4 38          	add    $0x38,%rsp
    3480e8ed:	5b                   	pop    %rbx
    3480e8ee:	41 5c                	pop    %r12
    3480e8f0:	c3                   	retq   
    3480e8f1:	80 bb 8b 00 00 00 00 	cmpb   $0x0,0x8b(%rbx)
    3480e8f8:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    3480e8fd:	0f 88 95 00 00 00    	js     3480e998 <fwrite+0x168>
    3480e903:	48 8d 1c 0e          	lea    (%rsi,%rcx,1),%rbx
    3480e907:	45 31 e4             	xor    %r12d,%r12d
    3480e90a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480e910:	48 89 c8             	mov    %rcx,%rax
    3480e913:	4c 01 e0             	add    %r12,%rax
    3480e916:	0f 84 99 00 00 00    	je     3480e9b5 <fwrite+0x185>
    3480e91c:	42 80 7c 23 ff 0a    	cmpb   $0xa,-0x1(%rbx,%r12,1)
    3480e922:	4d 8d 64 24 ff       	lea    -0x1(%r12),%r12
    3480e927:	0f 85 e3 ff ff ff    	jne    3480e910 <fwrite+0xe0>
    3480e92d:	4a 8d 54 21 01       	lea    0x1(%rcx,%r12,1),%rdx
    3480e932:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    3480e937:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480e93c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3480e941:	ff 50 48             	callq  *0x48(%rax)
    3480e944:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    3480e949:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    3480e94e:	48 89 d1             	mov    %rdx,%rcx
    3480e951:	48 39 d0             	cmp    %rdx,%rax
    3480e954:	0f 83 65 00 00 00    	jae    3480e9bf <fwrite+0x18f>
    3480e95a:	48 89 fb             	mov    %rdi,%rbx
    3480e95d:	49 89 cc             	mov    %rcx,%r12
    3480e960:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    3480e965:	0f 85 57 ff ff ff    	jne    3480e8c2 <fwrite+0x92>
    3480e96b:	e9 5a ff ff ff       	jmpq   3480e8ca <fwrite+0x9a>
    3480e970:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    3480e975:	48 89 df             	mov    %rbx,%rdi
    3480e978:	e8 03 fd ff ff       	callq  3480e680 <__towrite>
    3480e97d:	85 c0                	test   %eax,%eax
    3480e97f:	0f 84 1d 00 00 00    	je     3480e9a2 <fwrite+0x172>
    3480e985:	45 31 e4             	xor    %r12d,%r12d
    3480e988:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    3480e98d:	0f 85 2f ff ff ff    	jne    3480e8c2 <fwrite+0x92>
    3480e993:	e9 32 ff ff ff       	jmpq   3480e8ca <fwrite+0x9a>
    3480e998:	31 db                	xor    %ebx,%ebx
    3480e99a:	49 89 cc             	mov    %rcx,%r12
    3480e99d:	e9 2c 00 00 00       	jmpq   3480e9ce <fwrite+0x19e>
    3480e9a2:	48 8b 43 20          	mov    0x20(%rbx),%rax
    3480e9a6:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    3480e9ab:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    3480e9b0:	e9 e6 fe ff ff       	jmpq   3480e89b <fwrite+0x6b>
    3480e9b5:	49 89 cc             	mov    %rcx,%r12
    3480e9b8:	31 db                	xor    %ebx,%ebx
    3480e9ba:	e9 0f 00 00 00       	jmpq   3480e9ce <fwrite+0x19e>
    3480e9bf:	49 8d 74 1c 01       	lea    0x1(%r12,%rbx,1),%rsi
    3480e9c4:	49 f7 d4             	not    %r12
    3480e9c7:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
    3480e9cb:	48 89 cb             	mov    %rcx,%rbx
    3480e9ce:	4c 89 e2             	mov    %r12,%rdx
    3480e9d1:	e8 4a cd ff ff       	callq  3480b720 <memcpy>
    3480e9d6:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3480e9db:	4c 01 60 28          	add    %r12,0x28(%rax)
    3480e9df:	4c 01 e3             	add    %r12,%rbx
    3480e9e2:	49 89 dc             	mov    %rbx,%r12
    3480e9e5:	48 89 c3             	mov    %rax,%rbx
    3480e9e8:	80 7c 24 0c 00       	cmpb   $0x0,0xc(%rsp)
    3480e9ed:	0f 85 cf fe ff ff    	jne    3480e8c2 <fwrite+0x92>
    3480e9f3:	e9 d2 fe ff ff       	jmpq   3480e8ca <fwrite+0x9a>
    3480e9f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480e9ff:	00 

000000003480ea00 <printf>:
    3480ea00:	53                   	push   %rbx
    3480ea01:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    3480ea08:	49 89 fa             	mov    %rdi,%r10
    3480ea0b:	84 c0                	test   %al,%al
    3480ea0d:	0f 84 37 00 00 00    	je     3480ea4a <printf+0x4a>
    3480ea13:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    3480ea18:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    3480ea1d:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    3480ea22:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
    3480ea29:	00 
    3480ea2a:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
    3480ea31:	00 
    3480ea32:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
    3480ea39:	00 
    3480ea3a:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
    3480ea41:	00 
    3480ea42:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
    3480ea49:	00 
    3480ea4a:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    3480ea4f:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    3480ea54:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    3480ea59:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    3480ea5e:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    3480ea63:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    3480ea68:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480ea6d:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    3480ea74:	00 
    3480ea75:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3480ea7a:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
    3480ea81:	00 
    3480ea82:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    3480ea89:	48 8d 1d 70 91 b0 00 	lea    0xb09170(%rip),%rbx        # 35317c00 <buff>
    3480ea90:	48 89 e2             	mov    %rsp,%rdx
    3480ea93:	48 89 df             	mov    %rbx,%rdi
    3480ea96:	4c 89 d6             	mov    %r10,%rsi
    3480ea99:	e8 02 e3 ff ff       	callq  3480cda0 <vsprintf>
    3480ea9e:	48 89 df             	mov    %rbx,%rdi
    3480eaa1:	e8 1a de ff ff       	callq  3480c8c0 <puts>
    3480eaa6:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    3480eaad:	5b                   	pop    %rbx
    3480eaae:	c3                   	retq   
    3480eaaf:	90                   	nop

000000003480eab0 <__syscall_ret>:
    3480eab0:	53                   	push   %rbx
    3480eab1:	48 89 fb             	mov    %rdi,%rbx
    3480eab4:	48 81 fb 01 f0 ff ff 	cmp    $0xfffffffffffff001,%rbx
    3480eabb:	0f 82 10 00 00 00    	jb     3480ead1 <__syscall_ret+0x21>
    3480eac1:	f7 db                	neg    %ebx
    3480eac3:	e8 98 e3 ff ff       	callq  3480ce60 <__errno_location>
    3480eac8:	89 18                	mov    %ebx,(%rax)
    3480eaca:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    3480ead1:	48 89 d8             	mov    %rbx,%rax
    3480ead4:	5b                   	pop    %rbx
    3480ead5:	c3                   	retq   
    3480ead6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480eadd:	00 00 00 

000000003480eae0 <vfprintf>:
    3480eae0:	41 54                	push   %r12
    3480eae2:	53                   	push   %rbx
    3480eae3:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    3480eaea:	49 89 f4             	mov    %rsi,%r12
    3480eaed:	48 89 fb             	mov    %rdi,%rbx
    3480eaf0:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480eaf3:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    3480eaf8:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    3480eafd:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
    3480eb04:	00 00 
    3480eb06:	48 8b 42 10          	mov    0x10(%rdx),%rax
    3480eb0a:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3480eb0f:	0f 10 02             	movups (%rdx),%xmm0
    3480eb12:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    3480eb17:	31 c0                	xor    %eax,%eax
    3480eb19:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3480eb1e:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    3480eb23:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
    3480eb2a:	00 
    3480eb2b:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    3480eb30:	bf 00 00 00 00       	mov    $0x0,%edi
    3480eb35:	e8 56 01 00 00       	callq  3480ec90 <printf_core>
    3480eb3a:	85 c0                	test   %eax,%eax
    3480eb3c:	0f 88 64 00 00 00    	js     3480eba6 <vfprintf+0xc6>
    3480eb42:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    3480eb49:	0f 88 0d 00 00 00    	js     3480eb5c <vfprintf+0x7c>
    3480eb4f:	48 89 df             	mov    %rbx,%rdi
    3480eb52:	e8 a9 f9 ff ff       	callq  3480e500 <__lockfile>
    3480eb57:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3480eb5c:	8b 0b                	mov    (%rbx),%ecx
    3480eb5e:	80 bb 8a 00 00 00 00 	cmpb   $0x0,0x8a(%rbx)
    3480eb65:	0f 8f 07 00 00 00    	jg     3480eb72 <vfprintf+0x92>
    3480eb6b:	89 c8                	mov    %ecx,%eax
    3480eb6d:	83 e0 df             	and    $0xffffffdf,%eax
    3480eb70:	89 03                	mov    %eax,(%rbx)
    3480eb72:	83 e1 20             	and    $0x20,%ecx
    3480eb75:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    3480eb79:	48 83 7b 60 00       	cmpq   $0x0,0x60(%rbx)
    3480eb7e:	0f 84 2d 00 00 00    	je     3480ebb1 <vfprintf+0xd1>
    3480eb84:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    3480eb89:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
    3480eb90:	00 
    3480eb91:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    3480eb96:	48 89 df             	mov    %rbx,%rdi
    3480eb99:	4c 89 e6             	mov    %r12,%rsi
    3480eb9c:	e8 ef 00 00 00       	callq  3480ec90 <printf_core>
    3480eba1:	e9 9b 00 00 00       	jmpq   3480ec41 <vfprintf+0x161>
    3480eba6:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    3480ebac:	e9 c2 00 00 00       	jmpq   3480ec73 <vfprintf+0x193>
    3480ebb1:	48 8b 43 58          	mov    0x58(%rbx),%rax
    3480ebb5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3480ebba:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
    3480ebbf:	48 89 43 58          	mov    %rax,0x58(%rbx)
    3480ebc3:	48 89 43 38          	mov    %rax,0x38(%rbx)
    3480ebc7:	48 89 43 28          	mov    %rax,0x28(%rbx)
    3480ebcb:	48 c7 43 60 50 00 00 	movq   $0x50,0x60(%rbx)
    3480ebd2:	00 
    3480ebd3:	48 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%rax
    3480ebda:	00 
    3480ebdb:	48 89 43 20          	mov    %rax,0x20(%rbx)
    3480ebdf:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    3480ebe4:	48 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%rcx
    3480ebeb:	00 
    3480ebec:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    3480ebf1:	48 89 df             	mov    %rbx,%rdi
    3480ebf4:	4c 89 e6             	mov    %r12,%rsi
    3480ebf7:	e8 94 00 00 00       	callq  3480ec90 <printf_core>
    3480ebfc:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    3480ec02:	0f 84 39 00 00 00    	je     3480ec41 <vfprintf+0x161>
    3480ec08:	31 f6                	xor    %esi,%esi
    3480ec0a:	41 89 c4             	mov    %eax,%r12d
    3480ec0d:	31 d2                	xor    %edx,%edx
    3480ec0f:	48 89 df             	mov    %rbx,%rdi
    3480ec12:	ff 53 48             	callq  *0x48(%rbx)
    3480ec15:	44 89 e0             	mov    %r12d,%eax
    3480ec18:	48 83 7b 28 01       	cmpq   $0x1,0x28(%rbx)
    3480ec1d:	19 c9                	sbb    %ecx,%ecx
    3480ec1f:	09 c8                	or     %ecx,%eax
    3480ec21:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    3480ec26:	48 89 4b 58          	mov    %rcx,0x58(%rbx)
    3480ec2a:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
    3480ec31:	00 
    3480ec32:	48 c7 43 38 00 00 00 	movq   $0x0,0x38(%rbx)
    3480ec39:	00 
    3480ec3a:	0f 57 c0             	xorps  %xmm0,%xmm0
    3480ec3d:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
    3480ec41:	8b 13                	mov    (%rbx),%edx
    3480ec43:	89 d1                	mov    %edx,%ecx
    3480ec45:	83 e1 20             	and    $0x20,%ecx
    3480ec48:	83 f9 01             	cmp    $0x1,%ecx
    3480ec4b:	45 19 e4             	sbb    %r12d,%r12d
    3480ec4e:	41 f7 d4             	not    %r12d
    3480ec51:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    3480ec55:	09 d1                	or     %edx,%ecx
    3480ec57:	89 0b                	mov    %ecx,(%rbx)
    3480ec59:	83 7c 24 18 00       	cmpl   $0x0,0x18(%rsp)
    3480ec5e:	0f 84 0c 00 00 00    	je     3480ec70 <vfprintf+0x190>
    3480ec64:	48 89 df             	mov    %rbx,%rdi
    3480ec67:	89 c3                	mov    %eax,%ebx
    3480ec69:	e8 a2 f8 ff ff       	callq  3480e510 <__unlockfile>
    3480ec6e:	89 d8                	mov    %ebx,%eax
    3480ec70:	41 09 c4             	or     %eax,%r12d
    3480ec73:	44 89 e0             	mov    %r12d,%eax
    3480ec76:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    3480ec7d:	5b                   	pop    %rbx
    3480ec7e:	41 5c                	pop    %r12
    3480ec80:	c3                   	retq   
    3480ec81:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480ec88:	0f 1f 84 00 00 00 00 
    3480ec8f:	00 

000000003480ec90 <printf_core>:
    3480ec90:	41 54                	push   %r12
    3480ec92:	53                   	push   %rbx
    3480ec93:	48 81 ec 78 02 00 00 	sub    $0x278,%rsp
    3480ec9a:	4c 89 84 24 e0 00 00 	mov    %r8,0xe0(%rsp)
    3480eca1:	00 
    3480eca2:	48 89 8c 24 88 00 00 	mov    %rcx,0x88(%rsp)
    3480eca9:	00 
    3480ecaa:	48 89 94 24 f8 00 00 	mov    %rdx,0xf8(%rsp)
    3480ecb1:	00 
    3480ecb2:	49 89 f0             	mov    %rsi,%r8
    3480ecb5:	49 89 f9             	mov    %rdi,%r9
    3480ecb8:	48 8d 84 24 a0 00 00 	lea    0xa0(%rsp),%rax
    3480ecbf:	00 
    3480ecc0:	48 c7 c1 fe ff ff ff 	mov    $0xfffffffffffffffe,%rcx
    3480ecc7:	48 29 c1             	sub    %rax,%rcx
    3480ecca:	48 89 8c 24 50 01 00 	mov    %rcx,0x150(%rsp)
    3480ecd1:	00 
    3480ecd2:	48 89 c1             	mov    %rax,%rcx
    3480ecd5:	48 f7 d1             	not    %rcx
    3480ecd8:	48 89 8c 24 58 01 00 	mov    %rcx,0x158(%rsp)
    3480ecdf:	00 
    3480ece0:	48 f7 d8             	neg    %rax
    3480ece3:	48 89 84 24 40 01 00 	mov    %rax,0x140(%rsp)
    3480ecea:	00 
    3480eceb:	4c 8d 15 1e 71 00 00 	lea    0x711e(%rip),%r10        # 34815e10 <states>
    3480ecf2:	c7 84 24 c4 00 00 00 	movl   $0x0,0xc4(%rsp)
    3480ecf9:	00 00 00 00 
    3480ecfd:	31 f6                	xor    %esi,%esi
    3480ecff:	31 c9                	xor    %ecx,%ecx
    3480ed01:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
    3480ed06:	e9 c5 12 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480ed0b:	a8 20                	test   $0x20,%al
    3480ed0d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ed12:	0f 85 3c 00 00 00    	jne    3480ed54 <printf_core+0xc4>
    3480ed18:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480ed1c:	e9 16 00 00 00       	jmpq   3480ed37 <printf_core+0xa7>
    3480ed21:	8b 74 24 74          	mov    0x74(%rsp),%esi
    3480ed25:	e9 a6 12 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480ed2a:	a8 20                	test   $0x20,%al
    3480ed2c:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ed31:	0f 85 1d 00 00 00    	jne    3480ed54 <printf_core+0xc4>
    3480ed37:	49 63 f4             	movslq %r12d,%rsi
    3480ed3a:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480ed41:	00 
    3480ed42:	4c 89 ca             	mov    %r9,%rdx
    3480ed45:	e8 c6 f9 ff ff       	callq  3480e710 <__fwritex>
    3480ed4a:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ed4f:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480ed54:	4c 8d 15 b5 70 00 00 	lea    0x70b5(%rip),%r10        # 34815e10 <states>
    3480ed5b:	8b 74 24 74          	mov    0x74(%rsp),%esi
    3480ed5f:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ed64:	e9 3a 12 00 00       	jmpq   3480ffa3 <printf_core+0x1313>
    3480ed69:	31 c9                	xor    %ecx,%ecx
    3480ed6b:	e9 50 00 00 00       	jmpq   3480edc0 <printf_core+0x130>
    3480ed70:	80 fb 06             	cmp    $0x6,%bl
    3480ed73:	0f 84 09 00 00 00    	je     3480ed82 <printf_core+0xf2>
    3480ed79:	80 fb 07             	cmp    $0x7,%bl
    3480ed7c:	0f 85 28 2d 00 00    	jne    34811aaa <printf_core+0x2e1a>
    3480ed82:	48 63 c6             	movslq %esi,%rax
    3480ed85:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    3480ed8c:	00 
    3480ed8d:	48 89 01             	mov    %rax,(%rcx)
    3480ed90:	31 c9                	xor    %ecx,%ecx
    3480ed92:	e9 39 12 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480ed97:	4c 8d 15 72 70 00 00 	lea    0x7072(%rip),%r10        # 34815e10 <states>
    3480ed9e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480eda3:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480eda8:	85 c0                	test   %eax,%eax
    3480edaa:	0f 89 10 00 00 00    	jns    3480edc0 <printf_core+0x130>
    3480edb0:	e9 26 35 00 00       	jmpq   348122db <printf_core+0x364b>
    3480edb5:	48 89 d1             	mov    %rdx,%rcx
    3480edb8:	85 c0                	test   %eax,%eax
    3480edba:	0f 88 1b 35 00 00    	js     348122db <printf_core+0x364b>
    3480edc0:	81 64 24 1c 00 20 01 	andl   $0x12000,0x1c(%rsp)
    3480edc7:	00 
    3480edc8:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480edcd:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    3480edd2:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    3480edd7:	0f 85 0f 01 00 00    	jne    3480eeec <printf_core+0x25c>
    3480eddd:	29 c8                	sub    %ecx,%eax
    3480eddf:	0f 8e 07 01 00 00    	jle    3480eeec <printf_core+0x25c>
    3480ede5:	89 44 24 38          	mov    %eax,0x38(%rsp)
    3480ede9:	48 63 d8             	movslq %eax,%rbx
    3480edec:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3480edf3:	ba 00 01 00 00       	mov    $0x100,%edx
    3480edf8:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3480edfc:	be 20 00 00 00       	mov    $0x20,%esi
    3480ee01:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480ee08:	00 
    3480ee09:	e8 7f c9 ff ff       	callq  3480b78d <memset>
    3480ee0e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480ee13:	8b 02                	mov    (%rdx),%eax
    3480ee15:	a8 20                	test   $0x20,%al
    3480ee17:	0f 94 c1             	sete   %cl
    3480ee1a:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480ee20:	0f 82 83 00 00 00    	jb     3480eea9 <printf_core+0x219>
    3480ee26:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
    3480ee2a:	4c 8d 15 df 6f 00 00 	lea    0x6fdf(%rip),%r10        # 34815e10 <states>
    3480ee31:	8b 74 24 74          	mov    0x74(%rsp),%esi
    3480ee35:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ee3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480ee40:	f6 c1 01             	test   $0x1,%cl
    3480ee43:	0f 84 30 00 00 00    	je     3480ee79 <printf_core+0x1e9>
    3480ee49:	41 89 f4             	mov    %esi,%r12d
    3480ee4c:	be 00 01 00 00       	mov    $0x100,%esi
    3480ee51:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480ee58:	00 
    3480ee59:	e8 b2 f8 ff ff       	callq  3480e710 <__fwritex>
    3480ee5e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ee63:	44 89 e6             	mov    %r12d,%esi
    3480ee66:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
    3480ee6b:	4c 8d 15 9e 6f 00 00 	lea    0x6f9e(%rip),%r10        # 34815e10 <states>
    3480ee72:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480ee77:	8b 02                	mov    (%rdx),%eax
    3480ee79:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480ee7f:	a8 20                	test   $0x20,%al
    3480ee81:	0f 94 c1             	sete   %cl
    3480ee84:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480ee8a:	0f 87 b0 ff ff ff    	ja     3480ee40 <printf_core+0x1b0>
    3480ee90:	a8 20                	test   $0x20,%al
    3480ee92:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ee97:	8b 44 24 38          	mov    0x38(%rsp),%eax
    3480ee9b:	0f 85 4b 00 00 00    	jne    3480eeec <printf_core+0x25c>
    3480eea1:	0f b6 c0             	movzbl %al,%eax
    3480eea4:	e9 1d 00 00 00       	jmpq   3480eec6 <printf_core+0x236>
    3480eea9:	a8 20                	test   $0x20,%al
    3480eeab:	4c 8d 15 5e 6f 00 00 	lea    0x6f5e(%rip),%r10        # 34815e10 <states>
    3480eeb2:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480eeb7:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480eebc:	8b 44 24 38          	mov    0x38(%rsp),%eax
    3480eec0:	0f 85 26 00 00 00    	jne    3480eeec <printf_core+0x25c>
    3480eec6:	48 63 f0             	movslq %eax,%rsi
    3480eec9:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480eed0:	00 
    3480eed1:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480eed6:	e8 35 f8 ff ff       	callq  3480e710 <__fwritex>
    3480eedb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480eee0:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480eee5:	4c 8d 15 24 6f 00 00 	lea    0x6f24(%rip),%r10        # 34815e10 <states>
    3480eeec:	85 c9                	test   %ecx,%ecx
    3480eeee:	0f 84 80 00 00 00    	je     3480ef74 <printf_core+0x2e4>
    3480eef4:	31 db                	xor    %ebx,%ebx
    3480eef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480eefd:	00 00 00 
    3480ef00:	41 8b 34 24          	mov    (%r12),%esi
    3480ef04:	85 f6                	test   %esi,%esi
    3480ef06:	0f 84 68 00 00 00    	je     3480ef74 <printf_core+0x2e4>
    3480ef0c:	48 8d bc 24 ec 00 00 	lea    0xec(%rsp),%rdi
    3480ef13:	00 
    3480ef14:	e8 17 36 00 00       	callq  34812530 <wctomb>
    3480ef19:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ef1e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ef23:	4c 8d 15 e6 6e 00 00 	lea    0x6ee6(%rip),%r10        # 34815e10 <states>
    3480ef2a:	01 c3                	add    %eax,%ebx
    3480ef2c:	39 cb                	cmp    %ecx,%ebx
    3480ef2e:	0f 8f 40 00 00 00    	jg     3480ef74 <printf_core+0x2e4>
    3480ef34:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3480ef39:	f6 01 20             	testb  $0x20,(%rcx)
    3480ef3c:	0f 85 21 00 00 00    	jne    3480ef63 <printf_core+0x2d3>
    3480ef42:	48 63 f0             	movslq %eax,%rsi
    3480ef45:	48 8d bc 24 ec 00 00 	lea    0xec(%rsp),%rdi
    3480ef4c:	00 
    3480ef4d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480ef52:	e8 b9 f7 ff ff       	callq  3480e710 <__fwritex>
    3480ef57:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ef5c:	4c 8d 15 ad 6e 00 00 	lea    0x6ead(%rip),%r10        # 34815e10 <states>
    3480ef63:	49 83 c4 04          	add    $0x4,%r12
    3480ef67:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ef6c:	39 cb                	cmp    %ecx,%ebx
    3480ef6e:	0f 82 8c ff ff ff    	jb     3480ef00 <printf_core+0x270>
    3480ef74:	81 7c 24 1c 00 20 00 	cmpl   $0x2000,0x1c(%rsp)
    3480ef7b:	00 
    3480ef7c:	0f 85 f8 00 00 00    	jne    3480f07a <printf_core+0x3ea>
    3480ef82:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480ef87:	41 89 c4             	mov    %eax,%r12d
    3480ef8a:	41 29 cc             	sub    %ecx,%r12d
    3480ef8d:	0f 8e e7 00 00 00    	jle    3480f07a <printf_core+0x3ea>
    3480ef93:	49 63 dc             	movslq %r12d,%rbx
    3480ef96:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3480ef9d:	ba 00 01 00 00       	mov    $0x100,%edx
    3480efa2:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3480efa6:	be 20 00 00 00       	mov    $0x20,%esi
    3480efab:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480efb2:	00 
    3480efb3:	e8 d5 c7 ff ff       	callq  3480b78d <memset>
    3480efb8:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480efbd:	8b 02                	mov    (%rdx),%eax
    3480efbf:	a8 20                	test   $0x20,%al
    3480efc1:	0f 94 c1             	sete   %cl
    3480efc4:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480efca:	0f 82 6b 00 00 00    	jb     3480f03b <printf_core+0x3ab>
    3480efd0:	44 89 e3             	mov    %r12d,%ebx
    3480efd3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480efda:	84 00 00 00 00 00 
    3480efe0:	f6 c1 01             	test   $0x1,%cl
    3480efe3:	0f 84 19 00 00 00    	je     3480f002 <printf_core+0x372>
    3480efe9:	be 00 01 00 00       	mov    $0x100,%esi
    3480efee:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480eff5:	00 
    3480eff6:	e8 15 f7 ff ff       	callq  3480e710 <__fwritex>
    3480effb:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480f000:	8b 02                	mov    (%rdx),%eax
    3480f002:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480f008:	a8 20                	test   $0x20,%al
    3480f00a:	0f 94 c1             	sete   %cl
    3480f00d:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480f013:	0f 87 c7 ff ff ff    	ja     3480efe0 <printf_core+0x350>
    3480f019:	a8 20                	test   $0x20,%al
    3480f01b:	4c 8d 15 ee 6d 00 00 	lea    0x6dee(%rip),%r10        # 34815e10 <states>
    3480f022:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480f027:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f02c:	0f 85 48 00 00 00    	jne    3480f07a <printf_core+0x3ea>
    3480f032:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480f036:	e9 19 00 00 00       	jmpq   3480f054 <printf_core+0x3c4>
    3480f03b:	a8 20                	test   $0x20,%al
    3480f03d:	4c 8d 15 cc 6d 00 00 	lea    0x6dcc(%rip),%r10        # 34815e10 <states>
    3480f044:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480f049:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f04e:	0f 85 26 00 00 00    	jne    3480f07a <printf_core+0x3ea>
    3480f054:	49 63 f4             	movslq %r12d,%rsi
    3480f057:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f05e:	00 
    3480f05f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    3480f064:	e8 a7 f6 ff ff       	callq  3480e710 <__fwritex>
    3480f069:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f06e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480f073:	4c 8d 15 96 6d 00 00 	lea    0x6d96(%rip),%r10        # 34815e10 <states>
    3480f07a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480f07f:	39 c8                	cmp    %ecx,%eax
    3480f081:	0f 4d c8             	cmovge %eax,%ecx
    3480f084:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f089:	8b 74 24 74          	mov    0x74(%rsp),%esi
    3480f08d:	e9 3e 0f 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480f092:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    3480f099:	00 
    3480f09a:	48 8d 05 3f 6f 00 00 	lea    0x6f3f(%rip),%rax        # 34815fe0 <states+0x1d0>
    3480f0a1:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3480f0a6:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    3480f0ab:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3480f0b0:	e9 0e 24 00 00       	jmpq   348114c3 <printf_core+0x2833>
    3480f0b5:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f0bc:	00 
    3480f0bd:	45 29 c2             	sub    %r8d,%r10d
    3480f0c0:	44 89 16             	mov    %r10d,(%rsi)
    3480f0c3:	d8 c1                	fadd   %st(1),%st
    3480f0c5:	df e9                	fucomip %st(1),%st
    3480f0c7:	dd d8                	fstp   %st(0)
    3480f0c9:	0f 85 06 00 00 00    	jne    3480f0d5 <printf_core+0x445>
    3480f0cf:	0f 8b 71 00 00 00    	jnp    3480f146 <printf_core+0x4b6>
    3480f0d5:	41 01 ca             	add    %ecx,%r10d
    3480f0d8:	44 89 16             	mov    %r10d,(%rsi)
    3480f0db:	41 81 fa 00 ca 9a 3b 	cmp    $0x3b9aca00,%r10d
    3480f0e2:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f0e7:	0f 82 63 00 00 00    	jb     3480f150 <printf_core+0x4c0>
    3480f0ed:	49 81 c1 00 c0 ff ff 	add    $0xffffffffffffc000,%r9
    3480f0f4:	4b 8d 34 88          	lea    (%r8,%r9,4),%rsi
    3480f0f8:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f0fd:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f104:	cc cc cc 
    3480f107:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%rsi)
    3480f10e:	4c 89 e0             	mov    %r12,%rax
    3480f111:	48 39 c6             	cmp    %rax,%rsi
    3480f114:	0f 83 0e 00 00 00    	jae    3480f128 <printf_core+0x498>
    3480f11a:	c7 40 fc 00 00 00 00 	movl   $0x0,-0x4(%rax)
    3480f121:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    3480f125:	49 89 c4             	mov    %rax,%r12
    3480f128:	8b 06                	mov    (%rsi),%eax
    3480f12a:	ff c0                	inc    %eax
    3480f12c:	89 06                	mov    %eax,(%rsi)
    3480f12e:	48 83 c6 fc          	add    $0xfffffffffffffffc,%rsi
    3480f132:	3d ff c9 9a 3b       	cmp    $0x3b9ac9ff,%eax
    3480f137:	0f 87 ca ff ff ff    	ja     3480f107 <printf_core+0x477>
    3480f13d:	48 83 c6 04          	add    $0x4,%rsi
    3480f141:	e9 19 00 00 00       	jmpq   3480f15f <printf_core+0x4cf>
    3480f146:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f14b:	e9 43 00 00 00       	jmpq   3480f193 <printf_core+0x503>
    3480f150:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f155:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f15c:	cc cc cc 
    3480f15f:	4c 89 c0             	mov    %r8,%rax
    3480f162:	4c 89 e1             	mov    %r12,%rcx
    3480f165:	48 29 c8             	sub    %rcx,%rax
    3480f168:	48 c1 e8 02          	shr    $0x2,%rax
    3480f16c:	8d 3c c0             	lea    (%rax,%rax,8),%edi
    3480f16f:	8b 01                	mov    (%rcx),%eax
    3480f171:	83 f8 0a             	cmp    $0xa,%eax
    3480f174:	0f 82 28 00 00 00    	jb     3480f1a2 <printf_core+0x512>
    3480f17a:	b9 0a 00 00 00       	mov    $0xa,%ecx
    3480f17f:	01 c9                	add    %ecx,%ecx
    3480f181:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
    3480f184:	ff c7                	inc    %edi
    3480f186:	39 c8                	cmp    %ecx,%eax
    3480f188:	0f 83 f1 ff ff ff    	jae    3480f17f <printf_core+0x4ef>
    3480f18e:	e9 0f 00 00 00       	jmpq   3480f1a2 <printf_core+0x512>
    3480f193:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f19a:	cc cc cc 
    3480f19d:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f1a2:	48 83 c6 04          	add    $0x4,%rsi
    3480f1a6:	48 39 f2             	cmp    %rsi,%rdx
    3480f1a9:	48 0f 47 d6          	cmova  %rsi,%rdx
    3480f1ad:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    3480f1b2:	89 f9                	mov    %edi,%ecx
    3480f1b4:	f7 d9                	neg    %ecx
    3480f1b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480f1bd:	00 00 00 
    3480f1c0:	48 89 d0             	mov    %rdx,%rax
    3480f1c3:	4c 39 e0             	cmp    %r12,%rax
    3480f1c6:	0f 86 1c 00 00 00    	jbe    3480f1e8 <printf_core+0x558>
    3480f1cc:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
    3480f1d0:	83 78 fc 00          	cmpl   $0x0,-0x4(%rax)
    3480f1d4:	0f 84 e6 ff ff ff    	je     3480f1c0 <printf_core+0x530>
    3480f1da:	b2 01                	mov    $0x1,%dl
    3480f1dc:	89 94 24 d4 00 00 00 	mov    %edx,0xd4(%rsp)
    3480f1e3:	e9 0b 00 00 00       	jmpq   3480f1f3 <printf_core+0x563>
    3480f1e8:	c7 84 24 d4 00 00 00 	movl   $0x0,0xd4(%rsp)
    3480f1ef:	00 00 00 00 
    3480f1f3:	41 83 fb 67          	cmp    $0x67,%r11d
    3480f1f7:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f1fc:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3480f201:	0f 85 31 00 00 00    	jne    3480f238 <printf_core+0x5a8>
    3480f207:	41 83 fb 01          	cmp    $0x1,%r11d
    3480f20b:	41 83 d3 00          	adc    $0x0,%r11d
    3480f20f:	41 39 fb             	cmp    %edi,%r11d
    3480f212:	0f 8e 2e 00 00 00    	jle    3480f246 <printf_core+0x5b6>
    3480f218:	83 ff fc             	cmp    $0xfffffffc,%edi
    3480f21b:	0f 8c 25 00 00 00    	jl     3480f246 <printf_core+0x5b6>
    3480f221:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480f226:	ff c8                	dec    %eax
    3480f228:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3480f22d:	41 ff cb             	dec    %r11d
    3480f230:	41 29 fb             	sub    %edi,%r11d
    3480f233:	e9 1e 00 00 00       	jmpq   3480f256 <printf_core+0x5c6>
    3480f238:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3480f23c:	89 c6                	mov    %eax,%esi
    3480f23e:	83 e6 08             	and    $0x8,%esi
    3480f241:	e9 d2 00 00 00       	jmpq   3480f318 <printf_core+0x688>
    3480f246:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480f24b:	83 c0 fe             	add    $0xfffffffe,%eax
    3480f24e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3480f253:	41 ff cb             	dec    %r11d
    3480f256:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    3480f25a:	83 e0 08             	and    $0x8,%eax
    3480f25d:	0f 85 b2 00 00 00    	jne    3480f315 <printf_core+0x685>
    3480f263:	bb 09 00 00 00       	mov    $0x9,%ebx
    3480f268:	80 bc 24 d4 00 00 00 	cmpb   $0x0,0xd4(%rsp)
    3480f26f:	00 
    3480f270:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3480f275:	0f 84 4a 00 00 00    	je     3480f2c5 <printf_core+0x635>
    3480f27b:	44 8b 40 fc          	mov    -0x4(%rax),%r8d
    3480f27f:	45 85 c0             	test   %r8d,%r8d
    3480f282:	0f 84 3d 00 00 00    	je     3480f2c5 <printf_core+0x635>
    3480f288:	44 89 c0             	mov    %r8d,%eax
    3480f28b:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
    3480f290:	48 0f af c2          	imul   %rdx,%rax
    3480f294:	48 c1 e8 23          	shr    $0x23,%rax
    3480f298:	01 c0                	add    %eax,%eax
    3480f29a:	8d 04 80             	lea    (%rax,%rax,4),%eax
    3480f29d:	31 db                	xor    %ebx,%ebx
    3480f29f:	41 39 c0             	cmp    %eax,%r8d
    3480f2a2:	0f 85 1d 00 00 00    	jne    3480f2c5 <printf_core+0x635>
    3480f2a8:	31 db                	xor    %ebx,%ebx
    3480f2aa:	be 0a 00 00 00       	mov    $0xa,%esi
    3480f2af:	01 f6                	add    %esi,%esi
    3480f2b1:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
    3480f2b4:	ff c3                	inc    %ebx
    3480f2b6:	31 d2                	xor    %edx,%edx
    3480f2b8:	44 89 c0             	mov    %r8d,%eax
    3480f2bb:	f7 f6                	div    %esi
    3480f2bd:	85 d2                	test   %edx,%edx
    3480f2bf:	0f 84 ea ff ff ff    	je     3480f2af <printf_core+0x61f>
    3480f2c5:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480f2ca:	83 c8 20             	or     $0x20,%eax
    3480f2cd:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    3480f2d2:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f2d7:	4c 29 c2             	sub    %r8,%rdx
    3480f2da:	48 c1 fa 02          	sar    $0x2,%rdx
    3480f2de:	83 f8 66             	cmp    $0x66,%eax
    3480f2e1:	4d 63 db             	movslq %r11d,%r11
    3480f2e4:	48 8d 44 d2 f7       	lea    -0x9(%rdx,%rdx,8),%rax
    3480f2e9:	0f 84 06 00 00 00    	je     3480f2f5 <printf_core+0x665>
    3480f2ef:	48 63 d7             	movslq %edi,%rdx
    3480f2f2:	48 01 d0             	add    %rdx,%rax
    3480f2f5:	48 63 d3             	movslq %ebx,%rdx
    3480f2f8:	31 f6                	xor    %esi,%esi
    3480f2fa:	48 29 d0             	sub    %rdx,%rax
    3480f2fd:	48 0f 48 c6          	cmovs  %rsi,%rax
    3480f301:	4c 39 d8             	cmp    %r11,%rax
    3480f304:	44 0f 4e d8          	cmovle %eax,%r11d
    3480f308:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f30f:	00 
    3480f310:	e9 03 00 00 00       	jmpq   3480f318 <printf_core+0x688>
    3480f315:	48 89 c6             	mov    %rax,%rsi
    3480f318:	31 c0                	xor    %eax,%eax
    3480f31a:	44 89 da             	mov    %r11d,%edx
    3480f31d:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    3480f324:	00 
    3480f325:	09 f2                	or     %esi,%edx
    3480f327:	89 94 24 00 01 00 00 	mov    %edx,0x100(%rsp)
    3480f32e:	0f 95 c0             	setne  %al
    3480f331:	41 8d 54 03 01       	lea    0x1(%r11,%rax,1),%edx
    3480f336:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480f33b:	83 c8 20             	or     $0x20,%eax
    3480f33e:	89 84 24 04 01 00 00 	mov    %eax,0x104(%rsp)
    3480f345:	83 f8 66             	cmp    $0x66,%eax
    3480f348:	0f 85 19 00 00 00    	jne    3480f367 <printf_core+0x6d7>
    3480f34e:	85 ff                	test   %edi,%edi
    3480f350:	b8 00 00 00 00       	mov    $0x0,%eax
    3480f355:	0f 48 f8             	cmovs  %eax,%edi
    3480f358:	01 fa                	add    %edi,%edx
    3480f35a:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    3480f35f:	48 89 d1             	mov    %rdx,%rcx
    3480f362:	e9 d7 00 00 00       	jmpq   3480f43e <printf_core+0x7ae>
    3480f367:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    3480f36c:	85 ff                	test   %edi,%edi
    3480f36e:	0f 49 cf             	cmovns %edi,%ecx
    3480f371:	85 c9                	test   %ecx,%ecx
    3480f373:	4c 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%r8
    3480f37a:	00 
    3480f37b:	0f 84 42 00 00 00    	je     3480f3c3 <printf_core+0x733>
    3480f381:	48 63 c9             	movslq %ecx,%rcx
    3480f384:	4c 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%r8
    3480f38b:	00 
    3480f38c:	0f 1f 40 00          	nopl   0x0(%rax)
    3480f390:	48 89 c8             	mov    %rcx,%rax
    3480f393:	49 f7 e2             	mul    %r10
    3480f396:	89 d0                	mov    %edx,%eax
    3480f398:	c1 e8 02             	shr    $0x2,%eax
    3480f39b:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    3480f3a0:	8d 04 80             	lea    (%rax,%rax,4),%eax
    3480f3a3:	89 ce                	mov    %ecx,%esi
    3480f3a5:	29 c6                	sub    %eax,%esi
    3480f3a7:	40 80 ce 30          	or     $0x30,%sil
    3480f3ab:	41 88 70 ff          	mov    %sil,-0x1(%r8)
    3480f3af:	49 ff c8             	dec    %r8
    3480f3b2:	48 c1 ea 03          	shr    $0x3,%rdx
    3480f3b6:	48 83 f9 09          	cmp    $0x9,%rcx
    3480f3ba:	48 89 d1             	mov    %rdx,%rcx
    3480f3bd:	0f 87 cd ff ff ff    	ja     3480f390 <printf_core+0x700>
    3480f3c3:	48 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%rax
    3480f3ca:	00 
    3480f3cb:	4c 29 c0             	sub    %r8,%rax
    3480f3ce:	48 83 f8 01          	cmp    $0x1,%rax
    3480f3d2:	0f 8f 32 00 00 00    	jg     3480f40a <printf_core+0x77a>
    3480f3d8:	49 ff c8             	dec    %r8
    3480f3db:	48 8d 8c 24 d4 00 00 	lea    0xd4(%rsp),%rcx
    3480f3e2:	00 
    3480f3e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480f3ea:	84 00 00 00 00 00 
    3480f3f0:	41 c6 00 30          	movb   $0x30,(%r8)
    3480f3f4:	48 89 c8             	mov    %rcx,%rax
    3480f3f7:	4c 29 c0             	sub    %r8,%rax
    3480f3fa:	49 ff c8             	dec    %r8
    3480f3fd:	48 83 f8 02          	cmp    $0x2,%rax
    3480f401:	0f 8c e9 ff ff ff    	jl     3480f3f0 <printf_core+0x760>
    3480f407:	49 ff c0             	inc    %r8
    3480f40a:	c1 ef 1f             	shr    $0x1f,%edi
    3480f40d:	8d 44 3f 2b          	lea    0x2b(%rdi,%rdi,1),%eax
    3480f411:	41 88 40 ff          	mov    %al,-0x1(%r8)
    3480f415:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    3480f41a:	41 88 40 fe          	mov    %al,-0x2(%r8)
    3480f41e:	49 83 c0 fe          	add    $0xfffffffffffffffe,%r8
    3480f422:	48 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%rax
    3480f429:	00 
    3480f42a:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f42f:	01 c1                	add    %eax,%ecx
    3480f431:	4c 89 44 24 68       	mov    %r8,0x68(%rsp)
    3480f436:	44 29 c1             	sub    %r8d,%ecx
    3480f439:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f43e:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    3480f443:	03 8c 24 80 00 00 00 	add    0x80(%rsp),%ecx
    3480f44a:	81 64 24 1c 00 20 01 	andl   $0x12000,0x1c(%rsp)
    3480f451:	00 
    3480f452:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3480f457:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    3480f45c:	0f 85 37 01 00 00    	jne    3480f599 <printf_core+0x909>
    3480f462:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480f467:	41 89 c4             	mov    %eax,%r12d
    3480f46a:	41 29 cc             	sub    %ecx,%r12d
    3480f46d:	0f 8e 26 01 00 00    	jle    3480f599 <printf_core+0x909>
    3480f473:	49 63 dc             	movslq %r12d,%rbx
    3480f476:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3480f47d:	ba 00 01 00 00       	mov    $0x100,%edx
    3480f482:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3480f486:	be 20 00 00 00       	mov    $0x20,%esi
    3480f48b:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f492:	00 
    3480f493:	e8 f5 c2 ff ff       	callq  3480b78d <memset>
    3480f498:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f49d:	41 8b 01             	mov    (%r9),%eax
    3480f4a0:	a8 20                	test   $0x20,%al
    3480f4a2:	0f 94 c1             	sete   %cl
    3480f4a5:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480f4ab:	0f 82 8e 00 00 00    	jb     3480f53f <printf_core+0x8af>
    3480f4b1:	44 89 e3             	mov    %r12d,%ebx
    3480f4b4:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f4bb:	cc cc cc 
    3480f4be:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f4c3:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f4c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480f4cf:	00 
    3480f4d0:	f6 c1 01             	test   $0x1,%cl
    3480f4d3:	0f 84 31 00 00 00    	je     3480f50a <printf_core+0x87a>
    3480f4d9:	be 00 01 00 00       	mov    $0x100,%esi
    3480f4de:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f4e5:	00 
    3480f4e6:	4c 89 ca             	mov    %r9,%rdx
    3480f4e9:	e8 22 f2 ff ff       	callq  3480e710 <__fwritex>
    3480f4ee:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f4f3:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f4f8:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f4ff:	cc cc cc 
    3480f502:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f507:	41 8b 01             	mov    (%r9),%eax
    3480f50a:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480f510:	a8 20                	test   $0x20,%al
    3480f512:	0f 94 c1             	sete   %cl
    3480f515:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480f51b:	0f 87 af ff ff ff    	ja     3480f4d0 <printf_core+0x840>
    3480f521:	a8 20                	test   $0x20,%al
    3480f523:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f52a:	00 
    3480f52b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f530:	0f 85 63 00 00 00    	jne    3480f599 <printf_core+0x909>
    3480f536:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480f53a:	e9 29 00 00 00       	jmpq   3480f568 <printf_core+0x8d8>
    3480f53f:	a8 20                	test   $0x20,%al
    3480f541:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f548:	00 
    3480f549:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f550:	cc cc cc 
    3480f553:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f558:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f55d:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f562:	0f 85 31 00 00 00    	jne    3480f599 <printf_core+0x909>
    3480f568:	49 63 f4             	movslq %r12d,%rsi
    3480f56b:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f572:	00 
    3480f573:	4c 89 ca             	mov    %r9,%rdx
    3480f576:	e8 95 f1 ff ff       	callq  3480e710 <__fwritex>
    3480f57b:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f580:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f585:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f58a:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f591:	cc cc cc 
    3480f594:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f599:	41 f6 01 20          	testb  $0x20,(%r9)
    3480f59d:	0f 85 35 00 00 00    	jne    3480f5d8 <printf_core+0x948>
    3480f5a3:	8b b4 24 80 00 00 00 	mov    0x80(%rsp),%esi
    3480f5aa:	48 8b bc 24 d8 00 00 	mov    0xd8(%rsp),%rdi
    3480f5b1:	00 
    3480f5b2:	4c 89 ca             	mov    %r9,%rdx
    3480f5b5:	e8 56 f1 ff ff       	callq  3480e710 <__fwritex>
    3480f5ba:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f5bf:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480f5c4:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f5c9:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f5d0:	cc cc cc 
    3480f5d3:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f5d8:	81 7c 24 1c 00 00 01 	cmpl   $0x10000,0x1c(%rsp)
    3480f5df:	00 
    3480f5e0:	0f 85 24 01 00 00    	jne    3480f70a <printf_core+0xa7a>
    3480f5e6:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480f5eb:	41 89 c4             	mov    %eax,%r12d
    3480f5ee:	41 29 cc             	sub    %ecx,%r12d
    3480f5f1:	0f 8e 13 01 00 00    	jle    3480f70a <printf_core+0xa7a>
    3480f5f7:	49 63 dc             	movslq %r12d,%rbx
    3480f5fa:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3480f601:	ba 00 01 00 00       	mov    $0x100,%edx
    3480f606:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3480f60a:	be 30 00 00 00       	mov    $0x30,%esi
    3480f60f:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f616:	00 
    3480f617:	e8 71 c1 ff ff       	callq  3480b78d <memset>
    3480f61c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f621:	41 8b 01             	mov    (%r9),%eax
    3480f624:	a8 20                	test   $0x20,%al
    3480f626:	0f 94 c1             	sete   %cl
    3480f629:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480f62f:	0f 82 85 00 00 00    	jb     3480f6ba <printf_core+0xa2a>
    3480f635:	44 89 e3             	mov    %r12d,%ebx
    3480f638:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f63f:	cc cc cc 
    3480f642:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480f649:	1f 84 00 00 00 00 00 
    3480f650:	f6 c1 01             	test   $0x1,%cl
    3480f653:	0f 84 27 00 00 00    	je     3480f680 <printf_core+0x9f0>
    3480f659:	be 00 01 00 00       	mov    $0x100,%esi
    3480f65e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f665:	00 
    3480f666:	4c 89 ca             	mov    %r9,%rdx
    3480f669:	e8 a2 f0 ff ff       	callq  3480e710 <__fwritex>
    3480f66e:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f675:	cc cc cc 
    3480f678:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f67d:	41 8b 01             	mov    (%r9),%eax
    3480f680:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480f686:	a8 20                	test   $0x20,%al
    3480f688:	0f 94 c1             	sete   %cl
    3480f68b:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480f691:	0f 87 b9 ff ff ff    	ja     3480f650 <printf_core+0x9c0>
    3480f697:	a8 20                	test   $0x20,%al
    3480f699:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f6a0:	00 
    3480f6a1:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f6a6:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f6ab:	0f 85 59 00 00 00    	jne    3480f70a <printf_core+0xa7a>
    3480f6b1:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480f6b5:	e9 24 00 00 00       	jmpq   3480f6de <printf_core+0xa4e>
    3480f6ba:	a8 20                	test   $0x20,%al
    3480f6bc:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480f6c3:	00 
    3480f6c4:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f6cb:	cc cc cc 
    3480f6ce:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f6d3:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f6d8:	0f 85 2c 00 00 00    	jne    3480f70a <printf_core+0xa7a>
    3480f6de:	49 63 f4             	movslq %r12d,%rsi
    3480f6e1:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480f6e8:	00 
    3480f6e9:	4c 89 ca             	mov    %r9,%rdx
    3480f6ec:	e8 1f f0 ff ff       	callq  3480e710 <__fwritex>
    3480f6f1:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f6f6:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f6fb:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f702:	cc cc cc 
    3480f705:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f70a:	83 bc 24 04 01 00 00 	cmpl   $0x66,0x104(%rsp)
    3480f711:	66 
    3480f712:	66 0f 6f 0d b6 66 00 	movdqa 0x66b6(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480f719:	00 
    3480f71a:	0f 85 48 03 00 00    	jne    3480fa68 <printf_core+0xdd8>
    3480f720:	4c 8b 64 24 38       	mov    0x38(%rsp),%r12
    3480f725:	4d 39 c4             	cmp    %r8,%r12
    3480f728:	4d 0f 47 e0          	cmova  %r8,%r12
    3480f72c:	4c 89 64 24 38       	mov    %r12,0x38(%rsp)
    3480f731:	e9 3a 00 00 00       	jmpq   3480f770 <printf_core+0xae0>
    3480f736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480f73d:	00 00 00 
    3480f740:	48 85 f6             	test   %rsi,%rsi
    3480f743:	0f 85 07 00 00 00    	jne    3480f750 <printf_core+0xac0>
    3480f749:	c6 40 ff 30          	movb   $0x30,-0x1(%rax)
    3480f74d:	48 ff c8             	dec    %rax
    3480f750:	48 89 c7             	mov    %rax,%rdi
    3480f753:	41 f6 01 20          	testb  $0x20,(%r9)
    3480f757:	0f 84 00 01 00 00    	je     3480f85d <printf_core+0xbcd>
    3480f75d:	e9 2f 01 00 00       	jmpq   3480f891 <printf_core+0xc01>
    3480f762:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480f769:	1f 84 00 00 00 00 00 
    3480f770:	41 8b 0c 24          	mov    (%r12),%ecx
    3480f774:	31 f6                	xor    %esi,%esi
    3480f776:	48 85 c9             	test   %rcx,%rcx
    3480f779:	0f 84 38 00 00 00    	je     3480f7b7 <printf_core+0xb27>
    3480f77f:	90                   	nop
    3480f780:	48 89 c8             	mov    %rcx,%rax
    3480f783:	49 f7 e2             	mul    %r10
    3480f786:	89 d0                	mov    %edx,%eax
    3480f788:	c1 e8 02             	shr    $0x2,%eax
    3480f78b:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    3480f790:	8d 04 80             	lea    (%rax,%rax,4),%eax
    3480f793:	89 cf                	mov    %ecx,%edi
    3480f795:	29 c7                	sub    %eax,%edi
    3480f797:	40 80 cf 30          	or     $0x30,%dil
    3480f79b:	40 88 bc 34 a8 00 00 	mov    %dil,0xa8(%rsp,%rsi,1)
    3480f7a2:	00 
    3480f7a3:	48 ff ce             	dec    %rsi
    3480f7a6:	48 c1 ea 03          	shr    $0x3,%rdx
    3480f7aa:	48 83 f9 09          	cmp    $0x9,%rcx
    3480f7ae:	48 89 d1             	mov    %rdx,%rcx
    3480f7b1:	0f 87 c9 ff ff ff    	ja     3480f780 <printf_core+0xaf0>
    3480f7b7:	48 8d 84 24 a9 00 00 	lea    0xa9(%rsp),%rax
    3480f7be:	00 
    3480f7bf:	48 8d 04 30          	lea    (%rax,%rsi,1),%rax
    3480f7c3:	4c 3b 64 24 38       	cmp    0x38(%rsp),%r12
    3480f7c8:	0f 84 72 ff ff ff    	je     3480f740 <printf_core+0xab0>
    3480f7ce:	48 39 d8             	cmp    %rbx,%rax
    3480f7d1:	0f 86 79 ff ff ff    	jbe    3480f750 <printf_core+0xac0>
    3480f7d7:	48 8d 4e 09          	lea    0x9(%rsi),%rcx
    3480f7db:	48 83 f9 10          	cmp    $0x10,%rcx
    3480f7df:	0f 82 5b 00 00 00    	jb     3480f840 <printf_core+0xbb0>
    3480f7e5:	89 ca                	mov    %ecx,%edx
    3480f7e7:	83 e2 0f             	and    $0xf,%edx
    3480f7ea:	48 29 d1             	sub    %rdx,%rcx
    3480f7ed:	0f 84 4d 00 00 00    	je     3480f840 <printf_core+0xbb0>
    3480f7f3:	48 8d 84 14 a0 00 00 	lea    0xa0(%rsp,%rdx,1),%rax
    3480f7fa:	00 
    3480f7fb:	48 8d bc 24 a1 00 00 	lea    0xa1(%rsp),%rdi
    3480f802:	00 
    3480f803:	48 01 fe             	add    %rdi,%rsi
    3480f806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480f80d:	00 00 00 
    3480f810:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480f814:	66 0f 67 c0          	packuswb %xmm0,%xmm0
    3480f818:	66 0f d6 06          	movq   %xmm0,(%rsi)
    3480f81c:	66 0f d6 46 f8       	movq   %xmm0,-0x8(%rsi)
    3480f821:	48 83 c6 f0          	add    $0xfffffffffffffff0,%rsi
    3480f825:	48 83 c1 f0          	add    $0xfffffffffffffff0,%rcx
    3480f829:	0f 85 e1 ff ff ff    	jne    3480f810 <printf_core+0xb80>
    3480f82f:	48 85 d2             	test   %rdx,%rdx
    3480f832:	48 89 df             	mov    %rbx,%rdi
    3480f835:	0f 84 18 00 00 00    	je     3480f853 <printf_core+0xbc3>
    3480f83b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3480f840:	c6 40 ff 30          	movb   $0x30,-0x1(%rax)
    3480f844:	48 ff c8             	dec    %rax
    3480f847:	48 39 d8             	cmp    %rbx,%rax
    3480f84a:	0f 87 f0 ff ff ff    	ja     3480f840 <printf_core+0xbb0>
    3480f850:	48 89 df             	mov    %rbx,%rdi
    3480f853:	41 f6 01 20          	testb  $0x20,(%r9)
    3480f857:	0f 85 34 00 00 00    	jne    3480f891 <printf_core+0xc01>
    3480f85d:	48 8d b4 24 a9 00 00 	lea    0xa9(%rsp),%rsi
    3480f864:	00 
    3480f865:	48 29 fe             	sub    %rdi,%rsi
    3480f868:	4c 89 ca             	mov    %r9,%rdx
    3480f86b:	e8 a0 ee ff ff       	callq  3480e710 <__fwritex>
    3480f870:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    3480f875:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f87a:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f881:	cc cc cc 
    3480f884:	66 0f 6f 0d 44 65 00 	movdqa 0x6544(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480f88b:	00 
    3480f88c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f891:	49 83 c4 04          	add    $0x4,%r12
    3480f895:	4d 39 c4             	cmp    %r8,%r12
    3480f898:	0f 86 d2 fe ff ff    	jbe    3480f770 <printf_core+0xae0>
    3480f89e:	83 bc 24 00 01 00 00 	cmpl   $0x0,0x100(%rsp)
    3480f8a5:	00 
    3480f8a6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3480f8ab:	0f 84 3f 00 00 00    	je     3480f8f0 <printf_core+0xc60>
    3480f8b1:	41 f6 01 20          	testb  $0x20,(%r9)
    3480f8b5:	0f 85 35 00 00 00    	jne    3480f8f0 <printf_core+0xc60>
    3480f8bb:	be 01 00 00 00       	mov    $0x1,%esi
    3480f8c0:	48 8d 3d 4d 67 00 00 	lea    0x674d(%rip),%rdi        # 34816014 <states+0x204>
    3480f8c7:	4c 89 ca             	mov    %r9,%rdx
    3480f8ca:	e8 41 ee ff ff       	callq  3480e710 <__fwritex>
    3480f8cf:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    3480f8d4:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480f8d9:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480f8e0:	cc cc cc 
    3480f8e3:	66 0f 6f 0d e5 64 00 	movdqa 0x64e5(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480f8ea:	00 
    3480f8eb:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480f8f0:	45 85 db             	test   %r11d,%r11d
    3480f8f3:	0f 8e b1 04 00 00    	jle    3480fdaa <printf_core+0x111a>
    3480f8f9:	49 39 c4             	cmp    %rax,%r12
    3480f8fc:	0f 83 b8 04 00 00    	jae    3480fdba <printf_core+0x112a>
    3480f902:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480f909:	1f 84 00 00 00 00 00 
    3480f910:	41 8b 0c 24          	mov    (%r12),%ecx
    3480f914:	48 85 c9             	test   %rcx,%rcx
    3480f917:	48 8d bc 24 a9 00 00 	lea    0xa9(%rsp),%rdi
    3480f91e:	00 
    3480f91f:	0f 84 47 00 00 00    	je     3480f96c <printf_core+0xcdc>
    3480f925:	48 8d bc 24 a9 00 00 	lea    0xa9(%rsp),%rdi
    3480f92c:	00 
    3480f92d:	0f 1f 00             	nopl   (%rax)
    3480f930:	48 89 c8             	mov    %rcx,%rax
    3480f933:	49 f7 e2             	mul    %r10
    3480f936:	89 d0                	mov    %edx,%eax
    3480f938:	c1 e8 02             	shr    $0x2,%eax
    3480f93b:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    3480f940:	8d 04 80             	lea    (%rax,%rax,4),%eax
    3480f943:	89 ce                	mov    %ecx,%esi
    3480f945:	29 c6                	sub    %eax,%esi
    3480f947:	40 80 ce 30          	or     $0x30,%sil
    3480f94b:	40 88 77 ff          	mov    %sil,-0x1(%rdi)
    3480f94f:	48 ff cf             	dec    %rdi
    3480f952:	48 c1 ea 03          	shr    $0x3,%rdx
    3480f956:	48 83 f9 09          	cmp    $0x9,%rcx
    3480f95a:	48 89 d1             	mov    %rdx,%rcx
    3480f95d:	0f 87 cd ff ff ff    	ja     3480f930 <printf_core+0xca0>
    3480f963:	48 39 df             	cmp    %rbx,%rdi
    3480f966:	0f 86 94 00 00 00    	jbe    3480fa00 <printf_core+0xd70>
    3480f96c:	48 89 f8             	mov    %rdi,%rax
    3480f96f:	48 f7 d8             	neg    %rax
    3480f972:	48 8b 8c 24 58 01 00 	mov    0x158(%rsp),%rcx
    3480f979:	00 
    3480f97a:	48 39 c8             	cmp    %rcx,%rax
    3480f97d:	48 0f 46 c1          	cmovbe %rcx,%rax
    3480f981:	48 8d 74 07 01       	lea    0x1(%rdi,%rax,1),%rsi
    3480f986:	48 83 fe 10          	cmp    $0x10,%rsi
    3480f98a:	0f 82 50 00 00 00    	jb     3480f9e0 <printf_core+0xd50>
    3480f990:	89 f1                	mov    %esi,%ecx
    3480f992:	83 e1 0f             	and    $0xf,%ecx
    3480f995:	48 89 f2             	mov    %rsi,%rdx
    3480f998:	48 29 ca             	sub    %rcx,%rdx
    3480f99b:	0f 84 3f 00 00 00    	je     3480f9e0 <printf_core+0xd50>
    3480f9a1:	48 89 c8             	mov    %rcx,%rax
    3480f9a4:	48 29 f0             	sub    %rsi,%rax
    3480f9a7:	48 01 f8             	add    %rdi,%rax
    3480f9aa:	48 83 c7 f8          	add    $0xfffffffffffffff8,%rdi
    3480f9ae:	66 90                	xchg   %ax,%ax
    3480f9b0:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480f9b4:	66 0f 67 c0          	packuswb %xmm0,%xmm0
    3480f9b8:	66 0f d6 07          	movq   %xmm0,(%rdi)
    3480f9bc:	66 0f d6 47 f8       	movq   %xmm0,-0x8(%rdi)
    3480f9c1:	48 83 c7 f0          	add    $0xfffffffffffffff0,%rdi
    3480f9c5:	48 83 c2 f0          	add    $0xfffffffffffffff0,%rdx
    3480f9c9:	0f 85 e1 ff ff ff    	jne    3480f9b0 <printf_core+0xd20>
    3480f9cf:	48 85 c9             	test   %rcx,%rcx
    3480f9d2:	48 89 c7             	mov    %rax,%rdi
    3480f9d5:	0f 85 08 00 00 00    	jne    3480f9e3 <printf_core+0xd53>
    3480f9db:	e9 20 00 00 00       	jmpq   3480fa00 <printf_core+0xd70>
    3480f9e0:	48 89 f8             	mov    %rdi,%rax
    3480f9e3:	48 89 c7             	mov    %rax,%rdi
    3480f9e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480f9ed:	00 00 00 
    3480f9f0:	c6 47 ff 30          	movb   $0x30,-0x1(%rdi)
    3480f9f4:	48 ff cf             	dec    %rdi
    3480f9f7:	48 39 df             	cmp    %rbx,%rdi
    3480f9fa:	0f 87 f0 ff ff ff    	ja     3480f9f0 <printf_core+0xd60>
    3480fa00:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fa04:	0f 85 39 00 00 00    	jne    3480fa43 <printf_core+0xdb3>
    3480fa0a:	41 83 fb 0a          	cmp    $0xa,%r11d
    3480fa0e:	b8 09 00 00 00       	mov    $0x9,%eax
    3480fa13:	41 0f 4c c3          	cmovl  %r11d,%eax
    3480fa17:	48 63 f0             	movslq %eax,%rsi
    3480fa1a:	4c 89 ca             	mov    %r9,%rdx
    3480fa1d:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3480fa22:	e8 e9 ec ff ff       	callq  3480e710 <__fwritex>
    3480fa27:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480fa2c:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480fa33:	cc cc cc 
    3480fa36:	66 0f 6f 0d 92 63 00 	movdqa 0x6392(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480fa3d:	00 
    3480fa3e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fa43:	41 8d 43 f7          	lea    -0x9(%r11),%eax
    3480fa47:	41 83 fb 0a          	cmp    $0xa,%r11d
    3480fa4b:	0f 8c 6c 03 00 00    	jl     3480fdbd <printf_core+0x112d>
    3480fa51:	49 83 c4 04          	add    $0x4,%r12
    3480fa55:	4c 3b 64 24 58       	cmp    0x58(%rsp),%r12
    3480fa5a:	41 89 c3             	mov    %eax,%r11d
    3480fa5d:	0f 82 ad fe ff ff    	jb     3480f910 <printf_core+0xc80>
    3480fa63:	e9 55 03 00 00       	jmpq   3480fdbd <printf_core+0x112d>
    3480fa68:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    3480fa6d:	48 8d 48 04          	lea    0x4(%rax),%rcx
    3480fa71:	80 bc 24 d4 00 00 00 	cmpb   $0x0,0xd4(%rsp)
    3480fa78:	00 
    3480fa79:	48 0f 45 4c 24 58    	cmovne 0x58(%rsp),%rcx
    3480fa7f:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
    3480fa84:	45 85 db             	test   %r11d,%r11d
    3480fa87:	0f 88 06 03 00 00    	js     3480fd93 <printf_core+0x1103>
    3480fa8d:	49 89 c0             	mov    %rax,%r8
    3480fa90:	41 8b 08             	mov    (%r8),%ecx
    3480fa93:	48 85 c9             	test   %rcx,%rcx
    3480fa96:	4c 8d a4 24 a9 00 00 	lea    0xa9(%rsp),%r12
    3480fa9d:	00 
    3480fa9e:	0f 84 8c 00 00 00    	je     3480fb30 <printf_core+0xea0>
    3480faa4:	31 f6                	xor    %esi,%esi
    3480faa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480faad:	00 00 00 
    3480fab0:	48 89 c8             	mov    %rcx,%rax
    3480fab3:	49 f7 e2             	mul    %r10
    3480fab6:	89 d0                	mov    %edx,%eax
    3480fab8:	c1 e8 02             	shr    $0x2,%eax
    3480fabb:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    3480fac0:	8d 04 80             	lea    (%rax,%rax,4),%eax
    3480fac3:	89 cf                	mov    %ecx,%edi
    3480fac5:	29 c7                	sub    %eax,%edi
    3480fac7:	40 80 cf 30          	or     $0x30,%dil
    3480facb:	40 88 bc 34 a8 00 00 	mov    %dil,0xa8(%rsp,%rsi,1)
    3480fad2:	00 
    3480fad3:	48 ff ce             	dec    %rsi
    3480fad6:	48 c1 ea 03          	shr    $0x3,%rdx
    3480fada:	48 83 f9 09          	cmp    $0x9,%rcx
    3480fade:	48 89 d1             	mov    %rdx,%rcx
    3480fae1:	0f 87 c9 ff ff ff    	ja     3480fab0 <printf_core+0xe20>
    3480fae7:	48 85 f6             	test   %rsi,%rsi
    3480faea:	4c 8d a4 34 a9 00 00 	lea    0xa9(%rsp,%rsi,1),%r12
    3480faf1:	00 
    3480faf2:	0f 84 38 00 00 00    	je     3480fb30 <printf_core+0xea0>
    3480faf8:	4c 3b 44 24 38       	cmp    0x38(%rsp),%r8
    3480fafd:	0f 84 41 00 00 00    	je     3480fb44 <printf_core+0xeb4>
    3480fb03:	49 39 dc             	cmp    %rbx,%r12
    3480fb06:	0f 86 e4 00 00 00    	jbe    3480fbf0 <printf_core+0xf60>
    3480fb0c:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    3480fb13:	00 
    3480fb14:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    3480fb18:	48 83 fa 10          	cmp    $0x10,%rdx
    3480fb1c:	0f 83 d6 00 00 00    	jae    3480fbf8 <printf_core+0xf68>
    3480fb22:	4c 89 e7             	mov    %r12,%rdi
    3480fb25:	e9 36 01 00 00       	jmpq   3480fc60 <printf_core+0xfd0>
    3480fb2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3480fb30:	41 c6 44 24 ff 30    	movb   $0x30,-0x1(%r12)
    3480fb36:	49 ff cc             	dec    %r12
    3480fb39:	4c 3b 44 24 38       	cmp    0x38(%rsp),%r8
    3480fb3e:	0f 85 bf ff ff ff    	jne    3480fb03 <printf_core+0xe73>
    3480fb44:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fb48:	0f 85 37 00 00 00    	jne    3480fb85 <printf_core+0xef5>
    3480fb4e:	be 01 00 00 00       	mov    $0x1,%esi
    3480fb53:	4c 89 e7             	mov    %r12,%rdi
    3480fb56:	4c 89 ca             	mov    %r9,%rdx
    3480fb59:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3480fb5e:	4c 89 c3             	mov    %r8,%rbx
    3480fb61:	e8 aa eb ff ff       	callq  3480e710 <__fwritex>
    3480fb66:	49 89 d8             	mov    %rbx,%r8
    3480fb69:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480fb6e:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480fb75:	cc cc cc 
    3480fb78:	66 0f 6f 0d 50 62 00 	movdqa 0x6250(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480fb7f:	00 
    3480fb80:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fb85:	49 ff c4             	inc    %r12
    3480fb88:	83 bc 24 f0 00 00 00 	cmpl   $0x0,0xf0(%rsp)
    3480fb8f:	00 
    3480fb90:	0f 85 09 00 00 00    	jne    3480fb9f <printf_core+0xf0f>
    3480fb96:	45 85 db             	test   %r11d,%r11d
    3480fb99:	0f 8e 51 00 00 00    	jle    3480fbf0 <printf_core+0xf60>
    3480fb9f:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fba3:	0f 85 47 00 00 00    	jne    3480fbf0 <printf_core+0xf60>
    3480fba9:	be 01 00 00 00       	mov    $0x1,%esi
    3480fbae:	48 8d 3d 5f 64 00 00 	lea    0x645f(%rip),%rdi        # 34816014 <states+0x204>
    3480fbb5:	4c 89 ca             	mov    %r9,%rdx
    3480fbb8:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3480fbbd:	4c 89 c3             	mov    %r8,%rbx
    3480fbc0:	e8 4b eb ff ff       	callq  3480e710 <__fwritex>
    3480fbc5:	49 89 d8             	mov    %rbx,%r8
    3480fbc8:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480fbcd:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480fbd4:	cc cc cc 
    3480fbd7:	66 0f 6f 0d f1 61 00 	movdqa 0x61f1(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480fbde:	00 
    3480fbdf:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fbe4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480fbeb:	00 00 00 00 00 
    3480fbf0:	4c 89 e7             	mov    %r12,%rdi
    3480fbf3:	e9 78 00 00 00       	jmpq   3480fc70 <printf_core+0xfe0>
    3480fbf8:	89 d0                	mov    %edx,%eax
    3480fbfa:	83 e0 0f             	and    $0xf,%eax
    3480fbfd:	48 89 d1             	mov    %rdx,%rcx
    3480fc00:	48 29 c1             	sub    %rax,%rcx
    3480fc03:	0f 84 48 00 00 00    	je     3480fc51 <printf_core+0xfc1>
    3480fc09:	48 89 c7             	mov    %rax,%rdi
    3480fc0c:	48 29 d7             	sub    %rdx,%rdi
    3480fc0f:	4c 01 e7             	add    %r12,%rdi
    3480fc12:	49 83 c4 f8          	add    $0xfffffffffffffff8,%r12
    3480fc16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3480fc1d:	00 00 00 
    3480fc20:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    3480fc24:	66 0f 67 c0          	packuswb %xmm0,%xmm0
    3480fc28:	66 41 0f d6 04 24    	movq   %xmm0,(%r12)
    3480fc2e:	66 41 0f d6 44 24 f8 	movq   %xmm0,-0x8(%r12)
    3480fc35:	49 83 c4 f0          	add    $0xfffffffffffffff0,%r12
    3480fc39:	48 83 c1 f0          	add    $0xfffffffffffffff0,%rcx
    3480fc3d:	0f 85 dd ff ff ff    	jne    3480fc20 <printf_core+0xf90>
    3480fc43:	48 85 c0             	test   %rax,%rax
    3480fc46:	0f 85 14 00 00 00    	jne    3480fc60 <printf_core+0xfd0>
    3480fc4c:	e9 1f 00 00 00       	jmpq   3480fc70 <printf_core+0xfe0>
    3480fc51:	4c 89 e7             	mov    %r12,%rdi
    3480fc54:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3480fc5b:	00 00 00 00 00 
    3480fc60:	c6 47 ff 30          	movb   $0x30,-0x1(%rdi)
    3480fc64:	48 ff cf             	dec    %rdi
    3480fc67:	48 39 df             	cmp    %rbx,%rdi
    3480fc6a:	0f 87 f0 ff ff ff    	ja     3480fc60 <printf_core+0xfd0>
    3480fc70:	48 8d 9c 24 a9 00 00 	lea    0xa9(%rsp),%rbx
    3480fc77:	00 
    3480fc78:	48 29 fb             	sub    %rdi,%rbx
    3480fc7b:	4d 63 db             	movslq %r11d,%r11
    3480fc7e:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fc82:	0f 85 39 00 00 00    	jne    3480fcc1 <printf_core+0x1031>
    3480fc88:	4c 39 db             	cmp    %r11,%rbx
    3480fc8b:	4c 89 de             	mov    %r11,%rsi
    3480fc8e:	48 0f 4e f3          	cmovle %rbx,%rsi
    3480fc92:	4c 89 ca             	mov    %r9,%rdx
    3480fc95:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3480fc9a:	4d 89 c4             	mov    %r8,%r12
    3480fc9d:	e8 6e ea ff ff       	callq  3480e710 <__fwritex>
    3480fca2:	4d 89 e0             	mov    %r12,%r8
    3480fca5:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    3480fcaa:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    3480fcb1:	cc cc cc 
    3480fcb4:	66 0f 6f 0d 14 61 00 	movdqa 0x6114(%rip),%xmm1        # 34815dd0 <PIo2+0x100>
    3480fcbb:	00 
    3480fcbc:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fcc1:	49 29 db             	sub    %rbx,%r11
    3480fcc4:	49 83 c0 04          	add    $0x4,%r8
    3480fcc8:	4c 3b 44 24 30       	cmp    0x30(%rsp),%r8
    3480fccd:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3480fcd4:	00 
    3480fcd5:	0f 83 09 00 00 00    	jae    3480fce4 <printf_core+0x1054>
    3480fcdb:	45 85 db             	test   %r11d,%r11d
    3480fcde:	0f 89 ac fd ff ff    	jns    3480fa90 <printf_core+0xe00>
    3480fce4:	45 85 db             	test   %r11d,%r11d
    3480fce7:	48 8d 9c 24 d4 00 00 	lea    0xd4(%rsp),%rbx
    3480fcee:	00 
    3480fcef:	0f 8e a4 01 00 00    	jle    3480fe99 <printf_core+0x1209>
    3480fcf5:	49 63 d3             	movslq %r11d,%rdx
    3480fcf8:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    3480fcff:	b8 00 01 00 00       	mov    $0x100,%eax
    3480fd04:	48 0f 43 d0          	cmovae %rax,%rdx
    3480fd08:	be 30 00 00 00       	mov    $0x30,%esi
    3480fd0d:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fd14:	00 
    3480fd15:	4d 89 dc             	mov    %r11,%r12
    3480fd18:	e8 70 ba ff ff       	callq  3480b78d <memset>
    3480fd1d:	4c 89 e2             	mov    %r12,%rdx
    3480fd20:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fd25:	41 8b 01             	mov    (%r9),%eax
    3480fd28:	a8 20                	test   $0x20,%al
    3480fd2a:	0f 94 c1             	sete   %cl
    3480fd2d:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    3480fd33:	0f 82 40 01 00 00    	jb     3480fe79 <printf_core+0x11e9>
    3480fd39:	89 d3                	mov    %edx,%ebx
    3480fd3b:	f6 c1 01             	test   $0x1,%cl
    3480fd3e:	0f 84 20 00 00 00    	je     3480fd64 <printf_core+0x10d4>
    3480fd44:	be 00 01 00 00       	mov    $0x100,%esi
    3480fd49:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fd50:	00 
    3480fd51:	4c 89 ca             	mov    %r9,%rdx
    3480fd54:	e8 b7 e9 ff ff       	callq  3480e710 <__fwritex>
    3480fd59:	4c 89 e2             	mov    %r12,%rdx
    3480fd5c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fd61:	41 8b 01             	mov    (%r9),%eax
    3480fd64:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480fd6a:	a8 20                	test   $0x20,%al
    3480fd6c:	0f 94 c1             	sete   %cl
    3480fd6f:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480fd75:	0f 87 c0 ff ff ff    	ja     3480fd3b <printf_core+0x10ab>
    3480fd7b:	a8 20                	test   $0x20,%al
    3480fd7d:	48 8d 9c 24 d4 00 00 	lea    0xd4(%rsp),%rbx
    3480fd84:	00 
    3480fd85:	0f 85 0e 01 00 00    	jne    3480fe99 <printf_core+0x1209>
    3480fd8b:	0f b6 d2             	movzbl %dl,%edx
    3480fd8e:	e9 ee 00 00 00       	jmpq   3480fe81 <printf_core+0x11f1>
    3480fd93:	48 8d 9c 24 d4 00 00 	lea    0xd4(%rsp),%rbx
    3480fd9a:	00 
    3480fd9b:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fd9f:	0f 84 fe 00 00 00    	je     3480fea3 <printf_core+0x1213>
    3480fda5:	e9 11 01 00 00       	jmpq   3480febb <printf_core+0x122b>
    3480fdaa:	44 89 d8             	mov    %r11d,%eax
    3480fdad:	85 c0                	test   %eax,%eax
    3480fdaf:	0f 8f 10 00 00 00    	jg     3480fdc5 <printf_core+0x1135>
    3480fdb5:	e9 01 01 00 00       	jmpq   3480febb <printf_core+0x122b>
    3480fdba:	44 89 d8             	mov    %r11d,%eax
    3480fdbd:	85 c0                	test   %eax,%eax
    3480fdbf:	0f 8e f6 00 00 00    	jle    3480febb <printf_core+0x122b>
    3480fdc5:	48 63 d0             	movslq %eax,%rdx
    3480fdc8:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    3480fdcf:	89 c3                	mov    %eax,%ebx
    3480fdd1:	b8 00 01 00 00       	mov    $0x100,%eax
    3480fdd6:	48 0f 43 d0          	cmovae %rax,%rdx
    3480fdda:	be 30 00 00 00       	mov    $0x30,%esi
    3480fddf:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fde6:	00 
    3480fde7:	e8 a1 b9 ff ff       	callq  3480b78d <memset>
    3480fdec:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fdf1:	41 8b 01             	mov    (%r9),%eax
    3480fdf4:	a8 20                	test   $0x20,%al
    3480fdf6:	0f 94 c1             	sete   %cl
    3480fdf9:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480fdff:	0f 82 59 00 00 00    	jb     3480fe5e <printf_core+0x11ce>
    3480fe05:	41 89 dc             	mov    %ebx,%r12d
    3480fe08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3480fe0f:	00 
    3480fe10:	f6 c1 01             	test   $0x1,%cl
    3480fe13:	0f 84 1d 00 00 00    	je     3480fe36 <printf_core+0x11a6>
    3480fe19:	be 00 01 00 00       	mov    $0x100,%esi
    3480fe1e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fe25:	00 
    3480fe26:	4c 89 ca             	mov    %r9,%rdx
    3480fe29:	e8 e2 e8 ff ff       	callq  3480e710 <__fwritex>
    3480fe2e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fe33:	41 8b 01             	mov    (%r9),%eax
    3480fe36:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480fe3c:	a8 20                	test   $0x20,%al
    3480fe3e:	0f 94 c1             	sete   %cl
    3480fe41:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480fe47:	0f 87 c3 ff ff ff    	ja     3480fe10 <printf_core+0x1180>
    3480fe4d:	a8 20                	test   $0x20,%al
    3480fe4f:	0f 85 66 00 00 00    	jne    3480febb <printf_core+0x122b>
    3480fe55:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480fe59:	e9 0b 00 00 00       	jmpq   3480fe69 <printf_core+0x11d9>
    3480fe5e:	a8 20                	test   $0x20,%al
    3480fe60:	41 89 dc             	mov    %ebx,%r12d
    3480fe63:	0f 85 52 00 00 00    	jne    3480febb <printf_core+0x122b>
    3480fe69:	49 63 f4             	movslq %r12d,%rsi
    3480fe6c:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fe73:	00 
    3480fe74:	e9 35 00 00 00       	jmpq   3480feae <printf_core+0x121e>
    3480fe79:	a8 20                	test   $0x20,%al
    3480fe7b:	0f 85 18 00 00 00    	jne    3480fe99 <printf_core+0x1209>
    3480fe81:	48 63 f2             	movslq %edx,%rsi
    3480fe84:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fe8b:	00 
    3480fe8c:	4c 89 ca             	mov    %r9,%rdx
    3480fe8f:	e8 7c e8 ff ff       	callq  3480e710 <__fwritex>
    3480fe94:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fe99:	41 f6 01 20          	testb  $0x20,(%r9)
    3480fe9d:	0f 85 18 00 00 00    	jne    3480febb <printf_core+0x122b>
    3480fea3:	48 89 de             	mov    %rbx,%rsi
    3480fea6:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    3480feab:	48 29 fe             	sub    %rdi,%rsi
    3480feae:	4c 89 ca             	mov    %r9,%rdx
    3480feb1:	e8 5a e8 ff ff       	callq  3480e710 <__fwritex>
    3480feb6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480febb:	81 7c 24 1c 00 20 00 	cmpl   $0x2000,0x1c(%rsp)
    3480fec2:	00 
    3480fec3:	0f 85 c5 00 00 00    	jne    3480ff8e <printf_core+0x12fe>
    3480fec9:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480fece:	41 89 c4             	mov    %eax,%r12d
    3480fed1:	44 2b 64 24 28       	sub    0x28(%rsp),%r12d
    3480fed6:	0f 8e b2 00 00 00    	jle    3480ff8e <printf_core+0x12fe>
    3480fedc:	49 63 dc             	movslq %r12d,%rbx
    3480fedf:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3480fee6:	ba 00 01 00 00       	mov    $0x100,%edx
    3480feeb:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3480feef:	be 20 00 00 00       	mov    $0x20,%esi
    3480fef4:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480fefb:	00 
    3480fefc:	e8 8c b8 ff ff       	callq  3480b78d <memset>
    3480ff01:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480ff06:	41 8b 01             	mov    (%r9),%eax
    3480ff09:	a8 20                	test   $0x20,%al
    3480ff0b:	0f 94 c1             	sete   %cl
    3480ff0e:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3480ff14:	0f 82 54 00 00 00    	jb     3480ff6e <printf_core+0x12de>
    3480ff1a:	44 89 e3             	mov    %r12d,%ebx
    3480ff1d:	0f 1f 00             	nopl   (%rax)
    3480ff20:	f6 c1 01             	test   $0x1,%cl
    3480ff23:	0f 84 1d 00 00 00    	je     3480ff46 <printf_core+0x12b6>
    3480ff29:	be 00 01 00 00       	mov    $0x100,%esi
    3480ff2e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480ff35:	00 
    3480ff36:	4c 89 ca             	mov    %r9,%rdx
    3480ff39:	e8 d2 e7 ff ff       	callq  3480e710 <__fwritex>
    3480ff3e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480ff43:	41 8b 01             	mov    (%r9),%eax
    3480ff46:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3480ff4c:	a8 20                	test   $0x20,%al
    3480ff4e:	0f 94 c1             	sete   %cl
    3480ff51:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    3480ff57:	0f 87 c3 ff ff ff    	ja     3480ff20 <printf_core+0x1290>
    3480ff5d:	a8 20                	test   $0x20,%al
    3480ff5f:	0f 85 29 00 00 00    	jne    3480ff8e <printf_core+0x12fe>
    3480ff65:	45 0f b6 e4          	movzbl %r12b,%r12d
    3480ff69:	e9 08 00 00 00       	jmpq   3480ff76 <printf_core+0x12e6>
    3480ff6e:	a8 20                	test   $0x20,%al
    3480ff70:	0f 85 18 00 00 00    	jne    3480ff8e <printf_core+0x12fe>
    3480ff76:	49 63 f4             	movslq %r12d,%rsi
    3480ff79:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3480ff80:	00 
    3480ff81:	4c 89 ca             	mov    %r9,%rdx
    3480ff84:	e8 87 e7 ff ff       	callq  3480e710 <__fwritex>
    3480ff89:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480ff8e:	4c 8d 15 7b 5e 00 00 	lea    0x5e7b(%rip),%r10        # 34815e10 <states>
    3480ff95:	8b 74 24 74          	mov    0x74(%rsp),%esi
    3480ff99:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3480ff9e:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3480ffa3:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    3480ffa8:	39 c1                	cmp    %eax,%ecx
    3480ffaa:	0f 4c c8             	cmovl  %eax,%ecx
    3480ffad:	e9 1e 00 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480ffb2:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    3480ffb9:	00 
    3480ffba:	66 89 30             	mov    %si,(%rax)
    3480ffbd:	31 c9                	xor    %ecx,%ecx
    3480ffbf:	e9 0c 00 00 00       	jmpq   3480ffd0 <printf_core+0x1340>
    3480ffc4:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    3480ffcb:	00 
    3480ffcc:	89 30                	mov    %esi,(%rax)
    3480ffce:	31 c9                	xor    %ecx,%ecx
    3480ffd0:	4c 89 c3             	mov    %r8,%rbx
    3480ffd3:	85 f6                	test   %esi,%esi
    3480ffd5:	0f 88 39 00 00 00    	js     34810014 <printf_core+0x1384>
    3480ffdb:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    3480ffe0:	29 f0                	sub    %esi,%eax
    3480ffe2:	39 c1                	cmp    %eax,%ecx
    3480ffe4:	0f 8e 26 00 00 00    	jle    34810010 <printf_core+0x1380>
    3480ffea:	e8 71 ce ff ff       	callq  3480ce60 <__errno_location>
    3480ffef:	4c 8d 15 1a 5e 00 00 	lea    0x5e1a(%rip),%r10        # 34815e10 <states>
    3480fff6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3480fffb:	c7 00 4b 00 00 00    	movl   $0x4b,(%rax)
    34810001:	be ff ff ff ff       	mov    $0xffffffff,%esi
    34810006:	e9 09 00 00 00       	jmpq   34810014 <printf_core+0x1384>
    3481000b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34810010:	01 f1                	add    %esi,%ecx
    34810012:	89 ce                	mov    %ecx,%esi
    34810014:	8a 03                	mov    (%rbx),%al
    34810016:	84 c0                	test   %al,%al
    34810018:	0f 84 d4 20 00 00    	je     348120f2 <printf_core+0x3462>
    3481001e:	49 89 d8             	mov    %rbx,%r8
    34810021:	84 c0                	test   %al,%al
    34810023:	0f 84 1f 00 00 00    	je     34810048 <printf_core+0x13b8>
    34810029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    34810030:	3c 25                	cmp    $0x25,%al
    34810032:	0f 84 18 00 00 00    	je     34810050 <printf_core+0x13c0>
    34810038:	41 0f b6 40 01       	movzbl 0x1(%r8),%eax
    3481003d:	49 ff c0             	inc    %r8
    34810040:	84 c0                	test   %al,%al
    34810042:	0f 85 e8 ff ff ff    	jne    34810030 <printf_core+0x13a0>
    34810048:	4c 89 c1             	mov    %r8,%rcx
    3481004b:	e9 2d 00 00 00       	jmpq   3481007d <printf_core+0x13ed>
    34810050:	4c 89 c1             	mov    %r8,%rcx
    34810053:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3481005a:	84 00 00 00 00 00 
    34810060:	41 80 78 01 25       	cmpb   $0x25,0x1(%r8)
    34810065:	0f 85 12 00 00 00    	jne    3481007d <printf_core+0x13ed>
    3481006b:	48 ff c1             	inc    %rcx
    3481006e:	41 80 78 02 25       	cmpb   $0x25,0x2(%r8)
    34810073:	4d 8d 40 02          	lea    0x2(%r8),%r8
    34810077:	0f 84 e3 ff ff ff    	je     34810060 <printf_core+0x13d0>
    3481007d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    34810082:	48 29 d9             	sub    %rbx,%rcx
    34810085:	4d 85 c9             	test   %r9,%r9
    34810088:	0f 84 3a 00 00 00    	je     348100c8 <printf_core+0x1438>
    3481008e:	41 f6 01 20          	testb  $0x20,(%r9)
    34810092:	0f 85 30 00 00 00    	jne    348100c8 <printf_core+0x1438>
    34810098:	89 74 24 74          	mov    %esi,0x74(%rsp)
    3481009c:	48 63 f1             	movslq %ecx,%rsi
    3481009f:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    348100a4:	4c 89 ca             	mov    %r9,%rdx
    348100a7:	4c 89 c3             	mov    %r8,%rbx
    348100aa:	49 89 cc             	mov    %rcx,%r12
    348100ad:	e8 5e e6 ff ff       	callq  3480e710 <__fwritex>
    348100b2:	4c 89 e1             	mov    %r12,%rcx
    348100b5:	49 89 d8             	mov    %rbx,%r8
    348100b8:	8b 74 24 74          	mov    0x74(%rsp),%esi
    348100bc:	4c 8d 15 4d 5d 00 00 	lea    0x5d4d(%rip),%r10        # 34815e10 <states>
    348100c3:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348100c8:	85 c9                	test   %ecx,%ecx
    348100ca:	0f 85 00 ff ff ff    	jne    3480ffd0 <printf_core+0x1340>
    348100d0:	49 8d 50 01          	lea    0x1(%r8),%rdx
    348100d4:	41 0f be 48 01       	movsbl 0x1(%r8),%ecx
    348100d9:	8d 41 d0             	lea    -0x30(%rcx),%eax
    348100dc:	83 f8 09             	cmp    $0x9,%eax
    348100df:	89 74 24 74          	mov    %esi,0x74(%rsp)
    348100e3:	0f 87 37 00 00 00    	ja     34810120 <printf_core+0x1490>
    348100e9:	41 80 78 02 24       	cmpb   $0x24,0x2(%r8)
    348100ee:	49 8d 48 03          	lea    0x3(%r8),%rcx
    348100f2:	48 0f 44 d1          	cmove  %rcx,%rdx
    348100f6:	b9 01 00 00 00       	mov    $0x1,%ecx
    348100fb:	8b 9c 24 c4 00 00 00 	mov    0xc4(%rsp),%ebx
    34810102:	0f 44 d9             	cmove  %ecx,%ebx
    34810105:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
    3481010a:	0f 45 c1             	cmovne %ecx,%eax
    3481010d:	8a 0a                	mov    (%rdx),%cl
    3481010f:	4c 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%r11
    34810116:	00 
    34810117:	e9 18 00 00 00       	jmpq   34810134 <printf_core+0x14a4>
    3481011c:	0f 1f 40 00          	nopl   0x0(%rax)
    34810120:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    34810125:	4c 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%r11
    3481012c:	00 
    3481012d:	8b 9c 24 c4 00 00 00 	mov    0xc4(%rsp),%ebx
    34810134:	0f be f1             	movsbl %cl,%esi
    34810137:	83 c6 e0             	add    $0xffffffe0,%esi
    3481013a:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    34810141:	00 
    34810142:	83 fe 1f             	cmp    $0x1f,%esi
    34810145:	bf 89 28 01 00       	mov    $0x12889,%edi
    3481014a:	0f 87 a0 00 00 00    	ja     348101f0 <printf_core+0x1560>
    34810150:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    34810157:	00 
    34810158:	4c 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%r8
    3481015f:	00 
    34810160:	0f a3 f7             	bt     %esi,%edi
    34810163:	0f 83 26 00 00 00    	jae    3481018f <printf_core+0x14ff>
    34810169:	0f b6 c9             	movzbl %cl,%ecx
    3481016c:	83 c1 e0             	add    $0xffffffe0,%ecx
    3481016f:	be 01 00 00 00       	mov    $0x1,%esi
    34810174:	d3 e6                	shl    %cl,%esi
    34810176:	09 74 24 1c          	or     %esi,0x1c(%rsp)
    3481017a:	0f be 4a 01          	movsbl 0x1(%rdx),%ecx
    3481017e:	48 ff c2             	inc    %rdx
    34810181:	89 ce                	mov    %ecx,%esi
    34810183:	83 c6 e0             	add    $0xffffffe0,%esi
    34810186:	83 fe 20             	cmp    $0x20,%esi
    34810189:	0f 82 d1 ff ff ff    	jb     34810160 <printf_core+0x14d0>
    3481018f:	80 f9 2a             	cmp    $0x2a,%cl
    34810192:	0f 85 69 00 00 00    	jne    34810201 <printf_core+0x1571>
    34810198:	0f be 4a 01          	movsbl 0x1(%rdx),%ecx
    3481019c:	8d 71 d0             	lea    -0x30(%rcx),%esi
    3481019f:	83 fe 09             	cmp    $0x9,%esi
    348101a2:	0f 87 9e 00 00 00    	ja     34810246 <printf_core+0x15b6>
    348101a8:	80 7a 02 24          	cmpb   $0x24,0x2(%rdx)
    348101ac:	0f 85 94 00 00 00    	jne    34810246 <printf_core+0x15b6>
    348101b2:	48 63 c9             	movslq %ecx,%rcx
    348101b5:	41 c7 84 88 40 ff ff 	movl   $0xa,-0xc0(%r8,%rcx,4)
    348101bc:	ff 0a 00 00 00 
    348101c1:	48 0f be 4a 01       	movsbq 0x1(%rdx),%rcx
    348101c6:	48 c1 e1 04          	shl    $0x4,%rcx
    348101ca:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    348101d1:	00 
    348101d2:	8b b4 0e 00 fd ff ff 	mov    -0x300(%rsi,%rcx,1),%esi
    348101d9:	48 83 c2 03          	add    $0x3,%rdx
    348101dd:	bb 01 00 00 00       	mov    $0x1,%ebx
    348101e2:	85 f6                	test   %esi,%esi
    348101e4:	0f 89 c6 00 00 00    	jns    348102b0 <printf_core+0x1620>
    348101ea:	e9 ab 00 00 00       	jmpq   3481029a <printf_core+0x160a>
    348101ef:	90                   	nop
    348101f0:	4c 8b 84 24 e0 00 00 	mov    0xe0(%rsp),%r8
    348101f7:	00 
    348101f8:	80 f9 2a             	cmp    $0x2a,%cl
    348101fb:	0f 84 97 ff ff ff    	je     34810198 <printf_core+0x1508>
    34810201:	0f be c9             	movsbl %cl,%ecx
    34810204:	83 c1 d0             	add    $0xffffffd0,%ecx
    34810207:	31 f6                	xor    %esi,%esi
    34810209:	83 f9 09             	cmp    $0x9,%ecx
    3481020c:	0f 87 9e 00 00 00    	ja     348102b0 <printf_core+0x1620>
    34810212:	31 f6                	xor    %esi,%esi
    34810214:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3481021b:	00 00 00 00 00 
    34810220:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
    34810223:	8d 34 71             	lea    (%rcx,%rsi,2),%esi
    34810226:	0f be 4a 01          	movsbl 0x1(%rdx),%ecx
    3481022a:	48 ff c2             	inc    %rdx
    3481022d:	83 c1 d0             	add    $0xffffffd0,%ecx
    34810230:	83 f9 0a             	cmp    $0xa,%ecx
    34810233:	0f 82 e7 ff ff ff    	jb     34810220 <printf_core+0x1590>
    34810239:	85 f6                	test   %esi,%esi
    3481023b:	0f 89 6f 00 00 00    	jns    348102b0 <printf_core+0x1620>
    34810241:	e9 8f 20 00 00       	jmpq   348122d5 <printf_core+0x3645>
    34810246:	85 db                	test   %ebx,%ebx
    34810248:	0f 85 87 20 00 00    	jne    348122d5 <printf_core+0x3645>
    3481024e:	48 ff c2             	inc    %rdx
    34810251:	4d 85 c9             	test   %r9,%r9
    34810254:	0f 84 1f 00 00 00    	je     34810279 <printf_core+0x15e9>
    3481025a:	49 63 33             	movslq (%r11),%rsi
    3481025d:	48 83 fe 28          	cmp    $0x28,%rsi
    34810261:	0f 87 1b 00 00 00    	ja     34810282 <printf_core+0x15f2>
    34810267:	48 89 f1             	mov    %rsi,%rcx
    3481026a:	49 03 4b 10          	add    0x10(%r11),%rcx
    3481026e:	8d 76 08             	lea    0x8(%rsi),%esi
    34810271:	41 89 33             	mov    %esi,(%r11)
    34810274:	e9 15 00 00 00       	jmpq   3481028e <printf_core+0x15fe>
    34810279:	31 db                	xor    %ebx,%ebx
    3481027b:	31 f6                	xor    %esi,%esi
    3481027d:	e9 2e 00 00 00       	jmpq   348102b0 <printf_core+0x1620>
    34810282:	49 8b 4b 08          	mov    0x8(%r11),%rcx
    34810286:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    3481028a:	49 89 73 08          	mov    %rsi,0x8(%r11)
    3481028e:	8b 31                	mov    (%rcx),%esi
    34810290:	31 db                	xor    %ebx,%ebx
    34810292:	85 f6                	test   %esi,%esi
    34810294:	0f 89 16 00 00 00    	jns    348102b0 <printf_core+0x1620>
    3481029a:	81 4c 24 1c 00 20 00 	orl    $0x2000,0x1c(%rsp)
    348102a1:	00 
    348102a2:	f7 de                	neg    %esi
    348102a4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348102ab:	00 00 00 00 00 
    348102b0:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    348102b5:	80 3a 2e             	cmpb   $0x2e,(%rdx)
    348102b8:	89 9c 24 c4 00 00 00 	mov    %ebx,0xc4(%rsp)
    348102bf:	0f 85 5b 00 00 00    	jne    34810320 <printf_core+0x1690>
    348102c5:	0f be 4a 01          	movsbl 0x1(%rdx),%ecx
    348102c9:	83 f9 2a             	cmp    $0x2a,%ecx
    348102cc:	0f 85 bb 00 00 00    	jne    3481038d <printf_core+0x16fd>
    348102d2:	0f be 4a 02          	movsbl 0x2(%rdx),%ecx
    348102d6:	8d 71 d0             	lea    -0x30(%rcx),%esi
    348102d9:	83 fe 09             	cmp    $0x9,%esi
    348102dc:	0f 87 31 01 00 00    	ja     34810413 <printf_core+0x1783>
    348102e2:	80 7a 03 24          	cmpb   $0x24,0x3(%rdx)
    348102e6:	0f 85 27 01 00 00    	jne    34810413 <printf_core+0x1783>
    348102ec:	48 63 c9             	movslq %ecx,%rcx
    348102ef:	41 c7 84 88 40 ff ff 	movl   $0xa,-0xc0(%r8,%rcx,4)
    348102f6:	ff 0a 00 00 00 
    348102fb:	48 0f be 4a 02       	movsbq 0x2(%rdx),%rcx
    34810300:	48 c1 e1 04          	shl    $0x4,%rcx
    34810304:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    3481030b:	00 
    3481030c:	44 8b 9c 0e 00 fd ff 	mov    -0x300(%rsi,%rcx,1),%r11d
    34810313:	ff 
    34810314:	48 83 c2 04          	add    $0x4,%rdx
    34810318:	e9 09 00 00 00       	jmpq   34810326 <printf_core+0x1696>
    3481031d:	0f 1f 00             	nopl   (%rax)
    34810320:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
    34810326:	31 f6                	xor    %esi,%esi
    34810328:	49 89 d0             	mov    %rdx,%r8
    3481032b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34810330:	89 f3                	mov    %esi,%ebx
    34810332:	41 0f be 08          	movsbl (%r8),%ecx
    34810336:	8d 51 bf             	lea    -0x41(%rcx),%edx
    34810339:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    3481033f:	83 fa 39             	cmp    $0x39,%edx
    34810342:	0f 87 93 1f 00 00    	ja     348122db <printf_core+0x364b>
    34810348:	48 63 c9             	movslq %ecx,%rcx
    3481034b:	89 da                	mov    %ebx,%edx
    3481034d:	49 ff c0             	inc    %r8
    34810350:	48 6b d2 3a          	imul   $0x3a,%rdx,%rdx
    34810354:	4c 01 d2             	add    %r10,%rdx
    34810357:	0f b6 74 11 bf       	movzbl -0x41(%rcx,%rdx,1),%esi
    3481035c:	8d 4e ff             	lea    -0x1(%rsi),%ecx
    3481035f:	83 f9 08             	cmp    $0x8,%ecx
    34810362:	0f 82 c8 ff ff ff    	jb     34810330 <printf_core+0x16a0>
    34810368:	40 84 f6             	test   %sil,%sil
    3481036b:	0f 84 6a 1f 00 00    	je     348122db <printf_core+0x364b>
    34810371:	40 80 fe 15          	cmp    $0x15,%sil
    34810375:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
    3481037a:	0f 85 50 00 00 00    	jne    348103d0 <printf_core+0x1740>
    34810380:	85 c0                	test   %eax,%eax
    34810382:	0f 88 77 00 00 00    	js     348103ff <printf_core+0x176f>
    34810388:	e9 4e 1f 00 00       	jmpq   348122db <printf_core+0x364b>
    3481038d:	48 ff c2             	inc    %rdx
    34810390:	83 c1 d0             	add    $0xffffffd0,%ecx
    34810393:	45 31 db             	xor    %r11d,%r11d
    34810396:	83 f9 09             	cmp    $0x9,%ecx
    34810399:	0f 87 87 ff ff ff    	ja     34810326 <printf_core+0x1696>
    3481039f:	45 31 db             	xor    %r11d,%r11d
    348103a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348103a9:	1f 84 00 00 00 00 00 
    348103b0:	43 8d 34 9b          	lea    (%r11,%r11,4),%esi
    348103b4:	44 8d 1c 71          	lea    (%rcx,%rsi,2),%r11d
    348103b8:	0f be 4a 01          	movsbl 0x1(%rdx),%ecx
    348103bc:	48 ff c2             	inc    %rdx
    348103bf:	83 c1 d0             	add    $0xffffffd0,%ecx
    348103c2:	83 f9 0a             	cmp    $0xa,%ecx
    348103c5:	0f 82 e5 ff ff ff    	jb     348103b0 <printf_core+0x1720>
    348103cb:	e9 56 ff ff ff       	jmpq   34810326 <printf_core+0x1696>
    348103d0:	85 c0                	test   %eax,%eax
    348103d2:	0f 88 72 00 00 00    	js     3481044a <printf_core+0x17ba>
    348103d8:	48 98                	cltq   
    348103da:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    348103e1:	00 
    348103e2:	89 34 81             	mov    %esi,(%rcx,%rax,4)
    348103e5:	48 c1 e0 04          	shl    $0x4,%rax
    348103e9:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
    348103f0:	00 
    348103f1:	66 0f 6f 04 01       	movdqa (%rcx,%rax,1),%xmm0
    348103f6:	66 0f 7f 84 24 90 00 	movdqa %xmm0,0x90(%rsp)
    348103fd:	00 00 
    348103ff:	31 c9                	xor    %ecx,%ecx
    34810401:	4d 85 c9             	test   %r9,%r9
    34810404:	8b 74 24 74          	mov    0x74(%rsp),%esi
    34810408:	0f 84 c2 fb ff ff    	je     3480ffd0 <printf_core+0x1340>
    3481040e:	e9 70 00 00 00       	jmpq   34810483 <printf_core+0x17f3>
    34810413:	85 db                	test   %ebx,%ebx
    34810415:	0f 85 ba 1e 00 00    	jne    348122d5 <printf_core+0x3645>
    3481041b:	48 83 c2 02          	add    $0x2,%rdx
    3481041f:	4d 85 c9             	test   %r9,%r9
    34810422:	0f 84 5f 01 00 00    	je     34810587 <printf_core+0x18f7>
    34810428:	49 63 0b             	movslq (%r11),%rcx
    3481042b:	48 83 f9 28          	cmp    $0x28,%rcx
    3481042f:	0f 87 89 02 00 00    	ja     348106be <printf_core+0x1a2e>
    34810435:	48 89 ce             	mov    %rcx,%rsi
    34810438:	49 03 73 10          	add    0x10(%r11),%rsi
    3481043c:	8d 49 08             	lea    0x8(%rcx),%ecx
    3481043f:	41 89 0b             	mov    %ecx,(%r11)
    34810442:	44 8b 1e             	mov    (%rsi),%r11d
    34810445:	e9 dc fe ff ff       	jmpq   34810326 <printf_core+0x1696>
    3481044a:	4d 85 c9             	test   %r9,%r9
    3481044d:	0f 84 ee 1d 00 00    	je     34812241 <printf_core+0x35b1>
    34810453:	48 8d bc 24 90 00 00 	lea    0x90(%rsp),%rdi
    3481045a:	00 
    3481045b:	48 8b 94 24 f8 00 00 	mov    0xf8(%rsp),%rdx
    34810462:	00 
    34810463:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    34810468:	e8 83 1e 00 00       	callq  348122f0 <pop_arg>
    3481046d:	4c 8b 5c 24 48       	mov    0x48(%rsp),%r11
    34810472:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34810477:	4c 8d 15 92 59 00 00 	lea    0x5992(%rip),%r10        # 34815e10 <states>
    3481047e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810483:	41 0f be 40 ff       	movsbl -0x1(%r8),%eax
    34810488:	89 c1                	mov    %eax,%ecx
    3481048a:	83 e1 0f             	and    $0xf,%ecx
    3481048d:	89 c2                	mov    %eax,%edx
    3481048f:	83 e2 df             	and    $0xffffffdf,%edx
    34810492:	83 f9 03             	cmp    $0x3,%ecx
    34810495:	48 89 d1             	mov    %rdx,%rcx
    34810498:	0f 45 c8             	cmovne %eax,%ecx
    3481049b:	85 db                	test   %ebx,%ebx
    3481049d:	0f 44 c8             	cmove  %eax,%ecx
    348104a0:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    348104a4:	89 c2                	mov    %eax,%edx
    348104a6:	81 e2 ff ff fe ff    	and    $0xfffeffff,%edx
    348104ac:	f6 c4 20             	test   $0x20,%ah
    348104af:	0f 45 c2             	cmovne %edx,%eax
    348104b2:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    348104b6:	31 c0                	xor    %eax,%eax
    348104b8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    348104bd:	83 f9 64             	cmp    $0x64,%ecx
    348104c0:	0f 8e 5e 00 00 00    	jle    34810524 <printf_core+0x1894>
    348104c6:	83 f9 6d             	cmp    $0x6d,%ecx
    348104c9:	0f 8e c0 00 00 00    	jle    3481058f <printf_core+0x18ff>
    348104cf:	83 f9 72             	cmp    $0x72,%ecx
    348104d2:	0f 8f fa 01 00 00    	jg     348106d2 <printf_core+0x1a42>
    348104d8:	83 f9 6e             	cmp    $0x6e,%ecx
    348104db:	48 8d 35 fe 58 00 00 	lea    0x58fe(%rip),%rsi        # 34815de0 <xdigits>
    348104e2:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    348104e7:	0f 84 a6 05 00 00    	je     34810a93 <printf_core+0x1e03>
    348104ed:	83 f9 6f             	cmp    $0x6f,%ecx
    348104f0:	0f 84 d7 05 00 00    	je     34810acd <printf_core+0x1e3d>
    348104f6:	83 f9 70             	cmp    $0x70,%ecx
    348104f9:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
    348104fd:	0f 85 e3 14 00 00    	jne    348119e6 <printf_core+0x2d56>
    34810503:	49 63 c3             	movslq %r11d,%rax
    34810506:	48 83 f8 10          	cmp    $0x10,%rax
    3481050a:	b8 10 00 00 00       	mov    $0x10,%eax
    3481050f:	44 0f 46 d8          	cmovbe %eax,%r11d
    34810513:	83 c9 08             	or     $0x8,%ecx
    34810516:	89 4c 24 1c          	mov    %ecx,0x1c(%rsp)
    3481051a:	b9 78 00 00 00       	mov    $0x78,%ecx
    3481051f:	e9 6f 02 00 00       	jmpq   34810793 <printf_core+0x1b03>
    34810524:	83 f9 52             	cmp    $0x52,%ecx
    34810527:	0f 8f ab 00 00 00    	jg     348105d8 <printf_core+0x1948>
    3481052d:	8d 41 bb             	lea    -0x45(%rcx),%eax
    34810530:	83 f8 03             	cmp    $0x3,%eax
    34810533:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3481053a:	00 
    3481053b:	0f 82 2f 01 00 00    	jb     34810670 <printf_core+0x19e0>
    34810541:	83 f9 41             	cmp    $0x41,%ecx
    34810544:	0f 84 26 01 00 00    	je     34810670 <printf_core+0x19e0>
    3481054a:	83 f9 43             	cmp    $0x43,%ecx
    3481054d:	0f 85 3f eb ff ff    	jne    3480f092 <printf_core+0x402>
    34810553:	8b 84 24 90 00 00 00 	mov    0x90(%rsp),%eax
    3481055a:	89 84 24 48 01 00 00 	mov    %eax,0x148(%rsp)
    34810561:	c7 84 24 4c 01 00 00 	movl   $0x0,0x14c(%rsp)
    34810568:	00 00 00 00 
    3481056c:	48 8d 84 24 48 01 00 	lea    0x148(%rsp),%rax
    34810573:	00 
    34810574:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
    3481057b:	00 
    3481057c:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
    34810582:	e9 a4 06 00 00       	jmpq   34810c2b <printf_core+0x1f9b>
    34810587:	45 31 db             	xor    %r11d,%r11d
    3481058a:	e9 97 fd ff ff       	jmpq   34810326 <printf_core+0x1696>
    3481058f:	8d 41 9b             	lea    -0x65(%rcx),%eax
    34810592:	83 f8 03             	cmp    $0x3,%eax
    34810595:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    3481059c:	00 
    3481059d:	0f 82 cd 00 00 00    	jb     34810670 <printf_core+0x19e0>
    348105a3:	83 f9 69             	cmp    $0x69,%ecx
    348105a6:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    348105ab:	0f 84 58 00 00 00    	je     34810609 <printf_core+0x1979>
    348105b1:	83 f9 6d             	cmp    $0x6d,%ecx
    348105b4:	0f 85 2c 14 00 00    	jne    348119e6 <printf_core+0x2d56>
    348105ba:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    348105be:	4c 89 db             	mov    %r11,%rbx
    348105c1:	e8 9a c8 ff ff       	callq  3480ce60 <__errno_location>
    348105c6:	8b 38                	mov    (%rax),%edi
    348105c8:	e8 43 26 00 00       	callq  34812c10 <strerror>
    348105cd:	49 89 db             	mov    %rbx,%r11
    348105d0:	48 89 c7             	mov    %rax,%rdi
    348105d3:	e9 df 05 00 00       	jmpq   34810bb7 <printf_core+0x1f27>
    348105d8:	83 f9 60             	cmp    $0x60,%ecx
    348105db:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    348105e2:	00 
    348105e3:	0f 8e 73 01 00 00    	jle    3481075c <printf_core+0x1acc>
    348105e9:	83 f9 61             	cmp    $0x61,%ecx
    348105ec:	0f 84 7e 00 00 00    	je     34810670 <printf_core+0x19e0>
    348105f2:	83 f9 63             	cmp    $0x63,%ecx
    348105f5:	0f 84 61 05 00 00    	je     34810b5c <printf_core+0x1ecc>
    348105fb:	83 f9 64             	cmp    $0x64,%ecx
    348105fe:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    34810603:	0f 85 dd 13 00 00    	jne    348119e6 <printf_core+0x2d56>
    34810609:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    34810610:	00 
    34810611:	48 85 c9             	test   %rcx,%rcx
    34810614:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810618:	0f 88 da 07 00 00    	js     34810df8 <printf_core+0x2168>
    3481061e:	b8 01 00 00 00       	mov    $0x1,%eax
    34810623:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810628:	f6 c7 08             	test   $0x8,%bh
    3481062b:	0f 85 b8 0d 00 00    	jne    348113e9 <printf_core+0x2759>
    34810631:	89 d8                	mov    %ebx,%eax
    34810633:	83 e0 01             	and    $0x1,%eax
    34810636:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3481063b:	48 8d 05 a0 59 00 00 	lea    0x59a0(%rip),%rax        # 34815fe2 <states+0x1d2>
    34810642:	48 89 c2             	mov    %rax,%rdx
    34810645:	48 8d 05 94 59 00 00 	lea    0x5994(%rip),%rax        # 34815fe0 <states+0x1d0>
    3481064c:	48 0f 44 d0          	cmove  %rax,%rdx
    34810650:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)
    34810655:	48 85 c9             	test   %rcx,%rcx
    34810658:	0f 85 a0 0d 00 00    	jne    348113fe <printf_core+0x276e>
    3481065e:	48 8d 84 24 3b 01 00 	lea    0x13b(%rsp),%rax
    34810665:	00 
    34810666:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3481066b:	e9 ef 0d 00 00       	jmpq   3481145f <printf_core+0x27cf>
    34810670:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    34810675:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    3481067a:	db ac 24 90 00 00 00 	fldt   0x90(%rsp)
    34810681:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
    34810688:	00 
    34810689:	d9 c0                	fld    %st(0)
    3481068b:	db 7c 24 38          	fstpt  0x38(%rsp)
    3481068f:	db 3c 24             	fstpt  (%rsp)
    34810692:	e8 19 1f 00 00       	callq  348125b0 <__signbitl>
    34810697:	85 c0                	test   %eax,%eax
    34810699:	0f 84 72 00 00 00    	je     34810711 <printf_core+0x1a81>
    3481069f:	db 6c 24 38          	fldt   0x38(%rsp)
    348106a3:	d9 e0                	fchs   
    348106a5:	b8 01 00 00 00       	mov    $0x1,%eax
    348106aa:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    348106b1:	00 
    348106b2:	48 8d 05 38 59 00 00 	lea    0x5938(%rip),%rax        # 34815ff1 <states+0x1e1>
    348106b9:	e9 6c 01 00 00       	jmpq   3481082a <printf_core+0x1b9a>
    348106be:	49 8b 4b 08          	mov    0x8(%r11),%rcx
    348106c2:	48 8d 71 08          	lea    0x8(%rcx),%rsi
    348106c6:	49 89 73 08          	mov    %rsi,0x8(%r11)
    348106ca:	44 8b 19             	mov    (%rcx),%r11d
    348106cd:	e9 54 fc ff ff       	jmpq   34810326 <printf_core+0x1696>
    348106d2:	83 f9 73             	cmp    $0x73,%ecx
    348106d5:	48 8d 35 04 57 00 00 	lea    0x5704(%rip),%rsi        # 34815de0 <xdigits>
    348106dc:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    348106e1:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    348106e5:	0f 84 b2 04 00 00    	je     34810b9d <printf_core+0x1f0d>
    348106eb:	83 f9 78             	cmp    $0x78,%ecx
    348106ee:	0f 84 9f 00 00 00    	je     34810793 <printf_core+0x1b03>
    348106f4:	83 f9 75             	cmp    $0x75,%ecx
    348106f7:	0f 85 e9 12 00 00    	jne    348119e6 <printf_core+0x2d56>
    348106fd:	31 c0                	xor    %eax,%eax
    348106ff:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810704:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    3481070b:	00 
    3481070c:	e9 fc 06 00 00       	jmpq   34810e0d <printf_core+0x217d>
    34810711:	db 6c 24 38          	fldt   0x38(%rsp)
    34810715:	b8 01 00 00 00       	mov    $0x1,%eax
    3481071a:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    34810721:	00 
    34810722:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    34810726:	f6 c4 08             	test   $0x8,%ah
    34810729:	0f 85 f4 00 00 00    	jne    34810823 <printf_core+0x1b93>
    3481072f:	83 e0 01             	and    $0x1,%eax
    34810732:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    34810739:	00 
    3481073a:	48 8d 05 b6 58 00 00 	lea    0x58b6(%rip),%rax        # 34815ff7 <states+0x1e7>
    34810741:	48 89 c1             	mov    %rax,%rcx
    34810744:	48 8d 05 a7 58 00 00 	lea    0x58a7(%rip),%rax        # 34815ff2 <states+0x1e2>
    3481074b:	48 0f 44 c8          	cmove  %rax,%rcx
    3481074f:	48 89 8c 24 d8 00 00 	mov    %rcx,0xd8(%rsp)
    34810756:	00 
    34810757:	e9 d6 00 00 00       	jmpq   34810832 <printf_core+0x1ba2>
    3481075c:	83 f9 53             	cmp    $0x53,%ecx
    3481075f:	0f 84 ab 04 00 00    	je     34810c10 <printf_core+0x1f80>
    34810765:	83 f9 58             	cmp    $0x58,%ecx
    34810768:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    3481076f:	00 
    34810770:	48 8d 05 69 58 00 00 	lea    0x5869(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810777:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3481077c:	48 8d 35 5d 56 00 00 	lea    0x565d(%rip),%rsi        # 34815de0 <xdigits>
    34810783:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    34810788:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3481078d:	0f 85 30 0d 00 00    	jne    348114c3 <printf_core+0x2833>
    34810793:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    3481079a:	00 
    3481079b:	31 d2                	xor    %edx,%edx
    3481079d:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    348107a2:	48 85 c0             	test   %rax,%rax
    348107a5:	0f 84 c6 02 00 00    	je     34810a71 <printf_core+0x1de1>
    348107ab:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    348107b0:	83 e1 20             	and    $0x20,%ecx
    348107b3:	48 8d bc 24 3b 01 00 	lea    0x13b(%rsp),%rdi
    348107ba:	00 
    348107bb:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    348107bf:	90                   	nop
    348107c0:	89 c2                	mov    %eax,%edx
    348107c2:	83 e2 0f             	and    $0xf,%edx
    348107c5:	0f b6 14 32          	movzbl (%rdx,%rsi,1),%edx
    348107c9:	09 ca                	or     %ecx,%edx
    348107cb:	88 57 ff             	mov    %dl,-0x1(%rdi)
    348107ce:	48 ff cf             	dec    %rdi
    348107d1:	48 c1 e8 04          	shr    $0x4,%rax
    348107d5:	0f 85 e5 ff ff ff    	jne    348107c0 <printf_core+0x1b30>
    348107db:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    348107e0:	f6 c3 08             	test   $0x8,%bl
    348107e3:	0f 84 f9 05 00 00    	je     34810de2 <printf_core+0x2152>
    348107e9:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    348107f0:	00 
    348107f1:	48 85 c0             	test   %rax,%rax
    348107f4:	0f 84 e8 05 00 00    	je     34810de2 <printf_core+0x2152>
    348107fa:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    348107ff:	c1 ff 04             	sar    $0x4,%edi
    34810802:	48 63 cf             	movslq %edi,%rcx
    34810805:	48 8d 05 d4 57 00 00 	lea    0x57d4(%rip),%rax        # 34815fe0 <states+0x1d0>
    3481080c:	48 01 c1             	add    %rax,%rcx
    3481080f:	48 89 4c 24 58       	mov    %rcx,0x58(%rsp)
    34810814:	b8 02 00 00 00       	mov    $0x2,%eax
    34810819:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3481081e:	e9 cb 05 00 00       	jmpq   34810dee <printf_core+0x215e>
    34810823:	48 8d 05 ca 57 00 00 	lea    0x57ca(%rip),%rax        # 34815ff4 <states+0x1e4>
    3481082a:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
    34810831:	00 
    34810832:	d9 c0                	fld    %st(0)
    34810834:	db 7c 24 38          	fstpt  0x38(%rsp)
    34810838:	db 3c 24             	fstpt  (%rsp)
    3481083b:	e8 10 1d 00 00       	callq  34812550 <__fpclassifyl>
    34810840:	83 f8 01             	cmp    $0x1,%eax
    34810843:	0f 8e d2 00 00 00    	jle    3481091b <printf_core+0x1c8b>
    34810849:	db 6c 24 38          	fldt   0x38(%rsp)
    3481084d:	db 3c 24             	fstpt  (%rsp)
    34810850:	48 8d 7c 24 7c       	lea    0x7c(%rsp),%rdi
    34810855:	e8 f6 21 00 00       	callq  34812a50 <frexpl>
    3481085a:	dc c0                	fadd   %st,%st(0)
    3481085c:	d9 ee                	fldz   
    3481085e:	d9 c9                	fxch   %st(1)
    34810860:	db e9                	fucomi %st(1),%st
    34810862:	49 bc 53 5a 9b a0 2f 	movabs $0x44b82fa09b5a53,%r12
    34810869:	b8 44 00 
    3481086c:	0f 85 06 00 00 00    	jne    34810878 <printf_core+0x1be8>
    34810872:	0f 8b 04 00 00 00    	jnp    3481087c <printf_core+0x1bec>
    34810878:	ff 4c 24 7c          	decl   0x7c(%rsp)
    3481087c:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    34810881:	89 c1                	mov    %eax,%ecx
    34810883:	83 c9 20             	or     $0x20,%ecx
    34810886:	83 f9 61             	cmp    $0x61,%ecx
    34810889:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    34810890:	cc cc cc 
    34810893:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    34810898:	0f 85 98 01 00 00    	jne    34810a36 <printf_core+0x1da6>
    3481089e:	48 8b 8c 24 d8 00 00 	mov    0xd8(%rsp),%rcx
    348108a5:	00 
    348108a6:	4c 8d 61 09          	lea    0x9(%rcx),%r12
    348108aa:	89 c6                	mov    %eax,%esi
    348108ac:	83 e6 20             	and    $0x20,%esi
    348108af:	4c 0f 44 e1          	cmove  %rcx,%r12
    348108b3:	83 ff 0e             	cmp    $0xe,%edi
    348108b6:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348108bb:	0f 87 54 12 00 00    	ja     34811b15 <printf_core+0x2e85>
    348108c1:	b8 0f 00 00 00       	mov    $0xf,%eax
    348108c6:	29 f8                	sub    %edi,%eax
    348108c8:	0f 84 47 12 00 00    	je     34811b15 <printf_core+0x2e85>
    348108ce:	b9 0e 00 00 00       	mov    $0xe,%ecx
    348108d3:	29 f9                	sub    %edi,%ecx
    348108d5:	89 c2                	mov    %eax,%edx
    348108d7:	83 e2 07             	and    $0x7,%edx
    348108da:	d9 05 9c 54 00 00    	flds   0x549c(%rip)        # 34815d7c <PIo2+0xac>
    348108e0:	0f 84 cb 11 00 00    	je     34811ab1 <printf_core+0x2e21>
    348108e6:	dd d8                	fstp   %st(0)
    348108e8:	f7 da                	neg    %edx
    348108ea:	d9 05 8c 54 00 00    	flds   0x548c(%rip)        # 34815d7c <PIo2+0xac>
    348108f0:	d9 ee                	fldz   
    348108f2:	d9 c9                	fxch   %st(1)
    348108f4:	66 66 66 2e 0f 1f 84 	data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348108fb:	00 00 00 00 00 
    34810900:	dd d9                	fstp   %st(1)
    34810902:	ff c8                	dec    %eax
    34810904:	d8 0d 76 54 00 00    	fmuls  0x5476(%rip)        # 34815d80 <PIo2+0xb0>
    3481090a:	ff c2                	inc    %edx
    3481090c:	d9 c0                	fld    %st(0)
    3481090e:	d9 c9                	fxch   %st(1)
    34810910:	0f 85 ea ff ff ff    	jne    34810900 <printf_core+0x1c70>
    34810916:	e9 98 11 00 00       	jmpq   34811ab3 <printf_core+0x2e23>
    3481091b:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    34810920:	83 e0 20             	and    $0x20,%eax
    34810923:	c1 e8 05             	shr    $0x5,%eax
    34810926:	48 8d 05 db 56 00 00 	lea    0x56db(%rip),%rax        # 34816008 <states+0x1f8>
    3481092d:	48 8d 0d d0 56 00 00 	lea    0x56d0(%rip),%rcx        # 34816004 <states+0x1f4>
    34810934:	48 0f 45 c1          	cmovne %rcx,%rax
    34810938:	4c 8d 25 d1 56 00 00 	lea    0x56d1(%rip),%r12        # 34816010 <states+0x200>
    3481093f:	48 8d 0d c6 56 00 00 	lea    0x56c6(%rip),%rcx        # 3481600c <states+0x1fc>
    34810946:	4c 0f 45 e1          	cmovne %rcx,%r12
    3481094a:	db 6c 24 38          	fldt   0x38(%rsp)
    3481094e:	df e8                	fucomip %st(0),%st
    34810950:	b9 00 00 00 00       	mov    $0x0,%ecx
    34810955:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
    3481095c:	00 
    3481095d:	0f 4a d1             	cmovp  %ecx,%edx
    34810960:	4c 0f 4b e0          	cmovnp %rax,%r12
    34810964:	48 89 94 24 80 00 00 	mov    %rdx,0x80(%rsp)
    3481096b:	00 
    3481096c:	8d 4a 03             	lea    0x3(%rdx),%ecx
    3481096f:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810973:	f6 c7 20             	test   $0x20,%bh
    34810976:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    3481097b:	0f 85 57 03 00 00    	jne    34810cd8 <printf_core+0x2048>
    34810981:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34810986:	29 c8                	sub    %ecx,%eax
    34810988:	0f 8e 4a 03 00 00    	jle    34810cd8 <printf_core+0x2048>
    3481098e:	48 63 d8             	movslq %eax,%rbx
    34810991:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34810998:	ba 00 01 00 00       	mov    $0x100,%edx
    3481099d:	48 0f 42 d3          	cmovb  %rbx,%rdx
    348109a1:	be 20 00 00 00       	mov    $0x20,%esi
    348109a6:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348109ad:	00 
    348109ae:	89 44 24 38          	mov    %eax,0x38(%rsp)
    348109b2:	e8 d6 ad ff ff       	callq  3480b78d <memset>
    348109b7:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    348109bc:	8b 02                	mov    (%rdx),%eax
    348109be:	a8 20                	test   $0x20,%al
    348109c0:	0f 94 c1             	sete   %cl
    348109c3:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    348109c9:	0f 82 da 02 00 00    	jb     34810ca9 <printf_core+0x2019>
    348109cf:	8b 5c 24 38          	mov    0x38(%rsp),%ebx
    348109d3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348109da:	84 00 00 00 00 00 
    348109e0:	f6 c1 01             	test   $0x1,%cl
    348109e3:	0f 84 19 00 00 00    	je     34810a02 <printf_core+0x1d72>
    348109e9:	be 00 01 00 00       	mov    $0x100,%esi
    348109ee:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348109f5:	00 
    348109f6:	e8 15 dd ff ff       	callq  3480e710 <__fwritex>
    348109fb:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    34810a00:	8b 02                	mov    (%rdx),%eax
    34810a02:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34810a08:	a8 20                	test   $0x20,%al
    34810a0a:	0f 94 c1             	sete   %cl
    34810a0d:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34810a13:	0f 87 c7 ff ff ff    	ja     348109e0 <printf_core+0x1d50>
    34810a19:	a8 20                	test   $0x20,%al
    34810a1b:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810a1f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34810a24:	8b 44 24 38          	mov    0x38(%rsp),%eax
    34810a28:	0f 85 aa 02 00 00    	jne    34810cd8 <printf_core+0x2048>
    34810a2e:	0f b6 c0             	movzbl %al,%eax
    34810a31:	e9 88 02 00 00       	jmpq   34810cbe <printf_core+0x202e>
    34810a36:	85 ff                	test   %edi,%edi
    34810a38:	b8 06 00 00 00       	mov    $0x6,%eax
    34810a3d:	0f 48 f8             	cmovs  %eax,%edi
    34810a40:	db e9                	fucomi %st(1),%st
    34810a42:	41 b9 1d 00 00 00    	mov    $0x1d,%r9d
    34810a48:	89 4c 24 58          	mov    %ecx,0x58(%rsp)
    34810a4c:	0f 85 06 00 00 00    	jne    34810a58 <printf_core+0x1dc8>
    34810a52:	0f 8b c1 03 00 00    	jnp    34810e19 <printf_core+0x2189>
    34810a58:	d8 0d 0e 53 00 00    	fmuls  0x530e(%rip)        # 34815d6c <PIo2+0x9c>
    34810a5e:	44 8b 44 24 7c       	mov    0x7c(%rsp),%r8d
    34810a63:	41 83 c0 e4          	add    $0xffffffe4,%r8d
    34810a67:	44 89 44 24 7c       	mov    %r8d,0x7c(%rsp)
    34810a6c:	e9 ad 03 00 00       	jmpq   34810e1e <printf_core+0x218e>
    34810a71:	48 8d 84 24 3b 01 00 	lea    0x13b(%rsp),%rax
    34810a78:	00 
    34810a79:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    34810a7e:	48 8d 05 5b 55 00 00 	lea    0x555b(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810a85:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34810a8a:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810a8e:	e9 cc 09 00 00       	jmpq   3481145f <printf_core+0x27cf>
    34810a93:	80 fb 02             	cmp    $0x2,%bl
    34810a96:	0f 8e f0 0f 00 00    	jle    34811a8c <printf_core+0x2dfc>
    34810a9c:	80 fb 05             	cmp    $0x5,%bl
    34810a9f:	8b 74 24 74          	mov    0x74(%rsp),%esi
    34810aa3:	0f 8f c7 e2 ff ff    	jg     3480ed70 <printf_core+0xe0>
    34810aa9:	80 fb 03             	cmp    $0x3,%bl
    34810aac:	0f 84 00 f5 ff ff    	je     3480ffb2 <printf_core+0x1322>
    34810ab2:	80 fb 04             	cmp    $0x4,%bl
    34810ab5:	0f 85 ef 0f 00 00    	jne    34811aaa <printf_core+0x2e1a>
    34810abb:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    34810ac2:	00 
    34810ac3:	40 88 30             	mov    %sil,(%rax)
    34810ac6:	31 c9                	xor    %ecx,%ecx
    34810ac8:	e9 03 f5 ff ff       	jmpq   3480ffd0 <printf_core+0x1340>
    34810acd:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    34810ad4:	00 
    34810ad5:	48 85 c0             	test   %rax,%rax
    34810ad8:	48 8d 8c 24 3b 01 00 	lea    0x13b(%rsp),%rcx
    34810adf:	00 
    34810ae0:	48 89 ca             	mov    %rcx,%rdx
    34810ae3:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810ae7:	0f 84 2b 00 00 00    	je     34810b18 <printf_core+0x1e88>
    34810aed:	48 8d 8c 24 3b 01 00 	lea    0x13b(%rsp),%rcx
    34810af4:	00 
    34810af5:	48 89 ca             	mov    %rcx,%rdx
    34810af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34810aff:	00 
    34810b00:	89 c1                	mov    %eax,%ecx
    34810b02:	80 e1 07             	and    $0x7,%cl
    34810b05:	80 c9 30             	or     $0x30,%cl
    34810b08:	88 4a ff             	mov    %cl,-0x1(%rdx)
    34810b0b:	48 ff ca             	dec    %rdx
    34810b0e:	48 c1 e8 03          	shr    $0x3,%rax
    34810b12:	0f 85 e8 ff ff ff    	jne    34810b00 <printf_core+0x1e70>
    34810b18:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    34810b1d:	31 c0                	xor    %eax,%eax
    34810b1f:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810b24:	f6 c3 08             	test   $0x8,%bl
    34810b27:	0f 84 1e 00 00 00    	je     34810b4b <printf_core+0x1ebb>
    34810b2d:	49 63 cb             	movslq %r11d,%rcx
    34810b30:	48 8d 84 24 3b 01 00 	lea    0x13b(%rsp),%rax
    34810b37:	00 
    34810b38:	48 2b 44 24 38       	sub    0x38(%rsp),%rax
    34810b3d:	48 39 c8             	cmp    %rcx,%rax
    34810b40:	0f 8c 05 00 00 00    	jl     34810b4b <printf_core+0x1ebb>
    34810b46:	ff c0                	inc    %eax
    34810b48:	41 89 c3             	mov    %eax,%r11d
    34810b4b:	48 8d 05 8e 54 00 00 	lea    0x548e(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810b52:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34810b57:	e9 03 09 00 00       	jmpq   3481145f <printf_core+0x27cf>
    34810b5c:	8a 84 24 90 00 00 00 	mov    0x90(%rsp),%al
    34810b63:	88 84 24 3a 01 00 00 	mov    %al,0x13a(%rsp)
    34810b6a:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    34810b70:	48 8d 84 24 3a 01 00 	lea    0x13a(%rsp),%rax
    34810b77:	00 
    34810b78:	48 89 c3             	mov    %rax,%rbx
    34810b7b:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    34810b82:	00 
    34810b83:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    34810b87:	48 8d 05 52 54 00 00 	lea    0x5452(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810b8e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34810b93:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    34810b98:	e9 26 09 00 00       	jmpq   348114c3 <printf_core+0x2833>
    34810b9d:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    34810ba1:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
    34810ba8:	00 
    34810ba9:	48 85 ff             	test   %rdi,%rdi
    34810bac:	48 8d 05 37 54 00 00 	lea    0x5437(%rip),%rax        # 34815fea <states+0x1da>
    34810bb3:	48 0f 44 f8          	cmove  %rax,%rdi
    34810bb7:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    34810bbc:	4d 63 e3             	movslq %r11d,%r12
    34810bbf:	31 c0                	xor    %eax,%eax
    34810bc1:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810bc6:	31 f6                	xor    %esi,%esi
    34810bc8:	4c 89 e2             	mov    %r12,%rdx
    34810bcb:	48 89 fb             	mov    %rdi,%rbx
    34810bce:	e8 2d 1f 00 00       	callq  34812b00 <memchr>
    34810bd3:	89 c1                	mov    %eax,%ecx
    34810bd5:	29 d9                	sub    %ebx,%ecx
    34810bd7:	49 01 dc             	add    %rbx,%r12
    34810bda:	48 85 c0             	test   %rax,%rax
    34810bdd:	4c 0f 45 e0          	cmovne %rax,%r12
    34810be1:	0f 44 4c 24 48       	cmove  0x48(%rsp),%ecx
    34810be6:	41 89 cb             	mov    %ecx,%r11d
    34810be9:	48 8d 05 f0 53 00 00 	lea    0x53f0(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810bf0:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34810bf5:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810bfa:	4c 8d 15 0f 52 00 00 	lea    0x520f(%rip),%r10        # 34815e10 <states>
    34810c01:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34810c06:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    34810c0b:	e9 b3 08 00 00       	jmpq   348114c3 <printf_core+0x2833>
    34810c10:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    34810c17:	00 
    34810c18:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810c1d:	45 85 db             	test   %r11d,%r11d
    34810c20:	0f 84 43 e1 ff ff    	je     3480ed69 <printf_core+0xd9>
    34810c26:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34810c2b:	31 c9                	xor    %ecx,%ecx
    34810c2d:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810c32:	48 89 c7             	mov    %rax,%rdi
    34810c35:	31 c0                	xor    %eax,%eax
    34810c37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34810c3e:	00 00 
    34810c40:	8b 37                	mov    (%rdi),%esi
    34810c42:	85 f6                	test   %esi,%esi
    34810c44:	0f 84 6e e1 ff ff    	je     3480edb8 <printf_core+0x128>
    34810c4a:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    34810c4f:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    34810c54:	4c 89 db             	mov    %r11,%rbx
    34810c57:	48 8d bc 24 ec 00 00 	lea    0xec(%rsp),%rdi
    34810c5e:	00 
    34810c5f:	e8 cc 18 00 00       	callq  34812530 <wctomb>
    34810c64:	85 c0                	test   %eax,%eax
    34810c66:	0f 88 2b e1 ff ff    	js     3480ed97 <printf_core+0x107>
    34810c6c:	49 89 db             	mov    %rbx,%r11
    34810c6f:	44 89 d9             	mov    %r11d,%ecx
    34810c72:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    34810c77:	29 d1                	sub    %edx,%ecx
    34810c79:	39 c8                	cmp    %ecx,%eax
    34810c7b:	4c 8d 15 8e 51 00 00 	lea    0x518e(%rip),%r10        # 34815e10 <states>
    34810c82:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34810c87:	0f 87 28 e1 ff ff    	ja     3480edb5 <printf_core+0x125>
    34810c8d:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    34810c92:	48 83 c7 04          	add    $0x4,%rdi
    34810c96:	01 c2                	add    %eax,%edx
    34810c98:	41 39 d3             	cmp    %edx,%r11d
    34810c9b:	48 89 d1             	mov    %rdx,%rcx
    34810c9e:	0f 87 9c ff ff ff    	ja     34810c40 <printf_core+0x1fb0>
    34810ca4:	e9 0f e1 ff ff       	jmpq   3480edb8 <printf_core+0x128>
    34810ca9:	a8 20                	test   $0x20,%al
    34810cab:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34810caf:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34810cb4:	8b 44 24 38          	mov    0x38(%rsp),%eax
    34810cb8:	0f 85 1a 00 00 00    	jne    34810cd8 <printf_core+0x2048>
    34810cbe:	48 63 f0             	movslq %eax,%rsi
    34810cc1:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34810cc8:	00 
    34810cc9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    34810cce:	e8 3d da ff ff       	callq  3480e710 <__fwritex>
    34810cd3:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34810cd8:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810cdd:	41 8b 01             	mov    (%r9),%eax
    34810ce0:	a8 20                	test   $0x20,%al
    34810ce2:	0f 85 24 00 00 00    	jne    34810d0c <printf_core+0x207c>
    34810ce8:	8b b4 24 80 00 00 00 	mov    0x80(%rsp),%esi
    34810cef:	48 8b bc 24 d8 00 00 	mov    0xd8(%rsp),%rdi
    34810cf6:	00 
    34810cf7:	4c 89 ca             	mov    %r9,%rdx
    34810cfa:	e8 11 da ff ff       	callq  3480e710 <__fwritex>
    34810cff:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34810d04:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810d09:	41 8b 01             	mov    (%r9),%eax
    34810d0c:	a8 20                	test   $0x20,%al
    34810d0e:	0f 85 1a 00 00 00    	jne    34810d2e <printf_core+0x209e>
    34810d14:	be 03 00 00 00       	mov    $0x3,%esi
    34810d19:	4c 89 e7             	mov    %r12,%rdi
    34810d1c:	4c 89 ca             	mov    %r9,%rdx
    34810d1f:	e8 ec d9 ff ff       	callq  3480e710 <__fwritex>
    34810d24:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34810d29:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810d2e:	81 e3 00 20 01 00    	and    $0x12000,%ebx
    34810d34:	81 fb 00 20 00 00    	cmp    $0x2000,%ebx
    34810d3a:	0f 85 14 e0 ff ff    	jne    3480ed54 <printf_core+0xc4>
    34810d40:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34810d45:	41 89 c4             	mov    %eax,%r12d
    34810d48:	41 29 cc             	sub    %ecx,%r12d
    34810d4b:	0f 8e 03 e0 ff ff    	jle    3480ed54 <printf_core+0xc4>
    34810d51:	49 63 dc             	movslq %r12d,%rbx
    34810d54:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34810d5b:	ba 00 01 00 00       	mov    $0x100,%edx
    34810d60:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34810d64:	be 20 00 00 00       	mov    $0x20,%esi
    34810d69:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34810d70:	00 
    34810d71:	e8 17 aa ff ff       	callq  3480b78d <memset>
    34810d76:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810d7b:	41 8b 01             	mov    (%r9),%eax
    34810d7e:	a8 20                	test   $0x20,%al
    34810d80:	0f 94 c1             	sete   %cl
    34810d83:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    34810d89:	0f 82 9b df ff ff    	jb     3480ed2a <printf_core+0x9a>
    34810d8f:	44 89 e3             	mov    %r12d,%ebx
    34810d92:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34810d99:	1f 84 00 00 00 00 00 
    34810da0:	f6 c1 01             	test   $0x1,%cl
    34810da3:	0f 84 1d 00 00 00    	je     34810dc6 <printf_core+0x2136>
    34810da9:	be 00 01 00 00       	mov    $0x100,%esi
    34810dae:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34810db5:	00 
    34810db6:	4c 89 ca             	mov    %r9,%rdx
    34810db9:	e8 52 d9 ff ff       	callq  3480e710 <__fwritex>
    34810dbe:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34810dc3:	41 8b 01             	mov    (%r9),%eax
    34810dc6:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34810dcc:	a8 20                	test   $0x20,%al
    34810dce:	0f 94 c1             	sete   %cl
    34810dd1:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34810dd7:	0f 87 c3 ff ff ff    	ja     34810da0 <printf_core+0x2110>
    34810ddd:	e9 29 df ff ff       	jmpq   3480ed0b <printf_core+0x7b>
    34810de2:	48 8d 05 f7 51 00 00 	lea    0x51f7(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810de9:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    34810dee:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    34810df3:	e9 67 06 00 00       	jmpq   3481145f <printf_core+0x27cf>
    34810df8:	48 f7 d9             	neg    %rcx
    34810dfb:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
    34810e02:	00 
    34810e03:	b8 01 00 00 00       	mov    $0x1,%eax
    34810e08:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34810e0d:	48 8d 05 cc 51 00 00 	lea    0x51cc(%rip),%rax        # 34815fe0 <states+0x1d0>
    34810e14:	e9 d7 05 00 00       	jmpq   348113f0 <printf_core+0x2760>
    34810e19:	44 8b 44 24 7c       	mov    0x7c(%rsp),%r8d
    34810e1e:	48 8b 05 d3 61 20 00 	mov    0x2061d3(%rip),%rax        # 34a16ff8 <stdout+0xd8>
    34810e25:	4c 8d 98 a8 1b 00 00 	lea    0x1ba8(%rax),%r11
    34810e2c:	45 85 c0             	test   %r8d,%r8d
    34810e2f:	4c 0f 48 d8          	cmovs  %rax,%r11
    34810e33:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
    34810e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    34810e3f:	00 
    34810e40:	d9 7c 24 78          	fnstcw 0x78(%rsp)
    34810e44:	0f b7 44 24 78       	movzwl 0x78(%rsp),%eax
    34810e49:	66 c7 44 24 78 7f 0c 	movw   $0xc7f,0x78(%rsp)
    34810e50:	d9 6c 24 78          	fldcw  0x78(%rsp)
    34810e54:	66 89 44 24 78       	mov    %ax,0x78(%rsp)
    34810e59:	d9 c0                	fld    %st(0)
    34810e5b:	df bc 24 68 01 00 00 	fistpll 0x168(%rsp)
    34810e62:	d9 6c 24 78          	fldcw  0x78(%rsp)
    34810e66:	8b 84 24 68 01 00 00 	mov    0x168(%rsp),%eax
    34810e6d:	41 89 03             	mov    %eax,(%r11)
    34810e70:	49 83 c3 04          	add    $0x4,%r11
    34810e74:	48 89 84 24 60 01 00 	mov    %rax,0x160(%rsp)
    34810e7b:	00 
    34810e7c:	df ac 24 60 01 00 00 	fildll 0x160(%rsp)
    34810e83:	de e9                	fsubrp %st,%st(1)
    34810e85:	d8 0d e5 4e 00 00    	fmuls  0x4ee5(%rip)        # 34815d70 <PIo2+0xa0>
    34810e8b:	db e9                	fucomi %st(1),%st
    34810e8d:	0f 85 ad ff ff ff    	jne    34810e40 <printf_core+0x21b0>
    34810e93:	0f 8a a7 ff ff ff    	jp     34810e40 <printf_core+0x21b0>
    34810e99:	dd d8                	fstp   %st(0)
    34810e9b:	dd d8                	fstp   %st(0)
    34810e9d:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    34810ea2:	45 85 c0             	test   %r8d,%r8d
    34810ea5:	0f 8e c2 00 00 00    	jle    34810f6d <printf_core+0x22dd>
    34810eab:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34810eb0:	41 83 f8 1e          	cmp    $0x1e,%r8d
    34810eb4:	45 0f 4d c1          	cmovge %r9d,%r8d
    34810eb8:	49 8d 7b fc          	lea    -0x4(%r11),%rdi
    34810ebc:	48 39 c7             	cmp    %rax,%rdi
    34810ebf:	0f 82 5b 00 00 00    	jb     34810f20 <printf_core+0x2290>
    34810ec5:	44 89 c1             	mov    %r8d,%ecx
    34810ec8:	31 d2                	xor    %edx,%edx
    34810eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34810ed0:	48 89 c6             	mov    %rax,%rsi
    34810ed3:	8b 07                	mov    (%rdi),%eax
    34810ed5:	48 d3 e0             	shl    %cl,%rax
    34810ed8:	89 d3                	mov    %edx,%ebx
    34810eda:	48 01 c3             	add    %rax,%rbx
    34810edd:	48 89 d8             	mov    %rbx,%rax
    34810ee0:	48 c1 e8 09          	shr    $0x9,%rax
    34810ee4:	49 f7 e4             	mul    %r12
    34810ee7:	48 c1 ea 0b          	shr    $0xb,%rdx
    34810eeb:	69 c2 00 ca 9a 3b    	imul   $0x3b9aca00,%edx,%eax
    34810ef1:	29 c3                	sub    %eax,%ebx
    34810ef3:	48 89 f0             	mov    %rsi,%rax
    34810ef6:	89 1f                	mov    %ebx,(%rdi)
    34810ef8:	48 83 c7 fc          	add    $0xfffffffffffffffc,%rdi
    34810efc:	48 39 c7             	cmp    %rax,%rdi
    34810eff:	0f 83 cb ff ff ff    	jae    34810ed0 <printf_core+0x2240>
    34810f05:	85 d2                	test   %edx,%edx
    34810f07:	0f 84 07 00 00 00    	je     34810f14 <printf_core+0x2284>
    34810f0d:	89 50 fc             	mov    %edx,-0x4(%rax)
    34810f10:	48 83 c0 fc          	add    $0xfffffffffffffffc,%rax
    34810f14:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34810f1b:	00 
    34810f1c:	0f 1f 40 00          	nopl   0x0(%rax)
    34810f20:	4c 89 da             	mov    %r11,%rdx
    34810f23:	48 39 c2             	cmp    %rax,%rdx
    34810f26:	0f 86 0e 00 00 00    	jbe    34810f3a <printf_core+0x22aa>
    34810f2c:	4c 8d 5a fc          	lea    -0x4(%rdx),%r11
    34810f30:	83 7a fc 00          	cmpl   $0x0,-0x4(%rdx)
    34810f34:	0f 84 e6 ff ff ff    	je     34810f20 <printf_core+0x2290>
    34810f3a:	8b 4c 24 7c          	mov    0x7c(%rsp),%ecx
    34810f3e:	44 29 c1             	sub    %r8d,%ecx
    34810f41:	89 4c 24 7c          	mov    %ecx,0x7c(%rsp)
    34810f45:	85 c9                	test   %ecx,%ecx
    34810f47:	49 89 d3             	mov    %rdx,%r11
    34810f4a:	41 89 c8             	mov    %ecx,%r8d
    34810f4d:	0f 8f 5d ff ff ff    	jg     34810eb0 <printf_core+0x2220>
    34810f53:	85 c9                	test   %ecx,%ecx
    34810f55:	0f 88 25 00 00 00    	js     34810f80 <printf_core+0x22f0>
    34810f5b:	49 89 c4             	mov    %rax,%r12
    34810f5e:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    34810f63:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    34810f68:	e9 fe 01 00 00       	jmpq   3481116b <printf_core+0x24db>
    34810f6d:	44 89 c1             	mov    %r8d,%ecx
    34810f70:	4c 89 da             	mov    %r11,%rdx
    34810f73:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    34810f78:	85 c9                	test   %ecx,%ecx
    34810f7a:	0f 89 db ff ff ff    	jns    34810f5b <printf_core+0x22cb>
    34810f80:	48 89 c7             	mov    %rax,%rdi
    34810f83:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    34810f88:	8d 40 1d             	lea    0x1d(%rax),%eax
    34810f8b:	48 98                	cltq   
    34810f8d:	48 69 c0 39 8e e3 38 	imul   $0x38e38e39,%rax,%rax
    34810f94:	48 89 d6             	mov    %rdx,%rsi
    34810f97:	48 89 c2             	mov    %rax,%rdx
    34810f9a:	48 c1 fa 21          	sar    $0x21,%rdx
    34810f9e:	48 c1 e8 3f          	shr    $0x3f,%rax
    34810fa2:	8d 44 02 01          	lea    0x1(%rdx,%rax,1),%eax
    34810fa6:	48 89 f2             	mov    %rsi,%rdx
    34810fa9:	48 63 f0             	movslq %eax,%rsi
    34810fac:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    34810fb1:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    34810fb6:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    34810fbd:	00 
    34810fbe:	66 90                	xchg   %ax,%ax
    34810fc0:	f7 d9                	neg    %ecx
    34810fc2:	83 f9 0a             	cmp    $0xa,%ecx
    34810fc5:	b8 09 00 00 00       	mov    $0x9,%eax
    34810fca:	0f 4d c8             	cmovge %eax,%ecx
    34810fcd:	48 39 d7             	cmp    %rdx,%rdi
    34810fd0:	0f 83 3a 01 00 00    	jae    34811110 <printf_core+0x2480>
    34810fd6:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    34810fdc:	41 d3 e4             	shl    %cl,%r12d
    34810fdf:	41 ff cc             	dec    %r12d
    34810fe2:	41 b8 00 ca 9a 3b    	mov    $0x3b9aca00,%r8d
    34810fe8:	41 d3 e8             	shr    %cl,%r8d
    34810feb:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    34810ff0:	48 29 fa             	sub    %rdi,%rdx
    34810ff3:	48 ff ca             	dec    %rdx
    34810ff6:	48 89 fe             	mov    %rdi,%rsi
    34810ff9:	48 89 d0             	mov    %rdx,%rax
    34810ffc:	48 c1 e8 02          	shr    $0x2,%rax
    34811000:	44 8d 48 01          	lea    0x1(%rax),%r9d
    34811004:	41 83 e1 03          	and    $0x3,%r9d
    34811008:	31 ff                	xor    %edi,%edi
    3481100a:	48 83 fa 0c          	cmp    $0xc,%rdx
    3481100e:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    34811013:	0f 82 83 00 00 00    	jb     3481109c <printf_core+0x240c>
    34811019:	49 8d 51 ff          	lea    -0x1(%r9),%rdx
    3481101d:	48 29 c2             	sub    %rax,%rdx
    34811020:	31 ff                	xor    %edi,%edi
    34811022:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    34811027:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3481102e:	00 00 
    34811030:	8b 06                	mov    (%rsi),%eax
    34811032:	8b 5e 04             	mov    0x4(%rsi),%ebx
    34811035:	41 89 c2             	mov    %eax,%r10d
    34811038:	45 21 e2             	and    %r12d,%r10d
    3481103b:	d3 e8                	shr    %cl,%eax
    3481103d:	01 f8                	add    %edi,%eax
    3481103f:	89 06                	mov    %eax,(%rsi)
    34811041:	45 0f af d0          	imul   %r8d,%r10d
    34811045:	89 d8                	mov    %ebx,%eax
    34811047:	44 21 e0             	and    %r12d,%eax
    3481104a:	d3 eb                	shr    %cl,%ebx
    3481104c:	44 01 d3             	add    %r10d,%ebx
    3481104f:	89 5e 04             	mov    %ebx,0x4(%rsi)
    34811052:	41 0f af c0          	imul   %r8d,%eax
    34811056:	8b 7e 08             	mov    0x8(%rsi),%edi
    34811059:	89 fb                	mov    %edi,%ebx
    3481105b:	44 21 e3             	and    %r12d,%ebx
    3481105e:	d3 ef                	shr    %cl,%edi
    34811060:	01 c7                	add    %eax,%edi
    34811062:	89 7e 08             	mov    %edi,0x8(%rsi)
    34811065:	41 0f af d8          	imul   %r8d,%ebx
    34811069:	8b 46 0c             	mov    0xc(%rsi),%eax
    3481106c:	89 c7                	mov    %eax,%edi
    3481106e:	44 21 e7             	and    %r12d,%edi
    34811071:	d3 e8                	shr    %cl,%eax
    34811073:	01 d8                	add    %ebx,%eax
    34811075:	89 46 0c             	mov    %eax,0xc(%rsi)
    34811078:	41 0f af f8          	imul   %r8d,%edi
    3481107c:	48 83 c6 10          	add    $0x10,%rsi
    34811080:	48 83 c2 04          	add    $0x4,%rdx
    34811084:	0f 85 a6 ff ff ff    	jne    34811030 <printf_core+0x23a0>
    3481108a:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811091:	00 
    34811092:	49 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%r10
    34811099:	cc cc cc 
    3481109c:	4d 85 c9             	test   %r9,%r9
    3481109f:	89 fa                	mov    %edi,%edx
    348110a1:	0f 84 29 00 00 00    	je     348110d0 <printf_core+0x2440>
    348110a7:	49 f7 d9             	neg    %r9
    348110aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348110b0:	8b 06                	mov    (%rsi),%eax
    348110b2:	89 c2                	mov    %eax,%edx
    348110b4:	44 21 e2             	and    %r12d,%edx
    348110b7:	d3 e8                	shr    %cl,%eax
    348110b9:	01 f8                	add    %edi,%eax
    348110bb:	89 06                	mov    %eax,(%rsi)
    348110bd:	41 0f af d0          	imul   %r8d,%edx
    348110c1:	48 83 c6 04          	add    $0x4,%rsi
    348110c5:	49 ff c1             	inc    %r9
    348110c8:	89 d7                	mov    %edx,%edi
    348110ca:	0f 85 e0 ff ff ff    	jne    348110b0 <printf_core+0x2420>
    348110d0:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    348110d5:	4c 8d 60 04          	lea    0x4(%rax),%r12
    348110d9:	83 38 00             	cmpl   $0x0,(%rax)
    348110dc:	4c 0f 45 e0          	cmovne %rax,%r12
    348110e0:	85 d2                	test   %edx,%edx
    348110e2:	0f 84 38 00 00 00    	je     34811120 <printf_core+0x2490>
    348110e8:	4c 8b 5c 24 38       	mov    0x38(%rsp),%r11
    348110ed:	41 89 13             	mov    %edx,(%r11)
    348110f0:	4c 89 da             	mov    %r11,%rdx
    348110f3:	48 83 c2 04          	add    $0x4,%rdx
    348110f7:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    348110fc:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    34811101:	e9 29 00 00 00       	jmpq   3481112f <printf_core+0x249f>
    34811106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3481110d:	00 00 00 
    34811110:	4c 8d 67 04          	lea    0x4(%rdi),%r12
    34811114:	83 3f 00             	cmpl   $0x0,(%rdi)
    34811117:	4c 0f 45 e7          	cmovne %rdi,%r12
    3481111b:	e9 17 00 00 00       	jmpq   34811137 <printf_core+0x24a7>
    34811120:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
    34811125:	44 8b 5c 24 58       	mov    0x58(%rsp),%r11d
    3481112a:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    3481112f:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    34811136:	00 
    34811137:	41 83 fb 66          	cmp    $0x66,%r11d
    3481113b:	4c 89 e0             	mov    %r12,%rax
    3481113e:	49 0f 44 c0          	cmove  %r8,%rax
    34811142:	48 89 d7             	mov    %rdx,%rdi
    34811145:	48 29 c2             	sub    %rax,%rdx
    34811148:	48 c1 fa 02          	sar    $0x2,%rdx
    3481114c:	48 39 f2             	cmp    %rsi,%rdx
    3481114f:	48 89 fa             	mov    %rdi,%rdx
    34811152:	48 8d 04 b0          	lea    (%rax,%rsi,4),%rax
    34811156:	48 0f 4f d0          	cmovg  %rax,%rdx
    3481115a:	03 4c 24 7c          	add    0x7c(%rsp),%ecx
    3481115e:	89 4c 24 7c          	mov    %ecx,0x7c(%rsp)
    34811162:	4c 89 e7             	mov    %r12,%rdi
    34811165:	0f 88 55 fe ff ff    	js     34810fc0 <printf_core+0x2330>
    3481116b:	31 ff                	xor    %edi,%edi
    3481116d:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    34811172:	49 39 d4             	cmp    %rdx,%r12
    34811175:	0f 83 34 00 00 00    	jae    348111af <printf_core+0x251f>
    3481117b:	4c 89 c0             	mov    %r8,%rax
    3481117e:	4c 29 e0             	sub    %r12,%rax
    34811181:	48 c1 e8 02          	shr    $0x2,%rax
    34811185:	8d 3c c0             	lea    (%rax,%rax,8),%edi
    34811188:	41 8b 04 24          	mov    (%r12),%eax
    3481118c:	83 f8 0a             	cmp    $0xa,%eax
    3481118f:	0f 82 1a 00 00 00    	jb     348111af <printf_core+0x251f>
    34811195:	b9 0a 00 00 00       	mov    $0xa,%ecx
    3481119a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348111a0:	01 c9                	add    %ecx,%ecx
    348111a2:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
    348111a5:	ff c7                	inc    %edi
    348111a7:	39 c8                	cmp    %ecx,%eax
    348111a9:	0f 83 f1 ff ff ff    	jae    348111a0 <printf_core+0x2510>
    348111af:	41 83 fb 66          	cmp    $0x66,%r11d
    348111b3:	b9 00 00 00 00       	mov    $0x0,%ecx
    348111b8:	0f 45 cf             	cmovne %edi,%ecx
    348111bb:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    348111c0:	89 d0                	mov    %edx,%eax
    348111c2:	29 c8                	sub    %ecx,%eax
    348111c4:	41 83 fb 67          	cmp    $0x67,%r11d
    348111c8:	0f 94 c1             	sete   %cl
    348111cb:	85 d2                	test   %edx,%edx
    348111cd:	0f 95 c2             	setne  %dl
    348111d0:	20 ca                	and    %cl,%dl
    348111d2:	0f b6 ca             	movzbl %dl,%ecx
    348111d5:	29 c8                	sub    %ecx,%eax
    348111d7:	48 63 c8             	movslq %eax,%rcx
    348111da:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    348111df:	4c 29 c2             	sub    %r8,%rdx
    348111e2:	48 c1 fa 02          	sar    $0x2,%rdx
    348111e6:	48 8d 54 d2 f7       	lea    -0x9(%rdx,%rdx,8),%rdx
    348111eb:	48 39 ca             	cmp    %rcx,%rdx
    348111ee:	0f 8e e6 01 00 00    	jle    348113da <printf_core+0x274a>
    348111f4:	05 00 40 02 00       	add    $0x24000,%eax
    348111f9:	48 98                	cltq   
    348111fb:	48 69 c8 39 8e e3 38 	imul   $0x38e38e39,%rax,%rcx
    34811202:	48 89 ca             	mov    %rcx,%rdx
    34811205:	48 c1 ea 3f          	shr    $0x3f,%rdx
    34811209:	48 c1 f9 21          	sar    $0x21,%rcx
    3481120d:	01 d1                	add    %edx,%ecx
    3481120f:	4c 63 c9             	movslq %ecx,%r9
    34811212:	4b 8d b4 88 04 00 ff 	lea    -0xfffc(%r8,%r9,4),%rsi
    34811219:	ff 
    3481121a:	8d 0c c9             	lea    (%rcx,%rcx,8),%ecx
    3481121d:	29 c8                	sub    %ecx,%eax
    3481121f:	b9 0a 00 00 00       	mov    $0xa,%ecx
    34811224:	83 f8 07             	cmp    $0x7,%eax
    34811227:	0f 8f 73 01 00 00    	jg     348113a0 <printf_core+0x2710>
    3481122d:	ba 08 00 00 00       	mov    $0x8,%edx
    34811232:	29 c2                	sub    %eax,%edx
    34811234:	b9 0a 00 00 00       	mov    $0xa,%ecx
    34811239:	83 fa 08             	cmp    $0x8,%edx
    3481123c:	0f 82 4a 01 00 00    	jb     3481138c <printf_core+0x26fc>
    34811242:	41 89 d3             	mov    %edx,%r11d
    34811245:	41 83 e3 f8          	and    $0xfffffff8,%r11d
    34811249:	41 89 d2             	mov    %edx,%r10d
    3481124c:	41 83 e2 f8          	and    $0xfffffff8,%r10d
    34811250:	0f 84 36 01 00 00    	je     3481138c <printf_core+0x26fc>
    34811256:	41 8d 5a f8          	lea    -0x8(%r10),%ebx
    3481125a:	41 89 d8             	mov    %ebx,%r8d
    3481125d:	41 c1 e8 03          	shr    $0x3,%r8d
    34811261:	41 8d 48 01          	lea    0x1(%r8),%ecx
    34811265:	83 e1 07             	and    $0x7,%ecx
    34811268:	83 fb 38             	cmp    $0x38,%ebx
    3481126b:	66 0f 6f 05 2d 4b 00 	movdqa 0x4b2d(%rip),%xmm0        # 34815da0 <PIo2+0xd0>
    34811272:	00 
    34811273:	66 0f 6f 0d 15 4b 00 	movdqa 0x4b15(%rip),%xmm1        # 34815d90 <PIo2+0xc0>
    3481127a:	00 
    3481127b:	66 0f 6f 1d 2d 4b 00 	movdqa 0x4b2d(%rip),%xmm3        # 34815db0 <PIo2+0xe0>
    34811282:	00 
    34811283:	0f 82 55 00 00 00    	jb     348112de <printf_core+0x264e>
    34811289:	8d 59 ff             	lea    -0x1(%rcx),%ebx
    3481128c:	44 29 c3             	sub    %r8d,%ebx
    3481128f:	66 0f 6f 05 09 4b 00 	movdqa 0x4b09(%rip),%xmm0        # 34815da0 <PIo2+0xd0>
    34811296:	00 
    34811297:	66 0f 6f 0d f1 4a 00 	movdqa 0x4af1(%rip),%xmm1        # 34815d90 <PIo2+0xc0>
    3481129e:	00 
    3481129f:	66 0f 70 d0 f5       	pshufd $0xf5,%xmm0,%xmm2
    348112a4:	66 0f f4 c3          	pmuludq %xmm3,%xmm0
    348112a8:	66 0f 70 c0 e8       	pshufd $0xe8,%xmm0,%xmm0
    348112ad:	66 0f f4 d3          	pmuludq %xmm3,%xmm2
    348112b1:	66 0f 70 d2 e8       	pshufd $0xe8,%xmm2,%xmm2
    348112b6:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
    348112ba:	66 0f 70 d1 f5       	pshufd $0xf5,%xmm1,%xmm2
    348112bf:	66 0f f4 cb          	pmuludq %xmm3,%xmm1
    348112c3:	66 0f 70 c9 e8       	pshufd $0xe8,%xmm1,%xmm1
    348112c8:	66 0f f4 d3          	pmuludq %xmm3,%xmm2
    348112cc:	66 0f 70 d2 e8       	pshufd $0xe8,%xmm2,%xmm2
    348112d1:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
    348112d5:	83 c3 08             	add    $0x8,%ebx
    348112d8:	0f 85 c1 ff ff ff    	jne    3481129f <printf_core+0x260f>
    348112de:	85 c9                	test   %ecx,%ecx
    348112e0:	66 0f 6f 1d d8 4a 00 	movdqa 0x4ad8(%rip),%xmm3        # 34815dc0 <PIo2+0xf0>
    348112e7:	00 
    348112e8:	0f 84 40 00 00 00    	je     3481132e <printf_core+0x269e>
    348112ee:	f7 d9                	neg    %ecx
    348112f0:	66 0f 70 d0 f5       	pshufd $0xf5,%xmm0,%xmm2
    348112f5:	66 0f f4 c3          	pmuludq %xmm3,%xmm0
    348112f9:	66 0f 70 c0 e8       	pshufd $0xe8,%xmm0,%xmm0
    348112fe:	66 0f f4 d3          	pmuludq %xmm3,%xmm2
    34811302:	66 0f 70 d2 e8       	pshufd $0xe8,%xmm2,%xmm2
    34811307:	66 0f 62 c2          	punpckldq %xmm2,%xmm0
    3481130b:	66 0f 70 d1 f5       	pshufd $0xf5,%xmm1,%xmm2
    34811310:	66 0f f4 cb          	pmuludq %xmm3,%xmm1
    34811314:	66 0f 70 c9 e8       	pshufd $0xe8,%xmm1,%xmm1
    34811319:	66 0f f4 d3          	pmuludq %xmm3,%xmm2
    3481131d:	66 0f 70 d2 e8       	pshufd $0xe8,%xmm2,%xmm2
    34811322:	66 0f 62 ca          	punpckldq %xmm2,%xmm1
    34811326:	ff c1                	inc    %ecx
    34811328:	0f 85 c2 ff ff ff    	jne    348112f0 <printf_core+0x2660>
    3481132e:	66 0f 70 d1 f5       	pshufd $0xf5,%xmm1,%xmm2
    34811333:	66 0f f4 c8          	pmuludq %xmm0,%xmm1
    34811337:	66 0f 70 c9 e8       	pshufd $0xe8,%xmm1,%xmm1
    3481133c:	66 0f 70 c0 f5       	pshufd $0xf5,%xmm0,%xmm0
    34811341:	66 0f f4 c2          	pmuludq %xmm2,%xmm0
    34811345:	66 0f 70 c0 e8       	pshufd $0xe8,%xmm0,%xmm0
    3481134a:	66 0f 62 c8          	punpckldq %xmm0,%xmm1
    3481134e:	66 0f 70 c1 4e       	pshufd $0x4e,%xmm1,%xmm0
    34811353:	66 0f 70 d1 f5       	pshufd $0xf5,%xmm1,%xmm2
    34811358:	66 0f f4 c8          	pmuludq %xmm0,%xmm1
    3481135c:	66 0f 70 c9 e8       	pshufd $0xe8,%xmm1,%xmm1
    34811361:	66 0f 70 c0 f5       	pshufd $0xf5,%xmm0,%xmm0
    34811366:	66 0f f4 c2          	pmuludq %xmm2,%xmm0
    3481136a:	66 0f 70 c0 e8       	pshufd $0xe8,%xmm0,%xmm0
    3481136f:	66 0f 62 c8          	punpckldq %xmm0,%xmm1
    34811373:	66 0f 70 c1 e5       	pshufd $0xe5,%xmm1,%xmm0
    34811378:	66 0f f4 c1          	pmuludq %xmm1,%xmm0
    3481137c:	66 0f 7e c1          	movd   %xmm0,%ecx
    34811380:	44 39 d2             	cmp    %r10d,%edx
    34811383:	0f 84 17 00 00 00    	je     348113a0 <printf_core+0x2710>
    34811389:	44 01 d8             	add    %r11d,%eax
    3481138c:	ff c8                	dec    %eax
    3481138e:	66 90                	xchg   %ax,%ax
    34811390:	01 c9                	add    %ecx,%ecx
    34811392:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
    34811395:	ff c0                	inc    %eax
    34811397:	83 f8 07             	cmp    $0x7,%eax
    3481139a:	0f 8c f0 ff ff ff    	jl     34811390 <printf_core+0x2700>
    348113a0:	44 8b 16             	mov    (%rsi),%r10d
    348113a3:	31 d2                	xor    %edx,%edx
    348113a5:	44 89 d0             	mov    %r10d,%eax
    348113a8:	f7 f1                	div    %ecx
    348113aa:	41 89 d0             	mov    %edx,%r8d
    348113ad:	48 8d 5e 04          	lea    0x4(%rsi),%rbx
    348113b1:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    348113b6:	48 39 d3             	cmp    %rdx,%rbx
    348113b9:	0f 85 45 06 00 00    	jne    34811a04 <printf_core+0x2d74>
    348113bf:	45 85 c0             	test   %r8d,%r8d
    348113c2:	0f 85 3c 06 00 00    	jne    34811a04 <printf_core+0x2d74>
    348113c8:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348113cd:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    348113d4:	00 
    348113d5:	e9 b9 dd ff ff       	jmpq   3480f193 <printf_core+0x503>
    348113da:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348113df:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    348113e4:	e9 c9 dd ff ff       	jmpq   3480f1b2 <printf_core+0x522>
    348113e9:	48 8d 05 f1 4b 00 00 	lea    0x4bf1(%rip),%rax        # 34815fe1 <states+0x1d1>
    348113f0:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    348113f5:	48 85 c9             	test   %rcx,%rcx
    348113f8:	0f 84 60 f2 ff ff    	je     3481065e <printf_core+0x19ce>
    348113fe:	49 89 fc             	mov    %rdi,%r12
    34811401:	48 8d 9c 24 3b 01 00 	lea    0x13b(%rsp),%rbx
    34811408:	00 
    34811409:	48 bf cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdi
    34811410:	cc cc cc 
    34811413:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    3481141a:	84 00 00 00 00 00 
    34811420:	48 89 c8             	mov    %rcx,%rax
    34811423:	48 f7 e7             	mul    %rdi
    34811426:	89 d0                	mov    %edx,%eax
    34811428:	c1 e8 02             	shr    $0x2,%eax
    3481142b:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    34811430:	8d 04 80             	lea    (%rax,%rax,4),%eax
    34811433:	89 ce                	mov    %ecx,%esi
    34811435:	29 c6                	sub    %eax,%esi
    34811437:	40 80 ce 30          	or     $0x30,%sil
    3481143b:	40 88 73 ff          	mov    %sil,-0x1(%rbx)
    3481143f:	48 ff cb             	dec    %rbx
    34811442:	48 c1 ea 03          	shr    $0x3,%rdx
    34811446:	48 83 f9 09          	cmp    $0x9,%rcx
    3481144a:	48 89 d1             	mov    %rdx,%rcx
    3481144d:	0f 87 cd ff ff ff    	ja     34811420 <printf_core+0x2790>
    34811453:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    34811458:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    3481145c:	4c 89 e7             	mov    %r12,%rdi
    3481145f:	89 d8                	mov    %ebx,%eax
    34811461:	81 e3 ff ff fe ff    	and    $0xfffeffff,%ebx
    34811467:	45 85 db             	test   %r11d,%r11d
    3481146a:	0f 48 d8             	cmovs  %eax,%ebx
    3481146d:	89 5c 24 1c          	mov    %ebx,0x1c(%rsp)
    34811471:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
    34811478:	00 
    34811479:	0f 85 1c 00 00 00    	jne    3481149b <printf_core+0x280b>
    3481147f:	48 85 c0             	test   %rax,%rax
    34811482:	0f 85 13 00 00 00    	jne    3481149b <printf_core+0x280b>
    34811488:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    3481148f:	00 
    34811490:	4c 89 e3             	mov    %r12,%rbx
    34811493:	45 31 db             	xor    %r11d,%r11d
    34811496:	e9 28 00 00 00       	jmpq   348114c3 <printf_core+0x2833>
    3481149b:	49 63 cb             	movslq %r11d,%rcx
    3481149e:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    348114a5:	00 
    348114a6:	4c 89 e2             	mov    %r12,%rdx
    348114a9:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    348114ae:	48 29 da             	sub    %rbx,%rdx
    348114b1:	48 83 f8 01          	cmp    $0x1,%rax
    348114b5:	48 83 d2 00          	adc    $0x0,%rdx
    348114b9:	48 39 ca             	cmp    %rcx,%rdx
    348114bc:	41 0f 4c d3          	cmovl  %r11d,%edx
    348114c0:	41 89 d3             	mov    %edx,%r11d
    348114c3:	49 63 cb             	movslq %r11d,%rcx
    348114c6:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    348114cb:	49 29 dc             	sub    %rbx,%r12
    348114ce:	49 39 cc             	cmp    %rcx,%r12
    348114d1:	4c 89 a4 24 80 00 00 	mov    %r12,0x80(%rsp)
    348114d8:	00 
    348114d9:	41 0f 4f cc          	cmovg  %r12d,%ecx
    348114dd:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    348114e2:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    348114e7:	8d 04 01             	lea    (%rcx,%rax,1),%eax
    348114ea:	39 c7                	cmp    %eax,%edi
    348114ec:	89 f9                	mov    %edi,%ecx
    348114ee:	89 44 24 48          	mov    %eax,0x48(%rsp)
    348114f2:	0f 4c c8             	cmovl  %eax,%ecx
    348114f5:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    348114f9:	81 e3 00 20 01 00    	and    $0x12000,%ebx
    348114ff:	89 5c 24 1c          	mov    %ebx,0x1c(%rsp)
    34811503:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    34811508:	0f 85 1b 01 00 00    	jne    34811629 <printf_core+0x2999>
    3481150e:	8b 44 24 48          	mov    0x48(%rsp),%eax
    34811512:	3b 44 24 60          	cmp    0x60(%rsp),%eax
    34811516:	0f 8d 0d 01 00 00    	jge    34811629 <printf_core+0x2999>
    3481151c:	41 89 cc             	mov    %ecx,%r12d
    3481151f:	44 2b 64 24 48       	sub    0x48(%rsp),%r12d
    34811524:	49 63 dc             	movslq %r12d,%rbx
    34811527:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3481152e:	ba 00 01 00 00       	mov    $0x100,%edx
    34811533:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34811537:	be 20 00 00 00       	mov    $0x20,%esi
    3481153c:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811543:	00 
    34811544:	e8 44 a2 ff ff       	callq  3480b78d <memset>
    34811549:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3481154e:	41 8b 01             	mov    (%r9),%eax
    34811551:	a8 20                	test   $0x20,%al
    34811553:	0f 94 c1             	sete   %cl
    34811556:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3481155c:	0f 82 81 00 00 00    	jb     348115e3 <printf_core+0x2953>
    34811562:	44 89 e3             	mov    %r12d,%ebx
    34811565:	4c 8d 15 a4 48 00 00 	lea    0x48a4(%rip),%r10        # 34815e10 <states>
    3481156c:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34811571:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34811578:	0f 1f 84 00 00 00 00 
    3481157f:	00 
    34811580:	f6 c1 01             	test   $0x1,%cl
    34811583:	0f 84 29 00 00 00    	je     348115b2 <printf_core+0x2922>
    34811589:	be 00 01 00 00       	mov    $0x100,%esi
    3481158e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811595:	00 
    34811596:	4c 89 ca             	mov    %r9,%rdx
    34811599:	e8 72 d1 ff ff       	callq  3480e710 <__fwritex>
    3481159e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348115a3:	4c 8d 15 66 48 00 00 	lea    0x4866(%rip),%r10        # 34815e10 <states>
    348115aa:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348115af:	41 8b 01             	mov    (%r9),%eax
    348115b2:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    348115b8:	a8 20                	test   $0x20,%al
    348115ba:	0f 94 c1             	sete   %cl
    348115bd:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    348115c3:	0f 87 b7 ff ff ff    	ja     34811580 <printf_core+0x28f0>
    348115c9:	a8 20                	test   $0x20,%al
    348115cb:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    348115cf:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348115d4:	0f 85 4f 00 00 00    	jne    34811629 <printf_core+0x2999>
    348115da:	45 0f b6 e4          	movzbl %r12b,%r12d
    348115de:	e9 1d 00 00 00       	jmpq   34811600 <printf_core+0x2970>
    348115e3:	a8 20                	test   $0x20,%al
    348115e5:	4c 8d 15 24 48 00 00 	lea    0x4824(%rip),%r10        # 34815e10 <states>
    348115ec:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348115f1:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    348115f5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348115fa:	0f 85 29 00 00 00    	jne    34811629 <printf_core+0x2999>
    34811600:	49 63 f4             	movslq %r12d,%rsi
    34811603:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3481160a:	00 
    3481160b:	4c 89 ca             	mov    %r9,%rdx
    3481160e:	e8 fd d0 ff ff       	callq  3480e710 <__fwritex>
    34811613:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811618:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3481161d:	4c 8d 15 ec 47 00 00 	lea    0x47ec(%rip),%r10        # 34815e10 <states>
    34811624:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811629:	41 f6 01 20          	testb  $0x20,(%r9)
    3481162d:	0f 85 28 00 00 00    	jne    3481165b <printf_core+0x29cb>
    34811633:	48 63 74 24 30       	movslq 0x30(%rsp),%rsi
    34811638:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    3481163d:	4c 89 ca             	mov    %r9,%rdx
    34811640:	e8 cb d0 ff ff       	callq  3480e710 <__fwritex>
    34811645:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3481164a:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3481164f:	4c 8d 15 ba 47 00 00 	lea    0x47ba(%rip),%r10        # 34815e10 <states>
    34811656:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3481165b:	81 fb 00 00 01 00    	cmp    $0x10000,%ebx
    34811661:	0f 85 12 01 00 00    	jne    34811779 <printf_core+0x2ae9>
    34811667:	8b 44 24 48          	mov    0x48(%rsp),%eax
    3481166b:	3b 44 24 60          	cmp    0x60(%rsp),%eax
    3481166f:	0f 8d 04 01 00 00    	jge    34811779 <printf_core+0x2ae9>
    34811675:	41 89 cc             	mov    %ecx,%r12d
    34811678:	44 2b 64 24 48       	sub    0x48(%rsp),%r12d
    3481167d:	49 63 dc             	movslq %r12d,%rbx
    34811680:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34811687:	ba 00 01 00 00       	mov    $0x100,%edx
    3481168c:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34811690:	be 30 00 00 00       	mov    $0x30,%esi
    34811695:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3481169c:	00 
    3481169d:	e8 eb a0 ff ff       	callq  3480b78d <memset>
    348116a2:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348116a7:	41 8b 01             	mov    (%r9),%eax
    348116aa:	a8 20                	test   $0x20,%al
    348116ac:	0f 94 c1             	sete   %cl
    348116af:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    348116b5:	0f 82 78 00 00 00    	jb     34811733 <printf_core+0x2aa3>
    348116bb:	44 89 e3             	mov    %r12d,%ebx
    348116be:	4c 8d 15 4b 47 00 00 	lea    0x474b(%rip),%r10        # 34815e10 <states>
    348116c5:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348116ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    348116d0:	f6 c1 01             	test   $0x1,%cl
    348116d3:	0f 84 29 00 00 00    	je     34811702 <printf_core+0x2a72>
    348116d9:	be 00 01 00 00       	mov    $0x100,%esi
    348116de:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348116e5:	00 
    348116e6:	4c 89 ca             	mov    %r9,%rdx
    348116e9:	e8 22 d0 ff ff       	callq  3480e710 <__fwritex>
    348116ee:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348116f3:	4c 8d 15 16 47 00 00 	lea    0x4716(%rip),%r10        # 34815e10 <states>
    348116fa:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348116ff:	41 8b 01             	mov    (%r9),%eax
    34811702:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34811708:	a8 20                	test   $0x20,%al
    3481170a:	0f 94 c1             	sete   %cl
    3481170d:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811713:	0f 87 b7 ff ff ff    	ja     348116d0 <printf_core+0x2a40>
    34811719:	a8 20                	test   $0x20,%al
    3481171b:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    3481171f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811724:	0f 85 4f 00 00 00    	jne    34811779 <printf_core+0x2ae9>
    3481172a:	45 0f b6 e4          	movzbl %r12b,%r12d
    3481172e:	e9 1d 00 00 00       	jmpq   34811750 <printf_core+0x2ac0>
    34811733:	a8 20                	test   $0x20,%al
    34811735:	4c 8d 15 d4 46 00 00 	lea    0x46d4(%rip),%r10        # 34815e10 <states>
    3481173c:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34811741:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34811745:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3481174a:	0f 85 29 00 00 00    	jne    34811779 <printf_core+0x2ae9>
    34811750:	49 63 f4             	movslq %r12d,%rsi
    34811753:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3481175a:	00 
    3481175b:	4c 89 ca             	mov    %r9,%rdx
    3481175e:	e8 ad cf ff ff       	callq  3480e710 <__fwritex>
    34811763:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811768:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3481176d:	4c 8d 15 9c 46 00 00 	lea    0x469c(%rip),%r10        # 34815e10 <states>
    34811774:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811779:	4c 8b a4 24 80 00 00 	mov    0x80(%rsp),%r12
    34811780:	00 
    34811781:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    34811786:	44 29 e0             	sub    %r12d,%eax
    34811789:	0f 8e 19 01 00 00    	jle    348118a8 <printf_core+0x2c18>
    3481178f:	48 63 d8             	movslq %eax,%rbx
    34811792:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34811799:	ba 00 01 00 00       	mov    $0x100,%edx
    3481179e:	48 0f 42 d3          	cmovb  %rbx,%rdx
    348117a2:	be 30 00 00 00       	mov    $0x30,%esi
    348117a7:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348117ae:	00 
    348117af:	49 89 c4             	mov    %rax,%r12
    348117b2:	e8 d6 9f ff ff       	callq  3480b78d <memset>
    348117b7:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348117bc:	41 8b 01             	mov    (%r9),%eax
    348117bf:	a8 20                	test   $0x20,%al
    348117c1:	0f 94 c1             	sete   %cl
    348117c4:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    348117ca:	0f 82 87 00 00 00    	jb     34811857 <printf_core+0x2bc7>
    348117d0:	4c 89 64 24 68       	mov    %r12,0x68(%rsp)
    348117d5:	44 89 e3             	mov    %r12d,%ebx
    348117d8:	4c 8d 15 31 46 00 00 	lea    0x4631(%rip),%r10        # 34815e10 <states>
    348117df:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348117e4:	4c 8b a4 24 80 00 00 	mov    0x80(%rsp),%r12
    348117eb:	00 
    348117ec:	0f 1f 40 00          	nopl   0x0(%rax)
    348117f0:	f6 c1 01             	test   $0x1,%cl
    348117f3:	0f 84 29 00 00 00    	je     34811822 <printf_core+0x2b92>
    348117f9:	be 00 01 00 00       	mov    $0x100,%esi
    348117fe:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811805:	00 
    34811806:	4c 89 ca             	mov    %r9,%rdx
    34811809:	e8 02 cf ff ff       	callq  3480e710 <__fwritex>
    3481180e:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34811813:	4c 8d 15 f6 45 00 00 	lea    0x45f6(%rip),%r10        # 34815e10 <states>
    3481181a:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3481181f:	41 8b 01             	mov    (%r9),%eax
    34811822:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34811828:	a8 20                	test   $0x20,%al
    3481182a:	0f 94 c1             	sete   %cl
    3481182d:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811833:	0f 87 b7 ff ff ff    	ja     348117f0 <printf_core+0x2b60>
    34811839:	a8 20                	test   $0x20,%al
    3481183b:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    3481183f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811844:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    34811849:	0f 85 59 00 00 00    	jne    348118a8 <printf_core+0x2c18>
    3481184f:	0f b6 c0             	movzbl %al,%eax
    34811852:	e9 28 00 00 00       	jmpq   3481187f <printf_core+0x2bef>
    34811857:	a8 20                	test   $0x20,%al
    34811859:	4c 8d 15 b0 45 00 00 	lea    0x45b0(%rip),%r10        # 34815e10 <states>
    34811860:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    34811865:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34811869:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3481186e:	4c 89 e0             	mov    %r12,%rax
    34811871:	4c 8b a4 24 80 00 00 	mov    0x80(%rsp),%r12
    34811878:	00 
    34811879:	0f 85 29 00 00 00    	jne    348118a8 <printf_core+0x2c18>
    3481187f:	48 63 f0             	movslq %eax,%rsi
    34811882:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811889:	00 
    3481188a:	4c 89 ca             	mov    %r9,%rdx
    3481188d:	e8 7e ce ff ff       	callq  3480e710 <__fwritex>
    34811892:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811897:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3481189c:	4c 8d 15 6d 45 00 00 	lea    0x456d(%rip),%r10        # 34815e10 <states>
    348118a3:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348118a8:	41 f6 01 20          	testb  $0x20,(%r9)
    348118ac:	0f 85 26 00 00 00    	jne    348118d8 <printf_core+0x2c48>
    348118b2:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    348118b7:	4c 89 e6             	mov    %r12,%rsi
    348118ba:	4c 89 ca             	mov    %r9,%rdx
    348118bd:	e8 4e ce ff ff       	callq  3480e710 <__fwritex>
    348118c2:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348118c7:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348118cc:	4c 8d 15 3d 45 00 00 	lea    0x453d(%rip),%r10        # 34815e10 <states>
    348118d3:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348118d8:	81 fb 00 20 00 00    	cmp    $0x2000,%ebx
    348118de:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    348118e3:	0f 85 38 d4 ff ff    	jne    3480ed21 <printf_core+0x91>
    348118e9:	39 44 24 48          	cmp    %eax,0x48(%rsp)
    348118ed:	0f 8d 2e d4 ff ff    	jge    3480ed21 <printf_core+0x91>
    348118f3:	41 89 cc             	mov    %ecx,%r12d
    348118f6:	44 2b 64 24 48       	sub    0x48(%rsp),%r12d
    348118fb:	49 63 dc             	movslq %r12d,%rbx
    348118fe:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34811905:	ba 00 01 00 00       	mov    $0x100,%edx
    3481190a:	48 0f 42 d3          	cmovb  %rbx,%rdx
    3481190e:	be 20 00 00 00       	mov    $0x20,%esi
    34811913:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3481191a:	00 
    3481191b:	e8 6d 9e ff ff       	callq  3480b78d <memset>
    34811920:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811925:	41 8b 01             	mov    (%r9),%eax
    34811928:	a8 20                	test   $0x20,%al
    3481192a:	0f 94 c1             	sete   %cl
    3481192d:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    34811933:	0f 82 66 00 00 00    	jb     3481199f <printf_core+0x2d0f>
    34811939:	44 89 e3             	mov    %r12d,%ebx
    3481193c:	0f 1f 40 00          	nopl   0x0(%rax)
    34811940:	f6 c1 01             	test   $0x1,%cl
    34811943:	0f 84 1d 00 00 00    	je     34811966 <printf_core+0x2cd6>
    34811949:	be 00 01 00 00       	mov    $0x100,%esi
    3481194e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811955:	00 
    34811956:	4c 89 ca             	mov    %r9,%rdx
    34811959:	e8 b2 cd ff ff       	callq  3480e710 <__fwritex>
    3481195e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811963:	41 8b 01             	mov    (%r9),%eax
    34811966:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    3481196c:	a8 20                	test   $0x20,%al
    3481196e:	0f 94 c1             	sete   %cl
    34811971:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811977:	0f 87 c3 ff ff ff    	ja     34811940 <printf_core+0x2cb0>
    3481197d:	a8 20                	test   $0x20,%al
    3481197f:	4c 8d 15 8a 44 00 00 	lea    0x448a(%rip),%r10        # 34815e10 <states>
    34811986:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    3481198b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811990:	0f 85 8b d3 ff ff    	jne    3480ed21 <printf_core+0x91>
    34811996:	45 0f b6 e4          	movzbl %r12b,%r12d
    3481199a:	e9 19 00 00 00       	jmpq   348119b8 <printf_core+0x2d28>
    3481199f:	a8 20                	test   $0x20,%al
    348119a1:	4c 8d 15 68 44 00 00 	lea    0x4468(%rip),%r10        # 34815e10 <states>
    348119a8:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348119ad:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348119b2:	0f 85 69 d3 ff ff    	jne    3480ed21 <printf_core+0x91>
    348119b8:	49 63 f4             	movslq %r12d,%rsi
    348119bb:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348119c2:	00 
    348119c3:	4c 89 ca             	mov    %r9,%rdx
    348119c6:	e8 45 cd ff ff       	callq  3480e710 <__fwritex>
    348119cb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    348119d0:	4c 8b 44 24 50       	mov    0x50(%rsp),%r8
    348119d5:	4c 8d 15 34 44 00 00 	lea    0x4434(%rip),%r10        # 34815e10 <states>
    348119dc:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348119e1:	e9 3b d3 ff ff       	jmpq   3480ed21 <printf_core+0x91>
    348119e6:	4c 8d a4 24 3b 01 00 	lea    0x13b(%rsp),%r12
    348119ed:	00 
    348119ee:	48 8d 05 eb 45 00 00 	lea    0x45eb(%rip),%rax        # 34815fe0 <states+0x1d0>
    348119f5:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    348119fa:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    348119ff:	e9 bf fa ff ff       	jmpq   348114c3 <printf_core+0x2833>
    34811a04:	31 d2                	xor    %edx,%edx
    34811a06:	44 89 d0             	mov    %r10d,%eax
    34811a09:	f7 f1                	div    %ecx
    34811a0b:	31 d2                	xor    %edx,%edx
    34811a0d:	a8 01                	test   $0x1,%al
    34811a0f:	0f 94 c2             	sete   %dl
    34811a12:	48 c1 e2 04          	shl    $0x4,%rdx
    34811a16:	48 8d 05 d3 43 00 00 	lea    0x43d3(%rip),%rax        # 34815df0 <xdigits+0x10>
    34811a1d:	db 2c 02             	fldt   (%rdx,%rax,1)
    34811a20:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    34811a25:	89 c8                	mov    %ecx,%eax
    34811a27:	c1 e8 1f             	shr    $0x1f,%eax
    34811a2a:	01 c8                	add    %ecx,%eax
    34811a2c:	d1 f8                	sar    %eax
    34811a2e:	d9 05 40 43 00 00    	flds   0x4340(%rip)        # 34815d74 <PIo2+0xa4>
    34811a34:	41 39 c0             	cmp    %eax,%r8d
    34811a37:	0f 82 1b 00 00 00    	jb     34811a58 <printf_core+0x2dc8>
    34811a3d:	dd d8                	fstp   %st(0)
    34811a3f:	d9 05 33 43 00 00    	flds   0x4333(%rip)        # 34815d78 <PIo2+0xa8>
    34811a45:	d9 c0                	fld    %st(0)
    34811a47:	d9 e8                	fld1   
    34811a49:	d9 c9                	fxch   %st(1)
    34811a4b:	da c9                	fcmove %st(1),%st
    34811a4d:	dd d9                	fstp   %st(1)
    34811a4f:	48 39 d3             	cmp    %rdx,%rbx
    34811a52:	d9 c9                	fxch   %st(1)
    34811a54:	da c9                	fcmove %st(1),%st
    34811a56:	dd d9                	fstp   %st(1)
    34811a58:	83 bc 24 80 00 00 00 	cmpl   $0x0,0x80(%rsp)
    34811a5f:	00 
    34811a60:	0f 84 4f d6 ff ff    	je     3480f0b5 <printf_core+0x425>
    34811a66:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
    34811a6d:	00 
    34811a6e:	80 38 2d             	cmpb   $0x2d,(%rax)
    34811a71:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811a78:	00 
    34811a79:	0f 85 3e d6 ff ff    	jne    3480f0bd <printf_core+0x42d>
    34811a7f:	d9 c9                	fxch   %st(1)
    34811a81:	d9 e0                	fchs   
    34811a83:	d9 c9                	fxch   %st(1)
    34811a85:	d9 e0                	fchs   
    34811a87:	e9 31 d6 ff ff       	jmpq   3480f0bd <printf_core+0x42d>
    34811a8c:	84 db                	test   %bl,%bl
    34811a8e:	8b 74 24 74          	mov    0x74(%rsp),%esi
    34811a92:	0f 84 2c e5 ff ff    	je     3480ffc4 <printf_core+0x1334>
    34811a98:	80 fb 01             	cmp    $0x1,%bl
    34811a9b:	0f 84 e1 d2 ff ff    	je     3480ed82 <printf_core+0xf2>
    34811aa1:	80 fb 02             	cmp    $0x2,%bl
    34811aa4:	0f 84 d8 d2 ff ff    	je     3480ed82 <printf_core+0xf2>
    34811aaa:	31 c9                	xor    %ecx,%ecx
    34811aac:	e9 1f e5 ff ff       	jmpq   3480ffd0 <printf_core+0x1340>
    34811ab1:	d9 c2                	fld    %st(2)
    34811ab3:	83 f9 07             	cmp    $0x7,%ecx
    34811ab6:	0f 82 39 00 00 00    	jb     34811af5 <printf_core+0x2e65>
    34811abc:	dd d8                	fstp   %st(0)
    34811abe:	d9 ee                	fldz   
    34811ac0:	d9 c9                	fxch   %st(1)
    34811ac2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34811ac9:	1f 84 00 00 00 00 00 
    34811ad0:	dd d9                	fstp   %st(1)
    34811ad2:	d9 05 a8 42 00 00    	flds   0x42a8(%rip)        # 34815d80 <PIo2+0xb0>
    34811ad8:	dc c9                	fmul   %st,%st(1)
    34811ada:	dc c9                	fmul   %st,%st(1)
    34811adc:	dc c9                	fmul   %st,%st(1)
    34811ade:	dc c9                	fmul   %st,%st(1)
    34811ae0:	dc c9                	fmul   %st,%st(1)
    34811ae2:	dc c9                	fmul   %st,%st(1)
    34811ae4:	dc c9                	fmul   %st,%st(1)
    34811ae6:	83 c0 f8             	add    $0xfffffff8,%eax
    34811ae9:	de c9                	fmulp  %st,%st(1)
    34811aeb:	d9 ee                	fldz   
    34811aed:	d9 c9                	fxch   %st(1)
    34811aef:	0f 85 db ff ff ff    	jne    34811ad0 <printf_core+0x2e40>
    34811af5:	dd d9                	fstp   %st(1)
    34811af7:	41 80 3c 24 2d       	cmpb   $0x2d,(%r12)
    34811afc:	0f 85 0f 00 00 00    	jne    34811b11 <printf_core+0x2e81>
    34811b02:	d9 c9                	fxch   %st(1)
    34811b04:	d9 e0                	fchs   
    34811b06:	d8 e1                	fsub   %st(1),%st
    34811b08:	de c1                	faddp  %st,%st(1)
    34811b0a:	d9 e0                	fchs   
    34811b0c:	e9 04 00 00 00       	jmpq   34811b15 <printf_core+0x2e85>
    34811b11:	dc c1                	fadd   %st,%st(1)
    34811b13:	de e9                	fsubrp %st,%st(1)
    34811b15:	44 8b 44 24 7c       	mov    0x7c(%rsp),%r8d
    34811b1a:	44 89 c1             	mov    %r8d,%ecx
    34811b1d:	c1 f9 1f             	sar    $0x1f,%ecx
    34811b20:	41 8d 04 08          	lea    (%r8,%rcx,1),%eax
    34811b24:	31 c8                	xor    %ecx,%eax
    34811b26:	48 8d 8c 24 d4 00 00 	lea    0xd4(%rsp),%rcx
    34811b2d:	00 
    34811b2e:	0f 84 5f 00 00 00    	je     34811b93 <printf_core+0x2f03>
    34811b34:	49 89 fb             	mov    %rdi,%r11
    34811b37:	48 63 c8             	movslq %eax,%rcx
    34811b3a:	31 db                	xor    %ebx,%ebx
    34811b3c:	0f 1f 40 00          	nopl   0x0(%rax)
    34811b40:	48 89 c8             	mov    %rcx,%rax
    34811b43:	49 f7 e2             	mul    %r10
    34811b46:	89 d0                	mov    %edx,%eax
    34811b48:	c1 e8 02             	shr    $0x2,%eax
    34811b4b:	25 fe ff ff 3f       	and    $0x3ffffffe,%eax
    34811b50:	8d 04 80             	lea    (%rax,%rax,4),%eax
    34811b53:	89 cf                	mov    %ecx,%edi
    34811b55:	29 c7                	sub    %eax,%edi
    34811b57:	40 80 cf 30          	or     $0x30,%dil
    34811b5b:	40 88 bc 1c d3 00 00 	mov    %dil,0xd3(%rsp,%rbx,1)
    34811b62:	00 
    34811b63:	48 ff cb             	dec    %rbx
    34811b66:	48 c1 ea 03          	shr    $0x3,%rdx
    34811b6a:	48 83 f9 09          	cmp    $0x9,%rcx
    34811b6e:	48 89 d1             	mov    %rdx,%rcx
    34811b71:	0f 87 c9 ff ff ff    	ja     34811b40 <printf_core+0x2eb0>
    34811b77:	48 85 db             	test   %rbx,%rbx
    34811b7a:	48 8d 8c 1c d4 00 00 	lea    0xd4(%rsp,%rbx,1),%rcx
    34811b81:	00 
    34811b82:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811b89:	00 
    34811b8a:	4c 89 df             	mov    %r11,%rdi
    34811b8d:	0f 85 07 00 00 00    	jne    34811b9a <printf_core+0x2f0a>
    34811b93:	c6 41 ff 30          	movb   $0x30,-0x1(%rcx)
    34811b97:	48 ff c9             	dec    %rcx
    34811b9a:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
    34811b9f:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    34811ba6:	00 
    34811ba7:	83 c8 02             	or     $0x2,%eax
    34811baa:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    34811bb1:	00 
    34811bb2:	41 c1 e8 1f          	shr    $0x1f,%r8d
    34811bb6:	43 8d 44 00 2b       	lea    0x2b(%r8,%r8,1),%eax
    34811bbb:	88 41 ff             	mov    %al,-0x1(%rcx)
    34811bbe:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
    34811bc3:	83 c0 0f             	add    $0xf,%eax
    34811bc6:	88 41 fe             	mov    %al,-0x2(%rcx)
    34811bc9:	48 83 c1 fe          	add    $0xfffffffffffffffe,%rcx
    34811bcd:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    34811bd2:	49 89 dc             	mov    %rbx,%r12
    34811bd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34811bdc:	00 00 00 00 
    34811be0:	4c 89 e0             	mov    %r12,%rax
    34811be3:	d9 7c 24 7a          	fnstcw 0x7a(%rsp)
    34811be7:	0f b7 4c 24 7a       	movzwl 0x7a(%rsp),%ecx
    34811bec:	66 c7 44 24 7a 7f 0c 	movw   $0xc7f,0x7a(%rsp)
    34811bf3:	d9 6c 24 7a          	fldcw  0x7a(%rsp)
    34811bf7:	66 89 4c 24 7a       	mov    %cx,0x7a(%rsp)
    34811bfc:	db 94 24 08 01 00 00 	fistl  0x108(%rsp)
    34811c03:	d9 6c 24 7a          	fldcw  0x7a(%rsp)
    34811c07:	48 63 8c 24 08 01 00 	movslq 0x108(%rsp),%rcx
    34811c0e:	00 
    34811c0f:	48 8d 15 ca 41 00 00 	lea    0x41ca(%rip),%rdx        # 34815de0 <xdigits>
    34811c16:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx
    34811c1a:	09 f2                	or     %esi,%edx
    34811c1c:	4c 8d 60 01          	lea    0x1(%rax),%r12
    34811c20:	88 10                	mov    %dl,(%rax)
    34811c22:	89 8c 24 0c 01 00 00 	mov    %ecx,0x10c(%rsp)
    34811c29:	da a4 24 0c 01 00 00 	fisubl 0x10c(%rsp)
    34811c30:	d8 0d 4a 41 00 00    	fmuls  0x414a(%rip)        # 34815d80 <PIo2+0xb0>
    34811c36:	48 8b 8c 24 40 01 00 	mov    0x140(%rsp),%rcx
    34811c3d:	00 
    34811c3e:	48 8d 4c 08 01       	lea    0x1(%rax,%rcx,1),%rcx
    34811c43:	48 83 f9 01          	cmp    $0x1,%rcx
    34811c47:	0f 85 2c 00 00 00    	jne    34811c79 <printf_core+0x2fe9>
    34811c4d:	f6 44 24 1c 08       	testb  $0x8,0x1c(%rsp)
    34811c52:	0f 85 16 00 00 00    	jne    34811c6e <printf_core+0x2fde>
    34811c58:	85 ff                	test   %edi,%edi
    34811c5a:	0f 8f 0e 00 00 00    	jg     34811c6e <printf_core+0x2fde>
    34811c60:	db e9                	fucomi %st(1),%st
    34811c62:	0f 85 06 00 00 00    	jne    34811c6e <printf_core+0x2fde>
    34811c68:	0f 8b 0b 00 00 00    	jnp    34811c79 <printf_core+0x2fe9>
    34811c6e:	c6 40 01 2e          	movb   $0x2e,0x1(%rax)
    34811c72:	48 83 c0 02          	add    $0x2,%rax
    34811c76:	49 89 c4             	mov    %rax,%r12
    34811c79:	db e9                	fucomi %st(1),%st
    34811c7b:	0f 85 5f ff ff ff    	jne    34811be0 <printf_core+0x2f50>
    34811c81:	0f 8a 59 ff ff ff    	jp     34811be0 <printf_core+0x2f50>
    34811c87:	dd d8                	fstp   %st(0)
    34811c89:	dd d8                	fstp   %st(0)
    34811c8b:	85 ff                	test   %edi,%edi
    34811c8d:	0f 84 30 00 00 00    	je     34811cc3 <printf_core+0x3033>
    34811c93:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
    34811c9a:	00 
    34811c9b:	4a 8d 04 20          	lea    (%rax,%r12,1),%rax
    34811c9f:	48 63 cf             	movslq %edi,%rcx
    34811ca2:	48 39 c8             	cmp    %rcx,%rax
    34811ca5:	0f 8d 18 00 00 00    	jge    34811cc3 <printf_core+0x3033>
    34811cab:	83 c7 02             	add    $0x2,%edi
    34811cae:	48 63 cf             	movslq %edi,%rcx
    34811cb1:	48 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%rax
    34811cb8:	00 
    34811cb9:	48 2b 44 24 38       	sub    0x38(%rsp),%rax
    34811cbe:	e9 13 00 00 00       	jmpq   34811cd6 <printf_core+0x3046>
    34811cc3:	4c 89 e0             	mov    %r12,%rax
    34811cc6:	48 29 d8             	sub    %rbx,%rax
    34811cc9:	48 8d 8c 24 d4 00 00 	lea    0xd4(%rsp),%rcx
    34811cd0:	00 
    34811cd1:	48 2b 4c 24 38       	sub    0x38(%rsp),%rcx
    34811cd6:	48 01 c1             	add    %rax,%rcx
    34811cd9:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
    34811ce0:	00 
    34811ce1:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
    34811ce6:	8d 0c 08             	lea    (%rax,%rcx,1),%ecx
    34811ce9:	81 64 24 1c 00 20 01 	andl   $0x12000,0x1c(%rsp)
    34811cf0:	00 
    34811cf1:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    34811cf6:	0f 85 e8 00 00 00    	jne    34811de4 <printf_core+0x3154>
    34811cfc:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34811d01:	29 c8                	sub    %ecx,%eax
    34811d03:	0f 8e db 00 00 00    	jle    34811de4 <printf_core+0x3154>
    34811d09:	48 63 d8             	movslq %eax,%rbx
    34811d0c:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34811d13:	ba 00 01 00 00       	mov    $0x100,%edx
    34811d18:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34811d1c:	be 20 00 00 00       	mov    $0x20,%esi
    34811d21:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811d28:	00 
    34811d29:	89 44 24 68          	mov    %eax,0x68(%rsp)
    34811d2d:	e8 5b 9a ff ff       	callq  3480b78d <memset>
    34811d32:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811d37:	41 8b 01             	mov    (%r9),%eax
    34811d3a:	a8 20                	test   $0x20,%al
    34811d3c:	0f 94 c1             	sete   %cl
    34811d3f:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    34811d45:	0f 82 63 00 00 00    	jb     34811dae <printf_core+0x311e>
    34811d4b:	8b 5c 24 68          	mov    0x68(%rsp),%ebx
    34811d4f:	90                   	nop
    34811d50:	f6 c1 01             	test   $0x1,%cl
    34811d53:	0f 84 1d 00 00 00    	je     34811d76 <printf_core+0x30e6>
    34811d59:	be 00 01 00 00       	mov    $0x100,%esi
    34811d5e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811d65:	00 
    34811d66:	4c 89 ca             	mov    %r9,%rdx
    34811d69:	e8 a2 c9 ff ff       	callq  3480e710 <__fwritex>
    34811d6e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811d73:	41 8b 01             	mov    (%r9),%eax
    34811d76:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34811d7c:	a8 20                	test   $0x20,%al
    34811d7e:	0f 94 c1             	sete   %cl
    34811d81:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811d87:	0f 87 c3 ff ff ff    	ja     34811d50 <printf_core+0x30c0>
    34811d8d:	a8 20                	test   $0x20,%al
    34811d8f:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811d96:	00 
    34811d97:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811d9c:	8b 44 24 68          	mov    0x68(%rsp),%eax
    34811da0:	0f 85 3e 00 00 00    	jne    34811de4 <printf_core+0x3154>
    34811da6:	0f b6 c0             	movzbl %al,%eax
    34811da9:	e9 19 00 00 00       	jmpq   34811dc7 <printf_core+0x3137>
    34811dae:	a8 20                	test   $0x20,%al
    34811db0:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811db7:	00 
    34811db8:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811dbd:	8b 44 24 68          	mov    0x68(%rsp),%eax
    34811dc1:	0f 85 1d 00 00 00    	jne    34811de4 <printf_core+0x3154>
    34811dc7:	48 63 f0             	movslq %eax,%rsi
    34811dca:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811dd1:	00 
    34811dd2:	4c 89 ca             	mov    %r9,%rdx
    34811dd5:	e8 36 c9 ff ff       	callq  3480e710 <__fwritex>
    34811dda:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811ddf:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811de4:	41 f6 01 20          	testb  $0x20,(%r9)
    34811de8:	0f 85 1e 00 00 00    	jne    34811e0c <printf_core+0x317c>
    34811dee:	8b b4 24 80 00 00 00 	mov    0x80(%rsp),%esi
    34811df5:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    34811dfa:	4c 89 ca             	mov    %r9,%rdx
    34811dfd:	e8 0e c9 ff ff       	callq  3480e710 <__fwritex>
    34811e02:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811e07:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811e0c:	81 7c 24 1c 00 00 01 	cmpl   $0x10000,0x1c(%rsp)
    34811e13:	00 
    34811e14:	0f 85 ea 00 00 00    	jne    34811f04 <printf_core+0x3274>
    34811e1a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34811e1f:	29 c8                	sub    %ecx,%eax
    34811e21:	0f 8e dd 00 00 00    	jle    34811f04 <printf_core+0x3274>
    34811e27:	48 63 d8             	movslq %eax,%rbx
    34811e2a:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    34811e31:	ba 00 01 00 00       	mov    $0x100,%edx
    34811e36:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34811e3a:	be 30 00 00 00       	mov    $0x30,%esi
    34811e3f:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811e46:	00 
    34811e47:	89 44 24 30          	mov    %eax,0x30(%rsp)
    34811e4b:	e8 3d 99 ff ff       	callq  3480b78d <memset>
    34811e50:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811e55:	41 8b 01             	mov    (%r9),%eax
    34811e58:	a8 20                	test   $0x20,%al
    34811e5a:	0f 94 c1             	sete   %cl
    34811e5d:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    34811e63:	0f 82 65 00 00 00    	jb     34811ece <printf_core+0x323e>
    34811e69:	8b 5c 24 30          	mov    0x30(%rsp),%ebx
    34811e6d:	0f 1f 00             	nopl   (%rax)
    34811e70:	f6 c1 01             	test   $0x1,%cl
    34811e73:	0f 84 1d 00 00 00    	je     34811e96 <printf_core+0x3206>
    34811e79:	be 00 01 00 00       	mov    $0x100,%esi
    34811e7e:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811e85:	00 
    34811e86:	4c 89 ca             	mov    %r9,%rdx
    34811e89:	e8 82 c8 ff ff       	callq  3480e710 <__fwritex>
    34811e8e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811e93:	41 8b 01             	mov    (%r9),%eax
    34811e96:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34811e9c:	a8 20                	test   $0x20,%al
    34811e9e:	0f 94 c1             	sete   %cl
    34811ea1:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811ea7:	0f 87 c3 ff ff ff    	ja     34811e70 <printf_core+0x31e0>
    34811ead:	a8 20                	test   $0x20,%al
    34811eaf:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811eb6:	00 
    34811eb7:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811ebc:	8b 44 24 30          	mov    0x30(%rsp),%eax
    34811ec0:	0f 85 3e 00 00 00    	jne    34811f04 <printf_core+0x3274>
    34811ec6:	0f b6 c0             	movzbl %al,%eax
    34811ec9:	e9 19 00 00 00       	jmpq   34811ee7 <printf_core+0x3257>
    34811ece:	a8 20                	test   $0x20,%al
    34811ed0:	48 8d 9c 24 a0 00 00 	lea    0xa0(%rsp),%rbx
    34811ed7:	00 
    34811ed8:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811edd:	8b 44 24 30          	mov    0x30(%rsp),%eax
    34811ee1:	0f 85 1d 00 00 00    	jne    34811f04 <printf_core+0x3274>
    34811ee7:	48 63 f0             	movslq %eax,%rsi
    34811eea:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811ef1:	00 
    34811ef2:	4c 89 ca             	mov    %r9,%rdx
    34811ef5:	e8 16 c8 ff ff       	callq  3480e710 <__fwritex>
    34811efa:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811eff:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811f04:	49 29 dc             	sub    %rbx,%r12
    34811f07:	41 f6 01 20          	testb  $0x20,(%r9)
    34811f0b:	0f 85 18 00 00 00    	jne    34811f29 <printf_core+0x3299>
    34811f11:	48 89 df             	mov    %rbx,%rdi
    34811f14:	4c 89 e6             	mov    %r12,%rsi
    34811f17:	4c 89 ca             	mov    %r9,%rdx
    34811f1a:	e8 f1 c7 ff ff       	callq  3480e710 <__fwritex>
    34811f1f:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811f24:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811f29:	48 8d 84 24 d4 00 00 	lea    0xd4(%rsp),%rax
    34811f30:	00 
    34811f31:	48 89 c2             	mov    %rax,%rdx
    34811f34:	48 2b 54 24 38       	sub    0x38(%rsp),%rdx
    34811f39:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    34811f3e:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    34811f43:	48 29 d0             	sub    %rdx,%rax
    34811f46:	4c 29 e0             	sub    %r12,%rax
    34811f49:	49 89 c4             	mov    %rax,%r12
    34811f4c:	45 85 e4             	test   %r12d,%r12d
    34811f4f:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34811f53:	0f 8e c8 00 00 00    	jle    34812021 <printf_core+0x3391>
    34811f59:	49 63 d4             	movslq %r12d,%rdx
    34811f5c:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
    34811f63:	b8 00 01 00 00       	mov    $0x100,%eax
    34811f68:	48 0f 43 d0          	cmovae %rax,%rdx
    34811f6c:	be 30 00 00 00       	mov    $0x30,%esi
    34811f71:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811f78:	00 
    34811f79:	e8 0f 98 ff ff       	callq  3480b78d <memset>
    34811f7e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811f83:	41 8b 01             	mov    (%r9),%eax
    34811f86:	a8 20                	test   $0x20,%al
    34811f88:	0f 94 c1             	sete   %cl
    34811f8b:	41 81 fc 00 01 00 00 	cmp    $0x100,%r12d
    34811f92:	0f 82 5f 00 00 00    	jb     34811ff7 <printf_core+0x3367>
    34811f98:	44 89 e3             	mov    %r12d,%ebx
    34811f9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34811fa0:	f6 c1 01             	test   $0x1,%cl
    34811fa3:	0f 84 1d 00 00 00    	je     34811fc6 <printf_core+0x3336>
    34811fa9:	be 00 01 00 00       	mov    $0x100,%esi
    34811fae:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34811fb5:	00 
    34811fb6:	4c 89 ca             	mov    %r9,%rdx
    34811fb9:	e8 52 c7 ff ff       	callq  3480e710 <__fwritex>
    34811fbe:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34811fc3:	41 8b 01             	mov    (%r9),%eax
    34811fc6:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    34811fcc:	a8 20                	test   $0x20,%al
    34811fce:	0f 94 c1             	sete   %cl
    34811fd1:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    34811fd7:	0f 87 c3 ff ff ff    	ja     34811fa0 <printf_core+0x3310>
    34811fdd:	a8 20                	test   $0x20,%al
    34811fdf:	8b 5c 24 1c          	mov    0x1c(%rsp),%ebx
    34811fe3:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811fe8:	0f 85 33 00 00 00    	jne    34812021 <printf_core+0x3391>
    34811fee:	45 0f b6 e4          	movzbl %r12b,%r12d
    34811ff2:	e9 0d 00 00 00       	jmpq   34812004 <printf_core+0x3374>
    34811ff7:	a8 20                	test   $0x20,%al
    34811ff9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34811ffe:	0f 85 1d 00 00 00    	jne    34812021 <printf_core+0x3391>
    34812004:	49 63 f4             	movslq %r12d,%rsi
    34812007:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    3481200e:	00 
    3481200f:	4c 89 ca             	mov    %r9,%rdx
    34812012:	e8 f9 c6 ff ff       	callq  3480e710 <__fwritex>
    34812017:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3481201c:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34812021:	41 f6 01 20          	testb  $0x20,(%r9)
    34812025:	0f 85 1c 00 00 00    	jne    34812047 <printf_core+0x33b7>
    3481202b:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    34812030:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    34812035:	4c 89 ca             	mov    %r9,%rdx
    34812038:	e8 d3 c6 ff ff       	callq  3480e710 <__fwritex>
    3481203d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34812042:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    34812047:	81 fb 00 20 00 00    	cmp    $0x2000,%ebx
    3481204d:	0f 85 01 cd ff ff    	jne    3480ed54 <printf_core+0xc4>
    34812053:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    34812058:	41 89 c4             	mov    %eax,%r12d
    3481205b:	41 29 cc             	sub    %ecx,%r12d
    3481205e:	0f 8e f0 cc ff ff    	jle    3480ed54 <printf_core+0xc4>
    34812064:	49 63 dc             	movslq %r12d,%rbx
    34812067:	48 81 fb 00 01 00 00 	cmp    $0x100,%rbx
    3481206e:	ba 00 01 00 00       	mov    $0x100,%edx
    34812073:	48 0f 42 d3          	cmovb  %rbx,%rdx
    34812077:	be 20 00 00 00       	mov    $0x20,%esi
    3481207c:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    34812083:	00 
    34812084:	e8 04 97 ff ff       	callq  3480b78d <memset>
    34812089:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    3481208e:	41 8b 01             	mov    (%r9),%eax
    34812091:	a8 20                	test   $0x20,%al
    34812093:	0f 94 c1             	sete   %cl
    34812096:	81 fb 00 01 00 00    	cmp    $0x100,%ebx
    3481209c:	0f 82 88 cc ff ff    	jb     3480ed2a <printf_core+0x9a>
    348120a2:	44 89 e3             	mov    %r12d,%ebx
    348120a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348120ac:	00 00 00 00 
    348120b0:	f6 c1 01             	test   $0x1,%cl
    348120b3:	0f 84 1d 00 00 00    	je     348120d6 <printf_core+0x3446>
    348120b9:	be 00 01 00 00       	mov    $0x100,%esi
    348120be:	48 8d bc 24 70 01 00 	lea    0x170(%rsp),%rdi
    348120c5:	00 
    348120c6:	4c 89 ca             	mov    %r9,%rdx
    348120c9:	e8 42 c6 ff ff       	callq  3480e710 <__fwritex>
    348120ce:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
    348120d3:	41 8b 01             	mov    (%r9),%eax
    348120d6:	81 c3 00 ff ff ff    	add    $0xffffff00,%ebx
    348120dc:	a8 20                	test   $0x20,%al
    348120de:	0f 94 c1             	sete   %cl
    348120e1:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    348120e7:	0f 87 c3 ff ff ff    	ja     348120b0 <printf_core+0x3420>
    348120ed:	e9 19 cc ff ff       	jmpq   3480ed0b <printf_core+0x7b>
    348120f2:	4d 85 c9             	test   %r9,%r9
    348120f5:	41 89 f4             	mov    %esi,%r12d
    348120f8:	0f 85 dd 01 00 00    	jne    348122db <printf_core+0x364b>
    348120fe:	83 bc 24 c4 00 00 00 	cmpl   $0x0,0xc4(%rsp)
    34812105:	00 
    34812106:	0f 84 35 01 00 00    	je     34812241 <printf_core+0x35b1>
    3481210c:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
    34812113:	00 
    34812114:	8b 73 04             	mov    0x4(%rbx),%esi
    34812117:	85 f6                	test   %esi,%esi
    34812119:	0f 84 2a 01 00 00    	je     34812249 <printf_core+0x35b9>
    3481211f:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    34812126:	00 
    34812127:	48 8d 78 10          	lea    0x10(%rax),%rdi
    3481212b:	4c 8b a4 24 f8 00 00 	mov    0xf8(%rsp),%r12
    34812132:	00 
    34812133:	4c 89 e2             	mov    %r12,%rdx
    34812136:	e8 b5 01 00 00       	callq  348122f0 <pop_arg>
    3481213b:	8b 73 08             	mov    0x8(%rbx),%esi
    3481213e:	85 f6                	test   %esi,%esi
    34812140:	0f 84 0d 01 00 00    	je     34812253 <printf_core+0x35c3>
    34812146:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    3481214d:	00 
    3481214e:	48 8d 78 20          	lea    0x20(%rax),%rdi
    34812152:	4c 89 e2             	mov    %r12,%rdx
    34812155:	e8 96 01 00 00       	callq  348122f0 <pop_arg>
    3481215a:	8b 73 0c             	mov    0xc(%rbx),%esi
    3481215d:	85 f6                	test   %esi,%esi
    3481215f:	0f 84 f8 00 00 00    	je     3481225d <printf_core+0x35cd>
    34812165:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    3481216c:	00 
    3481216d:	48 8d 78 30          	lea    0x30(%rax),%rdi
    34812171:	4c 89 e2             	mov    %r12,%rdx
    34812174:	e8 77 01 00 00       	callq  348122f0 <pop_arg>
    34812179:	8b 73 10             	mov    0x10(%rbx),%esi
    3481217c:	85 f6                	test   %esi,%esi
    3481217e:	0f 84 e3 00 00 00    	je     34812267 <printf_core+0x35d7>
    34812184:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    3481218b:	00 
    3481218c:	48 8d 78 40          	lea    0x40(%rax),%rdi
    34812190:	4c 89 e2             	mov    %r12,%rdx
    34812193:	e8 58 01 00 00       	callq  348122f0 <pop_arg>
    34812198:	8b 73 14             	mov    0x14(%rbx),%esi
    3481219b:	85 f6                	test   %esi,%esi
    3481219d:	0f 84 ce 00 00 00    	je     34812271 <printf_core+0x35e1>
    348121a3:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    348121aa:	00 
    348121ab:	48 8d 78 50          	lea    0x50(%rax),%rdi
    348121af:	4c 89 e2             	mov    %r12,%rdx
    348121b2:	e8 39 01 00 00       	callq  348122f0 <pop_arg>
    348121b7:	8b 73 18             	mov    0x18(%rbx),%esi
    348121ba:	85 f6                	test   %esi,%esi
    348121bc:	0f 84 b9 00 00 00    	je     3481227b <printf_core+0x35eb>
    348121c2:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    348121c9:	00 
    348121ca:	48 8d 78 60          	lea    0x60(%rax),%rdi
    348121ce:	4c 89 e2             	mov    %r12,%rdx
    348121d1:	e8 1a 01 00 00       	callq  348122f0 <pop_arg>
    348121d6:	8b 73 1c             	mov    0x1c(%rbx),%esi
    348121d9:	85 f6                	test   %esi,%esi
    348121db:	0f 84 a4 00 00 00    	je     34812285 <printf_core+0x35f5>
    348121e1:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    348121e8:	00 
    348121e9:	48 8d 78 70          	lea    0x70(%rax),%rdi
    348121ed:	4c 89 e2             	mov    %r12,%rdx
    348121f0:	e8 fb 00 00 00       	callq  348122f0 <pop_arg>
    348121f5:	8b 73 20             	mov    0x20(%rbx),%esi
    348121f8:	85 f6                	test   %esi,%esi
    348121fa:	0f 84 8f 00 00 00    	je     3481228f <printf_core+0x35ff>
    34812200:	48 8b bc 24 88 00 00 	mov    0x88(%rsp),%rdi
    34812207:	00 
    34812208:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
    3481220c:	4c 89 e2             	mov    %r12,%rdx
    3481220f:	e8 dc 00 00 00       	callq  348122f0 <pop_arg>
    34812214:	8b 73 24             	mov    0x24(%rbx),%esi
    34812217:	85 f6                	test   %esi,%esi
    34812219:	0f 84 7a 00 00 00    	je     34812299 <printf_core+0x3609>
    3481221f:	48 8b bc 24 88 00 00 	mov    0x88(%rsp),%rdi
    34812226:	00 
    34812227:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
    3481222e:	4c 89 e2             	mov    %r12,%rdx
    34812231:	e8 ba 00 00 00       	callq  348122f0 <pop_arg>
    34812236:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3481223c:	e9 9a 00 00 00       	jmpq   348122db <printf_core+0x364b>
    34812241:	45 31 e4             	xor    %r12d,%r12d
    34812244:	e9 92 00 00 00       	jmpq   348122db <printf_core+0x364b>
    34812249:	b8 01 00 00 00       	mov    $0x1,%eax
    3481224e:	e9 4b 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    34812253:	b8 02 00 00 00       	mov    $0x2,%eax
    34812258:	e9 41 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    3481225d:	b8 03 00 00 00       	mov    $0x3,%eax
    34812262:	e9 37 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    34812267:	b8 04 00 00 00       	mov    $0x4,%eax
    3481226c:	e9 2d 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    34812271:	b8 05 00 00 00       	mov    $0x5,%eax
    34812276:	e9 23 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    3481227b:	b8 06 00 00 00       	mov    $0x6,%eax
    34812280:	e9 19 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    34812285:	b8 07 00 00 00       	mov    $0x7,%eax
    3481228a:	e9 0f 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    3481228f:	b8 08 00 00 00       	mov    $0x8,%eax
    34812294:	e9 05 00 00 00       	jmpq   3481229e <printf_core+0x360e>
    34812299:	b8 09 00 00 00       	mov    $0x9,%eax
    3481229e:	48 ff c8             	dec    %rax
    348122a1:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    348122a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    348122ae:	00 00 
    348122b0:	48 8b 8c 24 e0 00 00 	mov    0xe0(%rsp),%rcx
    348122b7:	00 
    348122b8:	83 7c 81 04 00       	cmpl   $0x0,0x4(%rcx,%rax,4)
    348122bd:	0f 85 12 00 00 00    	jne    348122d5 <printf_core+0x3645>
    348122c3:	48 ff c0             	inc    %rax
    348122c6:	48 83 f8 08          	cmp    $0x8,%rax
    348122ca:	0f 8e e0 ff ff ff    	jle    348122b0 <printf_core+0x3620>
    348122d0:	e9 06 00 00 00       	jmpq   348122db <printf_core+0x364b>
    348122d5:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    348122db:	44 89 e0             	mov    %r12d,%eax
    348122de:	48 81 c4 78 02 00 00 	add    $0x278,%rsp
    348122e5:	5b                   	pop    %rbx
    348122e6:	41 5c                	pop    %r12
    348122e8:	c3                   	retq   
    348122e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000348122f0 <pop_arg>:
    348122f0:	83 fe 16             	cmp    $0x16,%esi
    348122f3:	0f 86 01 00 00 00    	jbe    348122fa <pop_arg+0xa>
    348122f9:	c3                   	retq   
    348122fa:	83 fe 0e             	cmp    $0xe,%esi
    348122fd:	0f 8f 42 00 00 00    	jg     34812345 <pop_arg+0x55>
    34812303:	83 fe 0b             	cmp    $0xb,%esi
    34812306:	0f 8f 7b 00 00 00    	jg     34812387 <pop_arg+0x97>
    3481230c:	83 fe 09             	cmp    $0x9,%esi
    3481230f:	0f 84 8d 00 00 00    	je     348123a2 <pop_arg+0xb2>
    34812315:	83 fe 0a             	cmp    $0xa,%esi
    34812318:	0f 84 25 01 00 00    	je     34812443 <pop_arg+0x153>
    3481231e:	83 fe 0b             	cmp    $0xb,%esi
    34812321:	0f 85 d2 ff ff ff    	jne    348122f9 <pop_arg+0x9>
    34812327:	48 63 0a             	movslq (%rdx),%rcx
    3481232a:	48 83 f9 28          	cmp    $0x28,%rcx
    3481232e:	0f 87 6e 01 00 00    	ja     348124a2 <pop_arg+0x1b2>
    34812334:	48 89 c8             	mov    %rcx,%rax
    34812337:	48 03 42 10          	add    0x10(%rdx),%rax
    3481233b:	8d 49 08             	lea    0x8(%rcx),%ecx
    3481233e:	89 0a                	mov    %ecx,(%rdx)
    34812340:	e9 69 01 00 00       	jmpq   348124ae <pop_arg+0x1be>
    34812345:	83 fe 11             	cmp    $0x11,%esi
    34812348:	0f 8f 72 00 00 00    	jg     348123c0 <pop_arg+0xd0>
    3481234e:	83 fe 0f             	cmp    $0xf,%esi
    34812351:	0f 84 b0 00 00 00    	je     34812407 <pop_arg+0x117>
    34812357:	83 fe 10             	cmp    $0x10,%esi
    3481235a:	0f 84 01 01 00 00    	je     34812461 <pop_arg+0x171>
    34812360:	83 fe 11             	cmp    $0x11,%esi
    34812363:	0f 85 90 ff ff ff    	jne    348122f9 <pop_arg+0x9>
    34812369:	48 63 0a             	movslq (%rdx),%rcx
    3481236c:	48 83 f9 28          	cmp    $0x28,%rcx
    34812370:	0f 87 3e 01 00 00    	ja     348124b4 <pop_arg+0x1c4>
    34812376:	48 89 c8             	mov    %rcx,%rax
    34812379:	48 03 42 10          	add    0x10(%rdx),%rax
    3481237d:	8d 49 08             	lea    0x8(%rcx),%ecx
    34812380:	89 0a                	mov    %ecx,(%rdx)
    34812382:	e9 39 01 00 00       	jmpq   348124c0 <pop_arg+0x1d0>
    34812387:	83 fe 0c             	cmp    $0xc,%esi
    3481238a:	0f 84 12 00 00 00    	je     348123a2 <pop_arg+0xb2>
    34812390:	83 fe 0d             	cmp    $0xd,%esi
    34812393:	0f 84 09 00 00 00    	je     348123a2 <pop_arg+0xb2>
    34812399:	83 fe 0e             	cmp    $0xe,%esi
    3481239c:	0f 85 57 ff ff ff    	jne    348122f9 <pop_arg+0x9>
    348123a2:	48 63 0a             	movslq (%rdx),%rcx
    348123a5:	48 83 f9 28          	cmp    $0x28,%rcx
    348123a9:	0f 87 45 00 00 00    	ja     348123f4 <pop_arg+0x104>
    348123af:	48 89 c8             	mov    %rcx,%rax
    348123b2:	48 03 42 10          	add    0x10(%rdx),%rax
    348123b6:	8d 49 08             	lea    0x8(%rcx),%ecx
    348123b9:	89 0a                	mov    %ecx,(%rdx)
    348123bb:	e9 40 00 00 00       	jmpq   34812400 <pop_arg+0x110>
    348123c0:	83 fe 12             	cmp    $0x12,%esi
    348123c3:	0f 84 5c 00 00 00    	je     34812425 <pop_arg+0x135>
    348123c9:	83 fe 13             	cmp    $0x13,%esi
    348123cc:	0f 84 ad 00 00 00    	je     3481247f <pop_arg+0x18f>
    348123d2:	83 fe 14             	cmp    $0x14,%esi
    348123d5:	0f 85 1e ff ff ff    	jne    348122f9 <pop_arg+0x9>
    348123db:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348123df:	48 83 c0 0f          	add    $0xf,%rax
    348123e3:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    348123e7:	48 8d 48 10          	lea    0x10(%rax),%rcx
    348123eb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348123ef:	db 28                	fldt   (%rax)
    348123f1:	db 3f                	fstpt  (%rdi)
    348123f3:	c3                   	retq   
    348123f4:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348123f8:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348123fc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    34812400:	48 8b 00             	mov    (%rax),%rax
    34812403:	48 89 07             	mov    %rax,(%rdi)
    34812406:	c3                   	retq   
    34812407:	48 63 0a             	movslq (%rdx),%rcx
    3481240a:	48 83 f9 28          	cmp    $0x28,%rcx
    3481240e:	0f 87 b4 00 00 00    	ja     348124c8 <pop_arg+0x1d8>
    34812414:	48 89 c8             	mov    %rcx,%rax
    34812417:	48 03 42 10          	add    0x10(%rdx),%rax
    3481241b:	8d 49 08             	lea    0x8(%rcx),%ecx
    3481241e:	89 0a                	mov    %ecx,(%rdx)
    34812420:	e9 af 00 00 00       	jmpq   348124d4 <pop_arg+0x1e4>
    34812425:	48 63 0a             	movslq (%rdx),%rcx
    34812428:	48 83 f9 28          	cmp    $0x28,%rcx
    3481242c:	0f 87 aa 00 00 00    	ja     348124dc <pop_arg+0x1ec>
    34812432:	48 89 c8             	mov    %rcx,%rax
    34812435:	48 03 42 10          	add    0x10(%rdx),%rax
    34812439:	8d 49 08             	lea    0x8(%rcx),%ecx
    3481243c:	89 0a                	mov    %ecx,(%rdx)
    3481243e:	e9 a5 00 00 00       	jmpq   348124e8 <pop_arg+0x1f8>
    34812443:	48 63 0a             	movslq (%rdx),%rcx
    34812446:	48 83 f9 28          	cmp    $0x28,%rcx
    3481244a:	0f 87 9f 00 00 00    	ja     348124ef <pop_arg+0x1ff>
    34812450:	48 89 c8             	mov    %rcx,%rax
    34812453:	48 03 42 10          	add    0x10(%rdx),%rax
    34812457:	8d 49 08             	lea    0x8(%rcx),%ecx
    3481245a:	89 0a                	mov    %ecx,(%rdx)
    3481245c:	e9 9a 00 00 00       	jmpq   348124fb <pop_arg+0x20b>
    34812461:	48 63 0a             	movslq (%rdx),%rcx
    34812464:	48 83 f9 28          	cmp    $0x28,%rcx
    34812468:	0f 87 94 00 00 00    	ja     34812502 <pop_arg+0x212>
    3481246e:	48 89 c8             	mov    %rcx,%rax
    34812471:	48 03 42 10          	add    0x10(%rdx),%rax
    34812475:	8d 49 08             	lea    0x8(%rcx),%ecx
    34812478:	89 0a                	mov    %ecx,(%rdx)
    3481247a:	e9 8f 00 00 00       	jmpq   3481250e <pop_arg+0x21e>
    3481247f:	48 63 4a 04          	movslq 0x4(%rdx),%rcx
    34812483:	48 81 f9 a0 00 00 00 	cmp    $0xa0,%rcx
    3481248a:	0f 87 85 00 00 00    	ja     34812515 <pop_arg+0x225>
    34812490:	48 89 c8             	mov    %rcx,%rax
    34812493:	48 03 42 10          	add    0x10(%rdx),%rax
    34812497:	8d 49 10             	lea    0x10(%rcx),%ecx
    3481249a:	89 4a 04             	mov    %ecx,0x4(%rdx)
    3481249d:	e9 7f 00 00 00       	jmpq   34812521 <pop_arg+0x231>
    348124a2:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348124a6:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348124aa:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348124ae:	8b 00                	mov    (%rax),%eax
    348124b0:	48 89 07             	mov    %rax,(%rdi)
    348124b3:	c3                   	retq   
    348124b4:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348124b8:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348124bc:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348124c0:	48 0f be 00          	movsbq (%rax),%rax
    348124c4:	48 89 07             	mov    %rax,(%rdi)
    348124c7:	c3                   	retq   
    348124c8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348124cc:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348124d0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348124d4:	48 0f bf 00          	movswq (%rax),%rax
    348124d8:	48 89 07             	mov    %rax,(%rdi)
    348124db:	c3                   	retq   
    348124dc:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348124e0:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348124e4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348124e8:	0f b6 00             	movzbl (%rax),%eax
    348124eb:	48 89 07             	mov    %rax,(%rdi)
    348124ee:	c3                   	retq   
    348124ef:	48 8b 42 08          	mov    0x8(%rdx),%rax
    348124f3:	48 8d 48 08          	lea    0x8(%rax),%rcx
    348124f7:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    348124fb:	48 63 00             	movslq (%rax),%rax
    348124fe:	48 89 07             	mov    %rax,(%rdi)
    34812501:	c3                   	retq   
    34812502:	48 8b 42 08          	mov    0x8(%rdx),%rax
    34812506:	48 8d 48 08          	lea    0x8(%rax),%rcx
    3481250a:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    3481250e:	0f b7 00             	movzwl (%rax),%eax
    34812511:	48 89 07             	mov    %rax,(%rdi)
    34812514:	c3                   	retq   
    34812515:	48 8b 42 08          	mov    0x8(%rdx),%rax
    34812519:	48 8d 48 08          	lea    0x8(%rax),%rcx
    3481251d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    34812521:	dd 00                	fldl   (%rax)
    34812523:	db 3f                	fstpt  (%rdi)
    34812525:	c3                   	retq   
    34812526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3481252d:	00 00 00 

0000000034812530 <wctomb>:
    34812530:	48 85 ff             	test   %rdi,%rdi
    34812533:	0f 84 0d 00 00 00    	je     34812546 <wctomb+0x16>
    34812539:	50                   	push   %rax
    3481253a:	31 d2                	xor    %edx,%edx
    3481253c:	e8 ef 07 00 00       	callq  34812d30 <wcrtomb>
    34812541:	48 83 c4 08          	add    $0x8,%rsp
    34812545:	c3                   	retq   
    34812546:	31 c0                	xor    %eax,%eax
    34812548:	c3                   	retq   
    34812549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034812550 <__fpclassifyl>:
    34812550:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    34812555:	0f b7 54 24 10       	movzwl 0x10(%rsp),%edx
    3481255a:	81 e2 ff 7f 00 00    	and    $0x7fff,%edx
    34812560:	48 85 c9             	test   %rcx,%rcx
    34812563:	0f 88 14 00 00 00    	js     3481257d <__fpclassifyl+0x2d>
    34812569:	85 d2                	test   %edx,%edx
    3481256b:	0f 85 0c 00 00 00    	jne    3481257d <__fpclassifyl+0x2d>
    34812571:	31 c0                	xor    %eax,%eax
    34812573:	48 85 c9             	test   %rcx,%rcx
    34812576:	0f 95 c0             	setne  %al
    34812579:	83 c8 02             	or     $0x2,%eax
    3481257c:	c3                   	retq   
    3481257d:	31 c0                	xor    %eax,%eax
    3481257f:	48 85 c9             	test   %rcx,%rcx
    34812582:	0f 89 19 00 00 00    	jns    348125a1 <__fpclassifyl+0x51>
    34812588:	b8 04 00 00 00       	mov    $0x4,%eax
    3481258d:	81 fa ff 7f 00 00    	cmp    $0x7fff,%edx
    34812593:	0f 85 08 00 00 00    	jne    348125a1 <__fpclassifyl+0x51>
    34812599:	31 c0                	xor    %eax,%eax
    3481259b:	48 01 c9             	add    %rcx,%rcx
    3481259e:	0f 94 c0             	sete   %al
    348125a1:	c3                   	retq   
    348125a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348125a9:	00 00 00 
    348125ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000348125b0 <__signbitl>:
    348125b0:	0f b7 44 24 10       	movzwl 0x10(%rsp),%eax
    348125b5:	48 c1 e8 0f          	shr    $0xf,%rax
    348125b9:	c3                   	retq   
    348125ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000348125c0 <__stdio_exit>:
    348125c0:	53                   	push   %rbx
    348125c1:	48 8d 3d 28 e5 b0 00 	lea    0xb0e528(%rip),%rdi        # 35320af0 <__libc+0x28>
    348125c8:	e8 53 08 00 00       	callq  34812e20 <__lock>
    348125cd:	48 8b 1d 14 e5 b0 00 	mov    0xb0e514(%rip),%rbx        # 35320ae8 <__libc+0x20>
    348125d4:	48 85 db             	test   %rbx,%rbx
    348125d7:	0f 85 20 00 00 00    	jne    348125fd <__stdio_exit+0x3d>
    348125dd:	e9 66 00 00 00       	jmpq   34812648 <__stdio_exit+0x88>
    348125e2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348125e9:	1f 84 00 00 00 00 00 
    348125f0:	48 8b 5b 70          	mov    0x70(%rbx),%rbx
    348125f4:	48 85 db             	test   %rbx,%rbx
    348125f7:	0f 84 4b 00 00 00    	je     34812648 <__stdio_exit+0x88>
    348125fd:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    34812604:	0f 88 08 00 00 00    	js     34812612 <__stdio_exit+0x52>
    3481260a:	48 89 df             	mov    %rbx,%rdi
    3481260d:	e8 ee be ff ff       	callq  3480e500 <__lockfile>
    34812612:	48 8b 43 28          	mov    0x28(%rbx),%rax
    34812616:	48 3b 43 38          	cmp    0x38(%rbx),%rax
    3481261a:	0f 86 0a 00 00 00    	jbe    3481262a <__stdio_exit+0x6a>
    34812620:	31 f6                	xor    %esi,%esi
    34812622:	31 d2                	xor    %edx,%edx
    34812624:	48 89 df             	mov    %rbx,%rdi
    34812627:	ff 53 48             	callq  *0x48(%rbx)
    3481262a:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    3481262e:	48 2b 73 10          	sub    0x10(%rbx),%rsi
    34812632:	0f 83 b8 ff ff ff    	jae    348125f0 <__stdio_exit+0x30>
    34812638:	ba 01 00 00 00       	mov    $0x1,%edx
    3481263d:	48 89 df             	mov    %rbx,%rdi
    34812640:	ff 53 50             	callq  *0x50(%rbx)
    34812643:	e9 a8 ff ff ff       	jmpq   348125f0 <__stdio_exit+0x30>
    34812648:	48 8d 05 b1 59 b0 00 	lea    0xb059b1(%rip),%rax        # 35318000 <__stderr_used>
    3481264f:	48 8b 18             	mov    (%rax),%rbx
    34812652:	48 85 db             	test   %rbx,%rbx
    34812655:	0f 84 46 00 00 00    	je     348126a1 <__stdio_exit+0xe1>
    3481265b:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    34812662:	0f 88 08 00 00 00    	js     34812670 <__stdio_exit+0xb0>
    34812668:	48 89 df             	mov    %rbx,%rdi
    3481266b:	e8 90 be ff ff       	callq  3480e500 <__lockfile>
    34812670:	48 8b 43 28          	mov    0x28(%rbx),%rax
    34812674:	48 3b 43 38          	cmp    0x38(%rbx),%rax
    34812678:	0f 86 0a 00 00 00    	jbe    34812688 <__stdio_exit+0xc8>
    3481267e:	31 f6                	xor    %esi,%esi
    34812680:	31 d2                	xor    %edx,%edx
    34812682:	48 89 df             	mov    %rbx,%rdi
    34812685:	ff 53 48             	callq  *0x48(%rbx)
    34812688:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    3481268c:	48 2b 73 10          	sub    0x10(%rbx),%rsi
    34812690:	0f 83 0b 00 00 00    	jae    348126a1 <__stdio_exit+0xe1>
    34812696:	ba 01 00 00 00       	mov    $0x1,%edx
    3481269b:	48 89 df             	mov    %rbx,%rdi
    3481269e:	ff 53 50             	callq  *0x50(%rbx)
    348126a1:	48 8d 05 38 50 20 00 	lea    0x205038(%rip),%rax        # 34a176e0 <__stdout_used>
    348126a8:	48 8b 18             	mov    (%rax),%rbx
    348126ab:	48 85 db             	test   %rbx,%rbx
    348126ae:	0f 84 4a 00 00 00    	je     348126fe <__stdio_exit+0x13e>
    348126b4:	83 bb 8c 00 00 00 00 	cmpl   $0x0,0x8c(%rbx)
    348126bb:	0f 88 08 00 00 00    	js     348126c9 <__stdio_exit+0x109>
    348126c1:	48 89 df             	mov    %rbx,%rdi
    348126c4:	e8 37 be ff ff       	callq  3480e500 <__lockfile>
    348126c9:	48 8b 43 28          	mov    0x28(%rbx),%rax
    348126cd:	48 3b 43 38          	cmp    0x38(%rbx),%rax
    348126d1:	0f 86 0a 00 00 00    	jbe    348126e1 <__stdio_exit+0x121>
    348126d7:	31 f6                	xor    %esi,%esi
    348126d9:	31 d2                	xor    %edx,%edx
    348126db:	48 89 df             	mov    %rbx,%rdi
    348126de:	ff 53 48             	callq  *0x48(%rbx)
    348126e1:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    348126e5:	48 2b 73 10          	sub    0x10(%rbx),%rsi
    348126e9:	0f 83 0f 00 00 00    	jae    348126fe <__stdio_exit+0x13e>
    348126ef:	48 8b 43 50          	mov    0x50(%rbx),%rax
    348126f3:	ba 01 00 00 00       	mov    $0x1,%edx
    348126f8:	48 89 df             	mov    %rbx,%rdi
    348126fb:	5b                   	pop    %rbx
    348126fc:	ff e0                	jmpq   *%rax
    348126fe:	5b                   	pop    %rbx
    348126ff:	c3                   	retq   

0000000034812700 <__stdio_write>:
    34812700:	41 54                	push   %r12
    34812702:	53                   	push   %rbx
    34812703:	48 83 ec 78          	sub    $0x78,%rsp
    34812707:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
    3481270c:	49 89 fc             	mov    %rdi,%r12
    3481270f:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    34812714:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    34812719:	49 8b 7c 24 28       	mov    0x28(%r12),%rdi
    3481271e:	48 29 c7             	sub    %rax,%rdi
    34812721:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    34812726:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    3481272b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
    34812730:	48 8d 5c 24 30       	lea    0x30(%rsp),%rbx
    34812735:	48 01 d7             	add    %rdx,%rdi
    34812738:	ba 02 00 00 00       	mov    $0x2,%edx
    3481273d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    34812742:	e9 13 00 00 00       	jmpq   3481275a <__stdio_write+0x5a>
    34812747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3481274e:	00 00 
    34812750:	48 01 0b             	add    %rcx,(%rbx)
    34812753:	48 29 c8             	sub    %rcx,%rax
    34812756:	48 89 43 08          	mov    %rax,0x8(%rbx)
    3481275a:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
    3481275f:	48 83 3d 61 e3 b0 00 	cmpq   $0x0,0xb0e361(%rip)        # 35320ac8 <__libc>
    34812766:	00 
    34812767:	89 54 24 0c          	mov    %edx,0xc(%rsp)
    3481276b:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    34812770:	0f 84 7a 00 00 00    	je     348127f0 <__stdio_write+0xf0>
    34812776:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    3481277b:	48 8d 35 2e 02 00 00 	lea    0x22e(%rip),%rsi        # 348129b0 <cleanup>
    34812782:	4c 89 e2             	mov    %r12,%rdx
    34812785:	e8 86 02 00 00       	callq  34812a10 <_pthread_cleanup_push>
    3481278a:	49 63 74 24 78       	movslq 0x78(%r12),%rsi
    3481278f:	48 83 fe 01          	cmp    $0x1,%rsi
    34812793:	0f 85 a7 00 00 00    	jne    34812840 <__stdio_write+0x140>
    34812799:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    3481279d:	85 c0                	test   %eax,%eax
    3481279f:	0f 8e f9 00 00 00    	jle    3481289e <__stdio_write+0x19e>
    348127a5:	41 89 c4             	mov    %eax,%r12d
    348127a8:	48 8d 5b 08          	lea    0x8(%rbx),%rbx
    348127ac:	31 c0                	xor    %eax,%eax
    348127ae:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348127b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348127ba:	84 00 00 00 00 00 
    348127c0:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
    348127c4:	48 8b 13             	mov    (%rbx),%rdx
    348127c7:	31 ff                	xor    %edi,%edi
    348127c9:	e8 72 a1 ff ff       	callq  3480c940 <write>
    348127ce:	48 01 44 24 10       	add    %rax,0x10(%rsp)
    348127d3:	48 83 c3 10          	add    $0x10,%rbx
    348127d7:	49 ff cc             	dec    %r12
    348127da:	0f 85 e0 ff ff ff    	jne    348127c0 <__stdio_write+0xc0>
    348127e0:	e9 c0 00 00 00       	jmpq   348128a5 <__stdio_write+0x1a5>
    348127e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    348127ec:	00 00 00 00 
    348127f0:	41 8b 7c 24 78       	mov    0x78(%r12),%edi
    348127f5:	83 ff 01             	cmp    $0x1,%edi
    348127f8:	0f 85 6f 00 00 00    	jne    3481286d <__stdio_write+0x16d>
    348127fe:	85 d2                	test   %edx,%edx
    34812800:	0f 8e 35 01 00 00    	jle    3481293b <__stdio_write+0x23b>
    34812806:	41 89 d4             	mov    %edx,%r12d
    34812809:	48 8d 5b 08          	lea    0x8(%rbx),%rbx
    3481280d:	31 f6                	xor    %esi,%esi
    3481280f:	90                   	nop
    34812810:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    34812815:	48 8b 73 f8          	mov    -0x8(%rbx),%rsi
    34812819:	48 8b 13             	mov    (%rbx),%rdx
    3481281c:	31 ff                	xor    %edi,%edi
    3481281e:	e8 1d a1 ff ff       	callq  3480c940 <write>
    34812823:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    34812828:	48 01 c6             	add    %rax,%rsi
    3481282b:	48 83 c3 10          	add    $0x10,%rbx
    3481282f:	49 ff cc             	dec    %r12
    34812832:	0f 85 d8 ff ff ff    	jne    34812810 <__stdio_write+0x110>
    34812838:	e9 79 00 00 00       	jmpq   348128b6 <__stdio_write+0x1b6>
    3481283d:	0f 1f 00             	nopl   (%rax)
    34812840:	48 63 4c 24 0c       	movslq 0xc(%rsp),%rcx
    34812845:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    3481284c:	00 
    3481284d:	bf 14 00 00 00       	mov    $0x14,%edi
    34812852:	45 31 c0             	xor    %r8d,%r8d
    34812855:	45 31 c9             	xor    %r9d,%r9d
    34812858:	48 89 da             	mov    %rbx,%rdx
    3481285b:	e8 70 01 00 00       	callq  348129d0 <__syscall_cp>
    34812860:	48 89 c7             	mov    %rax,%rdi
    34812863:	e8 48 c2 ff ff       	callq  3480eab0 <__syscall_ret>
    34812868:	e9 33 00 00 00       	jmpq   348128a0 <__stdio_write+0x1a0>
    3481286d:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    34812872:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    34812877:	e8 c4 a0 ff ff       	callq  3480c940 <write>
    3481287c:	48 89 c3             	mov    %rax,%rbx
    3481287f:	41 8b 7c 24 78       	mov    0x78(%r12),%edi
    34812884:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    34812889:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    3481288e:	e8 ad a0 ff ff       	callq  3480c940 <write>
    34812893:	48 89 c6             	mov    %rax,%rsi
    34812896:	48 01 de             	add    %rbx,%rsi
    34812899:	e9 18 00 00 00       	jmpq   348128b6 <__stdio_write+0x1b6>
    3481289e:	31 c0                	xor    %eax,%eax
    348128a0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    348128a5:	31 f6                	xor    %esi,%esi
    348128a7:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    348128ac:	e8 6f 01 00 00       	callq  34812a20 <_pthread_cleanup_pop>
    348128b1:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    348128b6:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    348128bb:	48 29 f7             	sub    %rsi,%rdi
    348128be:	0f 84 7e 00 00 00    	je     34812942 <__stdio_write+0x242>
    348128c4:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    348128c9:	48 85 c0             	test   %rax,%rax
    348128cc:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
    348128d1:	0f 84 91 00 00 00    	je     34812968 <__stdio_write+0x268>
    348128d7:	48 85 f6             	test   %rsi,%rsi
    348128da:	0f 88 88 00 00 00    	js     34812968 <__stdio_write+0x268>
    348128e0:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    348128e5:	48 8b 43 08          	mov    0x8(%rbx),%rax
    348128e9:	48 89 f1             	mov    %rsi,%rcx
    348128ec:	48 29 c1             	sub    %rax,%rcx
    348128ef:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    348128f3:	0f 86 27 00 00 00    	jbe    34812920 <__stdio_write+0x220>
    348128f9:	49 8b 44 24 58       	mov    0x58(%r12),%rax
    348128fe:	49 89 44 24 38       	mov    %rax,0x38(%r12)
    34812903:	49 89 44 24 28       	mov    %rax,0x28(%r12)
    34812908:	ff ca                	dec    %edx
    3481290a:	48 8b 43 18          	mov    0x18(%rbx),%rax
    3481290e:	48 83 c3 10          	add    $0x10,%rbx
    34812912:	e9 39 fe ff ff       	jmpq   34812750 <__stdio_write+0x50>
    34812917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3481291e:	00 00 
    34812920:	83 fa 02             	cmp    $0x2,%edx
    34812923:	0f 85 0a 00 00 00    	jne    34812933 <__stdio_write+0x233>
    34812929:	49 01 74 24 38       	add    %rsi,0x38(%r12)
    3481292e:	ba 02 00 00 00       	mov    $0x2,%edx
    34812933:	48 89 f1             	mov    %rsi,%rcx
    34812936:	e9 15 fe ff ff       	jmpq   34812750 <__stdio_write+0x50>
    3481293b:	31 f6                	xor    %esi,%esi
    3481293d:	e9 74 ff ff ff       	jmpq   348128b6 <__stdio_write+0x1b6>
    34812942:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    34812947:	48 8b 42 58          	mov    0x58(%rdx),%rax
    3481294b:	48 8b 4a 60          	mov    0x60(%rdx),%rcx
    3481294f:	48 01 c1             	add    %rax,%rcx
    34812952:	48 89 4a 20          	mov    %rcx,0x20(%rdx)
    34812956:	48 89 42 38          	mov    %rax,0x38(%rdx)
    3481295a:	48 89 42 28          	mov    %rax,0x28(%rdx)
    3481295e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    34812963:	e9 32 00 00 00       	jmpq   3481299a <__stdio_write+0x29a>
    34812968:	49 c7 44 24 38 00 00 	movq   $0x0,0x38(%r12)
    3481296f:	00 00 
    34812971:	0f 57 c0             	xorps  %xmm0,%xmm0
    34812974:	41 0f 11 44 24 20    	movups %xmm0,0x20(%r12)
    3481297a:	41 80 0c 24 20       	orb    $0x20,(%r12)
    3481297f:	83 7c 24 0c 02       	cmpl   $0x2,0xc(%rsp)
    34812984:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    34812989:	0f 85 07 00 00 00    	jne    34812996 <__stdio_write+0x296>
    3481298f:	31 c0                	xor    %eax,%eax
    34812991:	e9 04 00 00 00       	jmpq   3481299a <__stdio_write+0x29a>
    34812996:	48 2b 41 08          	sub    0x8(%rcx),%rax
    3481299a:	48 83 c4 78          	add    $0x78,%rsp
    3481299e:	5b                   	pop    %rbx
    3481299f:	41 5c                	pop    %r12
    348129a1:	c3                   	retq   
    348129a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348129a9:	1f 84 00 00 00 00 00 

00000000348129b0 <cleanup>:
    348129b0:	48 83 bf 80 00 00 00 	cmpq   $0x0,0x80(%rdi)
    348129b7:	00 
    348129b8:	0f 84 01 00 00 00    	je     348129bf <cleanup+0xf>
    348129be:	c3                   	retq   
    348129bf:	e9 4c bb ff ff       	jmpq   3480e510 <__unlockfile>
    348129c4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348129cb:	00 00 00 
    348129ce:	66 90                	xchg   %ax,%ax

00000000348129d0 <__syscall_cp>:
    348129d0:	50                   	push   %rax
    348129d1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    348129d6:	48 89 04 24          	mov    %rax,(%rsp)
    348129da:	31 c0                	xor    %eax,%eax
    348129dc:	e8 29 03 00 00       	callq  34812d0a <__syscall>
    348129e1:	59                   	pop    %rcx
    348129e2:	c3                   	retq   
    348129e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    348129ea:	84 00 00 00 00 00 

00000000348129f0 <__testcancel>:
    348129f0:	c3                   	retq   
    348129f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    348129f8:	00 00 00 
    348129fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034812a00 <__do_cleanup_pop>:
    34812a00:	c3                   	retq   
    34812a01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34812a08:	0f 1f 84 00 00 00 00 
    34812a0f:	00 

0000000034812a10 <_pthread_cleanup_push>:
    34812a10:	48 89 37             	mov    %rsi,(%rdi)
    34812a13:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    34812a17:	e9 e4 ff ff ff       	jmpq   34812a00 <__do_cleanup_pop>
    34812a1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034812a20 <_pthread_cleanup_pop>:
    34812a20:	41 54                	push   %r12
    34812a22:	53                   	push   %rbx
    34812a23:	50                   	push   %rax
    34812a24:	89 f3                	mov    %esi,%ebx
    34812a26:	49 89 fc             	mov    %rdi,%r12
    34812a29:	e8 d2 ff ff ff       	callq  34812a00 <__do_cleanup_pop>
    34812a2e:	85 db                	test   %ebx,%ebx
    34812a30:	0f 84 10 00 00 00    	je     34812a46 <_pthread_cleanup_pop+0x26>
    34812a36:	4c 89 e0             	mov    %r12,%rax
    34812a39:	48 8b 78 08          	mov    0x8(%rax),%rdi
    34812a3d:	48 83 c4 08          	add    $0x8,%rsp
    34812a41:	5b                   	pop    %rbx
    34812a42:	41 5c                	pop    %r12
    34812a44:	ff 20                	jmpq   *(%rax)
    34812a46:	48 83 c4 08          	add    $0x8,%rsp
    34812a4a:	5b                   	pop    %rbx
    34812a4b:	41 5c                	pop    %r12
    34812a4d:	c3                   	retq   
    34812a4e:	66 90                	xchg   %ax,%ax

0000000034812a50 <frexpl>:
    34812a50:	53                   	push   %rbx
    34812a51:	48 83 ec 30          	sub    $0x30,%rsp
    34812a55:	48 89 fb             	mov    %rdi,%rbx
    34812a58:	db 6c 24 40          	fldt   0x40(%rsp)
    34812a5c:	d9 c0                	fld    %st(0)
    34812a5e:	db 7c 24 20          	fstpt  0x20(%rsp)
    34812a62:	0f b7 44 24 28       	movzwl 0x28(%rsp),%eax
    34812a67:	89 c1                	mov    %eax,%ecx
    34812a69:	81 e1 ff 7f 00 00    	and    $0x7fff,%ecx
    34812a6f:	81 f9 ff 7f 00 00    	cmp    $0x7fff,%ecx
    34812a75:	0f 84 70 00 00 00    	je     34812aeb <frexpl+0x9b>
    34812a7b:	66 85 c9             	test   %cx,%cx
    34812a7e:	0f 85 2f 00 00 00    	jne    34812ab3 <frexpl+0x63>
    34812a84:	d9 ee                	fldz   
    34812a86:	d9 c9                	fxch   %st(1)
    34812a88:	db e9                	fucomi %st(1),%st
    34812a8a:	dd d9                	fstp   %st(1)
    34812a8c:	0f 85 06 00 00 00    	jne    34812a98 <frexpl+0x48>
    34812a92:	0f 8b 4f 00 00 00    	jnp    34812ae7 <frexpl+0x97>
    34812a98:	d8 0d 7a 35 00 00    	fmuls  0x357a(%rip)        # 34816018 <states+0x208>
    34812a9e:	db 3c 24             	fstpt  (%rsp)
    34812aa1:	48 89 df             	mov    %rbx,%rdi
    34812aa4:	e8 a7 ff ff ff       	callq  34812a50 <frexpl>
    34812aa9:	8b 03                	mov    (%rbx),%eax
    34812aab:	83 c0 88             	add    $0xffffff88,%eax
    34812aae:	e9 36 00 00 00       	jmpq   34812ae9 <frexpl+0x99>
    34812ab3:	dd d8                	fstp   %st(0)
    34812ab5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    34812aba:	89 c2                	mov    %eax,%edx
    34812abc:	81 e2 ff 7f 00 00    	and    $0x7fff,%edx
    34812ac2:	81 c2 02 c0 ff ff    	add    $0xffffc002,%edx
    34812ac8:	89 13                	mov    %edx,(%rbx)
    34812aca:	25 00 80 00 00       	and    $0x8000,%eax
    34812acf:	0d fe 3f 00 00       	or     $0x3ffe,%eax
    34812ad4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    34812ad9:	66 89 44 24 18       	mov    %ax,0x18(%rsp)
    34812ade:	db 6c 24 10          	fldt   0x10(%rsp)
    34812ae2:	e9 04 00 00 00       	jmpq   34812aeb <frexpl+0x9b>
    34812ae7:	31 c0                	xor    %eax,%eax
    34812ae9:	89 03                	mov    %eax,(%rbx)
    34812aeb:	48 83 c4 30          	add    $0x30,%rsp
    34812aef:	5b                   	pop    %rbx
    34812af0:	c3                   	retq   
    34812af1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34812af8:	00 00 00 
    34812afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000034812b00 <memchr>:
    34812b00:	48 85 d2             	test   %rdx,%rdx
    34812b03:	0f 95 c0             	setne  %al
    34812b06:	0f 85 28 00 00 00    	jne    34812b34 <memchr+0x34>
    34812b0c:	e9 3f 00 00 00       	jmpq   34812b50 <memchr+0x50>
    34812b11:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34812b18:	0f 1f 84 00 00 00 00 
    34812b1f:	00 
    34812b20:	48 ff c7             	inc    %rdi
    34812b23:	48 83 fa 01          	cmp    $0x1,%rdx
    34812b27:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
    34812b2b:	0f 95 c0             	setne  %al
    34812b2e:	0f 84 1c 00 00 00    	je     34812b50 <memchr+0x50>
    34812b34:	89 f9                	mov    %edi,%ecx
    34812b36:	83 e1 07             	and    $0x7,%ecx
    34812b39:	48 85 c9             	test   %rcx,%rcx
    34812b3c:	0f 84 0e 00 00 00    	je     34812b50 <memchr+0x50>
    34812b42:	40 38 37             	cmp    %sil,(%rdi)
    34812b45:	0f 85 d5 ff ff ff    	jne    34812b20 <memchr+0x20>
    34812b4b:	e9 08 00 00 00       	jmpq   34812b58 <memchr+0x58>
    34812b50:	84 c0                	test   %al,%al
    34812b52:	0f 84 9d 00 00 00    	je     34812bf5 <memchr+0xf5>
    34812b58:	40 38 37             	cmp    %sil,(%rdi)
    34812b5b:	0f 84 96 00 00 00    	je     34812bf7 <memchr+0xf7>
    34812b61:	48 83 fa 08          	cmp    $0x8,%rdx
    34812b65:	0f 82 62 00 00 00    	jb     34812bcd <memchr+0xcd>
    34812b6b:	40 0f b6 ce          	movzbl %sil,%ecx
    34812b6f:	49 ba 01 01 01 01 01 	movabs $0x101010101010101,%r10
    34812b76:	01 01 01 
    34812b79:	4c 0f af d1          	imul   %rcx,%r10
    34812b7d:	49 b8 80 80 80 80 80 	movabs $0x8080808080808080,%r8
    34812b84:	80 80 80 
    34812b87:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
    34812b8e:	fe fe fe 
    34812b91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34812b98:	0f 1f 84 00 00 00 00 
    34812b9f:	00 
    34812ba0:	48 8b 0f             	mov    (%rdi),%rcx
    34812ba3:	4c 31 d1             	xor    %r10,%rcx
    34812ba6:	48 89 c8             	mov    %rcx,%rax
    34812ba9:	48 f7 d0             	not    %rax
    34812bac:	4c 01 c9             	add    %r9,%rcx
    34812baf:	4c 21 c0             	and    %r8,%rax
    34812bb2:	48 85 c8             	test   %rcx,%rax
    34812bb5:	0f 85 25 00 00 00    	jne    34812be0 <memchr+0xe0>
    34812bbb:	48 83 c7 08          	add    $0x8,%rdi
    34812bbf:	48 83 c2 f8          	add    $0xfffffffffffffff8,%rdx
    34812bc3:	48 83 fa 07          	cmp    $0x7,%rdx
    34812bc7:	0f 87 d3 ff ff ff    	ja     34812ba0 <memchr+0xa0>
    34812bcd:	48 85 d2             	test   %rdx,%rdx
    34812bd0:	0f 84 1f 00 00 00    	je     34812bf5 <memchr+0xf5>
    34812bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34812bdd:	00 00 00 
    34812be0:	40 38 37             	cmp    %sil,(%rdi)
    34812be3:	0f 84 0e 00 00 00    	je     34812bf7 <memchr+0xf7>
    34812be9:	48 ff c7             	inc    %rdi
    34812bec:	48 ff ca             	dec    %rdx
    34812bef:	0f 85 eb ff ff ff    	jne    34812be0 <memchr+0xe0>
    34812bf5:	31 d2                	xor    %edx,%edx
    34812bf7:	48 85 d2             	test   %rdx,%rdx
    34812bfa:	48 0f 44 fa          	cmove  %rdx,%rdi
    34812bfe:	48 89 f8             	mov    %rdi,%rax
    34812c01:	c3                   	retq   
    34812c02:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34812c09:	00 00 00 
    34812c0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034812c10 <strerror>:
    34812c10:	31 c9                	xor    %ecx,%ecx
    34812c12:	b8 02 00 00 00       	mov    $0x2,%eax
    34812c17:	48 8d 15 02 34 00 00 	lea    0x3402(%rip),%rdx        # 34816020 <errid>
    34812c1e:	66 90                	xchg   %ax,%ax
    34812c20:	0f b6 74 10 fe       	movzbl -0x2(%rax,%rdx,1),%esi
    34812c25:	39 fe                	cmp    %edi,%esi
    34812c27:	0f 84 38 00 00 00    	je     34812c65 <strerror+0x55>
    34812c2d:	0f b6 74 10 ff       	movzbl -0x1(%rax,%rdx,1),%esi
    34812c32:	39 fe                	cmp    %edi,%esi
    34812c34:	0f 84 28 00 00 00    	je     34812c62 <strerror+0x52>
    34812c3a:	0f b6 34 10          	movzbl (%rax,%rdx,1),%esi
    34812c3e:	39 fe                	cmp    %edi,%esi
    34812c40:	0f 84 b1 00 00 00    	je     34812cf7 <strerror+0xe7>
    34812c46:	48 83 c1 03          	add    $0x3,%rcx
    34812c4a:	48 83 c0 03          	add    $0x3,%rax
    34812c4e:	48 83 f8 59          	cmp    $0x59,%rax
    34812c52:	0f 85 c8 ff ff ff    	jne    34812c20 <strerror+0x10>
    34812c58:	b9 57 00 00 00       	mov    $0x57,%ecx
    34812c5d:	e9 0b 00 00 00       	jmpq   34812c6d <strerror+0x5d>
    34812c62:	48 ff c1             	inc    %rcx
    34812c65:	85 c9                	test   %ecx,%ecx
    34812c67:	0f 84 95 00 00 00    	je     34812d02 <strerror+0xf2>
    34812c6d:	8d 51 ff             	lea    -0x1(%rcx),%edx
    34812c70:	89 ce                	mov    %ecx,%esi
    34812c72:	48 8d 05 07 34 00 00 	lea    0x3407(%rip),%rax        # 34816080 <errmsg>
    34812c79:	83 e6 03             	and    $0x3,%esi
    34812c7c:	0f 84 25 00 00 00    	je     34812ca7 <strerror+0x97>
    34812c82:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
    34812c89:	1f 84 00 00 00 00 00 
    34812c90:	80 38 00             	cmpb   $0x0,(%rax)
    34812c93:	48 8d 40 01          	lea    0x1(%rax),%rax
    34812c97:	0f 85 f3 ff ff ff    	jne    34812c90 <strerror+0x80>
    34812c9d:	ff c9                	dec    %ecx
    34812c9f:	ff ce                	dec    %esi
    34812ca1:	0f 85 e9 ff ff ff    	jne    34812c90 <strerror+0x80>
    34812ca7:	83 fa 03             	cmp    $0x3,%edx
    34812caa:	0f 82 46 00 00 00    	jb     34812cf6 <strerror+0xe6>
    34812cb0:	80 38 00             	cmpb   $0x0,(%rax)
    34812cb3:	48 8d 40 01          	lea    0x1(%rax),%rax
    34812cb7:	0f 85 f3 ff ff ff    	jne    34812cb0 <strerror+0xa0>
    34812cbd:	0f 1f 00             	nopl   (%rax)
    34812cc0:	80 38 00             	cmpb   $0x0,(%rax)
    34812cc3:	48 8d 40 01          	lea    0x1(%rax),%rax
    34812cc7:	0f 85 f3 ff ff ff    	jne    34812cc0 <strerror+0xb0>
    34812ccd:	0f 1f 00             	nopl   (%rax)
    34812cd0:	80 38 00             	cmpb   $0x0,(%rax)
    34812cd3:	48 8d 40 01          	lea    0x1(%rax),%rax
    34812cd7:	0f 85 f3 ff ff ff    	jne    34812cd0 <strerror+0xc0>
    34812cdd:	0f 1f 00             	nopl   (%rax)
    34812ce0:	80 38 00             	cmpb   $0x0,(%rax)
    34812ce3:	48 8d 40 01          	lea    0x1(%rax),%rax
    34812ce7:	0f 85 f3 ff ff ff    	jne    34812ce0 <strerror+0xd0>
    34812ced:	83 c1 fc             	add    $0xfffffffc,%ecx
    34812cf0:	0f 85 ba ff ff ff    	jne    34812cb0 <strerror+0xa0>
    34812cf6:	c3                   	retq   
    34812cf7:	48 89 c1             	mov    %rax,%rcx
    34812cfa:	85 c9                	test   %ecx,%ecx
    34812cfc:	0f 85 6b ff ff ff    	jne    34812c6d <strerror+0x5d>
    34812d02:	48 8d 05 77 33 00 00 	lea    0x3377(%rip),%rax        # 34816080 <errmsg>
    34812d09:	c3                   	retq   

0000000034812d0a <__syscall>:
    34812d0a:	48 89 f8             	mov    %rdi,%rax
    34812d0d:	48 89 f7             	mov    %rsi,%rdi
    34812d10:	48 89 d6             	mov    %rdx,%rsi
    34812d13:	48 89 ca             	mov    %rcx,%rdx
    34812d16:	4d 89 c2             	mov    %r8,%r10
    34812d19:	4d 89 c8             	mov    %r9,%r8
    34812d1c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    34812d21:	0f 05                	syscall 
    34812d23:	c3                   	retq   
    34812d24:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    34812d2b:	00 00 00 
    34812d2e:	66 90                	xchg   %ax,%ax

0000000034812d30 <wcrtomb>:
    34812d30:	48 85 ff             	test   %rdi,%rdi
    34812d33:	0f 84 12 00 00 00    	je     34812d4b <wcrtomb+0x1b>
    34812d39:	83 fe 7f             	cmp    $0x7f,%esi
    34812d3c:	0f 87 0f 00 00 00    	ja     34812d51 <wcrtomb+0x21>
    34812d42:	40 88 37             	mov    %sil,(%rdi)
    34812d45:	b8 01 00 00 00       	mov    $0x1,%eax
    34812d4a:	c3                   	retq   
    34812d4b:	b8 01 00 00 00       	mov    $0x1,%eax
    34812d50:	c3                   	retq   
    34812d51:	81 fe ff 07 00 00    	cmp    $0x7ff,%esi
    34812d57:	0f 87 1b 00 00 00    	ja     34812d78 <wcrtomb+0x48>
    34812d5d:	89 f0                	mov    %esi,%eax
    34812d5f:	c1 e8 06             	shr    $0x6,%eax
    34812d62:	0c c0                	or     $0xc0,%al
    34812d64:	88 07                	mov    %al,(%rdi)
    34812d66:	40 80 e6 3f          	and    $0x3f,%sil
    34812d6a:	40 80 ce 80          	or     $0x80,%sil
    34812d6e:	40 88 77 01          	mov    %sil,0x1(%rdi)
    34812d72:	b8 02 00 00 00       	mov    $0x2,%eax
    34812d77:	c3                   	retq   
    34812d78:	81 fe 00 d8 00 00    	cmp    $0xd800,%esi
    34812d7e:	0f 82 56 00 00 00    	jb     34812dda <wcrtomb+0xaa>
    34812d84:	89 f0                	mov    %esi,%eax
    34812d86:	25 00 e0 ff ff       	and    $0xffffe000,%eax
    34812d8b:	3d 00 e0 00 00       	cmp    $0xe000,%eax
    34812d90:	0f 84 44 00 00 00    	je     34812dda <wcrtomb+0xaa>
    34812d96:	8d 86 00 00 ff ff    	lea    -0x10000(%rsi),%eax
    34812d9c:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
    34812da1:	0f 87 5a 00 00 00    	ja     34812e01 <wcrtomb+0xd1>
    34812da7:	89 f0                	mov    %esi,%eax
    34812da9:	c1 e8 12             	shr    $0x12,%eax
    34812dac:	0c f0                	or     $0xf0,%al
    34812dae:	88 07                	mov    %al,(%rdi)
    34812db0:	89 f0                	mov    %esi,%eax
    34812db2:	c1 e8 0c             	shr    $0xc,%eax
    34812db5:	24 3f                	and    $0x3f,%al
    34812db7:	0c 80                	or     $0x80,%al
    34812db9:	88 47 01             	mov    %al,0x1(%rdi)
    34812dbc:	89 f0                	mov    %esi,%eax
    34812dbe:	c1 e8 06             	shr    $0x6,%eax
    34812dc1:	24 3f                	and    $0x3f,%al
    34812dc3:	0c 80                	or     $0x80,%al
    34812dc5:	88 47 02             	mov    %al,0x2(%rdi)
    34812dc8:	40 80 e6 3f          	and    $0x3f,%sil
    34812dcc:	40 80 ce 80          	or     $0x80,%sil
    34812dd0:	40 88 77 03          	mov    %sil,0x3(%rdi)
    34812dd4:	b8 04 00 00 00       	mov    $0x4,%eax
    34812dd9:	c3                   	retq   
    34812dda:	89 f0                	mov    %esi,%eax
    34812ddc:	c1 e8 0c             	shr    $0xc,%eax
    34812ddf:	0c e0                	or     $0xe0,%al
    34812de1:	88 07                	mov    %al,(%rdi)
    34812de3:	89 f0                	mov    %esi,%eax
    34812de5:	c1 e8 06             	shr    $0x6,%eax
    34812de8:	24 3f                	and    $0x3f,%al
    34812dea:	0c 80                	or     $0x80,%al
    34812dec:	88 47 01             	mov    %al,0x1(%rdi)
    34812def:	40 80 e6 3f          	and    $0x3f,%sil
    34812df3:	40 80 ce 80          	or     $0x80,%sil
    34812df7:	40 88 77 02          	mov    %sil,0x2(%rdi)
    34812dfb:	b8 03 00 00 00       	mov    $0x3,%eax
    34812e00:	c3                   	retq   
    34812e01:	50                   	push   %rax
    34812e02:	e8 59 a0 ff ff       	callq  3480ce60 <__errno_location>
    34812e07:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
    34812e0d:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    34812e14:	48 83 c4 08          	add    $0x8,%rsp
    34812e18:	c3                   	retq   
    34812e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034812e20 <__lock>:
    34812e20:	41 54                	push   %r12
    34812e22:	53                   	push   %rbx
    34812e23:	50                   	push   %rax
    34812e24:	48 89 fb             	mov    %rdi,%rbx
    34812e27:	83 3d b2 dc b0 00 00 	cmpl   $0x0,0xb0dcb2(%rip)        # 35320ae0 <__libc+0x18>
    34812e2e:	0f 84 40 00 00 00    	je     34812e74 <__lock+0x54>
    34812e34:	b8 01 00 00 00       	mov    $0x1,%eax
    34812e39:	87 03                	xchg   %eax,(%rbx)
    34812e3b:	85 c0                	test   %eax,%eax
    34812e3d:	0f 84 31 00 00 00    	je     34812e74 <__lock+0x54>
    34812e43:	4c 8d 63 04          	lea    0x4(%rbx),%r12
    34812e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    34812e4e:	00 00 
    34812e50:	ba 01 00 00 00       	mov    $0x1,%edx
    34812e55:	b9 01 00 00 00       	mov    $0x1,%ecx
    34812e5a:	48 89 df             	mov    %rbx,%rdi
    34812e5d:	4c 89 e6             	mov    %r12,%rsi
    34812e60:	e8 4b 00 00 00       	callq  34812eb0 <__wait>
    34812e65:	b8 01 00 00 00       	mov    $0x1,%eax
    34812e6a:	87 03                	xchg   %eax,(%rbx)
    34812e6c:	85 c0                	test   %eax,%eax
    34812e6e:	0f 85 dc ff ff ff    	jne    34812e50 <__lock+0x30>
    34812e74:	48 83 c4 08          	add    $0x8,%rsp
    34812e78:	5b                   	pop    %rbx
    34812e79:	41 5c                	pop    %r12
    34812e7b:	c3                   	retq   
    34812e7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000034812e80 <__unlock>:
    34812e80:	83 3f 00             	cmpl   $0x0,(%rdi)
    34812e83:	0f 84 1f 00 00 00    	je     34812ea8 <__unlock+0x28>
    34812e89:	31 c0                	xor    %eax,%eax
    34812e8b:	89 07                	mov    %eax,(%rdi)
    34812e8d:	83 7f 04 00          	cmpl   $0x0,0x4(%rdi)
    34812e91:	0f 84 11 00 00 00    	je     34812ea8 <__unlock+0x28>
    34812e97:	b8 ca 00 00 00       	mov    $0xca,%eax
    34812e9c:	be 01 00 00 00       	mov    $0x1,%esi
    34812ea1:	ba 01 00 00 00       	mov    $0x1,%edx
    34812ea6:	0f 05                	syscall 
    34812ea8:	c3                   	retq   
    34812ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000034812eb0 <__wait>:
    34812eb0:	41 89 d1             	mov    %edx,%r9d
    34812eb3:	49 89 f0             	mov    %rsi,%r8
    34812eb6:	b8 f0 d8 ff ff       	mov    $0xffffd8f0,%eax
    34812ebb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    34812ec0:	8b 0f                	mov    (%rdi),%ecx
    34812ec2:	44 39 c9             	cmp    %r9d,%ecx
    34812ec5:	0f 85 49 00 00 00    	jne    34812f14 <__wait+0x64>
    34812ecb:	f3 90                	pause  
    34812ecd:	ff c0                	inc    %eax
    34812ecf:	0f 85 eb ff ff ff    	jne    34812ec0 <__wait+0x10>
    34812ed5:	4d 85 c0             	test   %r8,%r8
    34812ed8:	0f 84 04 00 00 00    	je     34812ee2 <__wait+0x32>
    34812ede:	f0 41 ff 00          	lock incl (%r8)
    34812ee2:	8b 07                	mov    (%rdi),%eax
    34812ee4:	44 39 c8             	cmp    %r9d,%eax
    34812ee7:	0f 85 1a 00 00 00    	jne    34812f07 <__wait+0x57>
    34812eed:	49 63 d1             	movslq %r9d,%rdx
    34812ef0:	b8 ca 00 00 00       	mov    $0xca,%eax
    34812ef5:	31 f6                	xor    %esi,%esi
    34812ef7:	45 31 d2             	xor    %r10d,%r10d
    34812efa:	0f 05                	syscall 
    34812efc:	8b 07                	mov    (%rdi),%eax
    34812efe:	44 39 c8             	cmp    %r9d,%eax
    34812f01:	0f 84 e9 ff ff ff    	je     34812ef0 <__wait+0x40>
    34812f07:	4d 85 c0             	test   %r8,%r8
    34812f0a:	0f 84 04 00 00 00    	je     34812f14 <__wait+0x64>
    34812f10:	f0 41 ff 08          	lock decl (%r8)
    34812f14:	c3                   	retq   
